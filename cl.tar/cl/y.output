Useless nonterminals:

   pre_direct_declarator


Useless rules:

#147   pre_direct_declarator :	;


State 36 contains 1 reduce/reduce conflict.
State 64 contains 1 reduce/reduce conflict.
State 132 contains 1 shift/reduce conflict.
State 263 contains 1 shift/reduce conflict.
State 267 contains 1 reduce/reduce conflict.
State 327 contains 1 reduce/reduce conflict.
State 328 contains 1 shift/reduce conflict.
State 341 contains 1 shift/reduce conflict.

Grammar
rule 1    primary_expression -> IDENTIFIER
rule 2    primary_expression -> CONSTANT
rule 3    primary_expression -> STRING_LITERAL
rule 4    primary_expression -> '(' expression ')'
rule 5    postfix_expression -> primary_expression
rule 6    @1 ->		/* empty */
rule 7    @2 ->		/* empty */
rule 8    @3 ->		/* empty */
rule 9    postfix_expression -> postfix_expression @1 '[' @2 expression @3 ']'
rule 10   postfix_expression -> postfix_expression '(' ')'
rule 11   postfix_expression -> postfix_expression '(' argument_expression_list ')'
rule 12   postfix_expression -> postfix_expression '.' IDENTIFIER
rule 13   postfix_expression -> postfix_expression PTR_OP IDENTIFIER
rule 14   postfix_expression -> postfix_expression INC_OP
rule 15   postfix_expression -> postfix_expression DEC_OP
rule 16   argument_expression_list -> assignment_expression
rule 17   argument_expression_list -> argument_expression_list ',' assignment_expression
rule 18   unary_expression -> postfix_expression
rule 19   unary_expression -> INC_OP unary_expression
rule 20   unary_expression -> DEC_OP unary_expression
rule 21   unary_expression -> unary_operator cast_expression
rule 22   unary_expression -> SIZEOF unary_expression
rule 23   unary_expression -> SIZEOF '(' type_name ')'
rule 24   unary_operator -> '&'
rule 25   unary_operator -> '*'
rule 26   unary_operator -> '+'
rule 27   unary_operator -> '-'
rule 28   unary_operator -> '~'
rule 29   unary_operator -> '!'
rule 30   cast_expression -> unary_expression
rule 31   cast_expression -> '(' type_name ')' cast_expression
rule 32   multiplicative_expression -> cast_expression
rule 33   multiplicative_expression -> multiplicative_expression '*' cast_expression
rule 34   multiplicative_expression -> multiplicative_expression '/' cast_expression
rule 35   multiplicative_expression -> multiplicative_expression '%' cast_expression
rule 36   additive_expression -> multiplicative_expression
rule 37   additive_expression -> additive_expression '+' multiplicative_expression
rule 38   additive_expression -> additive_expression '-' multiplicative_expression
rule 39   shift_expression -> additive_expression
rule 40   shift_expression -> shift_expression LEFT_OP additive_expression
rule 41   shift_expression -> shift_expression RIGHT_OP additive_expression
rule 42   relational_expression -> shift_expression
rule 43   @4 ->		/* empty */
rule 44   relational_expression -> relational_expression @4 '<' shift_expression
rule 45   @5 ->		/* empty */
rule 46   relational_expression -> relational_expression @5 '>' shift_expression
rule 47   relational_expression -> relational_expression LE_OP shift_expression
rule 48   relational_expression -> relational_expression GE_OP shift_expression
rule 49   equality_expression -> relational_expression
rule 50   equality_expression -> equality_expression EQ_OP relational_expression
rule 51   equality_expression -> equality_expression NE_OP relational_expression
rule 52   and_expression -> equality_expression
rule 53   and_expression -> and_expression '&' equality_expression
rule 54   exclusive_or_expression -> and_expression
rule 55   exclusive_or_expression -> exclusive_or_expression '^' and_expression
rule 56   inclusive_or_expression -> exclusive_or_expression
rule 57   inclusive_or_expression -> inclusive_or_expression '|' exclusive_or_expression
rule 58   logical_and_expression -> inclusive_or_expression
rule 59   logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
rule 60   logical_or_expression -> logical_and_expression
rule 61   logical_or_expression -> logical_or_expression OR_OP logical_and_expression
rule 62   conditional_expression -> logical_or_expression
rule 63   conditional_expression -> logical_or_expression '?' expression ':' conditional_expression
rule 64   assignment_expression -> conditional_expression
rule 65   assignment_expression -> unary_expression assignment_operator assignment_expression
rule 66   assignment_operator -> '='
rule 67   assignment_operator -> MUL_ASSIGN
rule 68   assignment_operator -> DIV_ASSIGN
rule 69   assignment_operator -> MOD_ASSIGN
rule 70   assignment_operator -> ADD_ASSIGN
rule 71   assignment_operator -> SUB_ASSIGN
rule 72   assignment_operator -> LEFT_ASSIGN
rule 73   assignment_operator -> RIGHT_ASSIGN
rule 74   assignment_operator -> AND_ASSIGN
rule 75   assignment_operator -> XOR_ASSIGN
rule 76   assignment_operator -> OR_ASSIGN
rule 77   expression -> assignment_expression
rule 78   expression -> expression ',' assignment_expression
rule 79   constant_expression -> conditional_expression
rule 80   declaration -> declaration_specifiers ';'
rule 81   declaration -> declaration_specifiers init_declarator_list ';'
rule 82   declaration_specifiers -> storage_class_specifier
rule 83   declaration_specifiers -> storage_class_specifier declaration_specifiers
rule 84   declaration_specifiers -> type_specifier
rule 85   declaration_specifiers -> type_specifier declaration_specifiers
rule 86   declaration_specifiers -> type_qualifier
rule 87   declaration_specifiers -> type_qualifier declaration_specifiers
rule 88   declaration_specifiers -> function_specifier
rule 89   declaration_specifiers -> function_specifier declaration_specifiers
rule 90   function_specifier -> INLINE
rule 91   function_specifier -> INLINE2
rule 92   init_declarator_list -> init_declarator
rule 93   init_declarator_list -> init_declarator_list ',' init_declarator
rule 94   init_declarator -> declarator
rule 95   init_declarator -> declarator '=' initializer
rule 96   storage_class_specifier -> TYPEDEF
rule 97   storage_class_specifier -> EXTERN
rule 98   storage_class_specifier -> STATIC
rule 99   storage_class_specifier -> AUTO
rule 100  storage_class_specifier -> REGISTER
rule 101  type_specifier -> VOID
rule 102  type_specifier -> CHAR
rule 103  type_specifier -> SHORT
rule 104  type_specifier -> INT
rule 105  type_specifier -> LONG
rule 106  type_specifier -> FLOAT
rule 107  type_specifier -> DOUBLE
rule 108  type_specifier -> SIGNED
rule 109  type_specifier -> UNSIGNED
rule 110  type_specifier -> struct_or_union_specifier
rule 111  type_specifier -> enum_specifier
rule 112  type_specifier -> TYPE_NAME
rule 113  @6 ->		/* empty */
rule 114  @7 ->		/* empty */
rule 115  struct_or_union_specifier -> struct_or_union IDENTIFIER '{' @6 struct_declaration_list @7 '}'
rule 116  @8 ->		/* empty */
rule 117  @9 ->		/* empty */
rule 118  struct_or_union_specifier -> struct_or_union '{' @8 struct_declaration_list @9 '}'
rule 119  struct_or_union_specifier -> struct_or_union IDENTIFIER
rule 120  struct_or_union -> STRUCT
rule 121  struct_or_union -> UNION
rule 122  struct_declaration_list -> struct_declaration
rule 123  struct_declaration_list -> struct_declaration_list struct_declaration
rule 124  struct_declaration -> specifier_qualifier_list struct_declarator_list ';'
rule 125  specifier_qualifier_list -> type_specifier specifier_qualifier_list
rule 126  specifier_qualifier_list -> type_specifier
rule 127  specifier_qualifier_list -> type_qualifier specifier_qualifier_list
rule 128  specifier_qualifier_list -> type_qualifier
rule 129  struct_declarator_list -> struct_declarator
rule 130  struct_declarator_list -> struct_declarator_list ',' struct_declarator
rule 131  struct_declarator -> declarator
rule 132  struct_declarator -> ':' constant_expression
rule 133  struct_declarator -> declarator ':' constant_expression
rule 134  enum_specifier -> ENUM '{' enumerator_list enumerator_list_end '}'
rule 135  enum_specifier -> ENUM IDENTIFIER '{' enumerator_list enumerator_list_end '}'
rule 136  enum_specifier -> ENUM IDENTIFIER
rule 137  enumerator_list_end ->		/* empty */
rule 138  enumerator_list_end -> ','
rule 139  enumerator_list -> enumerator
rule 140  enumerator_list -> enumerator_list ',' enumerator
rule 141  enumerator -> IDENTIFIER
rule 142  enumerator -> IDENTIFIER '=' constant_expression
rule 143  type_qualifier -> CONST
rule 144  type_qualifier -> VOLATILE
rule 145  declarator -> pointer direct_declarator
rule 146  declarator -> direct_declarator
rule 148  direct_declarator -> IDENTIFIER
rule 149  direct_declarator -> '(' declarator ')'
rule 150  direct_declarator -> direct_declarator '[' direct_declarator_needinsert constant_expression ']'
rule 151  direct_declarator -> direct_declarator '[' ']'
rule 152  @10 ->		/* empty */
rule 153  @11 ->		/* empty */
rule 154  @12 ->		/* empty */
rule 155  direct_declarator -> direct_declarator @10 '(' @11 parameter_type_list @12 ')'
rule 156  @13 ->		/* empty */
rule 157  direct_declarator -> direct_declarator @13 '(' identifier_list ')'
rule 158  @14 ->		/* empty */
rule 159  direct_declarator -> direct_declarator @14 '(' ')'
rule 160  direct_declarator_needinsert ->		/* empty */
rule 161  pointer -> '*'
rule 162  pointer -> '*' type_qualifier_list
rule 163  pointer -> '*' pointer
rule 164  pointer -> '*' type_qualifier_list pointer
rule 165  type_qualifier_list -> type_qualifier
rule 166  type_qualifier_list -> type_qualifier_list type_qualifier
rule 167  parameter_type_list -> parameter_list
rule 168  parameter_type_list -> parameter_list ',' ELLIPSIS
rule 169  parameter_list -> parameter_declaration
rule 170  parameter_list -> parameter_list ',' parameter_declaration
rule 171  parameter_declaration -> declaration_specifiers_declarator declarator end_declarator
rule 172  parameter_declaration -> declaration_specifiers_declarator abstract_declarator end_declarator
rule 173  parameter_declaration -> declaration_specifiers
rule 174  parameter_declaration ->		/* empty */
rule 175  end_declarator ->		/* empty */
rule 176  declaration_specifiers_declarator -> declaration_specifiers after_decl_spec
rule 177  after_decl_spec ->		/* empty */
rule 178  identifier_list -> IDENTIFIER
rule 179  identifier_list -> identifier_list ',' IDENTIFIER
rule 180  type_name -> specifier_qualifier_list
rule 181  type_name -> specifier_qualifier_list abstract_declarator
rule 182  abstract_declarator -> pointer
rule 183  abstract_declarator -> direct_abstract_declarator
rule 184  abstract_declarator -> pointer direct_abstract_declarator
rule 185  @15 ->		/* empty */
rule 186  direct_abstract_declarator -> '(' abstract_declarator @15 ')'
rule 187  direct_abstract_declarator -> '[' ']'
rule 188  direct_abstract_declarator -> '[' constant_expression ']'
rule 189  @16 ->		/* empty */
rule 190  direct_abstract_declarator -> direct_abstract_declarator @16 '[' ']'
rule 191  @17 ->		/* empty */
rule 192  direct_abstract_declarator -> direct_abstract_declarator @17 '[' constant_expression ']'
rule 193  direct_abstract_declarator -> '(' ')'
rule 194  @18 ->		/* empty */
rule 195  @19 ->		/* empty */
rule 196  direct_abstract_declarator -> '(' @18 parameter_type_list @19 ')'
rule 197  direct_abstract_declarator -> direct_abstract_declarator '(' ')'
rule 198  @20 ->		/* empty */
rule 199  @21 ->		/* empty */
rule 200  direct_abstract_declarator -> direct_abstract_declarator '(' @20 parameter_type_list @21 ')'
rule 201  initializer -> assignment_expression
rule 202  initializer -> '{' initializer_list '}'
rule 203  initializer -> '{' initializer_list ',' '}'
rule 204  initializer_list -> initializer
rule 205  initializer_list -> initializer_list ',' initializer
rule 206  statement -> labeled_statement
rule 207  statement -> compound_statement
rule 208  statement -> expression_statement
rule 209  statement -> selection_statement
rule 210  statement -> iteration_statement
rule 211  statement -> jump_statement
rule 212  labeled_statement -> IDENTIFIER ':' statement
rule 213  labeled_statement -> CASE constant_expression ':' statement
rule 214  labeled_statement -> DEFAULT ':' statement
rule 215  compound_statement -> '{' '}'
rule 216  compound_statement -> '{' statement_list '}'
rule 217  compound_statement -> '{' declaration_list '}'
rule 218  compound_statement -> '{' declaration_list statement_list '}'
rule 219  declaration_list -> declaration
rule 220  declaration_list -> declaration_list declaration
rule 221  statement_list -> statement
rule 222  statement_list -> statement_list statement
rule 223  expression_statement -> ';'
rule 224  expression_statement -> expression ';'
rule 225  @22 ->		/* empty */
rule 226  @23 ->		/* empty */
rule 227  @24 ->		/* empty */
rule 228  selection_statement_first_half -> IF '(' @22 expression @23 ')' @24 statement
rule 229  selection_statement -> selection_statement_first_half
rule 230  selection_statement -> selection_statement_first_half ELSE statement
rule 231  selection_statement -> SWITCH '(' expression ')' statement
rule 232  iteration_statement -> WHILE '(' expression ')' statement
rule 233  iteration_statement -> DO statement WHILE '(' expression ')' ';'
rule 234  iteration_statement -> FOR '(' expression_statement expression_statement ')' statement
rule 235  iteration_statement -> FOR '(' expression_statement expression_statement expression ')' statement
rule 236  jump_statement -> GOTO IDENTIFIER ';'
rule 237  jump_statement -> CONTINUE ';'
rule 238  jump_statement -> BREAK ';'
rule 239  jump_statement -> RETURN ';'
rule 240  jump_statement -> RETURN expression ';'
rule 241  translation_unit -> external_declaration
rule 242  translation_unit -> translation_unit external_declaration
rule 243  external_declaration -> function_definition
rule 244  external_declaration -> declaration
rule 245  @25 ->		/* empty */
rule 246  function_definition -> declaration_specifiers declarator @25 declaration_list compound_statement
rule 247  @26 ->		/* empty */
rule 248  function_definition -> declaration_specifiers declarator @26 compound_statement
rule 249  @27 ->		/* empty */
rule 250  function_definition -> declarator @27 declaration_list compound_statement
rule 251  function_definition -> declarator compound_statement

Terminals, with rules where they appear

$ (-1)
'!' (33) 29
'%' (37) 35
'&' (38) 24 53
'(' (40) 4 10 11 23 31 149 155 157 159 186 193 196 197 200 228 231
    232 233 234 235
')' (41) 4 10 11 23 31 149 155 157 159 186 193 196 197 200 228 231
    232 233 234 235
'*' (42) 25 33 161 162 163 164
'+' (43) 26 37
',' (44) 17 78 93 130 138 140 168 170 179 203 205
'-' (45) 27 38
'.' (46) 12
'/' (47) 34
':' (58) 63 132 133 212 213 214
';' (59) 80 81 124 223 224 233 236 237 238 239 240
'<' (60) 44
'=' (61) 66 95 142
'>' (62) 46
'?' (63) 63
'[' (91) 9 150 151 187 188 190 192
']' (93) 9 150 151 187 188 190 192
'^' (94) 55
'{' (123) 115 118 134 135 202 203 215 216 217 218
'|' (124) 57
'}' (125) 115 118 134 135 202 203 215 216 217 218
'~' (126) 28
error (256)
IDENTIFIER (258) 1 12 13 115 119 135 136 141 142 148 178 179 212 236
CONSTANT (259) 2
STRING_LITERAL (260) 3
SIZEOF (261) 22 23
PTR_OP (262) 13
INC_OP (263) 14 19
DEC_OP (264) 15 20
LEFT_OP (265) 40
RIGHT_OP (266) 41
LE_OP (267) 47
GE_OP (268) 48
EQ_OP (269) 50
NE_OP (270) 51
AND_OP (271) 59
OR_OP (272) 61
MUL_ASSIGN (273) 67
DIV_ASSIGN (274) 68
MOD_ASSIGN (275) 69
ADD_ASSIGN (276) 70
SUB_ASSIGN (277) 71
LEFT_ASSIGN (278) 72
RIGHT_ASSIGN (279) 73
AND_ASSIGN (280) 74
XOR_ASSIGN (281) 75
OR_ASSIGN (282) 76
TYPE_NAME (283) 112
TYPEDEF (284) 96
EXTERN (285) 97
STATIC (286) 98
AUTO (287) 99
REGISTER (288) 100
CHAR (289) 102
SHORT (290) 103
INT (291) 104
LONG (292) 105
SIGNED (293) 108
UNSIGNED (294) 109
FLOAT (295) 106
DOUBLE (296) 107
CONST (297) 143
VOLATILE (298) 144
VOID (299) 101
STRUCT (300) 120
UNION (301) 121
ENUM (302) 134 135 136
ELLIPSIS (303) 168
CASE (304) 213
DEFAULT (305) 214
IF (306) 228
ELSE (307) 230
SWITCH (308) 231
WHILE (309) 232 233
DO (310) 233
FOR (311) 234 235
GOTO (312) 236
CONTINUE (313) 237
BREAK (314) 238
RETURN (315) 239 240
INLINE (316) 90
INLINE2 (317) 91

Nonterminals, with rules where they appear

primary_expression (87)
    on left: 1 2 3 4, on right: 5
postfix_expression (88)
    on left: 5 9 10 11 12 13 14 15, on right: 9 10 11 12 13 14 15 18
@1 (89)
    on left: 6, on right: 9
@2 (90)
    on left: 7, on right: 9
@3 (91)
    on left: 8, on right: 9
argument_expression_list (92)
    on left: 16 17, on right: 11 17
unary_expression (93)
    on left: 18 19 20 21 22 23, on right: 19 20 22 30 65
unary_operator (94)
    on left: 24 25 26 27 28 29, on right: 21
cast_expression (95)
    on left: 30 31, on right: 21 31 32 33 34 35
multiplicative_expression (96)
    on left: 32 33 34 35, on right: 33 34 35 36 37 38
additive_expression (97)
    on left: 36 37 38, on right: 37 38 39 40 41
shift_expression (98)
    on left: 39 40 41, on right: 40 41 42 44 46 47 48
relational_expression (99)
    on left: 42 44 46 47 48, on right: 44 46 47 48 49 50 51
@4 (100)
    on left: 43, on right: 44
@5 (101)
    on left: 45, on right: 46
equality_expression (102)
    on left: 49 50 51, on right: 50 51 52 53
and_expression (103)
    on left: 52 53, on right: 53 54 55
exclusive_or_expression (104)
    on left: 54 55, on right: 55 56 57
inclusive_or_expression (105)
    on left: 56 57, on right: 57 58 59
logical_and_expression (106)
    on left: 58 59, on right: 59 60 61
logical_or_expression (107)
    on left: 60 61, on right: 61 62 63
conditional_expression (108)
    on left: 62 63, on right: 63 64 79
assignment_expression (109)
    on left: 64 65, on right: 16 17 65 77 78 201
assignment_operator (110)
    on left: 66 67 68 69 70 71 72 73 74 75 76, on right: 65
expression (111)
    on left: 77 78, on right: 4 9 63 78 224 228 231 232 233 235 240
constant_expression (112)
    on left: 79, on right: 132 133 142 150 188 192 213
declaration (113)
    on left: 80 81, on right: 219 220 244
declaration_specifiers (114)
    on left: 82 83 84 85 86 87 88 89, on right: 80 81 83 85 87 89 173
    176 246 248
function_specifier (115)
    on left: 90 91, on right: 88 89
init_declarator_list (116)
    on left: 92 93, on right: 81 93
init_declarator (117)
    on left: 94 95, on right: 92 93
storage_class_specifier (118)
    on left: 96 97 98 99 100, on right: 82 83
type_specifier (119)
    on left: 101 102 103 104 105 106 107 108 109 110 111 112,
    on right: 84 85 125 126
struct_or_union_specifier (120)
    on left: 115 118 119, on right: 110
@6 (121)
    on left: 113, on right: 115
@7 (122)
    on left: 114, on right: 115
@8 (123)
    on left: 116, on right: 118
@9 (124)
    on left: 117, on right: 118
struct_or_union (125)
    on left: 120 121, on right: 115 118 119
struct_declaration_list (126)
    on left: 122 123, on right: 115 118 123
struct_declaration (127)
    on left: 124, on right: 122 123
specifier_qualifier_list (128)
    on left: 125 126 127 128, on right: 124 125 127 180 181
struct_declarator_list (129)
    on left: 129 130, on right: 124 130
struct_declarator (130)
    on left: 131 132 133, on right: 129 130
enum_specifier (131)
    on left: 134 135 136, on right: 111
enumerator_list_end (132)
    on left: 137 138, on right: 134 135
enumerator_list (133)
    on left: 139 140, on right: 134 135 140
enumerator (134)
    on left: 141 142, on right: 139 140
type_qualifier (135)
    on left: 143 144, on right: 86 87 127 128 165 166
declarator (136)
    on left: 145 146, on right: 94 95 131 133 149 171 246 248 250 251
direct_declarator (137)
    on left: 148 149 150 151 155 157 159, on right: 145 146 150 151
    155 157 159
@10 (138)
    on left: 152, on right: 155
@11 (139)
    on left: 153, on right: 155
@12 (140)
    on left: 154, on right: 155
@13 (141)
    on left: 156, on right: 157
@14 (142)
    on left: 158, on right: 159
direct_declarator_needinsert (143)
    on left: 160, on right: 150
pointer (144)
    on left: 161 162 163 164, on right: 145 163 164 182 184
type_qualifier_list (145)
    on left: 165 166, on right: 162 164 166
parameter_type_list (146)
    on left: 167 168, on right: 155 196 200
parameter_list (147)
    on left: 169 170, on right: 167 168 170
parameter_declaration (148)
    on left: 171 172 173 174, on right: 169 170
end_declarator (149)
    on left: 175, on right: 171 172
declaration_specifiers_declarator (150)
    on left: 176, on right: 171 172
after_decl_spec (151)
    on left: 177, on right: 176
identifier_list (152)
    on left: 178 179, on right: 157 179
type_name (153)
    on left: 180 181, on right: 23 31
abstract_declarator (154)
    on left: 182 183 184, on right: 172 181 186
direct_abstract_declarator (155)
    on left: 186 187 188 190 192 193 196 197 200, on right: 183 184
    190 192 197 200
@15 (156)
    on left: 185, on right: 186
@16 (157)
    on left: 189, on right: 190
@17 (158)
    on left: 191, on right: 192
@18 (159)
    on left: 194, on right: 196
@19 (160)
    on left: 195, on right: 196
@20 (161)
    on left: 198, on right: 200
@21 (162)
    on left: 199, on right: 200
initializer (163)
    on left: 201 202 203, on right: 95 204 205
initializer_list (164)
    on left: 204 205, on right: 202 203 205
statement (165)
    on left: 206 207 208 209 210 211, on right: 212 213 214 221 222
    228 230 231 232 233 234 235
labeled_statement (166)
    on left: 212 213 214, on right: 206
compound_statement (167)
    on left: 215 216 217 218, on right: 207 246 248 250 251
declaration_list (168)
    on left: 219 220, on right: 217 218 220 246 250
statement_list (169)
    on left: 221 222, on right: 216 218 222
expression_statement (170)
    on left: 223 224, on right: 208 234 235
selection_statement_first_half (171)
    on left: 228, on right: 229 230
@22 (172)
    on left: 225, on right: 228
@23 (173)
    on left: 226, on right: 228
@24 (174)
    on left: 227, on right: 228
selection_statement (175)
    on left: 229 230 231, on right: 209
iteration_statement (176)
    on left: 232 233 234 235, on right: 210
jump_statement (177)
    on left: 236 237 238 239 240, on right: 211
translation_unit (178)
    on left: 241 242, on right: 242
external_declaration (179)
    on left: 243 244, on right: 241 242
function_definition (180)
    on left: 246 248 250 251, on right: 243
@25 (181)
    on left: 245, on right: 246
@26 (182)
    on left: 247, on right: 248
@27 (183)
    on left: 249, on right: 250


state 0

    IDENTIFIER	shift, and go to state 1
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25

    declaration	go to state 26
    declaration_specifiers	go to state 27
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    declarator	go to state 35
    direct_declarator	go to state 36
    pointer	go to state 37
    translation_unit	go to state 38
    external_declaration	go to state 39
    function_definition	go to state 40



state 1

    direct_declarator  ->  IDENTIFIER .   (rule 148)

    $default	reduce using rule 148 (direct_declarator)



state 2

    type_specifier  ->  TYPE_NAME .   (rule 112)

    $default	reduce using rule 112 (type_specifier)



state 3

    storage_class_specifier  ->  TYPEDEF .   (rule 96)

    $default	reduce using rule 96 (storage_class_specifier)



state 4

    storage_class_specifier  ->  EXTERN .   (rule 97)

    $default	reduce using rule 97 (storage_class_specifier)



state 5

    storage_class_specifier  ->  STATIC .   (rule 98)

    $default	reduce using rule 98 (storage_class_specifier)



state 6

    storage_class_specifier  ->  AUTO .   (rule 99)

    $default	reduce using rule 99 (storage_class_specifier)



state 7

    storage_class_specifier  ->  REGISTER .   (rule 100)

    $default	reduce using rule 100 (storage_class_specifier)



state 8

    type_specifier  ->  CHAR .   (rule 102)

    $default	reduce using rule 102 (type_specifier)



state 9

    type_specifier  ->  SHORT .   (rule 103)

    $default	reduce using rule 103 (type_specifier)



state 10

    type_specifier  ->  INT .   (rule 104)

    $default	reduce using rule 104 (type_specifier)



state 11

    type_specifier  ->  LONG .   (rule 105)

    $default	reduce using rule 105 (type_specifier)



state 12

    type_specifier  ->  SIGNED .   (rule 108)

    $default	reduce using rule 108 (type_specifier)



state 13

    type_specifier  ->  UNSIGNED .   (rule 109)

    $default	reduce using rule 109 (type_specifier)



state 14

    type_specifier  ->  FLOAT .   (rule 106)

    $default	reduce using rule 106 (type_specifier)



state 15

    type_specifier  ->  DOUBLE .   (rule 107)

    $default	reduce using rule 107 (type_specifier)



state 16

    type_qualifier  ->  CONST .   (rule 143)

    $default	reduce using rule 143 (type_qualifier)



state 17

    type_qualifier  ->  VOLATILE .   (rule 144)

    $default	reduce using rule 144 (type_qualifier)



state 18

    type_specifier  ->  VOID .   (rule 101)

    $default	reduce using rule 101 (type_specifier)



state 19

    struct_or_union  ->  STRUCT .   (rule 120)

    $default	reduce using rule 120 (struct_or_union)



state 20

    struct_or_union  ->  UNION .   (rule 121)

    $default	reduce using rule 121 (struct_or_union)



state 21

    enum_specifier  ->  ENUM . '{' enumerator_list enumerator_list_end '}'   (rule 134)
    enum_specifier  ->  ENUM . IDENTIFIER '{' enumerator_list enumerator_list_end '}'   (rule 135)
    enum_specifier  ->  ENUM . IDENTIFIER   (rule 136)

    IDENTIFIER	shift, and go to state 41
    '{' 	shift, and go to state 42



state 22

    function_specifier  ->  INLINE .   (rule 90)

    $default	reduce using rule 90 (function_specifier)



state 23

    function_specifier  ->  INLINE2 .   (rule 91)

    $default	reduce using rule 91 (function_specifier)



state 24

    direct_declarator  ->  '(' . declarator ')'   (rule 149)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25

    declarator	go to state 43
    direct_declarator	go to state 36
    pointer	go to state 37



state 25

    pointer  ->  '*' .   (rule 161)
    pointer  ->  '*' . type_qualifier_list   (rule 162)
    pointer  ->  '*' . pointer   (rule 163)
    pointer  ->  '*' . type_qualifier_list pointer   (rule 164)

    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    '*' 	shift, and go to state 25

    $default	reduce using rule 161 (pointer)

    type_qualifier	go to state 44
    pointer	go to state 45
    type_qualifier_list	go to state 46



state 26

    external_declaration  ->  declaration .   (rule 244)

    $default	reduce using rule 244 (external_declaration)



state 27

    declaration  ->  declaration_specifiers . ';'   (rule 80)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 81)
    function_definition  ->  declaration_specifiers . declarator @25 declaration_list compound_statement   (rule 246)
    function_definition  ->  declaration_specifiers . declarator @26 compound_statement   (rule 248)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25
    ';' 	shift, and go to state 47

    init_declarator_list	go to state 48
    init_declarator	go to state 49
    declarator	go to state 50
    direct_declarator	go to state 36
    pointer	go to state 37



state 28

    declaration_specifiers  ->  function_specifier .   (rule 88)
    declaration_specifiers  ->  function_specifier . declaration_specifiers   (rule 89)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    $default	reduce using rule 88 (declaration_specifiers)

    declaration_specifiers	go to state 51
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34



state 29

    declaration_specifiers  ->  storage_class_specifier .   (rule 82)
    declaration_specifiers  ->  storage_class_specifier . declaration_specifiers   (rule 83)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    $default	reduce using rule 82 (declaration_specifiers)

    declaration_specifiers	go to state 52
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34



state 30

    declaration_specifiers  ->  type_specifier .   (rule 84)
    declaration_specifiers  ->  type_specifier . declaration_specifiers   (rule 85)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    $default	reduce using rule 84 (declaration_specifiers)

    declaration_specifiers	go to state 53
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34



state 31

    type_specifier  ->  struct_or_union_specifier .   (rule 110)

    $default	reduce using rule 110 (type_specifier)



state 32

    struct_or_union_specifier  ->  struct_or_union . IDENTIFIER '{' @6 struct_declaration_list @7 '}'   (rule 115)
    struct_or_union_specifier  ->  struct_or_union . '{' @8 struct_declaration_list @9 '}'   (rule 118)
    struct_or_union_specifier  ->  struct_or_union . IDENTIFIER   (rule 119)

    IDENTIFIER	shift, and go to state 54
    '{' 	shift, and go to state 55



state 33

    type_specifier  ->  enum_specifier .   (rule 111)

    $default	reduce using rule 111 (type_specifier)



state 34

    declaration_specifiers  ->  type_qualifier .   (rule 86)
    declaration_specifiers  ->  type_qualifier . declaration_specifiers   (rule 87)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    $default	reduce using rule 86 (declaration_specifiers)

    declaration_specifiers	go to state 56
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34



state 35

    function_definition  ->  declarator . @27 declaration_list compound_statement   (rule 250)
    function_definition  ->  declarator . compound_statement   (rule 251)

    '{' 	shift, and go to state 57

    $default	reduce using rule 249 (@27)

    compound_statement	go to state 58
    @27 	go to state 59



state 36

    declarator  ->  direct_declarator .   (rule 146)
    direct_declarator  ->  direct_declarator . '[' direct_declarator_needinsert constant_expression ']'   (rule 150)
    direct_declarator  ->  direct_declarator . '[' ']'   (rule 151)
    direct_declarator  ->  direct_declarator . @10 '(' @11 parameter_type_list @12 ')'   (rule 155)
    direct_declarator  ->  direct_declarator . @13 '(' identifier_list ')'   (rule 157)
    direct_declarator  ->  direct_declarator . @14 '(' ')'   (rule 159)

    '[' 	shift, and go to state 60

    $default	reduce using rule 146 (declarator)

    @10 	go to state 61
    @13 	go to state 62
    @14 	go to state 63



state 37

    declarator  ->  pointer . direct_declarator   (rule 145)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 24

    direct_declarator	go to state 64



state 38

    translation_unit  ->  translation_unit . external_declaration   (rule 242)

    $   	go to state 391
    IDENTIFIER	shift, and go to state 1
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25

    declaration	go to state 26
    declaration_specifiers	go to state 27
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    declarator	go to state 35
    direct_declarator	go to state 36
    pointer	go to state 37
    external_declaration	go to state 65
    function_definition	go to state 40



state 39

    translation_unit  ->  external_declaration .   (rule 241)

    $default	reduce using rule 241 (translation_unit)



state 40

    external_declaration  ->  function_definition .   (rule 243)

    $default	reduce using rule 243 (external_declaration)



state 41

    enum_specifier  ->  ENUM IDENTIFIER . '{' enumerator_list enumerator_list_end '}'   (rule 135)
    enum_specifier  ->  ENUM IDENTIFIER .   (rule 136)

    '{' 	shift, and go to state 66

    $default	reduce using rule 136 (enum_specifier)



state 42

    enum_specifier  ->  ENUM '{' . enumerator_list enumerator_list_end '}'   (rule 134)

    IDENTIFIER	shift, and go to state 67

    enumerator_list	go to state 68
    enumerator	go to state 69



state 43

    direct_declarator  ->  '(' declarator . ')'   (rule 149)

    ')' 	shift, and go to state 70



state 44

    type_qualifier_list  ->  type_qualifier .   (rule 165)

    $default	reduce using rule 165 (type_qualifier_list)



state 45

    pointer  ->  '*' pointer .   (rule 163)

    $default	reduce using rule 163 (pointer)



state 46

    pointer  ->  '*' type_qualifier_list .   (rule 162)
    pointer  ->  '*' type_qualifier_list . pointer   (rule 164)
    type_qualifier_list  ->  type_qualifier_list . type_qualifier   (rule 166)

    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    '*' 	shift, and go to state 25

    $default	reduce using rule 162 (pointer)

    type_qualifier	go to state 71
    pointer	go to state 72



state 47

    declaration  ->  declaration_specifiers ';' .   (rule 80)

    $default	reduce using rule 80 (declaration)



state 48

    declaration  ->  declaration_specifiers init_declarator_list . ';'   (rule 81)
    init_declarator_list  ->  init_declarator_list . ',' init_declarator   (rule 93)

    ',' 	shift, and go to state 73
    ';' 	shift, and go to state 74



state 49

    init_declarator_list  ->  init_declarator .   (rule 92)

    $default	reduce using rule 92 (init_declarator_list)



state 50

    init_declarator  ->  declarator .   (rule 94)
    init_declarator  ->  declarator . '=' initializer   (rule 95)
    function_definition  ->  declaration_specifiers declarator . @25 declaration_list compound_statement   (rule 246)
    function_definition  ->  declaration_specifiers declarator . @26 compound_statement   (rule 248)

    '=' 	shift, and go to state 75

    $default	reduce using rule 245 (@25)

    @25 	go to state 76
    @26 	go to state 77



state 51

    declaration_specifiers  ->  function_specifier declaration_specifiers .   (rule 89)

    $default	reduce using rule 89 (declaration_specifiers)



state 52

    declaration_specifiers  ->  storage_class_specifier declaration_specifiers .   (rule 83)

    $default	reduce using rule 83 (declaration_specifiers)



state 53

    declaration_specifiers  ->  type_specifier declaration_specifiers .   (rule 85)

    $default	reduce using rule 85 (declaration_specifiers)



state 54

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER . '{' @6 struct_declaration_list @7 '}'   (rule 115)
    struct_or_union_specifier  ->  struct_or_union IDENTIFIER .   (rule 119)

    '{' 	shift, and go to state 78

    $default	reduce using rule 119 (struct_or_union_specifier)



state 55

    struct_or_union_specifier  ->  struct_or_union '{' . @8 struct_declaration_list @9 '}'   (rule 118)

    $default	reduce using rule 116 (@8)

    @8  	go to state 79



state 56

    declaration_specifiers  ->  type_qualifier declaration_specifiers .   (rule 87)

    $default	reduce using rule 87 (declaration_specifiers)



state 57

    compound_statement  ->  '{' . '}'   (rule 215)
    compound_statement  ->  '{' . statement_list '}'   (rule 216)
    compound_statement  ->  '{' . declaration_list '}'   (rule 217)
    compound_statement  ->  '{' . declaration_list statement_list '}'   (rule 218)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 57
    '}' 	shift, and go to state 105

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    declaration	go to state 124
    declaration_specifiers	go to state 125
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    statement	go to state 126
    labeled_statement	go to state 127
    compound_statement	go to state 128
    declaration_list	go to state 129
    statement_list	go to state 130
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 58

    function_definition  ->  declarator compound_statement .   (rule 251)

    $default	reduce using rule 251 (function_definition)



state 59

    function_definition  ->  declarator @27 . declaration_list compound_statement   (rule 250)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    declaration	go to state 124
    declaration_specifiers	go to state 125
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    declaration_list	go to state 136



state 60

    direct_declarator  ->  direct_declarator '[' . direct_declarator_needinsert constant_expression ']'   (rule 150)
    direct_declarator  ->  direct_declarator '[' . ']'   (rule 151)

    ']' 	shift, and go to state 137

    $default	reduce using rule 160 (direct_declarator_needinsert)

    direct_declarator_needinsert	go to state 138



state 61

    direct_declarator  ->  direct_declarator @10 . '(' @11 parameter_type_list @12 ')'   (rule 155)

    '(' 	shift, and go to state 139



state 62

    direct_declarator  ->  direct_declarator @13 . '(' identifier_list ')'   (rule 157)

    '(' 	shift, and go to state 140



state 63

    direct_declarator  ->  direct_declarator @14 . '(' ')'   (rule 159)

    '(' 	shift, and go to state 141



state 64

    declarator  ->  pointer direct_declarator .   (rule 145)
    direct_declarator  ->  direct_declarator . '[' direct_declarator_needinsert constant_expression ']'   (rule 150)
    direct_declarator  ->  direct_declarator . '[' ']'   (rule 151)
    direct_declarator  ->  direct_declarator . @10 '(' @11 parameter_type_list @12 ')'   (rule 155)
    direct_declarator  ->  direct_declarator . @13 '(' identifier_list ')'   (rule 157)
    direct_declarator  ->  direct_declarator . @14 '(' ')'   (rule 159)

    '[' 	shift, and go to state 60

    $default	reduce using rule 145 (declarator)

    @10 	go to state 61
    @13 	go to state 62
    @14 	go to state 63



state 65

    translation_unit  ->  translation_unit external_declaration .   (rule 242)

    $default	reduce using rule 242 (translation_unit)



state 66

    enum_specifier  ->  ENUM IDENTIFIER '{' . enumerator_list enumerator_list_end '}'   (rule 135)

    IDENTIFIER	shift, and go to state 67

    enumerator_list	go to state 142
    enumerator	go to state 69



state 67

    enumerator  ->  IDENTIFIER .   (rule 141)
    enumerator  ->  IDENTIFIER . '=' constant_expression   (rule 142)

    '=' 	shift, and go to state 143

    $default	reduce using rule 141 (enumerator)



state 68

    enum_specifier  ->  ENUM '{' enumerator_list . enumerator_list_end '}'   (rule 134)
    enumerator_list  ->  enumerator_list . ',' enumerator   (rule 140)

    ',' 	shift, and go to state 144

    $default	reduce using rule 137 (enumerator_list_end)

    enumerator_list_end	go to state 145



state 69

    enumerator_list  ->  enumerator .   (rule 139)

    $default	reduce using rule 139 (enumerator_list)



state 70

    direct_declarator  ->  '(' declarator ')' .   (rule 149)

    $default	reduce using rule 149 (direct_declarator)



state 71

    type_qualifier_list  ->  type_qualifier_list type_qualifier .   (rule 166)

    $default	reduce using rule 166 (type_qualifier_list)



state 72

    pointer  ->  '*' type_qualifier_list pointer .   (rule 164)

    $default	reduce using rule 164 (pointer)



state 73

    init_declarator_list  ->  init_declarator_list ',' . init_declarator   (rule 93)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25

    init_declarator	go to state 146
    declarator	go to state 147
    direct_declarator	go to state 36
    pointer	go to state 37



state 74

    declaration  ->  declaration_specifiers init_declarator_list ';' .   (rule 81)

    $default	reduce using rule 81 (declaration)



state 75

    init_declarator  ->  declarator '=' . initializer   (rule 95)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    '{' 	shift, and go to state 149

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 150
    initializer	go to state 151



state 76

    function_definition  ->  declaration_specifiers declarator @25 . declaration_list compound_statement   (rule 246)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    declaration	go to state 124
    declaration_specifiers	go to state 125
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    declaration_list	go to state 152



state 77

    function_definition  ->  declaration_specifiers declarator @26 . compound_statement   (rule 248)

    '{' 	shift, and go to state 57

    compound_statement	go to state 153



state 78

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' . @6 struct_declaration_list @7 '}'   (rule 115)

    $default	reduce using rule 113 (@6)

    @6  	go to state 154



state 79

    struct_or_union_specifier  ->  struct_or_union '{' @8 . struct_declaration_list @9 '}'   (rule 118)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    type_specifier	go to state 155
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    struct_declaration_list	go to state 156
    struct_declaration	go to state 157
    specifier_qualifier_list	go to state 158
    enum_specifier	go to state 33
    type_qualifier	go to state 159



state 80

    primary_expression  ->  IDENTIFIER .   (rule 1)
    labeled_statement  ->  IDENTIFIER . ':' statement   (rule 212)

    ':' 	shift, and go to state 160

    $default	reduce using rule 1 (primary_expression)



state 81

    primary_expression  ->  CONSTANT .   (rule 2)

    $default	reduce using rule 2 (primary_expression)



state 82

    primary_expression  ->  STRING_LITERAL .   (rule 3)

    $default	reduce using rule 3 (primary_expression)



state 83

    unary_expression  ->  SIZEOF . unary_expression   (rule 22)
    unary_expression  ->  SIZEOF . '(' type_name ')'   (rule 23)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 161
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109



state 84

    unary_expression  ->  INC_OP . unary_expression   (rule 19)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 163
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 164
    unary_operator	go to state 109



state 85

    unary_expression  ->  DEC_OP . unary_expression   (rule 20)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 163
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 165
    unary_operator	go to state 109



state 86

    labeled_statement  ->  CASE . constant_expression ':' statement   (rule 213)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 167
    constant_expression	go to state 168



state 87

    labeled_statement  ->  DEFAULT . ':' statement   (rule 214)

    ':' 	shift, and go to state 169



state 88

    selection_statement_first_half  ->  IF . '(' @22 expression @23 ')' @24 statement   (rule 228)

    '(' 	shift, and go to state 170



state 89

    selection_statement  ->  SWITCH . '(' expression ')' statement   (rule 231)

    '(' 	shift, and go to state 171



state 90

    iteration_statement  ->  WHILE . '(' expression ')' statement   (rule 232)

    '(' 	shift, and go to state 172



state 91

    iteration_statement  ->  DO . statement WHILE '(' expression ')' ';'   (rule 233)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 57

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 173
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 92

    iteration_statement  ->  FOR . '(' expression_statement expression_statement ')' statement   (rule 234)
    iteration_statement  ->  FOR . '(' expression_statement expression_statement expression ')' statement   (rule 235)

    '(' 	shift, and go to state 174



state 93

    jump_statement  ->  GOTO . IDENTIFIER ';'   (rule 236)

    IDENTIFIER	shift, and go to state 175



state 94

    jump_statement  ->  CONTINUE . ';'   (rule 237)

    ';' 	shift, and go to state 176



state 95

    jump_statement  ->  BREAK . ';'   (rule 238)

    ';' 	shift, and go to state 177



state 96

    jump_statement  ->  RETURN . ';'   (rule 239)
    jump_statement  ->  RETURN . expression ';'   (rule 240)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 178

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 179



state 97

    primary_expression  ->  '(' . expression ')'   (rule 4)
    cast_expression  ->  '(' . type_name ')' cast_expression   (rule 31)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 180
    type_specifier	go to state 155
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    specifier_qualifier_list	go to state 181
    enum_specifier	go to state 33
    type_qualifier	go to state 159
    type_name	go to state 182



state 98

    unary_operator  ->  '&' .   (rule 24)

    $default	reduce using rule 24 (unary_operator)



state 99

    unary_operator  ->  '*' .   (rule 25)

    $default	reduce using rule 25 (unary_operator)



state 100

    unary_operator  ->  '+' .   (rule 26)

    $default	reduce using rule 26 (unary_operator)



state 101

    unary_operator  ->  '-' .   (rule 27)

    $default	reduce using rule 27 (unary_operator)



state 102

    unary_operator  ->  '~' .   (rule 28)

    $default	reduce using rule 28 (unary_operator)



state 103

    unary_operator  ->  '!' .   (rule 29)

    $default	reduce using rule 29 (unary_operator)



state 104

    expression_statement  ->  ';' .   (rule 223)

    $default	reduce using rule 223 (expression_statement)



state 105

    compound_statement  ->  '{' '}' .   (rule 215)

    $default	reduce using rule 215 (compound_statement)



state 106

    postfix_expression  ->  primary_expression .   (rule 5)

    $default	reduce using rule 5 (postfix_expression)



state 107

    postfix_expression  ->  postfix_expression . @1 '[' @2 expression @3 ']'   (rule 9)
    postfix_expression  ->  postfix_expression . '(' ')'   (rule 10)
    postfix_expression  ->  postfix_expression . '(' argument_expression_list ')'   (rule 11)
    postfix_expression  ->  postfix_expression . '.' IDENTIFIER   (rule 12)
    postfix_expression  ->  postfix_expression . PTR_OP IDENTIFIER   (rule 13)
    postfix_expression  ->  postfix_expression . INC_OP   (rule 14)
    postfix_expression  ->  postfix_expression . DEC_OP   (rule 15)
    unary_expression  ->  postfix_expression .   (rule 18)

    PTR_OP	shift, and go to state 183
    INC_OP	shift, and go to state 184
    DEC_OP	shift, and go to state 185
    '(' 	shift, and go to state 186
    '.' 	shift, and go to state 187

    $default	reduce using rule 18 (unary_expression)

    @1  	go to state 188



state 108

    cast_expression  ->  unary_expression .   (rule 30)
    assignment_expression  ->  unary_expression . assignment_operator assignment_expression   (rule 65)

    MUL_ASSIGN	shift, and go to state 189
    DIV_ASSIGN	shift, and go to state 190
    MOD_ASSIGN	shift, and go to state 191
    ADD_ASSIGN	shift, and go to state 192
    SUB_ASSIGN	shift, and go to state 193
    LEFT_ASSIGN	shift, and go to state 194
    RIGHT_ASSIGN	shift, and go to state 195
    AND_ASSIGN	shift, and go to state 196
    XOR_ASSIGN	shift, and go to state 197
    OR_ASSIGN	shift, and go to state 198
    '=' 	shift, and go to state 199

    $default	reduce using rule 30 (cast_expression)

    assignment_operator	go to state 200



state 109

    unary_expression  ->  unary_operator . cast_expression   (rule 21)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 201



state 110

    multiplicative_expression  ->  cast_expression .   (rule 32)

    $default	reduce using rule 32 (multiplicative_expression)



state 111

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 33)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 34)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 35)
    additive_expression  ->  multiplicative_expression .   (rule 36)

    '*' 	shift, and go to state 202
    '/' 	shift, and go to state 203
    '%' 	shift, and go to state 204

    $default	reduce using rule 36 (additive_expression)



state 112

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 37)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 38)
    shift_expression  ->  additive_expression .   (rule 39)

    '+' 	shift, and go to state 205
    '-' 	shift, and go to state 206

    $default	reduce using rule 39 (shift_expression)



state 113

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 40)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 41)
    relational_expression  ->  shift_expression .   (rule 42)

    LEFT_OP	shift, and go to state 207
    RIGHT_OP	shift, and go to state 208

    $default	reduce using rule 42 (relational_expression)



state 114

    relational_expression  ->  relational_expression . @4 '<' shift_expression   (rule 44)
    relational_expression  ->  relational_expression . @5 '>' shift_expression   (rule 46)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 47)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 48)
    equality_expression  ->  relational_expression .   (rule 49)

    LE_OP	shift, and go to state 209
    GE_OP	shift, and go to state 210

    $default	reduce using rule 49 (equality_expression)

    @4  	go to state 211
    @5  	go to state 212



state 115

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 50)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 51)
    and_expression  ->  equality_expression .   (rule 52)

    EQ_OP	shift, and go to state 213
    NE_OP	shift, and go to state 214

    $default	reduce using rule 52 (and_expression)



state 116

    and_expression  ->  and_expression . '&' equality_expression   (rule 53)
    exclusive_or_expression  ->  and_expression .   (rule 54)

    '&' 	shift, and go to state 215

    $default	reduce using rule 54 (exclusive_or_expression)



state 117

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 55)
    inclusive_or_expression  ->  exclusive_or_expression .   (rule 56)

    '^' 	shift, and go to state 216

    $default	reduce using rule 56 (inclusive_or_expression)



state 118

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 57)
    logical_and_expression  ->  inclusive_or_expression .   (rule 58)

    '|' 	shift, and go to state 217

    $default	reduce using rule 58 (logical_and_expression)



state 119

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 59)
    logical_or_expression  ->  logical_and_expression .   (rule 60)

    AND_OP	shift, and go to state 218

    $default	reduce using rule 60 (logical_or_expression)



state 120

    logical_or_expression  ->  logical_or_expression . OR_OP logical_and_expression   (rule 61)
    conditional_expression  ->  logical_or_expression .   (rule 62)
    conditional_expression  ->  logical_or_expression . '?' expression ':' conditional_expression   (rule 63)

    OR_OP	shift, and go to state 219
    '?' 	shift, and go to state 220

    $default	reduce using rule 62 (conditional_expression)



state 121

    assignment_expression  ->  conditional_expression .   (rule 64)

    $default	reduce using rule 64 (assignment_expression)



state 122

    expression  ->  assignment_expression .   (rule 77)

    $default	reduce using rule 77 (expression)



state 123

    expression  ->  expression . ',' assignment_expression   (rule 78)
    expression_statement  ->  expression . ';'   (rule 224)

    ',' 	shift, and go to state 221
    ';' 	shift, and go to state 222



state 124

    declaration_list  ->  declaration .   (rule 219)

    $default	reduce using rule 219 (declaration_list)



state 125

    declaration  ->  declaration_specifiers . ';'   (rule 80)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 81)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25
    ';' 	shift, and go to state 47

    init_declarator_list	go to state 48
    init_declarator	go to state 49
    declarator	go to state 147
    direct_declarator	go to state 36
    pointer	go to state 37



state 126

    statement_list  ->  statement .   (rule 221)

    $default	reduce using rule 221 (statement_list)



state 127

    statement  ->  labeled_statement .   (rule 206)

    $default	reduce using rule 206 (statement)



state 128

    statement  ->  compound_statement .   (rule 207)

    $default	reduce using rule 207 (statement)



state 129

    compound_statement  ->  '{' declaration_list . '}'   (rule 217)
    compound_statement  ->  '{' declaration_list . statement_list '}'   (rule 218)
    declaration_list  ->  declaration_list . declaration   (rule 220)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 57
    '}' 	shift, and go to state 223

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    declaration	go to state 224
    declaration_specifiers	go to state 125
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    statement	go to state 126
    labeled_statement	go to state 127
    compound_statement	go to state 128
    statement_list	go to state 225
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 130

    compound_statement  ->  '{' statement_list . '}'   (rule 216)
    statement_list  ->  statement_list . statement   (rule 222)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 57
    '}' 	shift, and go to state 226

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 227
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 131

    statement  ->  expression_statement .   (rule 208)

    $default	reduce using rule 208 (statement)



state 132

    selection_statement  ->  selection_statement_first_half .   (rule 229)
    selection_statement  ->  selection_statement_first_half . ELSE statement   (rule 230)

    ELSE	shift, and go to state 228

    ELSE	[reduce using rule 229 (selection_statement)]
    $default	reduce using rule 229 (selection_statement)



state 133

    statement  ->  selection_statement .   (rule 209)

    $default	reduce using rule 209 (statement)



state 134

    statement  ->  iteration_statement .   (rule 210)

    $default	reduce using rule 210 (statement)



state 135

    statement  ->  jump_statement .   (rule 211)

    $default	reduce using rule 211 (statement)



state 136

    declaration_list  ->  declaration_list . declaration   (rule 220)
    function_definition  ->  declarator @27 declaration_list . compound_statement   (rule 250)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23
    '{' 	shift, and go to state 57

    declaration	go to state 224
    declaration_specifiers	go to state 125
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    compound_statement	go to state 229



state 137

    direct_declarator  ->  direct_declarator '[' ']' .   (rule 151)

    $default	reduce using rule 151 (direct_declarator)



state 138

    direct_declarator  ->  direct_declarator '[' direct_declarator_needinsert . constant_expression ']'   (rule 150)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 167
    constant_expression	go to state 230



state 139

    direct_declarator  ->  direct_declarator @10 '(' . @11 parameter_type_list @12 ')'   (rule 155)

    $default	reduce using rule 153 (@11)

    @11 	go to state 231



state 140

    direct_declarator  ->  direct_declarator @13 '(' . identifier_list ')'   (rule 157)

    IDENTIFIER	shift, and go to state 232

    identifier_list	go to state 233



state 141

    direct_declarator  ->  direct_declarator @14 '(' . ')'   (rule 159)

    ')' 	shift, and go to state 234



state 142

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list . enumerator_list_end '}'   (rule 135)
    enumerator_list  ->  enumerator_list . ',' enumerator   (rule 140)

    ',' 	shift, and go to state 144

    $default	reduce using rule 137 (enumerator_list_end)

    enumerator_list_end	go to state 235



state 143

    enumerator  ->  IDENTIFIER '=' . constant_expression   (rule 142)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 167
    constant_expression	go to state 236



state 144

    enumerator_list_end  ->  ',' .   (rule 138)
    enumerator_list  ->  enumerator_list ',' . enumerator   (rule 140)

    IDENTIFIER	shift, and go to state 67

    $default	reduce using rule 138 (enumerator_list_end)

    enumerator	go to state 237



state 145

    enum_specifier  ->  ENUM '{' enumerator_list enumerator_list_end . '}'   (rule 134)

    '}' 	shift, and go to state 238



state 146

    init_declarator_list  ->  init_declarator_list ',' init_declarator .   (rule 93)

    $default	reduce using rule 93 (init_declarator_list)



state 147

    init_declarator  ->  declarator .   (rule 94)
    init_declarator  ->  declarator . '=' initializer   (rule 95)

    '=' 	shift, and go to state 75

    $default	reduce using rule 94 (init_declarator)



state 148

    primary_expression  ->  IDENTIFIER .   (rule 1)

    $default	reduce using rule 1 (primary_expression)



state 149

    initializer  ->  '{' . initializer_list '}'   (rule 202)
    initializer  ->  '{' . initializer_list ',' '}'   (rule 203)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    '{' 	shift, and go to state 149

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 150
    initializer	go to state 239
    initializer_list	go to state 240



state 150

    initializer  ->  assignment_expression .   (rule 201)

    $default	reduce using rule 201 (initializer)



state 151

    init_declarator  ->  declarator '=' initializer .   (rule 95)

    $default	reduce using rule 95 (init_declarator)



state 152

    declaration_list  ->  declaration_list . declaration   (rule 220)
    function_definition  ->  declaration_specifiers declarator @25 declaration_list . compound_statement   (rule 246)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23
    '{' 	shift, and go to state 57

    declaration	go to state 224
    declaration_specifiers	go to state 125
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    compound_statement	go to state 241



state 153

    function_definition  ->  declaration_specifiers declarator @26 compound_statement .   (rule 248)

    $default	reduce using rule 248 (function_definition)



state 154

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' @6 . struct_declaration_list @7 '}'   (rule 115)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    type_specifier	go to state 155
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    struct_declaration_list	go to state 242
    struct_declaration	go to state 157
    specifier_qualifier_list	go to state 158
    enum_specifier	go to state 33
    type_qualifier	go to state 159



state 155

    specifier_qualifier_list  ->  type_specifier . specifier_qualifier_list   (rule 125)
    specifier_qualifier_list  ->  type_specifier .   (rule 126)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    $default	reduce using rule 126 (specifier_qualifier_list)

    type_specifier	go to state 155
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    specifier_qualifier_list	go to state 243
    enum_specifier	go to state 33
    type_qualifier	go to state 159



state 156

    struct_or_union_specifier  ->  struct_or_union '{' @8 struct_declaration_list . @9 '}'   (rule 118)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 123)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    $default	reduce using rule 117 (@9)

    type_specifier	go to state 155
    struct_or_union_specifier	go to state 31
    @9  	go to state 244
    struct_or_union	go to state 32
    struct_declaration	go to state 245
    specifier_qualifier_list	go to state 158
    enum_specifier	go to state 33
    type_qualifier	go to state 159



state 157

    struct_declaration_list  ->  struct_declaration .   (rule 122)

    $default	reduce using rule 122 (struct_declaration_list)



state 158

    struct_declaration  ->  specifier_qualifier_list . struct_declarator_list ';'   (rule 124)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25
    ':' 	shift, and go to state 246

    struct_declarator_list	go to state 247
    struct_declarator	go to state 248
    declarator	go to state 249
    direct_declarator	go to state 36
    pointer	go to state 37



state 159

    specifier_qualifier_list  ->  type_qualifier . specifier_qualifier_list   (rule 127)
    specifier_qualifier_list  ->  type_qualifier .   (rule 128)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    $default	reduce using rule 128 (specifier_qualifier_list)

    type_specifier	go to state 155
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    specifier_qualifier_list	go to state 250
    enum_specifier	go to state 33
    type_qualifier	go to state 159



state 160

    labeled_statement  ->  IDENTIFIER ':' . statement   (rule 212)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 57

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 251
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 161

    primary_expression  ->  '(' . expression ')'   (rule 4)
    unary_expression  ->  SIZEOF '(' . type_name ')'   (rule 23)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 180
    type_specifier	go to state 155
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    specifier_qualifier_list	go to state 181
    enum_specifier	go to state 33
    type_qualifier	go to state 159
    type_name	go to state 252



state 162

    unary_expression  ->  SIZEOF unary_expression .   (rule 22)

    $default	reduce using rule 22 (unary_expression)



state 163

    primary_expression  ->  '(' . expression ')'   (rule 4)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 180



state 164

    unary_expression  ->  INC_OP unary_expression .   (rule 19)

    $default	reduce using rule 19 (unary_expression)



state 165

    unary_expression  ->  DEC_OP unary_expression .   (rule 20)

    $default	reduce using rule 20 (unary_expression)



state 166

    cast_expression  ->  unary_expression .   (rule 30)

    $default	reduce using rule 30 (cast_expression)



state 167

    constant_expression  ->  conditional_expression .   (rule 79)

    $default	reduce using rule 79 (constant_expression)



state 168

    labeled_statement  ->  CASE constant_expression . ':' statement   (rule 213)

    ':' 	shift, and go to state 253



state 169

    labeled_statement  ->  DEFAULT ':' . statement   (rule 214)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 57

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 254
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 170

    selection_statement_first_half  ->  IF '(' . @22 expression @23 ')' @24 statement   (rule 228)

    $default	reduce using rule 225 (@22)

    @22 	go to state 255



state 171

    selection_statement  ->  SWITCH '(' . expression ')' statement   (rule 231)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 256



state 172

    iteration_statement  ->  WHILE '(' . expression ')' statement   (rule 232)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 257



state 173

    iteration_statement  ->  DO statement . WHILE '(' expression ')' ';'   (rule 233)

    WHILE	shift, and go to state 258



state 174

    iteration_statement  ->  FOR '(' . expression_statement expression_statement ')' statement   (rule 234)
    iteration_statement  ->  FOR '(' . expression_statement expression_statement expression ')' statement   (rule 235)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    expression_statement	go to state 259



state 175

    jump_statement  ->  GOTO IDENTIFIER . ';'   (rule 236)

    ';' 	shift, and go to state 260



state 176

    jump_statement  ->  CONTINUE ';' .   (rule 237)

    $default	reduce using rule 237 (jump_statement)



state 177

    jump_statement  ->  BREAK ';' .   (rule 238)

    $default	reduce using rule 238 (jump_statement)



state 178

    jump_statement  ->  RETURN ';' .   (rule 239)

    $default	reduce using rule 239 (jump_statement)



state 179

    expression  ->  expression . ',' assignment_expression   (rule 78)
    jump_statement  ->  RETURN expression . ';'   (rule 240)

    ',' 	shift, and go to state 221
    ';' 	shift, and go to state 261



state 180

    primary_expression  ->  '(' expression . ')'   (rule 4)
    expression  ->  expression . ',' assignment_expression   (rule 78)

    ')' 	shift, and go to state 262
    ',' 	shift, and go to state 221



state 181

    type_name  ->  specifier_qualifier_list .   (rule 180)
    type_name  ->  specifier_qualifier_list . abstract_declarator   (rule 181)

    '(' 	shift, and go to state 263
    '[' 	shift, and go to state 264
    '*' 	shift, and go to state 25

    $default	reduce using rule 180 (type_name)

    pointer	go to state 265
    abstract_declarator	go to state 266
    direct_abstract_declarator	go to state 267



state 182

    cast_expression  ->  '(' type_name . ')' cast_expression   (rule 31)

    ')' 	shift, and go to state 268



state 183

    postfix_expression  ->  postfix_expression PTR_OP . IDENTIFIER   (rule 13)

    IDENTIFIER	shift, and go to state 269



state 184

    postfix_expression  ->  postfix_expression INC_OP .   (rule 14)

    $default	reduce using rule 14 (postfix_expression)



state 185

    postfix_expression  ->  postfix_expression DEC_OP .   (rule 15)

    $default	reduce using rule 15 (postfix_expression)



state 186

    postfix_expression  ->  postfix_expression '(' . ')'   (rule 10)
    postfix_expression  ->  postfix_expression '(' . argument_expression_list ')'   (rule 11)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    ')' 	shift, and go to state 270
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    argument_expression_list	go to state 271
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 272



state 187

    postfix_expression  ->  postfix_expression '.' . IDENTIFIER   (rule 12)

    IDENTIFIER	shift, and go to state 273



state 188

    postfix_expression  ->  postfix_expression @1 . '[' @2 expression @3 ']'   (rule 9)

    '[' 	shift, and go to state 274



state 189

    assignment_operator  ->  MUL_ASSIGN .   (rule 67)

    $default	reduce using rule 67 (assignment_operator)



state 190

    assignment_operator  ->  DIV_ASSIGN .   (rule 68)

    $default	reduce using rule 68 (assignment_operator)



state 191

    assignment_operator  ->  MOD_ASSIGN .   (rule 69)

    $default	reduce using rule 69 (assignment_operator)



state 192

    assignment_operator  ->  ADD_ASSIGN .   (rule 70)

    $default	reduce using rule 70 (assignment_operator)



state 193

    assignment_operator  ->  SUB_ASSIGN .   (rule 71)

    $default	reduce using rule 71 (assignment_operator)



state 194

    assignment_operator  ->  LEFT_ASSIGN .   (rule 72)

    $default	reduce using rule 72 (assignment_operator)



state 195

    assignment_operator  ->  RIGHT_ASSIGN .   (rule 73)

    $default	reduce using rule 73 (assignment_operator)



state 196

    assignment_operator  ->  AND_ASSIGN .   (rule 74)

    $default	reduce using rule 74 (assignment_operator)



state 197

    assignment_operator  ->  XOR_ASSIGN .   (rule 75)

    $default	reduce using rule 75 (assignment_operator)



state 198

    assignment_operator  ->  OR_ASSIGN .   (rule 76)

    $default	reduce using rule 76 (assignment_operator)



state 199

    assignment_operator  ->  '=' .   (rule 66)

    $default	reduce using rule 66 (assignment_operator)



state 200

    assignment_expression  ->  unary_expression assignment_operator . assignment_expression   (rule 65)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 275



state 201

    unary_expression  ->  unary_operator cast_expression .   (rule 21)

    $default	reduce using rule 21 (unary_expression)



state 202

    multiplicative_expression  ->  multiplicative_expression '*' . cast_expression   (rule 33)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 276



state 203

    multiplicative_expression  ->  multiplicative_expression '/' . cast_expression   (rule 34)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 277



state 204

    multiplicative_expression  ->  multiplicative_expression '%' . cast_expression   (rule 35)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 278



state 205

    additive_expression  ->  additive_expression '+' . multiplicative_expression   (rule 37)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 279



state 206

    additive_expression  ->  additive_expression '-' . multiplicative_expression   (rule 38)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 280



state 207

    shift_expression  ->  shift_expression LEFT_OP . additive_expression   (rule 40)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 281



state 208

    shift_expression  ->  shift_expression RIGHT_OP . additive_expression   (rule 41)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 282



state 209

    relational_expression  ->  relational_expression LE_OP . shift_expression   (rule 47)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 283



state 210

    relational_expression  ->  relational_expression GE_OP . shift_expression   (rule 48)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 284



state 211

    relational_expression  ->  relational_expression @4 . '<' shift_expression   (rule 44)

    '<' 	shift, and go to state 285



state 212

    relational_expression  ->  relational_expression @5 . '>' shift_expression   (rule 46)

    '>' 	shift, and go to state 286



state 213

    equality_expression  ->  equality_expression EQ_OP . relational_expression   (rule 50)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 287



state 214

    equality_expression  ->  equality_expression NE_OP . relational_expression   (rule 51)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 288



state 215

    and_expression  ->  and_expression '&' . equality_expression   (rule 53)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 289



state 216

    exclusive_or_expression  ->  exclusive_or_expression '^' . and_expression   (rule 55)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 290



state 217

    inclusive_or_expression  ->  inclusive_or_expression '|' . exclusive_or_expression   (rule 57)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 291



state 218

    logical_and_expression  ->  logical_and_expression AND_OP . inclusive_or_expression   (rule 59)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 292



state 219

    logical_or_expression  ->  logical_or_expression OR_OP . logical_and_expression   (rule 61)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 293



state 220

    conditional_expression  ->  logical_or_expression '?' . expression ':' conditional_expression   (rule 63)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 294



state 221

    expression  ->  expression ',' . assignment_expression   (rule 78)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 295



state 222

    expression_statement  ->  expression ';' .   (rule 224)

    $default	reduce using rule 224 (expression_statement)



state 223

    compound_statement  ->  '{' declaration_list '}' .   (rule 217)

    $default	reduce using rule 217 (compound_statement)



state 224

    declaration_list  ->  declaration_list declaration .   (rule 220)

    $default	reduce using rule 220 (declaration_list)



state 225

    compound_statement  ->  '{' declaration_list statement_list . '}'   (rule 218)
    statement_list  ->  statement_list . statement   (rule 222)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 57
    '}' 	shift, and go to state 296

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 227
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 226

    compound_statement  ->  '{' statement_list '}' .   (rule 216)

    $default	reduce using rule 216 (compound_statement)



state 227

    statement_list  ->  statement_list statement .   (rule 222)

    $default	reduce using rule 222 (statement_list)



state 228

    selection_statement  ->  selection_statement_first_half ELSE . statement   (rule 230)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 57

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 297
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 229

    function_definition  ->  declarator @27 declaration_list compound_statement .   (rule 250)

    $default	reduce using rule 250 (function_definition)



state 230

    direct_declarator  ->  direct_declarator '[' direct_declarator_needinsert constant_expression . ']'   (rule 150)

    ']' 	shift, and go to state 298



state 231

    direct_declarator  ->  direct_declarator @10 '(' @11 . parameter_type_list @12 ')'   (rule 155)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    $default	reduce using rule 174 (parameter_declaration)

    declaration_specifiers	go to state 299
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    parameter_type_list	go to state 300
    parameter_list	go to state 301
    parameter_declaration	go to state 302
    declaration_specifiers_declarator	go to state 303



state 232

    identifier_list  ->  IDENTIFIER .   (rule 178)

    $default	reduce using rule 178 (identifier_list)



state 233

    direct_declarator  ->  direct_declarator @13 '(' identifier_list . ')'   (rule 157)
    identifier_list  ->  identifier_list . ',' IDENTIFIER   (rule 179)

    ')' 	shift, and go to state 304
    ',' 	shift, and go to state 305



state 234

    direct_declarator  ->  direct_declarator @14 '(' ')' .   (rule 159)

    $default	reduce using rule 159 (direct_declarator)



state 235

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list enumerator_list_end . '}'   (rule 135)

    '}' 	shift, and go to state 306



state 236

    enumerator  ->  IDENTIFIER '=' constant_expression .   (rule 142)

    $default	reduce using rule 142 (enumerator)



state 237

    enumerator_list  ->  enumerator_list ',' enumerator .   (rule 140)

    $default	reduce using rule 140 (enumerator_list)



state 238

    enum_specifier  ->  ENUM '{' enumerator_list enumerator_list_end '}' .   (rule 134)

    $default	reduce using rule 134 (enum_specifier)



state 239

    initializer_list  ->  initializer .   (rule 204)

    $default	reduce using rule 204 (initializer_list)



state 240

    initializer  ->  '{' initializer_list . '}'   (rule 202)
    initializer  ->  '{' initializer_list . ',' '}'   (rule 203)
    initializer_list  ->  initializer_list . ',' initializer   (rule 205)

    ',' 	shift, and go to state 307
    '}' 	shift, and go to state 308



state 241

    function_definition  ->  declaration_specifiers declarator @25 declaration_list compound_statement .   (rule 246)

    $default	reduce using rule 246 (function_definition)



state 242

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' @6 struct_declaration_list . @7 '}'   (rule 115)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 123)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    $default	reduce using rule 114 (@7)

    type_specifier	go to state 155
    struct_or_union_specifier	go to state 31
    @7  	go to state 309
    struct_or_union	go to state 32
    struct_declaration	go to state 245
    specifier_qualifier_list	go to state 158
    enum_specifier	go to state 33
    type_qualifier	go to state 159



state 243

    specifier_qualifier_list  ->  type_specifier specifier_qualifier_list .   (rule 125)

    $default	reduce using rule 125 (specifier_qualifier_list)



state 244

    struct_or_union_specifier  ->  struct_or_union '{' @8 struct_declaration_list @9 . '}'   (rule 118)

    '}' 	shift, and go to state 310



state 245

    struct_declaration_list  ->  struct_declaration_list struct_declaration .   (rule 123)

    $default	reduce using rule 123 (struct_declaration_list)



state 246

    struct_declarator  ->  ':' . constant_expression   (rule 132)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 167
    constant_expression	go to state 311



state 247

    struct_declaration  ->  specifier_qualifier_list struct_declarator_list . ';'   (rule 124)
    struct_declarator_list  ->  struct_declarator_list . ',' struct_declarator   (rule 130)

    ',' 	shift, and go to state 312
    ';' 	shift, and go to state 313



state 248

    struct_declarator_list  ->  struct_declarator .   (rule 129)

    $default	reduce using rule 129 (struct_declarator_list)



state 249

    struct_declarator  ->  declarator .   (rule 131)
    struct_declarator  ->  declarator . ':' constant_expression   (rule 133)

    ':' 	shift, and go to state 314

    $default	reduce using rule 131 (struct_declarator)



state 250

    specifier_qualifier_list  ->  type_qualifier specifier_qualifier_list .   (rule 127)

    $default	reduce using rule 127 (specifier_qualifier_list)



state 251

    labeled_statement  ->  IDENTIFIER ':' statement .   (rule 212)

    $default	reduce using rule 212 (labeled_statement)



state 252

    unary_expression  ->  SIZEOF '(' type_name . ')'   (rule 23)

    ')' 	shift, and go to state 315



state 253

    labeled_statement  ->  CASE constant_expression ':' . statement   (rule 213)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 57

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 316
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 254

    labeled_statement  ->  DEFAULT ':' statement .   (rule 214)

    $default	reduce using rule 214 (labeled_statement)



state 255

    selection_statement_first_half  ->  IF '(' @22 . expression @23 ')' @24 statement   (rule 228)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 317



state 256

    expression  ->  expression . ',' assignment_expression   (rule 78)
    selection_statement  ->  SWITCH '(' expression . ')' statement   (rule 231)

    ')' 	shift, and go to state 318
    ',' 	shift, and go to state 221



state 257

    expression  ->  expression . ',' assignment_expression   (rule 78)
    iteration_statement  ->  WHILE '(' expression . ')' statement   (rule 232)

    ')' 	shift, and go to state 319
    ',' 	shift, and go to state 221



state 258

    iteration_statement  ->  DO statement WHILE . '(' expression ')' ';'   (rule 233)

    '(' 	shift, and go to state 320



state 259

    iteration_statement  ->  FOR '(' expression_statement . expression_statement ')' statement   (rule 234)
    iteration_statement  ->  FOR '(' expression_statement . expression_statement expression ')' statement   (rule 235)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    expression_statement	go to state 321



state 260

    jump_statement  ->  GOTO IDENTIFIER ';' .   (rule 236)

    $default	reduce using rule 236 (jump_statement)



state 261

    jump_statement  ->  RETURN expression ';' .   (rule 240)

    $default	reduce using rule 240 (jump_statement)



state 262

    primary_expression  ->  '(' expression ')' .   (rule 4)

    $default	reduce using rule 4 (primary_expression)



state 263

    direct_abstract_declarator  ->  '(' . abstract_declarator @15 ')'   (rule 186)
    direct_abstract_declarator  ->  '(' . ')'   (rule 193)
    direct_abstract_declarator  ->  '(' . @18 parameter_type_list @19 ')'   (rule 196)

    '(' 	shift, and go to state 263
    ')' 	shift, and go to state 322
    '[' 	shift, and go to state 264
    '*' 	shift, and go to state 25

    ')' 	[reduce using rule 194 (@18)]
    $default	reduce using rule 194 (@18)

    pointer	go to state 265
    abstract_declarator	go to state 323
    direct_abstract_declarator	go to state 267
    @18 	go to state 324



state 264

    direct_abstract_declarator  ->  '[' . ']'   (rule 187)
    direct_abstract_declarator  ->  '[' . constant_expression ']'   (rule 188)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    ']' 	shift, and go to state 325
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 167
    constant_expression	go to state 326



state 265

    abstract_declarator  ->  pointer .   (rule 182)
    abstract_declarator  ->  pointer . direct_abstract_declarator   (rule 184)

    '(' 	shift, and go to state 263
    '[' 	shift, and go to state 264

    $default	reduce using rule 182 (abstract_declarator)

    direct_abstract_declarator	go to state 327



state 266

    type_name  ->  specifier_qualifier_list abstract_declarator .   (rule 181)

    $default	reduce using rule 181 (type_name)



state 267

    abstract_declarator  ->  direct_abstract_declarator .   (rule 183)
    direct_abstract_declarator  ->  direct_abstract_declarator . @16 '[' ']'   (rule 190)
    direct_abstract_declarator  ->  direct_abstract_declarator . @17 '[' constant_expression ']'   (rule 192)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' ')'   (rule 197)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' @20 parameter_type_list @21 ')'   (rule 200)

    '(' 	shift, and go to state 328

    $default	reduce using rule 183 (abstract_declarator)

    @16 	go to state 329
    @17 	go to state 330



state 268

    cast_expression  ->  '(' type_name ')' . cast_expression   (rule 31)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 331



state 269

    postfix_expression  ->  postfix_expression PTR_OP IDENTIFIER .   (rule 13)

    $default	reduce using rule 13 (postfix_expression)



state 270

    postfix_expression  ->  postfix_expression '(' ')' .   (rule 10)

    $default	reduce using rule 10 (postfix_expression)



state 271

    postfix_expression  ->  postfix_expression '(' argument_expression_list . ')'   (rule 11)
    argument_expression_list  ->  argument_expression_list . ',' assignment_expression   (rule 17)

    ')' 	shift, and go to state 332
    ',' 	shift, and go to state 333



state 272

    argument_expression_list  ->  assignment_expression .   (rule 16)

    $default	reduce using rule 16 (argument_expression_list)



state 273

    postfix_expression  ->  postfix_expression '.' IDENTIFIER .   (rule 12)

    $default	reduce using rule 12 (postfix_expression)



state 274

    postfix_expression  ->  postfix_expression @1 '[' . @2 expression @3 ']'   (rule 9)

    $default	reduce using rule 7 (@2)

    @2  	go to state 334



state 275

    assignment_expression  ->  unary_expression assignment_operator assignment_expression .   (rule 65)

    $default	reduce using rule 65 (assignment_expression)



state 276

    multiplicative_expression  ->  multiplicative_expression '*' cast_expression .   (rule 33)

    $default	reduce using rule 33 (multiplicative_expression)



state 277

    multiplicative_expression  ->  multiplicative_expression '/' cast_expression .   (rule 34)

    $default	reduce using rule 34 (multiplicative_expression)



state 278

    multiplicative_expression  ->  multiplicative_expression '%' cast_expression .   (rule 35)

    $default	reduce using rule 35 (multiplicative_expression)



state 279

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 33)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 34)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 35)
    additive_expression  ->  additive_expression '+' multiplicative_expression .   (rule 37)

    '*' 	shift, and go to state 202
    '/' 	shift, and go to state 203
    '%' 	shift, and go to state 204

    $default	reduce using rule 37 (additive_expression)



state 280

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 33)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 34)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 35)
    additive_expression  ->  additive_expression '-' multiplicative_expression .   (rule 38)

    '*' 	shift, and go to state 202
    '/' 	shift, and go to state 203
    '%' 	shift, and go to state 204

    $default	reduce using rule 38 (additive_expression)



state 281

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 37)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 38)
    shift_expression  ->  shift_expression LEFT_OP additive_expression .   (rule 40)

    '+' 	shift, and go to state 205
    '-' 	shift, and go to state 206

    $default	reduce using rule 40 (shift_expression)



state 282

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 37)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 38)
    shift_expression  ->  shift_expression RIGHT_OP additive_expression .   (rule 41)

    '+' 	shift, and go to state 205
    '-' 	shift, and go to state 206

    $default	reduce using rule 41 (shift_expression)



state 283

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 40)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 41)
    relational_expression  ->  relational_expression LE_OP shift_expression .   (rule 47)

    LEFT_OP	shift, and go to state 207
    RIGHT_OP	shift, and go to state 208

    $default	reduce using rule 47 (relational_expression)



state 284

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 40)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 41)
    relational_expression  ->  relational_expression GE_OP shift_expression .   (rule 48)

    LEFT_OP	shift, and go to state 207
    RIGHT_OP	shift, and go to state 208

    $default	reduce using rule 48 (relational_expression)



state 285

    relational_expression  ->  relational_expression @4 '<' . shift_expression   (rule 44)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 335



state 286

    relational_expression  ->  relational_expression @5 '>' . shift_expression   (rule 46)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 336



state 287

    relational_expression  ->  relational_expression . @4 '<' shift_expression   (rule 44)
    relational_expression  ->  relational_expression . @5 '>' shift_expression   (rule 46)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 47)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 48)
    equality_expression  ->  equality_expression EQ_OP relational_expression .   (rule 50)

    LE_OP	shift, and go to state 209
    GE_OP	shift, and go to state 210

    $default	reduce using rule 50 (equality_expression)

    @4  	go to state 211
    @5  	go to state 212



state 288

    relational_expression  ->  relational_expression . @4 '<' shift_expression   (rule 44)
    relational_expression  ->  relational_expression . @5 '>' shift_expression   (rule 46)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 47)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 48)
    equality_expression  ->  equality_expression NE_OP relational_expression .   (rule 51)

    LE_OP	shift, and go to state 209
    GE_OP	shift, and go to state 210

    $default	reduce using rule 51 (equality_expression)

    @4  	go to state 211
    @5  	go to state 212



state 289

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 50)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 51)
    and_expression  ->  and_expression '&' equality_expression .   (rule 53)

    EQ_OP	shift, and go to state 213
    NE_OP	shift, and go to state 214

    $default	reduce using rule 53 (and_expression)



state 290

    and_expression  ->  and_expression . '&' equality_expression   (rule 53)
    exclusive_or_expression  ->  exclusive_or_expression '^' and_expression .   (rule 55)

    '&' 	shift, and go to state 215

    $default	reduce using rule 55 (exclusive_or_expression)



state 291

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 55)
    inclusive_or_expression  ->  inclusive_or_expression '|' exclusive_or_expression .   (rule 57)

    '^' 	shift, and go to state 216

    $default	reduce using rule 57 (inclusive_or_expression)



state 292

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 57)
    logical_and_expression  ->  logical_and_expression AND_OP inclusive_or_expression .   (rule 59)

    '|' 	shift, and go to state 217

    $default	reduce using rule 59 (logical_and_expression)



state 293

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 59)
    logical_or_expression  ->  logical_or_expression OR_OP logical_and_expression .   (rule 61)

    AND_OP	shift, and go to state 218

    $default	reduce using rule 61 (logical_or_expression)



state 294

    conditional_expression  ->  logical_or_expression '?' expression . ':' conditional_expression   (rule 63)
    expression  ->  expression . ',' assignment_expression   (rule 78)

    ',' 	shift, and go to state 221
    ':' 	shift, and go to state 337



state 295

    expression  ->  expression ',' assignment_expression .   (rule 78)

    $default	reduce using rule 78 (expression)



state 296

    compound_statement  ->  '{' declaration_list statement_list '}' .   (rule 218)

    $default	reduce using rule 218 (compound_statement)



state 297

    selection_statement  ->  selection_statement_first_half ELSE statement .   (rule 230)

    $default	reduce using rule 230 (selection_statement)



state 298

    direct_declarator  ->  direct_declarator '[' direct_declarator_needinsert constant_expression ']' .   (rule 150)

    $default	reduce using rule 150 (direct_declarator)



state 299

    parameter_declaration  ->  declaration_specifiers .   (rule 173)
    declaration_specifiers_declarator  ->  declaration_specifiers . after_decl_spec   (rule 176)

    $default	reduce using rule 177 (after_decl_spec)

    after_decl_spec	go to state 338



state 300

    direct_declarator  ->  direct_declarator @10 '(' @11 parameter_type_list . @12 ')'   (rule 155)

    $default	reduce using rule 154 (@12)

    @12 	go to state 339



state 301

    parameter_type_list  ->  parameter_list .   (rule 167)
    parameter_type_list  ->  parameter_list . ',' ELLIPSIS   (rule 168)
    parameter_list  ->  parameter_list . ',' parameter_declaration   (rule 170)

    ',' 	shift, and go to state 340

    $default	reduce using rule 167 (parameter_type_list)



state 302

    parameter_list  ->  parameter_declaration .   (rule 169)

    $default	reduce using rule 169 (parameter_list)



state 303

    parameter_declaration  ->  declaration_specifiers_declarator . declarator end_declarator   (rule 171)
    parameter_declaration  ->  declaration_specifiers_declarator . abstract_declarator end_declarator   (rule 172)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 341
    '[' 	shift, and go to state 264
    '*' 	shift, and go to state 25

    declarator	go to state 342
    direct_declarator	go to state 36
    pointer	go to state 343
    abstract_declarator	go to state 344
    direct_abstract_declarator	go to state 267



state 304

    direct_declarator  ->  direct_declarator @13 '(' identifier_list ')' .   (rule 157)

    $default	reduce using rule 157 (direct_declarator)



state 305

    identifier_list  ->  identifier_list ',' . IDENTIFIER   (rule 179)

    IDENTIFIER	shift, and go to state 345



state 306

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list enumerator_list_end '}' .   (rule 135)

    $default	reduce using rule 135 (enum_specifier)



state 307

    initializer  ->  '{' initializer_list ',' . '}'   (rule 203)
    initializer_list  ->  initializer_list ',' . initializer   (rule 205)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    '{' 	shift, and go to state 149
    '}' 	shift, and go to state 346

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 150
    initializer	go to state 347



state 308

    initializer  ->  '{' initializer_list '}' .   (rule 202)

    $default	reduce using rule 202 (initializer)



state 309

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' @6 struct_declaration_list @7 . '}'   (rule 115)

    '}' 	shift, and go to state 348



state 310

    struct_or_union_specifier  ->  struct_or_union '{' @8 struct_declaration_list @9 '}' .   (rule 118)

    $default	reduce using rule 118 (struct_or_union_specifier)



state 311

    struct_declarator  ->  ':' constant_expression .   (rule 132)

    $default	reduce using rule 132 (struct_declarator)



state 312

    struct_declarator_list  ->  struct_declarator_list ',' . struct_declarator   (rule 130)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25
    ':' 	shift, and go to state 246

    struct_declarator	go to state 349
    declarator	go to state 249
    direct_declarator	go to state 36
    pointer	go to state 37



state 313

    struct_declaration  ->  specifier_qualifier_list struct_declarator_list ';' .   (rule 124)

    $default	reduce using rule 124 (struct_declaration)



state 314

    struct_declarator  ->  declarator ':' . constant_expression   (rule 133)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 167
    constant_expression	go to state 350



state 315

    unary_expression  ->  SIZEOF '(' type_name ')' .   (rule 23)

    $default	reduce using rule 23 (unary_expression)



state 316

    labeled_statement  ->  CASE constant_expression ':' statement .   (rule 213)

    $default	reduce using rule 213 (labeled_statement)



state 317

    expression  ->  expression . ',' assignment_expression   (rule 78)
    selection_statement_first_half  ->  IF '(' @22 expression . @23 ')' @24 statement   (rule 228)

    ',' 	shift, and go to state 221

    $default	reduce using rule 226 (@23)

    @23 	go to state 351



state 318

    selection_statement  ->  SWITCH '(' expression ')' . statement   (rule 231)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 57

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 352
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 319

    iteration_statement  ->  WHILE '(' expression ')' . statement   (rule 232)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 57

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 353
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 320

    iteration_statement  ->  DO statement WHILE '(' . expression ')' ';'   (rule 233)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 354



state 321

    iteration_statement  ->  FOR '(' expression_statement expression_statement . ')' statement   (rule 234)
    iteration_statement  ->  FOR '(' expression_statement expression_statement . expression ')' statement   (rule 235)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    ')' 	shift, and go to state 355
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 356



state 322

    direct_abstract_declarator  ->  '(' ')' .   (rule 193)

    $default	reduce using rule 193 (direct_abstract_declarator)



state 323

    direct_abstract_declarator  ->  '(' abstract_declarator . @15 ')'   (rule 186)

    $default	reduce using rule 185 (@15)

    @15 	go to state 357



state 324

    direct_abstract_declarator  ->  '(' @18 . parameter_type_list @19 ')'   (rule 196)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    $default	reduce using rule 174 (parameter_declaration)

    declaration_specifiers	go to state 299
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    parameter_type_list	go to state 358
    parameter_list	go to state 301
    parameter_declaration	go to state 302
    declaration_specifiers_declarator	go to state 303



state 325

    direct_abstract_declarator  ->  '[' ']' .   (rule 187)

    $default	reduce using rule 187 (direct_abstract_declarator)



state 326

    direct_abstract_declarator  ->  '[' constant_expression . ']'   (rule 188)

    ']' 	shift, and go to state 359



state 327

    abstract_declarator  ->  pointer direct_abstract_declarator .   (rule 184)
    direct_abstract_declarator  ->  direct_abstract_declarator . @16 '[' ']'   (rule 190)
    direct_abstract_declarator  ->  direct_abstract_declarator . @17 '[' constant_expression ']'   (rule 192)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' ')'   (rule 197)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' @20 parameter_type_list @21 ')'   (rule 200)

    '(' 	shift, and go to state 328

    $default	reduce using rule 184 (abstract_declarator)

    @16 	go to state 329
    @17 	go to state 330



state 328

    direct_abstract_declarator  ->  direct_abstract_declarator '(' . ')'   (rule 197)
    direct_abstract_declarator  ->  direct_abstract_declarator '(' . @20 parameter_type_list @21 ')'   (rule 200)

    ')' 	shift, and go to state 360

    ')' 	[reduce using rule 198 (@20)]
    $default	reduce using rule 198 (@20)

    @20 	go to state 361



state 329

    direct_abstract_declarator  ->  direct_abstract_declarator @16 . '[' ']'   (rule 190)

    '[' 	shift, and go to state 362



state 330

    direct_abstract_declarator  ->  direct_abstract_declarator @17 . '[' constant_expression ']'   (rule 192)

    '[' 	shift, and go to state 363



state 331

    cast_expression  ->  '(' type_name ')' cast_expression .   (rule 31)

    $default	reduce using rule 31 (cast_expression)



state 332

    postfix_expression  ->  postfix_expression '(' argument_expression_list ')' .   (rule 11)

    $default	reduce using rule 11 (postfix_expression)



state 333

    argument_expression_list  ->  argument_expression_list ',' . assignment_expression   (rule 17)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 364



state 334

    postfix_expression  ->  postfix_expression @1 '[' @2 . expression @3 ']'   (rule 9)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 365



state 335

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 40)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 41)
    relational_expression  ->  relational_expression @4 '<' shift_expression .   (rule 44)

    LEFT_OP	shift, and go to state 207
    RIGHT_OP	shift, and go to state 208

    $default	reduce using rule 44 (relational_expression)



state 336

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 40)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 41)
    relational_expression  ->  relational_expression @5 '>' shift_expression .   (rule 46)

    LEFT_OP	shift, and go to state 207
    RIGHT_OP	shift, and go to state 208

    $default	reduce using rule 46 (relational_expression)



state 337

    conditional_expression  ->  logical_or_expression '?' expression ':' . conditional_expression   (rule 63)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 366



state 338

    declaration_specifiers_declarator  ->  declaration_specifiers after_decl_spec .   (rule 176)

    $default	reduce using rule 176 (declaration_specifiers_declarator)



state 339

    direct_declarator  ->  direct_declarator @10 '(' @11 parameter_type_list @12 . ')'   (rule 155)

    ')' 	shift, and go to state 367



state 340

    parameter_type_list  ->  parameter_list ',' . ELLIPSIS   (rule 168)
    parameter_list  ->  parameter_list ',' . parameter_declaration   (rule 170)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ELLIPSIS	shift, and go to state 368
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    $default	reduce using rule 174 (parameter_declaration)

    declaration_specifiers	go to state 299
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    parameter_declaration	go to state 369
    declaration_specifiers_declarator	go to state 303



state 341

    direct_declarator  ->  '(' . declarator ')'   (rule 149)
    direct_abstract_declarator  ->  '(' . abstract_declarator @15 ')'   (rule 186)
    direct_abstract_declarator  ->  '(' . ')'   (rule 193)
    direct_abstract_declarator  ->  '(' . @18 parameter_type_list @19 ')'   (rule 196)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 341
    ')' 	shift, and go to state 322
    '[' 	shift, and go to state 264
    '*' 	shift, and go to state 25

    ')' 	[reduce using rule 194 (@18)]
    $default	reduce using rule 194 (@18)

    declarator	go to state 43
    direct_declarator	go to state 36
    pointer	go to state 343
    abstract_declarator	go to state 323
    direct_abstract_declarator	go to state 267
    @18 	go to state 324



state 342

    parameter_declaration  ->  declaration_specifiers_declarator declarator . end_declarator   (rule 171)

    $default	reduce using rule 175 (end_declarator)

    end_declarator	go to state 370



state 343

    declarator  ->  pointer . direct_declarator   (rule 145)
    abstract_declarator  ->  pointer .   (rule 182)
    abstract_declarator  ->  pointer . direct_abstract_declarator   (rule 184)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 341
    '[' 	shift, and go to state 264

    $default	reduce using rule 182 (abstract_declarator)

    direct_declarator	go to state 64
    direct_abstract_declarator	go to state 327



state 344

    parameter_declaration  ->  declaration_specifiers_declarator abstract_declarator . end_declarator   (rule 172)

    $default	reduce using rule 175 (end_declarator)

    end_declarator	go to state 371



state 345

    identifier_list  ->  identifier_list ',' IDENTIFIER .   (rule 179)

    $default	reduce using rule 179 (identifier_list)



state 346

    initializer  ->  '{' initializer_list ',' '}' .   (rule 203)

    $default	reduce using rule 203 (initializer)



state 347

    initializer_list  ->  initializer_list ',' initializer .   (rule 205)

    $default	reduce using rule 205 (initializer_list)



state 348

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' @6 struct_declaration_list @7 '}' .   (rule 115)

    $default	reduce using rule 115 (struct_or_union_specifier)



state 349

    struct_declarator_list  ->  struct_declarator_list ',' struct_declarator .   (rule 130)

    $default	reduce using rule 130 (struct_declarator_list)



state 350

    struct_declarator  ->  declarator ':' constant_expression .   (rule 133)

    $default	reduce using rule 133 (struct_declarator)



state 351

    selection_statement_first_half  ->  IF '(' @22 expression @23 . ')' @24 statement   (rule 228)

    ')' 	shift, and go to state 372



state 352

    selection_statement  ->  SWITCH '(' expression ')' statement .   (rule 231)

    $default	reduce using rule 231 (selection_statement)



state 353

    iteration_statement  ->  WHILE '(' expression ')' statement .   (rule 232)

    $default	reduce using rule 232 (iteration_statement)



state 354

    expression  ->  expression . ',' assignment_expression   (rule 78)
    iteration_statement  ->  DO statement WHILE '(' expression . ')' ';'   (rule 233)

    ')' 	shift, and go to state 373
    ',' 	shift, and go to state 221



state 355

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' . statement   (rule 234)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 57

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 374
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 356

    expression  ->  expression . ',' assignment_expression   (rule 78)
    iteration_statement  ->  FOR '(' expression_statement expression_statement expression . ')' statement   (rule 235)

    ')' 	shift, and go to state 375
    ',' 	shift, and go to state 221



state 357

    direct_abstract_declarator  ->  '(' abstract_declarator @15 . ')'   (rule 186)

    ')' 	shift, and go to state 376



state 358

    direct_abstract_declarator  ->  '(' @18 parameter_type_list . @19 ')'   (rule 196)

    $default	reduce using rule 195 (@19)

    @19 	go to state 377



state 359

    direct_abstract_declarator  ->  '[' constant_expression ']' .   (rule 188)

    $default	reduce using rule 188 (direct_abstract_declarator)



state 360

    direct_abstract_declarator  ->  direct_abstract_declarator '(' ')' .   (rule 197)

    $default	reduce using rule 197 (direct_abstract_declarator)



state 361

    direct_abstract_declarator  ->  direct_abstract_declarator '(' @20 . parameter_type_list @21 ')'   (rule 200)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    $default	reduce using rule 174 (parameter_declaration)

    declaration_specifiers	go to state 299
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    parameter_type_list	go to state 378
    parameter_list	go to state 301
    parameter_declaration	go to state 302
    declaration_specifiers_declarator	go to state 303



state 362

    direct_abstract_declarator  ->  direct_abstract_declarator @16 '[' . ']'   (rule 190)

    ']' 	shift, and go to state 379



state 363

    direct_abstract_declarator  ->  direct_abstract_declarator @17 '[' . constant_expression ']'   (rule 192)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 166
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 167
    constant_expression	go to state 380



state 364

    argument_expression_list  ->  argument_expression_list ',' assignment_expression .   (rule 17)

    $default	reduce using rule 17 (argument_expression_list)



state 365

    postfix_expression  ->  postfix_expression @1 '[' @2 expression . @3 ']'   (rule 9)
    expression  ->  expression . ',' assignment_expression   (rule 78)

    ',' 	shift, and go to state 221

    $default	reduce using rule 8 (@3)

    @3  	go to state 381



state 366

    conditional_expression  ->  logical_or_expression '?' expression ':' conditional_expression .   (rule 63)

    $default	reduce using rule 63 (conditional_expression)



state 367

    direct_declarator  ->  direct_declarator @10 '(' @11 parameter_type_list @12 ')' .   (rule 155)

    $default	reduce using rule 155 (direct_declarator)



state 368

    parameter_type_list  ->  parameter_list ',' ELLIPSIS .   (rule 168)

    $default	reduce using rule 168 (parameter_type_list)



state 369

    parameter_list  ->  parameter_list ',' parameter_declaration .   (rule 170)

    $default	reduce using rule 170 (parameter_list)



state 370

    parameter_declaration  ->  declaration_specifiers_declarator declarator end_declarator .   (rule 171)

    $default	reduce using rule 171 (parameter_declaration)



state 371

    parameter_declaration  ->  declaration_specifiers_declarator abstract_declarator end_declarator .   (rule 172)

    $default	reduce using rule 172 (parameter_declaration)



state 372

    selection_statement_first_half  ->  IF '(' @22 expression @23 ')' . @24 statement   (rule 228)

    $default	reduce using rule 227 (@24)

    @24 	go to state 382



state 373

    iteration_statement  ->  DO statement WHILE '(' expression ')' . ';'   (rule 233)

    ';' 	shift, and go to state 383



state 374

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' statement .   (rule 234)

    $default	reduce using rule 234 (iteration_statement)



state 375

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' . statement   (rule 235)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 57

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 384
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 376

    direct_abstract_declarator  ->  '(' abstract_declarator @15 ')' .   (rule 186)

    $default	reduce using rule 186 (direct_abstract_declarator)



state 377

    direct_abstract_declarator  ->  '(' @18 parameter_type_list @19 . ')'   (rule 196)

    ')' 	shift, and go to state 385



state 378

    direct_abstract_declarator  ->  direct_abstract_declarator '(' @20 parameter_type_list . @21 ')'   (rule 200)

    $default	reduce using rule 199 (@21)

    @21 	go to state 386



state 379

    direct_abstract_declarator  ->  direct_abstract_declarator @16 '[' ']' .   (rule 190)

    $default	reduce using rule 190 (direct_abstract_declarator)



state 380

    direct_abstract_declarator  ->  direct_abstract_declarator @17 '[' constant_expression . ']'   (rule 192)

    ']' 	shift, and go to state 387



state 381

    postfix_expression  ->  postfix_expression @1 '[' @2 expression @3 . ']'   (rule 9)

    ']' 	shift, and go to state 388



state 382

    selection_statement_first_half  ->  IF '(' @22 expression @23 ')' @24 . statement   (rule 228)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '{' 	shift, and go to state 57

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 389
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 383

    iteration_statement  ->  DO statement WHILE '(' expression ')' ';' .   (rule 233)

    $default	reduce using rule 233 (iteration_statement)



state 384

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' statement .   (rule 235)

    $default	reduce using rule 235 (iteration_statement)



state 385

    direct_abstract_declarator  ->  '(' @18 parameter_type_list @19 ')' .   (rule 196)

    $default	reduce using rule 196 (direct_abstract_declarator)



state 386

    direct_abstract_declarator  ->  direct_abstract_declarator '(' @20 parameter_type_list @21 . ')'   (rule 200)

    ')' 	shift, and go to state 390



state 387

    direct_abstract_declarator  ->  direct_abstract_declarator @17 '[' constant_expression ']' .   (rule 192)

    $default	reduce using rule 192 (direct_abstract_declarator)



state 388

    postfix_expression  ->  postfix_expression @1 '[' @2 expression @3 ']' .   (rule 9)

    $default	reduce using rule 9 (postfix_expression)



state 389

    selection_statement_first_half  ->  IF '(' @22 expression @23 ')' @24 statement .   (rule 228)

    $default	reduce using rule 228 (selection_statement_first_half)



state 390

    direct_abstract_declarator  ->  direct_abstract_declarator '(' @20 parameter_type_list @21 ')' .   (rule 200)

    $default	reduce using rule 200 (direct_abstract_declarator)



state 391

    $   	go to state 392



state 392

    $default	accept
