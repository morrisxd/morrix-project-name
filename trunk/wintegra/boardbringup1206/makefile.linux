# /***************************************************************************
# (C) Copyright Wintegra 2001-2002.  All rights reserved.
# WINTEGRA CONFIDENTIAL PROPRIETARY
# Contains Confidential Proprietary information of Wintegra.
# Reverse engineering is prohibited.
# The copyright notice does not imply publication.
# ***************************************************************************/


# README
# look for "user modify" in the following code for areas to customize for your environment

ifneq "$(example)" ""
  EXAMPLE=$(example)
endif

# Where to find the program sources
ifeq "$(EXAMPLE)" ""
 $(error EXAMPLE must be defined.)
endif
SRC_DIR = $(EXAMPLE)
####################################
#         user modify
####################################
#user modify
WDDS_DIR = /home/usr/wdds_4_1
 
# Where to find wddi.  If building for vxworks on cygwin, make sure that
# WDDI_DIR starts with "C:/" and NOT "/cygdrive/c/ otherwise the compiles fail

ifeq "$(WDDS_DIR)" ""
	WDDS_DIR = /wdds
endif

# If no target supplied,  mips_linux is the default.
ifeq "$(WPI_TARGET)" ""
	WPI_TARGET = mips_linux
endif

# If no board supplied,  wds is the default.
ifeq "$(WPI_BOARD)" ""
	WPI_BOARD = wds
endif

# If no device supplied, winpath3 is the default
ifeq "$(WPI_HW_DEVICE)" ""
	WPI_HW_DEVICE = winpath3
endif

# C flags needed for examples
ifeq "$(WPI_HW_DEVICE)" "winpath2"
        WP_HW_WINPATH_DEV=WP_HW_WINPATH2
else
        WP_HW_WINPATH_DEV=WP_HW_WINPATH3
endif

ifeq "$(WPI_BOARD)" "wds_sl"
BOARD=-DWP_BOARD_WDS3_SL
else
BOARD=
endif

ifeq "$(TMX)" ""
        TMX=tmx336
endif

EXAMPLE_CFLAGS = -D$(WP_HW_WINPATH_DEV) $(BOARD) -Wno-error

#sometimes cygwin doesn't export OSTYPE for some reason
ifeq "$(OSTYPE)" ""
OSTYPE = cygwin
endif

# What the host is.  Currently supported hosts are cygwin and solaris and linux
# WPI_HOST should be either "solaris", "cygwin", or "linux"
WPI_HOST_0 = $(OSTYPE:solaris%=solaris)
WPI_HOST = $(WPI_HOST_0:linux%=linux)

# Where to build the example objects and executable
OBJ_DIR = $(WDDS_DIR)/objects/$(WPI_HOST)/$(WPI_TARGET)_$(WPI_HW_DEVICE)/obj
BIN_DIR = $(WDDS_DIR)/objects/$(WPI_HOST)/$(WPI_TARGET)_$(WPI_HW_DEVICE)/bin

# Where the target-specific directory is
WPI_T_DIR = $(WDDS_DIR)/platform/$(WPI_TARGET)_$(WPI_HW_DEVICE)

# Where to find the make-defines and archives
WPI_HT_DIR = $(WDDS_DIR)/objects/$(WPI_HOST)/$(WPI_TARGET)_$(WPI_HW_DEVICE)

# Where to find the start file
WPI_START_FILE = $(WDDS_DIR)/objects/$(WPI_HOST)/$(WPI_TARGET)_$(WPI_HW_DEVICE)/lib

# Get the host-target specific defines
include $(WPI_T_DIR)/$(WPI_HOST)_make.inc

# Where to find wpi_wddi.a wpi_veneer.a
ARCHIVE_DIR = $(WPI_HT_DIR)/lib

# Where to find wpx_phy.a and wpx_board.a
PHY_BOARD = $(WPI_HT_DIR)/$(WPI_BOARD)/lib

# Where to find wpx_ufe.a
UFE_BOARD = $(WPI_HT_DIR)/$(WPI_BOARD)/ufe3/lib

ifeq "$(UFE)" "yes"
UFE_LIBS = $(UFE_BOARD)/wpx_phy_pmc.a $(UFE_BOARD)/wpx_ufe.a 
else
UFE_LIBS = 
endif

# Where to find the board lib directory 
#WDDI_BOARD_LIB_DIR = $(WDDS_DIR)/objects/$(OSTYPE)/$(WPI_TARGET)/$(WPI_BOARD)/lib

WDDI_HW_LIB = $(WDDS_DIR)/objects/$(WPI_HOST)/$(WPI_TARGET)_$(WPI_HW_DEVICE)/lib/wpi_hw_device.a

# The includes
API_DIR = $(WDDS_DIR)/wddi/sources/api
API_2DIR = $(WDDS_DIR)/wddi/sources
VENEER_TARGET_DIR = $(WDDS_DIR)/platform/$(WPI_TARGET)_$(WPI_HW_DEVICE)/include
VENEER_DIR = $(WDDS_DIR)/wddi/sources/veneer
UTILITY_DIR = $(WDDS_DIR)/wddi/board/$(WPI_BOARD)_$(WPI_HW_DEVICE)
PHY_DIR = $(WDDS_DIR)/wddi/phy
BOARD_DIR = $(WDDS_DIR)/wddi/board
WPI_PLATFORM_DIR=$(WDDS_DIR)/platform
ifeq "$(OSTYPE)" "linux"
COMMON = /shared/code_examples/common
else
COMMON = /cygdrive/e/code_examples/common
endif

ifeq "$(UFE)" "yes"
WPX_INCLUDES = -I$(PHY_DIR)/wpx_ufe/api -I$(PHY_DIR)/wpx_ufe/wpx_pmc/$(TMX) -I$(PHY_DIR)/wpx_ufe/wpx_pmc/$(TMX)/inc -I$(PHY_DIR)/wpx_ufe/fpga/ufe3 -I$(PHY_DIR)/wpx_ufe/sources/include
else
WPX_INCLUDES=
endif

INCLUDES =  -I$(API_DIR) -I. -I$(BOARD_DIR) -I$(VENEER_TARGET_DIR) -I$(VENEER_DIR) -I$(UTILITY_DIR) -I$(WPI_PLATFORM_DIR)/include -I$(PHY_DIR) $(WPX_INCLUDES) $(TARGET_INCLUDE) -I$(WDDS_DIR)/include $(OS_INC_DIRS) -I$(WDDS_DIR)/wddi/sources/ -I$(COMMON) -I$(WDDS_DIR)/wddi/target/$(WPI_TARGET)_$(WPI_HW_DEVICE)/include -I$(WDDS_DIR)/wddi/sources/winutil/include -I$(WDDS_DIR)/wddi/sources/winutil/include/$(WPI_HW_DEVICE) -I$(WDDS_DIR)/wddi/sources/winutil/api/include/$(WPI_HW_DEVICE) -I$(WDDS_DIR)/wddi/sources/winutil/api/include 

include $(SRC_DIR)/make.list 

# If no source file names in make.list, try the .c extension on the executable name
ifeq "$(EXAMPLE_SRC)" ""
EXAMPLE_SRC = $(EXAMPLE:=.c)
endif

# If no DPS image in make.list, try the .c extension on the executable name
# user modify
ifeq "$(WDDI_DPS_IMAGE)" ""
ifeq "$(WPI_HW_DEVICE)" "winpath3"
WDDI_DPS_IMAGE = wpi_dps_image_backhaul.o
endif
ifeq "$(WPI_HW_DEVICE)" "winpath2"
WDDI_DPS_IMAGE= wpi_dps_image_msa.o
endif
endif

# The objects and executable to be built
EXAMPLE_OBJ = $(patsubst %.c, $(OBJ_DIR)/%.o, $(EXAMPLE_SRC))
EXAMPLE_EXE = $(OBJ_DIR)/$(EXAMPLE)$(EXE)
EXAMPLE_SREC = $(OBJ_DIR)/$(EXAMPLE).srec

# Where to find the DPS itmage
IMAGE_OBJ = $(WDDS_DIR)/objects/$(WPI_HOST)/$(WPI_TARGET)_$(WPI_HW_DEVICE)/lib/$(WDDI_DPS_IMAGE)

ifneq "$(WDDI_DPS_IMAGE2)" ""
IMAGE_OBJ2 = $(WDDS_DIR)/objects/$(WPI_HOST)/$(WPI_TARGET)_$(WPI_HW_DEVICE)/lib/$(WDDI_DPS_IMAGE2)
endif

# Where to find the WINUTIL image
WINUTIL_OBJ = $(WDDS_DIR)/objects/$(WPI_HOST)/$(WPI_TARGET)_$(WPI_HW_DEVICE)/lib/winutil.a

an_example: clean $(EXAMPLE_EXE)
	@echo Made $(EXAMPLE_EXE) for target $(WPI_TARGET)_$(WPI_HW_DEVICE) 

clean:
	rm -rf $(EXAMPLE_OBJ) $(EXAMPLE_EXE) $(EXAMPLE_SREC)

$(EXAMPLE_EXE): $(EXAMPLE_OBJ)
# If the linker needs a start file, copy it to the local directory
ifneq "$(START_FILE)" ""
	-cp $(WPI_START_FILE)/$(START_FILE) $(START_FILE)
endif
# Do the link
	$(WPI_SET_PATH) $(CC) $(LDFLAGS) -o $(EXAMPLE_EXE) $(LINK_FILE) $(EXAMPLE_OBJ) $(IMAGE_OBJ) $(IMAGE_OBJ2) $(UFE_LIBS) $(ARCHIVE_DIR)/wpi_wddi.a $(WDDI_HW_LIB) $(PHY_BOARD)/wpx_phy.a $(PHY_BOARD)/wpx_board.a $(WINUTIL_OBJ) $(ARCHIVE_DIR)/platform.a -pthread $(OTHER_LIB)
# If the target needs S-records, make them.  tr removes cr's.
ifeq "$(MAKE_SREC)" ""
	$(WPI_SET_PATH) $(OBJCOPY) -O srec $(EXAMPLE_EXE) $(EXAMPLE_SREC).tmp
	tr -d '\015' < $(EXAMPLE_SREC).tmp > $(EXAMPLE_SREC)
########################################
#   USER MODIFY -- where to put the file
#   note that .exe files are loaded via the eld command on WinMon
########################################
# user modify
	cp $(EXAMPLE_SREC) /bin/test.srec
endif

# user modify
	cp $(EXAMPLE_EXE) /tftpboot/test

# Clean up after everything that might have happened
	rm -rf $(EXAMPLE_OBJ) $(EXAMPLE_SREC).tmp $(START_FILE)

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	$(WPI_SET_PATH) $(CC) $(CFLAGS) $(EXAMPLE_CFLAGS) $(INCLUDES) -o $(OBJ_DIR)/$*.o $(SRC_DIR)/$*.c
