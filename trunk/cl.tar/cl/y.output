Useless nonterminals:

   pre_direct_declarator


Useless rules:

#148   pre_direct_declarator :	;


State 36 contains 1 reduce/reduce conflict.
State 64 contains 1 reduce/reduce conflict.
State 132 contains 1 shift/reduce conflict.
State 257 contains 1 shift/reduce conflict.
State 261 contains 1 reduce/reduce conflict.
State 323 contains 1 reduce/reduce conflict.
State 324 contains 1 shift/reduce conflict.
State 337 contains 1 shift/reduce conflict.

Grammar
rule 1    primary_expression -> IDENTIFIER
rule 2    primary_expression -> CONSTANT
rule 3    primary_expression -> STRING_LITERAL
rule 4    primary_expression -> '(' expression ')'
rule 5    postfix_expression -> primary_expression
rule 6    @1 ->		/* empty */
rule 7    @2 ->		/* empty */
rule 8    @3 ->		/* empty */
rule 9    postfix_expression -> postfix_expression @1 '[' @2 expression @3 ']'
rule 10   postfix_expression -> postfix_expression '(' ')'
rule 11   postfix_expression -> postfix_expression '(' argument_expression_list ')'
rule 12   postfix_expression -> postfix_expression '.' IDENTIFIER
rule 13   postfix_expression -> postfix_expression PTR_OP IDENTIFIER
rule 14   postfix_expression -> postfix_expression INC_OP
rule 15   postfix_expression -> postfix_expression DEC_OP
rule 16   argument_expression_list -> assignment_expression
rule 17   argument_expression_list -> argument_expression_list ',' assignment_expression
rule 18   unary_expression -> postfix_expression
rule 19   unary_expression -> INC_OP unary_expression
rule 20   unary_expression -> DEC_OP unary_expression
rule 21   unary_expression -> unary_operator cast_expression
rule 22   unary_expression -> SIZEOF unary_expression
rule 23   unary_expression -> SIZEOF '(' type_name ')'
rule 24   unary_operator -> '&'
rule 25   unary_operator -> '*'
rule 26   unary_operator -> '+'
rule 27   unary_operator -> '-'
rule 28   unary_operator -> '~'
rule 29   unary_operator -> '!'
rule 30   cast_expression -> unary_expression
rule 31   cast_expression -> '(' type_name ')' cast_expression
rule 32   multiplicative_expression -> cast_expression
rule 33   multiplicative_expression -> multiplicative_expression '*' cast_expression
rule 34   multiplicative_expression -> multiplicative_expression '/' cast_expression
rule 35   multiplicative_expression -> multiplicative_expression '%' cast_expression
rule 36   additive_expression -> multiplicative_expression
rule 37   additive_expression -> additive_expression '+' multiplicative_expression
rule 38   additive_expression -> additive_expression '-' multiplicative_expression
rule 39   shift_expression -> additive_expression
rule 40   shift_expression -> shift_expression LEFT_OP additive_expression
rule 41   shift_expression -> shift_expression RIGHT_OP additive_expression
rule 42   relational_expression -> shift_expression
rule 43   @4 ->		/* empty */
rule 44   relational_expression -> relational_expression @4 '<' shift_expression
rule 45   @5 ->		/* empty */
rule 46   relational_expression -> relational_expression @5 '>' shift_expression
rule 47   relational_expression -> relational_expression LE_OP shift_expression
rule 48   relational_expression -> relational_expression GE_OP shift_expression
rule 49   equality_expression -> relational_expression
rule 50   equality_expression -> equality_expression EQ_OP relational_expression
rule 51   equality_expression -> equality_expression NE_OP relational_expression
rule 52   and_expression -> equality_expression
rule 53   and_expression -> and_expression '&' equality_expression
rule 54   exclusive_or_expression -> and_expression
rule 55   exclusive_or_expression -> exclusive_or_expression '^' and_expression
rule 56   inclusive_or_expression -> exclusive_or_expression
rule 57   inclusive_or_expression -> inclusive_or_expression '|' exclusive_or_expression
rule 58   logical_and_expression -> inclusive_or_expression
rule 59   logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
rule 60   logical_or_expression -> logical_and_expression
rule 61   logical_or_expression -> logical_or_expression OR_OP logical_and_expression
rule 62   conditional_expression -> logical_or_expression
rule 63   conditional_expression -> logical_or_expression '?' expression ':' conditional_expression
rule 64   assignment_expression -> conditional_expression
rule 65   assignment_expression -> unary_expression assignment_operator assignment_expression
rule 66   assignment_operator -> '='
rule 67   assignment_operator -> MUL_ASSIGN
rule 68   assignment_operator -> DIV_ASSIGN
rule 69   assignment_operator -> MOD_ASSIGN
rule 70   assignment_operator -> ADD_ASSIGN
rule 71   assignment_operator -> SUB_ASSIGN
rule 72   assignment_operator -> LEFT_ASSIGN
rule 73   assignment_operator -> RIGHT_ASSIGN
rule 74   assignment_operator -> AND_ASSIGN
rule 75   assignment_operator -> XOR_ASSIGN
rule 76   assignment_operator -> OR_ASSIGN
rule 77   expression -> assignment_expression
rule 78   expression -> expression ',' assignment_expression
rule 79   constant_expression -> conditional_expression
rule 80   declaration -> declaration_specifiers ';'
rule 81   declaration -> declaration_specifiers init_declarator_list ';'
rule 82   declaration_specifiers -> storage_class_specifier
rule 83   declaration_specifiers -> storage_class_specifier declaration_specifiers
rule 84   declaration_specifiers -> type_specifier
rule 85   declaration_specifiers -> type_specifier declaration_specifiers
rule 86   declaration_specifiers -> type_qualifier
rule 87   declaration_specifiers -> type_qualifier declaration_specifiers
rule 88   declaration_specifiers -> function_specifier
rule 89   declaration_specifiers -> function_specifier declaration_specifiers
rule 90   function_specifier -> INLINE
rule 91   function_specifier -> INLINE2
rule 92   init_declarator_list -> init_declarator
rule 93   init_declarator_list -> init_declarator_list ',' init_declarator
rule 94   init_declarator -> declarator
rule 95   init_declarator -> declarator '=' initializer
rule 96   storage_class_specifier -> TYPEDEF
rule 97   storage_class_specifier -> EXTERN
rule 98   storage_class_specifier -> STATIC
rule 99   storage_class_specifier -> AUTO
rule 100  storage_class_specifier -> REGISTER
rule 101  type_specifier -> VOID
rule 102  type_specifier -> CHAR
rule 103  type_specifier -> SHORT
rule 104  type_specifier -> INT
rule 105  type_specifier -> LONG
rule 106  type_specifier -> FLOAT
rule 107  type_specifier -> DOUBLE
rule 108  type_specifier -> SIGNED
rule 109  type_specifier -> UNSIGNED
rule 110  type_specifier -> struct_or_union_specifier
rule 111  type_specifier -> enum_specifier
rule 112  type_specifier -> TYPE_NAME
rule 113  @6 ->		/* empty */
rule 114  @7 ->		/* empty */
rule 115  struct_or_union_specifier -> struct_or_union IDENTIFIER '{' @6 struct_declaration_list @7 '}'
rule 116  @8 ->		/* empty */
rule 117  @9 ->		/* empty */
rule 118  @10 ->		/* empty */
rule 119  struct_or_union_specifier -> struct_or_union @8 '{' @9 struct_declaration_list @10 '}'
rule 120  struct_or_union_specifier -> struct_or_union IDENTIFIER
rule 121  struct_or_union -> STRUCT
rule 122  struct_or_union -> UNION
rule 123  struct_declaration_list -> struct_declaration
rule 124  struct_declaration_list -> struct_declaration_list struct_declaration
rule 125  struct_declaration -> specifier_qualifier_list struct_declarator_list ';'
rule 126  specifier_qualifier_list -> type_specifier specifier_qualifier_list
rule 127  specifier_qualifier_list -> type_specifier
rule 128  specifier_qualifier_list -> type_qualifier specifier_qualifier_list
rule 129  specifier_qualifier_list -> type_qualifier
rule 130  struct_declarator_list -> struct_declarator
rule 131  struct_declarator_list -> struct_declarator_list ',' struct_declarator
rule 132  struct_declarator -> declarator
rule 133  struct_declarator -> ':' constant_expression
rule 134  struct_declarator -> declarator ':' constant_expression
rule 135  enum_specifier -> ENUM '{' enumerator_list enumerator_list_end '}'
rule 136  enum_specifier -> ENUM IDENTIFIER '{' enumerator_list enumerator_list_end '}'
rule 137  enum_specifier -> ENUM IDENTIFIER
rule 138  enumerator_list_end ->		/* empty */
rule 139  enumerator_list_end -> ','
rule 140  enumerator_list -> enumerator
rule 141  enumerator_list -> enumerator_list ',' enumerator
rule 142  enumerator -> IDENTIFIER
rule 143  enumerator -> IDENTIFIER '=' constant_expression
rule 144  type_qualifier -> CONST
rule 145  type_qualifier -> VOLATILE
rule 146  declarator -> pointer direct_declarator
rule 147  declarator -> direct_declarator
rule 149  direct_declarator -> IDENTIFIER
rule 150  direct_declarator -> '(' declarator ')'
rule 151  direct_declarator -> direct_declarator '[' direct_declarator_needinsert constant_expression ']'
rule 152  direct_declarator -> direct_declarator '[' ']'
rule 153  @11 ->		/* empty */
rule 154  @12 ->		/* empty */
rule 155  @13 ->		/* empty */
rule 156  direct_declarator -> direct_declarator @11 '(' @12 parameter_type_list @13 ')'
rule 157  @14 ->		/* empty */
rule 158  direct_declarator -> direct_declarator @14 '(' identifier_list ')'
rule 159  @15 ->		/* empty */
rule 160  direct_declarator -> direct_declarator @15 '(' ')'
rule 161  direct_declarator_needinsert ->		/* empty */
rule 162  pointer -> '*'
rule 163  pointer -> '*' type_qualifier_list
rule 164  pointer -> '*' pointer
rule 165  pointer -> '*' type_qualifier_list pointer
rule 166  type_qualifier_list -> type_qualifier
rule 167  type_qualifier_list -> type_qualifier_list type_qualifier
rule 168  parameter_type_list -> parameter_list
rule 169  parameter_type_list -> parameter_list ',' ELLIPSIS
rule 170  parameter_list -> parameter_declaration
rule 171  parameter_list -> parameter_list ',' parameter_declaration
rule 172  parameter_declaration -> declaration_specifiers_declarator declarator end_declarator
rule 173  parameter_declaration -> declaration_specifiers_declarator abstract_declarator end_declarator
rule 174  parameter_declaration -> declaration_specifiers
rule 175  parameter_declaration ->		/* empty */
rule 176  end_declarator ->		/* empty */
rule 177  declaration_specifiers_declarator -> declaration_specifiers after_decl_spec
rule 178  after_decl_spec ->		/* empty */
rule 179  identifier_list -> IDENTIFIER
rule 180  identifier_list -> identifier_list ',' IDENTIFIER
rule 181  type_name -> specifier_qualifier_list
rule 182  type_name -> specifier_qualifier_list abstract_declarator
rule 183  abstract_declarator -> pointer
rule 184  abstract_declarator -> direct_abstract_declarator
rule 185  abstract_declarator -> pointer direct_abstract_declarator
rule 186  @16 ->		/* empty */
rule 187  direct_abstract_declarator -> '(' abstract_declarator @16 ')'
rule 188  direct_abstract_declarator -> '[' ']'
rule 189  direct_abstract_declarator -> '[' constant_expression ']'
rule 190  @17 ->		/* empty */
rule 191  direct_abstract_declarator -> direct_abstract_declarator @17 '[' ']'
rule 192  @18 ->		/* empty */
rule 193  direct_abstract_declarator -> direct_abstract_declarator @18 '[' constant_expression ']'
rule 194  direct_abstract_declarator -> '(' ')'
rule 195  @19 ->		/* empty */
rule 196  @20 ->		/* empty */
rule 197  direct_abstract_declarator -> '(' @19 parameter_type_list @20 ')'
rule 198  direct_abstract_declarator -> direct_abstract_declarator '(' ')'
rule 199  @21 ->		/* empty */
rule 200  @22 ->		/* empty */
rule 201  direct_abstract_declarator -> direct_abstract_declarator '(' @21 parameter_type_list @22 ')'
rule 202  initializer -> assignment_expression
rule 203  initializer -> '{' initializer_list '}'
rule 204  initializer -> '{' initializer_list ',' '}'
rule 205  initializer_list -> initializer
rule 206  initializer_list -> initializer_list ',' initializer
rule 207  statement -> labeled_statement
rule 208  statement -> compound_statement
rule 209  statement -> expression_statement
rule 210  statement -> selection_statement
rule 211  statement -> iteration_statement
rule 212  statement -> jump_statement
rule 213  labeled_statement -> IDENTIFIER ':' statement
rule 214  labeled_statement -> CASE constant_expression ':' statement
rule 215  labeled_statement -> DEFAULT ':' statement
rule 216  compound_statement -> '{' '}'
rule 217  compound_statement -> '{' statement_list '}'
rule 218  compound_statement -> '{' declaration_list '}'
rule 219  compound_statement -> '{' declaration_list statement_list '}'
rule 220  declaration_list -> declaration
rule 221  declaration_list -> declaration_list declaration
rule 222  statement_list -> statement
rule 223  statement_list -> statement_list statement
rule 224  expression_statement -> ';'
rule 225  expression_statement -> expression ';'
rule 226  @23 ->		/* empty */
rule 227  @24 ->		/* empty */
rule 228  @25 ->		/* empty */
rule 229  selection_statement_first_half -> IF '(' @23 expression @24 ')' @25 statement
rule 230  selection_statement -> selection_statement_first_half
rule 231  selection_statement -> selection_statement_first_half ELSE statement
rule 232  selection_statement -> SWITCH '(' expression ')' statement
rule 233  iteration_statement -> WHILE '(' expression ')' statement
rule 234  iteration_statement -> DO statement WHILE '(' expression ')' ';'
rule 235  iteration_statement -> FOR '(' expression_statement expression_statement ')' statement
rule 236  iteration_statement -> FOR '(' expression_statement expression_statement expression ')' statement
rule 237  jump_statement -> GOTO IDENTIFIER ';'
rule 238  jump_statement -> CONTINUE ';'
rule 239  jump_statement -> BREAK ';'
rule 240  jump_statement -> RETURN ';'
rule 241  jump_statement -> RETURN expression ';'
rule 242  translation_unit -> external_declaration
rule 243  translation_unit -> translation_unit external_declaration
rule 244  external_declaration -> function_definition
rule 245  external_declaration -> declaration
rule 246  @26 ->		/* empty */
rule 247  function_definition -> declaration_specifiers declarator @26 declaration_list compound_statement
rule 248  @27 ->		/* empty */
rule 249  function_definition -> declaration_specifiers declarator @27 compound_statement
rule 250  @28 ->		/* empty */
rule 251  function_definition -> declarator @28 declaration_list compound_statement
rule 252  function_definition -> declarator compound_statement

Terminals, with rules where they appear

$ (-1)
'!' (33) 29
'%' (37) 35
'&' (38) 24 53
'(' (40) 4 10 11 23 31 150 156 158 160 187 194 197 198 201 229 232
    233 234 235 236
')' (41) 4 10 11 23 31 150 156 158 160 187 194 197 198 201 229 232
    233 234 235 236
'*' (42) 25 33 162 163 164 165
'+' (43) 26 37
',' (44) 17 78 93 131 139 141 169 171 180 204 206
'-' (45) 27 38
'.' (46) 12
'/' (47) 34
':' (58) 63 133 134 213 214 215
';' (59) 80 81 125 224 225 234 237 238 239 240 241
'<' (60) 44
'=' (61) 66 95 143
'>' (62) 46
'?' (63) 63
'[' (91) 9 151 152 188 189 191 193
']' (93) 9 151 152 188 189 191 193
'^' (94) 55
'{' (123) 115 119 135 136 203 204 216 217 218 219
'|' (124) 57
'}' (125) 115 119 135 136 203 204 216 217 218 219
'~' (126) 28
error (256)
IDENTIFIER (258) 1 12 13 115 120 136 137 142 143 149 179 180 213 237
CONSTANT (259) 2
STRING_LITERAL (260) 3
SIZEOF (261) 22 23
PTR_OP (262) 13
INC_OP (263) 14 19
DEC_OP (264) 15 20
LEFT_OP (265) 40
RIGHT_OP (266) 41
LE_OP (267) 47
GE_OP (268) 48
EQ_OP (269) 50
NE_OP (270) 51
AND_OP (271) 59
OR_OP (272) 61
MUL_ASSIGN (273) 67
DIV_ASSIGN (274) 68
MOD_ASSIGN (275) 69
ADD_ASSIGN (276) 70
SUB_ASSIGN (277) 71
LEFT_ASSIGN (278) 72
RIGHT_ASSIGN (279) 73
AND_ASSIGN (280) 74
XOR_ASSIGN (281) 75
OR_ASSIGN (282) 76
TYPE_NAME (283) 112
TYPEDEF (284) 96
EXTERN (285) 97
STATIC (286) 98
AUTO (287) 99
REGISTER (288) 100
CHAR (289) 102
SHORT (290) 103
INT (291) 104
LONG (292) 105
SIGNED (293) 108
UNSIGNED (294) 109
FLOAT (295) 106
DOUBLE (296) 107
CONST (297) 144
VOLATILE (298) 145
VOID (299) 101
STRUCT (300) 121
UNION (301) 122
ENUM (302) 135 136 137
ELLIPSIS (303) 169
CASE (304) 214
DEFAULT (305) 215
IF (306) 229
ELSE (307) 231
SWITCH (308) 232
WHILE (309) 233 234
DO (310) 234
FOR (311) 235 236
GOTO (312) 237
CONTINUE (313) 238
BREAK (314) 239
RETURN (315) 240 241
INLINE (316) 90
INLINE2 (317) 91
WITHOUT_STRUCT_CONTENT (318)

Nonterminals, with rules where they appear

primary_expression (88)
    on left: 1 2 3 4, on right: 5
postfix_expression (89)
    on left: 5 9 10 11 12 13 14 15, on right: 9 10 11 12 13 14 15 18
@1 (90)
    on left: 6, on right: 9
@2 (91)
    on left: 7, on right: 9
@3 (92)
    on left: 8, on right: 9
argument_expression_list (93)
    on left: 16 17, on right: 11 17
unary_expression (94)
    on left: 18 19 20 21 22 23, on right: 19 20 22 30 65
unary_operator (95)
    on left: 24 25 26 27 28 29, on right: 21
cast_expression (96)
    on left: 30 31, on right: 21 31 32 33 34 35
multiplicative_expression (97)
    on left: 32 33 34 35, on right: 33 34 35 36 37 38
additive_expression (98)
    on left: 36 37 38, on right: 37 38 39 40 41
shift_expression (99)
    on left: 39 40 41, on right: 40 41 42 44 46 47 48
relational_expression (100)
    on left: 42 44 46 47 48, on right: 44 46 47 48 49 50 51
@4 (101)
    on left: 43, on right: 44
@5 (102)
    on left: 45, on right: 46
equality_expression (103)
    on left: 49 50 51, on right: 50 51 52 53
and_expression (104)
    on left: 52 53, on right: 53 54 55
exclusive_or_expression (105)
    on left: 54 55, on right: 55 56 57
inclusive_or_expression (106)
    on left: 56 57, on right: 57 58 59
logical_and_expression (107)
    on left: 58 59, on right: 59 60 61
logical_or_expression (108)
    on left: 60 61, on right: 61 62 63
conditional_expression (109)
    on left: 62 63, on right: 63 64 79
assignment_expression (110)
    on left: 64 65, on right: 16 17 65 77 78 202
assignment_operator (111)
    on left: 66 67 68 69 70 71 72 73 74 75 76, on right: 65
expression (112)
    on left: 77 78, on right: 4 9 63 78 225 229 232 233 234 236 241
constant_expression (113)
    on left: 79, on right: 133 134 143 151 189 193 214
declaration (114)
    on left: 80 81, on right: 220 221 245
declaration_specifiers (115)
    on left: 82 83 84 85 86 87 88 89, on right: 80 81 83 85 87 89 174
    177 247 249
function_specifier (116)
    on left: 90 91, on right: 88 89
init_declarator_list (117)
    on left: 92 93, on right: 81 93
init_declarator (118)
    on left: 94 95, on right: 92 93
storage_class_specifier (119)
    on left: 96 97 98 99 100, on right: 82 83
type_specifier (120)
    on left: 101 102 103 104 105 106 107 108 109 110 111 112,
    on right: 84 85 126 127
struct_or_union_specifier (121)
    on left: 115 119 120, on right: 110
@6 (122)
    on left: 113, on right: 115
@7 (123)
    on left: 114, on right: 115
@8 (124)
    on left: 116, on right: 119
@9 (125)
    on left: 117, on right: 119
@10 (126)
    on left: 118, on right: 119
struct_or_union (127)
    on left: 121 122, on right: 115 119 120
struct_declaration_list (128)
    on left: 123 124, on right: 115 119 124
struct_declaration (129)
    on left: 125, on right: 123 124
specifier_qualifier_list (130)
    on left: 126 127 128 129, on right: 125 126 128 181 182
struct_declarator_list (131)
    on left: 130 131, on right: 125 131
struct_declarator (132)
    on left: 132 133 134, on right: 130 131
enum_specifier (133)
    on left: 135 136 137, on right: 111
enumerator_list_end (134)
    on left: 138 139, on right: 135 136
enumerator_list (135)
    on left: 140 141, on right: 135 136 141
enumerator (136)
    on left: 142 143, on right: 140 141
type_qualifier (137)
    on left: 144 145, on right: 86 87 128 129 166 167
declarator (138)
    on left: 146 147, on right: 94 95 132 134 150 172 247 249 251 252
direct_declarator (139)
    on left: 149 150 151 152 156 158 160, on right: 146 147 151 152
    156 158 160
@11 (140)
    on left: 153, on right: 156
@12 (141)
    on left: 154, on right: 156
@13 (142)
    on left: 155, on right: 156
@14 (143)
    on left: 157, on right: 158
@15 (144)
    on left: 159, on right: 160
direct_declarator_needinsert (145)
    on left: 161, on right: 151
pointer (146)
    on left: 162 163 164 165, on right: 146 164 165 183 185
type_qualifier_list (147)
    on left: 166 167, on right: 163 165 167
parameter_type_list (148)
    on left: 168 169, on right: 156 197 201
parameter_list (149)
    on left: 170 171, on right: 168 169 171
parameter_declaration (150)
    on left: 172 173 174 175, on right: 170 171
end_declarator (151)
    on left: 176, on right: 172 173
declaration_specifiers_declarator (152)
    on left: 177, on right: 172 173
after_decl_spec (153)
    on left: 178, on right: 177
identifier_list (154)
    on left: 179 180, on right: 158 180
type_name (155)
    on left: 181 182, on right: 23 31
abstract_declarator (156)
    on left: 183 184 185, on right: 173 182 187
direct_abstract_declarator (157)
    on left: 187 188 189 191 193 194 197 198 201, on right: 184 185
    191 193 198 201
@16 (158)
    on left: 186, on right: 187
@17 (159)
    on left: 190, on right: 191
@18 (160)
    on left: 192, on right: 193
@19 (161)
    on left: 195, on right: 197
@20 (162)
    on left: 196, on right: 197
@21 (163)
    on left: 199, on right: 201
@22 (164)
    on left: 200, on right: 201
initializer (165)
    on left: 202 203 204, on right: 95 205 206
initializer_list (166)
    on left: 205 206, on right: 203 204 206
statement (167)
    on left: 207 208 209 210 211 212, on right: 213 214 215 222 223
    229 231 232 233 234 235 236
labeled_statement (168)
    on left: 213 214 215, on right: 207
compound_statement (169)
    on left: 216 217 218 219, on right: 208 247 249 251 252
declaration_list (170)
    on left: 220 221, on right: 218 219 221 247 251
statement_list (171)
    on left: 222 223, on right: 217 219 223
expression_statement (172)
    on left: 224 225, on right: 209 235 236
selection_statement_first_half (173)
    on left: 229, on right: 230 231
@23 (174)
    on left: 226, on right: 229
@24 (175)
    on left: 227, on right: 229
@25 (176)
    on left: 228, on right: 229
selection_statement (177)
    on left: 230 231 232, on right: 210
iteration_statement (178)
    on left: 233 234 235 236, on right: 211
jump_statement (179)
    on left: 237 238 239 240 241, on right: 212
translation_unit (180)
    on left: 242 243, on right: 243
external_declaration (181)
    on left: 244 245, on right: 242 243
function_definition (182)
    on left: 247 249 251 252, on right: 244
@26 (183)
    on left: 246, on right: 247
@27 (184)
    on left: 248, on right: 249
@28 (185)
    on left: 250, on right: 251


state 0

    IDENTIFIER	shift, and go to state 1
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25

    declaration	go to state 26
    declaration_specifiers	go to state 27
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    declarator	go to state 35
    direct_declarator	go to state 36
    pointer	go to state 37
    translation_unit	go to state 38
    external_declaration	go to state 39
    function_definition	go to state 40



state 1

    direct_declarator  ->  IDENTIFIER .   (rule 149)

    $default	reduce using rule 149 (direct_declarator)



state 2

    type_specifier  ->  TYPE_NAME .   (rule 112)

    $default	reduce using rule 112 (type_specifier)



state 3

    storage_class_specifier  ->  TYPEDEF .   (rule 96)

    $default	reduce using rule 96 (storage_class_specifier)



state 4

    storage_class_specifier  ->  EXTERN .   (rule 97)

    $default	reduce using rule 97 (storage_class_specifier)



state 5

    storage_class_specifier  ->  STATIC .   (rule 98)

    $default	reduce using rule 98 (storage_class_specifier)



state 6

    storage_class_specifier  ->  AUTO .   (rule 99)

    $default	reduce using rule 99 (storage_class_specifier)



state 7

    storage_class_specifier  ->  REGISTER .   (rule 100)

    $default	reduce using rule 100 (storage_class_specifier)



state 8

    type_specifier  ->  CHAR .   (rule 102)

    $default	reduce using rule 102 (type_specifier)



state 9

    type_specifier  ->  SHORT .   (rule 103)

    $default	reduce using rule 103 (type_specifier)



state 10

    type_specifier  ->  INT .   (rule 104)

    $default	reduce using rule 104 (type_specifier)



state 11

    type_specifier  ->  LONG .   (rule 105)

    $default	reduce using rule 105 (type_specifier)



state 12

    type_specifier  ->  SIGNED .   (rule 108)

    $default	reduce using rule 108 (type_specifier)



state 13

    type_specifier  ->  UNSIGNED .   (rule 109)

    $default	reduce using rule 109 (type_specifier)



state 14

    type_specifier  ->  FLOAT .   (rule 106)

    $default	reduce using rule 106 (type_specifier)



state 15

    type_specifier  ->  DOUBLE .   (rule 107)

    $default	reduce using rule 107 (type_specifier)



state 16

    type_qualifier  ->  CONST .   (rule 144)

    $default	reduce using rule 144 (type_qualifier)



state 17

    type_qualifier  ->  VOLATILE .   (rule 145)

    $default	reduce using rule 145 (type_qualifier)



state 18

    type_specifier  ->  VOID .   (rule 101)

    $default	reduce using rule 101 (type_specifier)



state 19

    struct_or_union  ->  STRUCT .   (rule 121)

    $default	reduce using rule 121 (struct_or_union)



state 20

    struct_or_union  ->  UNION .   (rule 122)

    $default	reduce using rule 122 (struct_or_union)



state 21

    enum_specifier  ->  ENUM . '{' enumerator_list enumerator_list_end '}'   (rule 135)
    enum_specifier  ->  ENUM . IDENTIFIER '{' enumerator_list enumerator_list_end '}'   (rule 136)
    enum_specifier  ->  ENUM . IDENTIFIER   (rule 137)

    IDENTIFIER	shift, and go to state 41
    '{' 	shift, and go to state 42



state 22

    function_specifier  ->  INLINE .   (rule 90)

    $default	reduce using rule 90 (function_specifier)



state 23

    function_specifier  ->  INLINE2 .   (rule 91)

    $default	reduce using rule 91 (function_specifier)



state 24

    direct_declarator  ->  '(' . declarator ')'   (rule 150)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25

    declarator	go to state 43
    direct_declarator	go to state 36
    pointer	go to state 37



state 25

    pointer  ->  '*' .   (rule 162)
    pointer  ->  '*' . type_qualifier_list   (rule 163)
    pointer  ->  '*' . pointer   (rule 164)
    pointer  ->  '*' . type_qualifier_list pointer   (rule 165)

    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    '*' 	shift, and go to state 25

    $default	reduce using rule 162 (pointer)

    type_qualifier	go to state 44
    pointer	go to state 45
    type_qualifier_list	go to state 46



state 26

    external_declaration  ->  declaration .   (rule 245)

    $default	reduce using rule 245 (external_declaration)



state 27

    declaration  ->  declaration_specifiers . ';'   (rule 80)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 81)
    function_definition  ->  declaration_specifiers . declarator @26 declaration_list compound_statement   (rule 247)
    function_definition  ->  declaration_specifiers . declarator @27 compound_statement   (rule 249)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25
    ';' 	shift, and go to state 47

    init_declarator_list	go to state 48
    init_declarator	go to state 49
    declarator	go to state 50
    direct_declarator	go to state 36
    pointer	go to state 37



state 28

    declaration_specifiers  ->  function_specifier .   (rule 88)
    declaration_specifiers  ->  function_specifier . declaration_specifiers   (rule 89)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    $default	reduce using rule 88 (declaration_specifiers)

    declaration_specifiers	go to state 51
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34



state 29

    declaration_specifiers  ->  storage_class_specifier .   (rule 82)
    declaration_specifiers  ->  storage_class_specifier . declaration_specifiers   (rule 83)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    $default	reduce using rule 82 (declaration_specifiers)

    declaration_specifiers	go to state 52
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34



state 30

    declaration_specifiers  ->  type_specifier .   (rule 84)
    declaration_specifiers  ->  type_specifier . declaration_specifiers   (rule 85)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    $default	reduce using rule 84 (declaration_specifiers)

    declaration_specifiers	go to state 53
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34



state 31

    type_specifier  ->  struct_or_union_specifier .   (rule 110)

    $default	reduce using rule 110 (type_specifier)



state 32

    struct_or_union_specifier  ->  struct_or_union . IDENTIFIER '{' @6 struct_declaration_list @7 '}'   (rule 115)
    struct_or_union_specifier  ->  struct_or_union . @8 '{' @9 struct_declaration_list @10 '}'   (rule 119)
    struct_or_union_specifier  ->  struct_or_union . IDENTIFIER   (rule 120)

    IDENTIFIER	shift, and go to state 54

    $default	reduce using rule 116 (@8)

    @8  	go to state 55



state 33

    type_specifier  ->  enum_specifier .   (rule 111)

    $default	reduce using rule 111 (type_specifier)



state 34

    declaration_specifiers  ->  type_qualifier .   (rule 86)
    declaration_specifiers  ->  type_qualifier . declaration_specifiers   (rule 87)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    $default	reduce using rule 86 (declaration_specifiers)

    declaration_specifiers	go to state 56
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34



state 35

    function_definition  ->  declarator . @28 declaration_list compound_statement   (rule 251)
    function_definition  ->  declarator . compound_statement   (rule 252)

    '{' 	shift, and go to state 57

    $default	reduce using rule 250 (@28)

    compound_statement	go to state 58
    @28 	go to state 59



state 36

    declarator  ->  direct_declarator .   (rule 147)
    direct_declarator  ->  direct_declarator . '[' direct_declarator_needinsert constant_expression ']'   (rule 151)
    direct_declarator  ->  direct_declarator . '[' ']'   (rule 152)
    direct_declarator  ->  direct_declarator . @11 '(' @12 parameter_type_list @13 ')'   (rule 156)
    direct_declarator  ->  direct_declarator . @14 '(' identifier_list ')'   (rule 158)
    direct_declarator  ->  direct_declarator . @15 '(' ')'   (rule 160)

    '[' 	shift, and go to state 60

    $default	reduce using rule 147 (declarator)

    @11 	go to state 61
    @14 	go to state 62
    @15 	go to state 63



state 37

    declarator  ->  pointer . direct_declarator   (rule 146)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 24

    direct_declarator	go to state 64



state 38

    translation_unit  ->  translation_unit . external_declaration   (rule 243)

    $   	go to state 392
    IDENTIFIER	shift, and go to state 1
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25

    declaration	go to state 26
    declaration_specifiers	go to state 27
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    declarator	go to state 35
    direct_declarator	go to state 36
    pointer	go to state 37
    external_declaration	go to state 65
    function_definition	go to state 40



state 39

    translation_unit  ->  external_declaration .   (rule 242)

    $default	reduce using rule 242 (translation_unit)



state 40

    external_declaration  ->  function_definition .   (rule 244)

    $default	reduce using rule 244 (external_declaration)



state 41

    enum_specifier  ->  ENUM IDENTIFIER . '{' enumerator_list enumerator_list_end '}'   (rule 136)
    enum_specifier  ->  ENUM IDENTIFIER .   (rule 137)

    '{' 	shift, and go to state 66

    $default	reduce using rule 137 (enum_specifier)



state 42

    enum_specifier  ->  ENUM '{' . enumerator_list enumerator_list_end '}'   (rule 135)

    IDENTIFIER	shift, and go to state 67

    enumerator_list	go to state 68
    enumerator	go to state 69



state 43

    direct_declarator  ->  '(' declarator . ')'   (rule 150)

    ')' 	shift, and go to state 70



state 44

    type_qualifier_list  ->  type_qualifier .   (rule 166)

    $default	reduce using rule 166 (type_qualifier_list)



state 45

    pointer  ->  '*' pointer .   (rule 164)

    $default	reduce using rule 164 (pointer)



state 46

    pointer  ->  '*' type_qualifier_list .   (rule 163)
    pointer  ->  '*' type_qualifier_list . pointer   (rule 165)
    type_qualifier_list  ->  type_qualifier_list . type_qualifier   (rule 167)

    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    '*' 	shift, and go to state 25

    $default	reduce using rule 163 (pointer)

    type_qualifier	go to state 71
    pointer	go to state 72



state 47

    declaration  ->  declaration_specifiers ';' .   (rule 80)

    $default	reduce using rule 80 (declaration)



state 48

    declaration  ->  declaration_specifiers init_declarator_list . ';'   (rule 81)
    init_declarator_list  ->  init_declarator_list . ',' init_declarator   (rule 93)

    ',' 	shift, and go to state 73
    ';' 	shift, and go to state 74



state 49

    init_declarator_list  ->  init_declarator .   (rule 92)

    $default	reduce using rule 92 (init_declarator_list)



state 50

    init_declarator  ->  declarator .   (rule 94)
    init_declarator  ->  declarator . '=' initializer   (rule 95)
    function_definition  ->  declaration_specifiers declarator . @26 declaration_list compound_statement   (rule 247)
    function_definition  ->  declaration_specifiers declarator . @27 compound_statement   (rule 249)

    '=' 	shift, and go to state 75

    $default	reduce using rule 246 (@26)

    @26 	go to state 76
    @27 	go to state 77



state 51

    declaration_specifiers  ->  function_specifier declaration_specifiers .   (rule 89)

    $default	reduce using rule 89 (declaration_specifiers)



state 52

    declaration_specifiers  ->  storage_class_specifier declaration_specifiers .   (rule 83)

    $default	reduce using rule 83 (declaration_specifiers)



state 53

    declaration_specifiers  ->  type_specifier declaration_specifiers .   (rule 85)

    $default	reduce using rule 85 (declaration_specifiers)



state 54

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER . '{' @6 struct_declaration_list @7 '}'   (rule 115)
    struct_or_union_specifier  ->  struct_or_union IDENTIFIER .   (rule 120)

    '{' 	shift, and go to state 78

    $default	reduce using rule 120 (struct_or_union_specifier)



state 55

    struct_or_union_specifier  ->  struct_or_union @8 . '{' @9 struct_declaration_list @10 '}'   (rule 119)

    '{' 	shift, and go to state 79



state 56

    declaration_specifiers  ->  type_qualifier declaration_specifiers .   (rule 87)

    $default	reduce using rule 87 (declaration_specifiers)



state 57

    compound_statement  ->  '{' . '}'   (rule 216)
    compound_statement  ->  '{' . statement_list '}'   (rule 217)
    compound_statement  ->  '{' . declaration_list '}'   (rule 218)
    compound_statement  ->  '{' . declaration_list statement_list '}'   (rule 219)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '}' 	shift, and go to state 105

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    declaration	go to state 124
    declaration_specifiers	go to state 125
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    statement	go to state 126
    labeled_statement	go to state 127
    compound_statement	go to state 128
    declaration_list	go to state 129
    statement_list	go to state 130
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 58

    function_definition  ->  declarator compound_statement .   (rule 252)

    $default	reduce using rule 252 (function_definition)



state 59

    function_definition  ->  declarator @28 . declaration_list compound_statement   (rule 251)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    declaration	go to state 124
    declaration_specifiers	go to state 125
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    declaration_list	go to state 136



state 60

    direct_declarator  ->  direct_declarator '[' . direct_declarator_needinsert constant_expression ']'   (rule 151)
    direct_declarator  ->  direct_declarator '[' . ']'   (rule 152)

    ']' 	shift, and go to state 137

    $default	reduce using rule 161 (direct_declarator_needinsert)

    direct_declarator_needinsert	go to state 138



state 61

    direct_declarator  ->  direct_declarator @11 . '(' @12 parameter_type_list @13 ')'   (rule 156)

    '(' 	shift, and go to state 139



state 62

    direct_declarator  ->  direct_declarator @14 . '(' identifier_list ')'   (rule 158)

    '(' 	shift, and go to state 140



state 63

    direct_declarator  ->  direct_declarator @15 . '(' ')'   (rule 160)

    '(' 	shift, and go to state 141



state 64

    declarator  ->  pointer direct_declarator .   (rule 146)
    direct_declarator  ->  direct_declarator . '[' direct_declarator_needinsert constant_expression ']'   (rule 151)
    direct_declarator  ->  direct_declarator . '[' ']'   (rule 152)
    direct_declarator  ->  direct_declarator . @11 '(' @12 parameter_type_list @13 ')'   (rule 156)
    direct_declarator  ->  direct_declarator . @14 '(' identifier_list ')'   (rule 158)
    direct_declarator  ->  direct_declarator . @15 '(' ')'   (rule 160)

    '[' 	shift, and go to state 60

    $default	reduce using rule 146 (declarator)

    @11 	go to state 61
    @14 	go to state 62
    @15 	go to state 63



state 65

    translation_unit  ->  translation_unit external_declaration .   (rule 243)

    $default	reduce using rule 243 (translation_unit)



state 66

    enum_specifier  ->  ENUM IDENTIFIER '{' . enumerator_list enumerator_list_end '}'   (rule 136)

    IDENTIFIER	shift, and go to state 67

    enumerator_list	go to state 142
    enumerator	go to state 69



state 67

    enumerator  ->  IDENTIFIER .   (rule 142)
    enumerator  ->  IDENTIFIER . '=' constant_expression   (rule 143)

    '=' 	shift, and go to state 143

    $default	reduce using rule 142 (enumerator)



state 68

    enum_specifier  ->  ENUM '{' enumerator_list . enumerator_list_end '}'   (rule 135)
    enumerator_list  ->  enumerator_list . ',' enumerator   (rule 141)

    ',' 	shift, and go to state 144

    $default	reduce using rule 138 (enumerator_list_end)

    enumerator_list_end	go to state 145



state 69

    enumerator_list  ->  enumerator .   (rule 140)

    $default	reduce using rule 140 (enumerator_list)



state 70

    direct_declarator  ->  '(' declarator ')' .   (rule 150)

    $default	reduce using rule 150 (direct_declarator)



state 71

    type_qualifier_list  ->  type_qualifier_list type_qualifier .   (rule 167)

    $default	reduce using rule 167 (type_qualifier_list)



state 72

    pointer  ->  '*' type_qualifier_list pointer .   (rule 165)

    $default	reduce using rule 165 (pointer)



state 73

    init_declarator_list  ->  init_declarator_list ',' . init_declarator   (rule 93)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25

    init_declarator	go to state 146
    declarator	go to state 147
    direct_declarator	go to state 36
    pointer	go to state 37



state 74

    declaration  ->  declaration_specifiers init_declarator_list ';' .   (rule 81)

    $default	reduce using rule 81 (declaration)



state 75

    init_declarator  ->  declarator '=' . initializer   (rule 95)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '{' 	shift, and go to state 149
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 150
    initializer	go to state 151



state 76

    function_definition  ->  declaration_specifiers declarator @26 . declaration_list compound_statement   (rule 247)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    declaration	go to state 124
    declaration_specifiers	go to state 125
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    declaration_list	go to state 152



state 77

    function_definition  ->  declaration_specifiers declarator @27 . compound_statement   (rule 249)

    '{' 	shift, and go to state 57

    compound_statement	go to state 153



state 78

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' . @6 struct_declaration_list @7 '}'   (rule 115)

    $default	reduce using rule 113 (@6)

    @6  	go to state 154



state 79

    struct_or_union_specifier  ->  struct_or_union @8 '{' . @9 struct_declaration_list @10 '}'   (rule 119)

    $default	reduce using rule 117 (@9)

    @9  	go to state 155



state 80

    primary_expression  ->  IDENTIFIER .   (rule 1)
    labeled_statement  ->  IDENTIFIER . ':' statement   (rule 213)

    ':' 	shift, and go to state 156

    $default	reduce using rule 1 (primary_expression)



state 81

    primary_expression  ->  CONSTANT .   (rule 2)

    $default	reduce using rule 2 (primary_expression)



state 82

    primary_expression  ->  STRING_LITERAL .   (rule 3)

    $default	reduce using rule 3 (primary_expression)



state 83

    unary_expression  ->  SIZEOF . unary_expression   (rule 22)
    unary_expression  ->  SIZEOF . '(' type_name ')'   (rule 23)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 157
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 158
    unary_operator	go to state 109



state 84

    unary_expression  ->  INC_OP . unary_expression   (rule 19)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 159
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 160
    unary_operator	go to state 109



state 85

    unary_expression  ->  DEC_OP . unary_expression   (rule 20)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 159
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 161
    unary_operator	go to state 109



state 86

    labeled_statement  ->  CASE . constant_expression ':' statement   (rule 214)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 163
    constant_expression	go to state 164



state 87

    labeled_statement  ->  DEFAULT . ':' statement   (rule 215)

    ':' 	shift, and go to state 165



state 88

    selection_statement_first_half  ->  IF . '(' @23 expression @24 ')' @25 statement   (rule 229)

    '(' 	shift, and go to state 166



state 89

    selection_statement  ->  SWITCH . '(' expression ')' statement   (rule 232)

    '(' 	shift, and go to state 167



state 90

    iteration_statement  ->  WHILE . '(' expression ')' statement   (rule 233)

    '(' 	shift, and go to state 168



state 91

    iteration_statement  ->  DO . statement WHILE '(' expression ')' ';'   (rule 234)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 169
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 92

    iteration_statement  ->  FOR . '(' expression_statement expression_statement ')' statement   (rule 235)
    iteration_statement  ->  FOR . '(' expression_statement expression_statement expression ')' statement   (rule 236)

    '(' 	shift, and go to state 170



state 93

    jump_statement  ->  GOTO . IDENTIFIER ';'   (rule 237)

    IDENTIFIER	shift, and go to state 171



state 94

    jump_statement  ->  CONTINUE . ';'   (rule 238)

    ';' 	shift, and go to state 172



state 95

    jump_statement  ->  BREAK . ';'   (rule 239)

    ';' 	shift, and go to state 173



state 96

    jump_statement  ->  RETURN . ';'   (rule 240)
    jump_statement  ->  RETURN . expression ';'   (rule 241)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 174

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 175



state 97

    primary_expression  ->  '(' . expression ')'   (rule 4)
    cast_expression  ->  '(' . type_name ')' cast_expression   (rule 31)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 176
    type_specifier	go to state 177
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    specifier_qualifier_list	go to state 178
    enum_specifier	go to state 33
    type_qualifier	go to state 179
    type_name	go to state 180



state 98

    unary_operator  ->  '&' .   (rule 24)

    $default	reduce using rule 24 (unary_operator)



state 99

    unary_operator  ->  '*' .   (rule 25)

    $default	reduce using rule 25 (unary_operator)



state 100

    unary_operator  ->  '+' .   (rule 26)

    $default	reduce using rule 26 (unary_operator)



state 101

    unary_operator  ->  '-' .   (rule 27)

    $default	reduce using rule 27 (unary_operator)



state 102

    unary_operator  ->  '~' .   (rule 28)

    $default	reduce using rule 28 (unary_operator)



state 103

    unary_operator  ->  '!' .   (rule 29)

    $default	reduce using rule 29 (unary_operator)



state 104

    expression_statement  ->  ';' .   (rule 224)

    $default	reduce using rule 224 (expression_statement)



state 105

    compound_statement  ->  '{' '}' .   (rule 216)

    $default	reduce using rule 216 (compound_statement)



state 106

    postfix_expression  ->  primary_expression .   (rule 5)

    $default	reduce using rule 5 (postfix_expression)



state 107

    postfix_expression  ->  postfix_expression . @1 '[' @2 expression @3 ']'   (rule 9)
    postfix_expression  ->  postfix_expression . '(' ')'   (rule 10)
    postfix_expression  ->  postfix_expression . '(' argument_expression_list ')'   (rule 11)
    postfix_expression  ->  postfix_expression . '.' IDENTIFIER   (rule 12)
    postfix_expression  ->  postfix_expression . PTR_OP IDENTIFIER   (rule 13)
    postfix_expression  ->  postfix_expression . INC_OP   (rule 14)
    postfix_expression  ->  postfix_expression . DEC_OP   (rule 15)
    unary_expression  ->  postfix_expression .   (rule 18)

    PTR_OP	shift, and go to state 181
    INC_OP	shift, and go to state 182
    DEC_OP	shift, and go to state 183
    '(' 	shift, and go to state 184
    '.' 	shift, and go to state 185

    $default	reduce using rule 18 (unary_expression)

    @1  	go to state 186



state 108

    cast_expression  ->  unary_expression .   (rule 30)
    assignment_expression  ->  unary_expression . assignment_operator assignment_expression   (rule 65)

    MUL_ASSIGN	shift, and go to state 187
    DIV_ASSIGN	shift, and go to state 188
    MOD_ASSIGN	shift, and go to state 189
    ADD_ASSIGN	shift, and go to state 190
    SUB_ASSIGN	shift, and go to state 191
    LEFT_ASSIGN	shift, and go to state 192
    RIGHT_ASSIGN	shift, and go to state 193
    AND_ASSIGN	shift, and go to state 194
    XOR_ASSIGN	shift, and go to state 195
    OR_ASSIGN	shift, and go to state 196
    '=' 	shift, and go to state 197

    $default	reduce using rule 30 (cast_expression)

    assignment_operator	go to state 198



state 109

    unary_expression  ->  unary_operator . cast_expression   (rule 21)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 199



state 110

    multiplicative_expression  ->  cast_expression .   (rule 32)

    $default	reduce using rule 32 (multiplicative_expression)



state 111

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 33)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 34)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 35)
    additive_expression  ->  multiplicative_expression .   (rule 36)

    '*' 	shift, and go to state 200
    '/' 	shift, and go to state 201
    '%' 	shift, and go to state 202

    $default	reduce using rule 36 (additive_expression)



state 112

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 37)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 38)
    shift_expression  ->  additive_expression .   (rule 39)

    '+' 	shift, and go to state 203
    '-' 	shift, and go to state 204

    $default	reduce using rule 39 (shift_expression)



state 113

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 40)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 41)
    relational_expression  ->  shift_expression .   (rule 42)

    LEFT_OP	shift, and go to state 205
    RIGHT_OP	shift, and go to state 206

    $default	reduce using rule 42 (relational_expression)



state 114

    relational_expression  ->  relational_expression . @4 '<' shift_expression   (rule 44)
    relational_expression  ->  relational_expression . @5 '>' shift_expression   (rule 46)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 47)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 48)
    equality_expression  ->  relational_expression .   (rule 49)

    LE_OP	shift, and go to state 207
    GE_OP	shift, and go to state 208

    $default	reduce using rule 49 (equality_expression)

    @4  	go to state 209
    @5  	go to state 210



state 115

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 50)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 51)
    and_expression  ->  equality_expression .   (rule 52)

    EQ_OP	shift, and go to state 211
    NE_OP	shift, and go to state 212

    $default	reduce using rule 52 (and_expression)



state 116

    and_expression  ->  and_expression . '&' equality_expression   (rule 53)
    exclusive_or_expression  ->  and_expression .   (rule 54)

    '&' 	shift, and go to state 213

    $default	reduce using rule 54 (exclusive_or_expression)



state 117

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 55)
    inclusive_or_expression  ->  exclusive_or_expression .   (rule 56)

    '^' 	shift, and go to state 214

    $default	reduce using rule 56 (inclusive_or_expression)



state 118

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 57)
    logical_and_expression  ->  inclusive_or_expression .   (rule 58)

    '|' 	shift, and go to state 215

    $default	reduce using rule 58 (logical_and_expression)



state 119

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 59)
    logical_or_expression  ->  logical_and_expression .   (rule 60)

    AND_OP	shift, and go to state 216

    $default	reduce using rule 60 (logical_or_expression)



state 120

    logical_or_expression  ->  logical_or_expression . OR_OP logical_and_expression   (rule 61)
    conditional_expression  ->  logical_or_expression .   (rule 62)
    conditional_expression  ->  logical_or_expression . '?' expression ':' conditional_expression   (rule 63)

    OR_OP	shift, and go to state 217
    '?' 	shift, and go to state 218

    $default	reduce using rule 62 (conditional_expression)



state 121

    assignment_expression  ->  conditional_expression .   (rule 64)

    $default	reduce using rule 64 (assignment_expression)



state 122

    expression  ->  assignment_expression .   (rule 77)

    $default	reduce using rule 77 (expression)



state 123

    expression  ->  expression . ',' assignment_expression   (rule 78)
    expression_statement  ->  expression . ';'   (rule 225)

    ',' 	shift, and go to state 219
    ';' 	shift, and go to state 220



state 124

    declaration_list  ->  declaration .   (rule 220)

    $default	reduce using rule 220 (declaration_list)



state 125

    declaration  ->  declaration_specifiers . ';'   (rule 80)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 81)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25
    ';' 	shift, and go to state 47

    init_declarator_list	go to state 48
    init_declarator	go to state 49
    declarator	go to state 147
    direct_declarator	go to state 36
    pointer	go to state 37



state 126

    statement_list  ->  statement .   (rule 222)

    $default	reduce using rule 222 (statement_list)



state 127

    statement  ->  labeled_statement .   (rule 207)

    $default	reduce using rule 207 (statement)



state 128

    statement  ->  compound_statement .   (rule 208)

    $default	reduce using rule 208 (statement)



state 129

    compound_statement  ->  '{' declaration_list . '}'   (rule 218)
    compound_statement  ->  '{' declaration_list . statement_list '}'   (rule 219)
    declaration_list  ->  declaration_list . declaration   (rule 221)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '}' 	shift, and go to state 221

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    declaration	go to state 222
    declaration_specifiers	go to state 125
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    statement	go to state 126
    labeled_statement	go to state 127
    compound_statement	go to state 128
    statement_list	go to state 223
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 130

    compound_statement  ->  '{' statement_list . '}'   (rule 217)
    statement_list  ->  statement_list . statement   (rule 223)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '}' 	shift, and go to state 224

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 225
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 131

    statement  ->  expression_statement .   (rule 209)

    $default	reduce using rule 209 (statement)



state 132

    selection_statement  ->  selection_statement_first_half .   (rule 230)
    selection_statement  ->  selection_statement_first_half . ELSE statement   (rule 231)

    ELSE	shift, and go to state 226

    ELSE	[reduce using rule 230 (selection_statement)]
    $default	reduce using rule 230 (selection_statement)



state 133

    statement  ->  selection_statement .   (rule 210)

    $default	reduce using rule 210 (statement)



state 134

    statement  ->  iteration_statement .   (rule 211)

    $default	reduce using rule 211 (statement)



state 135

    statement  ->  jump_statement .   (rule 212)

    $default	reduce using rule 212 (statement)



state 136

    declaration_list  ->  declaration_list . declaration   (rule 221)
    function_definition  ->  declarator @28 declaration_list . compound_statement   (rule 251)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23
    '{' 	shift, and go to state 57

    declaration	go to state 222
    declaration_specifiers	go to state 125
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    compound_statement	go to state 227



state 137

    direct_declarator  ->  direct_declarator '[' ']' .   (rule 152)

    $default	reduce using rule 152 (direct_declarator)



state 138

    direct_declarator  ->  direct_declarator '[' direct_declarator_needinsert . constant_expression ']'   (rule 151)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 163
    constant_expression	go to state 228



state 139

    direct_declarator  ->  direct_declarator @11 '(' . @12 parameter_type_list @13 ')'   (rule 156)

    $default	reduce using rule 154 (@12)

    @12 	go to state 229



state 140

    direct_declarator  ->  direct_declarator @14 '(' . identifier_list ')'   (rule 158)

    IDENTIFIER	shift, and go to state 230

    identifier_list	go to state 231



state 141

    direct_declarator  ->  direct_declarator @15 '(' . ')'   (rule 160)

    ')' 	shift, and go to state 232



state 142

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list . enumerator_list_end '}'   (rule 136)
    enumerator_list  ->  enumerator_list . ',' enumerator   (rule 141)

    ',' 	shift, and go to state 144

    $default	reduce using rule 138 (enumerator_list_end)

    enumerator_list_end	go to state 233



state 143

    enumerator  ->  IDENTIFIER '=' . constant_expression   (rule 143)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 163
    constant_expression	go to state 234



state 144

    enumerator_list_end  ->  ',' .   (rule 139)
    enumerator_list  ->  enumerator_list ',' . enumerator   (rule 141)

    IDENTIFIER	shift, and go to state 67

    $default	reduce using rule 139 (enumerator_list_end)

    enumerator	go to state 235



state 145

    enum_specifier  ->  ENUM '{' enumerator_list enumerator_list_end . '}'   (rule 135)

    '}' 	shift, and go to state 236



state 146

    init_declarator_list  ->  init_declarator_list ',' init_declarator .   (rule 93)

    $default	reduce using rule 93 (init_declarator_list)



state 147

    init_declarator  ->  declarator .   (rule 94)
    init_declarator  ->  declarator . '=' initializer   (rule 95)

    '=' 	shift, and go to state 75

    $default	reduce using rule 94 (init_declarator)



state 148

    primary_expression  ->  IDENTIFIER .   (rule 1)

    $default	reduce using rule 1 (primary_expression)



state 149

    initializer  ->  '{' . initializer_list '}'   (rule 203)
    initializer  ->  '{' . initializer_list ',' '}'   (rule 204)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '{' 	shift, and go to state 149
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 150
    initializer	go to state 237
    initializer_list	go to state 238



state 150

    initializer  ->  assignment_expression .   (rule 202)

    $default	reduce using rule 202 (initializer)



state 151

    init_declarator  ->  declarator '=' initializer .   (rule 95)

    $default	reduce using rule 95 (init_declarator)



state 152

    declaration_list  ->  declaration_list . declaration   (rule 221)
    function_definition  ->  declaration_specifiers declarator @26 declaration_list . compound_statement   (rule 247)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23
    '{' 	shift, and go to state 57

    declaration	go to state 222
    declaration_specifiers	go to state 125
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    compound_statement	go to state 239



state 153

    function_definition  ->  declaration_specifiers declarator @27 compound_statement .   (rule 249)

    $default	reduce using rule 249 (function_definition)



state 154

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' @6 . struct_declaration_list @7 '}'   (rule 115)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    type_specifier	go to state 177
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    struct_declaration_list	go to state 240
    struct_declaration	go to state 241
    specifier_qualifier_list	go to state 242
    enum_specifier	go to state 33
    type_qualifier	go to state 179



state 155

    struct_or_union_specifier  ->  struct_or_union @8 '{' @9 . struct_declaration_list @10 '}'   (rule 119)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    type_specifier	go to state 177
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    struct_declaration_list	go to state 243
    struct_declaration	go to state 241
    specifier_qualifier_list	go to state 242
    enum_specifier	go to state 33
    type_qualifier	go to state 179



state 156

    labeled_statement  ->  IDENTIFIER ':' . statement   (rule 213)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 244
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 157

    primary_expression  ->  '(' . expression ')'   (rule 4)
    unary_expression  ->  SIZEOF '(' . type_name ')'   (rule 23)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 176
    type_specifier	go to state 177
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    specifier_qualifier_list	go to state 178
    enum_specifier	go to state 33
    type_qualifier	go to state 179
    type_name	go to state 245



state 158

    unary_expression  ->  SIZEOF unary_expression .   (rule 22)

    $default	reduce using rule 22 (unary_expression)



state 159

    primary_expression  ->  '(' . expression ')'   (rule 4)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 176



state 160

    unary_expression  ->  INC_OP unary_expression .   (rule 19)

    $default	reduce using rule 19 (unary_expression)



state 161

    unary_expression  ->  DEC_OP unary_expression .   (rule 20)

    $default	reduce using rule 20 (unary_expression)



state 162

    cast_expression  ->  unary_expression .   (rule 30)

    $default	reduce using rule 30 (cast_expression)



state 163

    constant_expression  ->  conditional_expression .   (rule 79)

    $default	reduce using rule 79 (constant_expression)



state 164

    labeled_statement  ->  CASE constant_expression . ':' statement   (rule 214)

    ':' 	shift, and go to state 246



state 165

    labeled_statement  ->  DEFAULT ':' . statement   (rule 215)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 247
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 166

    selection_statement_first_half  ->  IF '(' . @23 expression @24 ')' @25 statement   (rule 229)

    $default	reduce using rule 226 (@23)

    @23 	go to state 248



state 167

    selection_statement  ->  SWITCH '(' . expression ')' statement   (rule 232)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 249



state 168

    iteration_statement  ->  WHILE '(' . expression ')' statement   (rule 233)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 250



state 169

    iteration_statement  ->  DO statement . WHILE '(' expression ')' ';'   (rule 234)

    WHILE	shift, and go to state 251



state 170

    iteration_statement  ->  FOR '(' . expression_statement expression_statement ')' statement   (rule 235)
    iteration_statement  ->  FOR '(' . expression_statement expression_statement expression ')' statement   (rule 236)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    expression_statement	go to state 252



state 171

    jump_statement  ->  GOTO IDENTIFIER . ';'   (rule 237)

    ';' 	shift, and go to state 253



state 172

    jump_statement  ->  CONTINUE ';' .   (rule 238)

    $default	reduce using rule 238 (jump_statement)



state 173

    jump_statement  ->  BREAK ';' .   (rule 239)

    $default	reduce using rule 239 (jump_statement)



state 174

    jump_statement  ->  RETURN ';' .   (rule 240)

    $default	reduce using rule 240 (jump_statement)



state 175

    expression  ->  expression . ',' assignment_expression   (rule 78)
    jump_statement  ->  RETURN expression . ';'   (rule 241)

    ',' 	shift, and go to state 219
    ';' 	shift, and go to state 254



state 176

    primary_expression  ->  '(' expression . ')'   (rule 4)
    expression  ->  expression . ',' assignment_expression   (rule 78)

    ')' 	shift, and go to state 255
    ',' 	shift, and go to state 219



state 177

    specifier_qualifier_list  ->  type_specifier . specifier_qualifier_list   (rule 126)
    specifier_qualifier_list  ->  type_specifier .   (rule 127)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    $default	reduce using rule 127 (specifier_qualifier_list)

    type_specifier	go to state 177
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    specifier_qualifier_list	go to state 256
    enum_specifier	go to state 33
    type_qualifier	go to state 179



state 178

    type_name  ->  specifier_qualifier_list .   (rule 181)
    type_name  ->  specifier_qualifier_list . abstract_declarator   (rule 182)

    '(' 	shift, and go to state 257
    '[' 	shift, and go to state 258
    '*' 	shift, and go to state 25

    $default	reduce using rule 181 (type_name)

    pointer	go to state 259
    abstract_declarator	go to state 260
    direct_abstract_declarator	go to state 261



state 179

    specifier_qualifier_list  ->  type_qualifier . specifier_qualifier_list   (rule 128)
    specifier_qualifier_list  ->  type_qualifier .   (rule 129)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    $default	reduce using rule 129 (specifier_qualifier_list)

    type_specifier	go to state 177
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    specifier_qualifier_list	go to state 262
    enum_specifier	go to state 33
    type_qualifier	go to state 179



state 180

    cast_expression  ->  '(' type_name . ')' cast_expression   (rule 31)

    ')' 	shift, and go to state 263



state 181

    postfix_expression  ->  postfix_expression PTR_OP . IDENTIFIER   (rule 13)

    IDENTIFIER	shift, and go to state 264



state 182

    postfix_expression  ->  postfix_expression INC_OP .   (rule 14)

    $default	reduce using rule 14 (postfix_expression)



state 183

    postfix_expression  ->  postfix_expression DEC_OP .   (rule 15)

    $default	reduce using rule 15 (postfix_expression)



state 184

    postfix_expression  ->  postfix_expression '(' . ')'   (rule 10)
    postfix_expression  ->  postfix_expression '(' . argument_expression_list ')'   (rule 11)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    ')' 	shift, and go to state 265
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    argument_expression_list	go to state 266
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 267



state 185

    postfix_expression  ->  postfix_expression '.' . IDENTIFIER   (rule 12)

    IDENTIFIER	shift, and go to state 268



state 186

    postfix_expression  ->  postfix_expression @1 . '[' @2 expression @3 ']'   (rule 9)

    '[' 	shift, and go to state 269



state 187

    assignment_operator  ->  MUL_ASSIGN .   (rule 67)

    $default	reduce using rule 67 (assignment_operator)



state 188

    assignment_operator  ->  DIV_ASSIGN .   (rule 68)

    $default	reduce using rule 68 (assignment_operator)



state 189

    assignment_operator  ->  MOD_ASSIGN .   (rule 69)

    $default	reduce using rule 69 (assignment_operator)



state 190

    assignment_operator  ->  ADD_ASSIGN .   (rule 70)

    $default	reduce using rule 70 (assignment_operator)



state 191

    assignment_operator  ->  SUB_ASSIGN .   (rule 71)

    $default	reduce using rule 71 (assignment_operator)



state 192

    assignment_operator  ->  LEFT_ASSIGN .   (rule 72)

    $default	reduce using rule 72 (assignment_operator)



state 193

    assignment_operator  ->  RIGHT_ASSIGN .   (rule 73)

    $default	reduce using rule 73 (assignment_operator)



state 194

    assignment_operator  ->  AND_ASSIGN .   (rule 74)

    $default	reduce using rule 74 (assignment_operator)



state 195

    assignment_operator  ->  XOR_ASSIGN .   (rule 75)

    $default	reduce using rule 75 (assignment_operator)



state 196

    assignment_operator  ->  OR_ASSIGN .   (rule 76)

    $default	reduce using rule 76 (assignment_operator)



state 197

    assignment_operator  ->  '=' .   (rule 66)

    $default	reduce using rule 66 (assignment_operator)



state 198

    assignment_expression  ->  unary_expression assignment_operator . assignment_expression   (rule 65)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 270



state 199

    unary_expression  ->  unary_operator cast_expression .   (rule 21)

    $default	reduce using rule 21 (unary_expression)



state 200

    multiplicative_expression  ->  multiplicative_expression '*' . cast_expression   (rule 33)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 271



state 201

    multiplicative_expression  ->  multiplicative_expression '/' . cast_expression   (rule 34)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 272



state 202

    multiplicative_expression  ->  multiplicative_expression '%' . cast_expression   (rule 35)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 273



state 203

    additive_expression  ->  additive_expression '+' . multiplicative_expression   (rule 37)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 274



state 204

    additive_expression  ->  additive_expression '-' . multiplicative_expression   (rule 38)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 275



state 205

    shift_expression  ->  shift_expression LEFT_OP . additive_expression   (rule 40)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 276



state 206

    shift_expression  ->  shift_expression RIGHT_OP . additive_expression   (rule 41)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 277



state 207

    relational_expression  ->  relational_expression LE_OP . shift_expression   (rule 47)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 278



state 208

    relational_expression  ->  relational_expression GE_OP . shift_expression   (rule 48)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 279



state 209

    relational_expression  ->  relational_expression @4 . '<' shift_expression   (rule 44)

    '<' 	shift, and go to state 280



state 210

    relational_expression  ->  relational_expression @5 . '>' shift_expression   (rule 46)

    '>' 	shift, and go to state 281



state 211

    equality_expression  ->  equality_expression EQ_OP . relational_expression   (rule 50)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 282



state 212

    equality_expression  ->  equality_expression NE_OP . relational_expression   (rule 51)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 283



state 213

    and_expression  ->  and_expression '&' . equality_expression   (rule 53)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 284



state 214

    exclusive_or_expression  ->  exclusive_or_expression '^' . and_expression   (rule 55)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 285



state 215

    inclusive_or_expression  ->  inclusive_or_expression '|' . exclusive_or_expression   (rule 57)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 286



state 216

    logical_and_expression  ->  logical_and_expression AND_OP . inclusive_or_expression   (rule 59)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 287



state 217

    logical_or_expression  ->  logical_or_expression OR_OP . logical_and_expression   (rule 61)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 288



state 218

    conditional_expression  ->  logical_or_expression '?' . expression ':' conditional_expression   (rule 63)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 289



state 219

    expression  ->  expression ',' . assignment_expression   (rule 78)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 290



state 220

    expression_statement  ->  expression ';' .   (rule 225)

    $default	reduce using rule 225 (expression_statement)



state 221

    compound_statement  ->  '{' declaration_list '}' .   (rule 218)

    $default	reduce using rule 218 (compound_statement)



state 222

    declaration_list  ->  declaration_list declaration .   (rule 221)

    $default	reduce using rule 221 (declaration_list)



state 223

    compound_statement  ->  '{' declaration_list statement_list . '}'   (rule 219)
    statement_list  ->  statement_list . statement   (rule 223)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104
    '}' 	shift, and go to state 291

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 225
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 224

    compound_statement  ->  '{' statement_list '}' .   (rule 217)

    $default	reduce using rule 217 (compound_statement)



state 225

    statement_list  ->  statement_list statement .   (rule 223)

    $default	reduce using rule 223 (statement_list)



state 226

    selection_statement  ->  selection_statement_first_half ELSE . statement   (rule 231)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 292
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 227

    function_definition  ->  declarator @28 declaration_list compound_statement .   (rule 251)

    $default	reduce using rule 251 (function_definition)



state 228

    direct_declarator  ->  direct_declarator '[' direct_declarator_needinsert constant_expression . ']'   (rule 151)

    ']' 	shift, and go to state 293



state 229

    direct_declarator  ->  direct_declarator @11 '(' @12 . parameter_type_list @13 ')'   (rule 156)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    $default	reduce using rule 175 (parameter_declaration)

    declaration_specifiers	go to state 294
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    parameter_type_list	go to state 295
    parameter_list	go to state 296
    parameter_declaration	go to state 297
    declaration_specifiers_declarator	go to state 298



state 230

    identifier_list  ->  IDENTIFIER .   (rule 179)

    $default	reduce using rule 179 (identifier_list)



state 231

    direct_declarator  ->  direct_declarator @14 '(' identifier_list . ')'   (rule 158)
    identifier_list  ->  identifier_list . ',' IDENTIFIER   (rule 180)

    ')' 	shift, and go to state 299
    ',' 	shift, and go to state 300



state 232

    direct_declarator  ->  direct_declarator @15 '(' ')' .   (rule 160)

    $default	reduce using rule 160 (direct_declarator)



state 233

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list enumerator_list_end . '}'   (rule 136)

    '}' 	shift, and go to state 301



state 234

    enumerator  ->  IDENTIFIER '=' constant_expression .   (rule 143)

    $default	reduce using rule 143 (enumerator)



state 235

    enumerator_list  ->  enumerator_list ',' enumerator .   (rule 141)

    $default	reduce using rule 141 (enumerator_list)



state 236

    enum_specifier  ->  ENUM '{' enumerator_list enumerator_list_end '}' .   (rule 135)

    $default	reduce using rule 135 (enum_specifier)



state 237

    initializer_list  ->  initializer .   (rule 205)

    $default	reduce using rule 205 (initializer_list)



state 238

    initializer  ->  '{' initializer_list . '}'   (rule 203)
    initializer  ->  '{' initializer_list . ',' '}'   (rule 204)
    initializer_list  ->  initializer_list . ',' initializer   (rule 206)

    ',' 	shift, and go to state 302
    '}' 	shift, and go to state 303



state 239

    function_definition  ->  declaration_specifiers declarator @26 declaration_list compound_statement .   (rule 247)

    $default	reduce using rule 247 (function_definition)



state 240

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' @6 struct_declaration_list . @7 '}'   (rule 115)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 124)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    $default	reduce using rule 114 (@7)

    type_specifier	go to state 177
    struct_or_union_specifier	go to state 31
    @7  	go to state 304
    struct_or_union	go to state 32
    struct_declaration	go to state 305
    specifier_qualifier_list	go to state 242
    enum_specifier	go to state 33
    type_qualifier	go to state 179



state 241

    struct_declaration_list  ->  struct_declaration .   (rule 123)

    $default	reduce using rule 123 (struct_declaration_list)



state 242

    struct_declaration  ->  specifier_qualifier_list . struct_declarator_list ';'   (rule 125)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25
    ':' 	shift, and go to state 306

    struct_declarator_list	go to state 307
    struct_declarator	go to state 308
    declarator	go to state 309
    direct_declarator	go to state 36
    pointer	go to state 37



state 243

    struct_or_union_specifier  ->  struct_or_union @8 '{' @9 struct_declaration_list . @10 '}'   (rule 119)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 124)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21

    $default	reduce using rule 118 (@10)

    type_specifier	go to state 177
    struct_or_union_specifier	go to state 31
    @10 	go to state 310
    struct_or_union	go to state 32
    struct_declaration	go to state 305
    specifier_qualifier_list	go to state 242
    enum_specifier	go to state 33
    type_qualifier	go to state 179



state 244

    labeled_statement  ->  IDENTIFIER ':' statement .   (rule 213)

    $default	reduce using rule 213 (labeled_statement)



state 245

    unary_expression  ->  SIZEOF '(' type_name . ')'   (rule 23)

    ')' 	shift, and go to state 311



state 246

    labeled_statement  ->  CASE constant_expression ':' . statement   (rule 214)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 312
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 247

    labeled_statement  ->  DEFAULT ':' statement .   (rule 215)

    $default	reduce using rule 215 (labeled_statement)



state 248

    selection_statement_first_half  ->  IF '(' @23 . expression @24 ')' @25 statement   (rule 229)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 313



state 249

    expression  ->  expression . ',' assignment_expression   (rule 78)
    selection_statement  ->  SWITCH '(' expression . ')' statement   (rule 232)

    ')' 	shift, and go to state 314
    ',' 	shift, and go to state 219



state 250

    expression  ->  expression . ',' assignment_expression   (rule 78)
    iteration_statement  ->  WHILE '(' expression . ')' statement   (rule 233)

    ')' 	shift, and go to state 315
    ',' 	shift, and go to state 219



state 251

    iteration_statement  ->  DO statement WHILE . '(' expression ')' ';'   (rule 234)

    '(' 	shift, and go to state 316



state 252

    iteration_statement  ->  FOR '(' expression_statement . expression_statement ')' statement   (rule 235)
    iteration_statement  ->  FOR '(' expression_statement . expression_statement expression ')' statement   (rule 236)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    expression_statement	go to state 317



state 253

    jump_statement  ->  GOTO IDENTIFIER ';' .   (rule 237)

    $default	reduce using rule 237 (jump_statement)



state 254

    jump_statement  ->  RETURN expression ';' .   (rule 241)

    $default	reduce using rule 241 (jump_statement)



state 255

    primary_expression  ->  '(' expression ')' .   (rule 4)

    $default	reduce using rule 4 (primary_expression)



state 256

    specifier_qualifier_list  ->  type_specifier specifier_qualifier_list .   (rule 126)

    $default	reduce using rule 126 (specifier_qualifier_list)



state 257

    direct_abstract_declarator  ->  '(' . abstract_declarator @16 ')'   (rule 187)
    direct_abstract_declarator  ->  '(' . ')'   (rule 194)
    direct_abstract_declarator  ->  '(' . @19 parameter_type_list @20 ')'   (rule 197)

    '(' 	shift, and go to state 257
    ')' 	shift, and go to state 318
    '[' 	shift, and go to state 258
    '*' 	shift, and go to state 25

    ')' 	[reduce using rule 195 (@19)]
    $default	reduce using rule 195 (@19)

    pointer	go to state 259
    abstract_declarator	go to state 319
    direct_abstract_declarator	go to state 261
    @19 	go to state 320



state 258

    direct_abstract_declarator  ->  '[' . ']'   (rule 188)
    direct_abstract_declarator  ->  '[' . constant_expression ']'   (rule 189)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    ']' 	shift, and go to state 321
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 163
    constant_expression	go to state 322



state 259

    abstract_declarator  ->  pointer .   (rule 183)
    abstract_declarator  ->  pointer . direct_abstract_declarator   (rule 185)

    '(' 	shift, and go to state 257
    '[' 	shift, and go to state 258

    $default	reduce using rule 183 (abstract_declarator)

    direct_abstract_declarator	go to state 323



state 260

    type_name  ->  specifier_qualifier_list abstract_declarator .   (rule 182)

    $default	reduce using rule 182 (type_name)



state 261

    abstract_declarator  ->  direct_abstract_declarator .   (rule 184)
    direct_abstract_declarator  ->  direct_abstract_declarator . @17 '[' ']'   (rule 191)
    direct_abstract_declarator  ->  direct_abstract_declarator . @18 '[' constant_expression ']'   (rule 193)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' ')'   (rule 198)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' @21 parameter_type_list @22 ')'   (rule 201)

    '(' 	shift, and go to state 324

    $default	reduce using rule 184 (abstract_declarator)

    @17 	go to state 325
    @18 	go to state 326



state 262

    specifier_qualifier_list  ->  type_qualifier specifier_qualifier_list .   (rule 128)

    $default	reduce using rule 128 (specifier_qualifier_list)



state 263

    cast_expression  ->  '(' type_name ')' . cast_expression   (rule 31)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 327



state 264

    postfix_expression  ->  postfix_expression PTR_OP IDENTIFIER .   (rule 13)

    $default	reduce using rule 13 (postfix_expression)



state 265

    postfix_expression  ->  postfix_expression '(' ')' .   (rule 10)

    $default	reduce using rule 10 (postfix_expression)



state 266

    postfix_expression  ->  postfix_expression '(' argument_expression_list . ')'   (rule 11)
    argument_expression_list  ->  argument_expression_list . ',' assignment_expression   (rule 17)

    ')' 	shift, and go to state 328
    ',' 	shift, and go to state 329



state 267

    argument_expression_list  ->  assignment_expression .   (rule 16)

    $default	reduce using rule 16 (argument_expression_list)



state 268

    postfix_expression  ->  postfix_expression '.' IDENTIFIER .   (rule 12)

    $default	reduce using rule 12 (postfix_expression)



state 269

    postfix_expression  ->  postfix_expression @1 '[' . @2 expression @3 ']'   (rule 9)

    $default	reduce using rule 7 (@2)

    @2  	go to state 330



state 270

    assignment_expression  ->  unary_expression assignment_operator assignment_expression .   (rule 65)

    $default	reduce using rule 65 (assignment_expression)



state 271

    multiplicative_expression  ->  multiplicative_expression '*' cast_expression .   (rule 33)

    $default	reduce using rule 33 (multiplicative_expression)



state 272

    multiplicative_expression  ->  multiplicative_expression '/' cast_expression .   (rule 34)

    $default	reduce using rule 34 (multiplicative_expression)



state 273

    multiplicative_expression  ->  multiplicative_expression '%' cast_expression .   (rule 35)

    $default	reduce using rule 35 (multiplicative_expression)



state 274

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 33)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 34)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 35)
    additive_expression  ->  additive_expression '+' multiplicative_expression .   (rule 37)

    '*' 	shift, and go to state 200
    '/' 	shift, and go to state 201
    '%' 	shift, and go to state 202

    $default	reduce using rule 37 (additive_expression)



state 275

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 33)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 34)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 35)
    additive_expression  ->  additive_expression '-' multiplicative_expression .   (rule 38)

    '*' 	shift, and go to state 200
    '/' 	shift, and go to state 201
    '%' 	shift, and go to state 202

    $default	reduce using rule 38 (additive_expression)



state 276

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 37)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 38)
    shift_expression  ->  shift_expression LEFT_OP additive_expression .   (rule 40)

    '+' 	shift, and go to state 203
    '-' 	shift, and go to state 204

    $default	reduce using rule 40 (shift_expression)



state 277

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 37)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 38)
    shift_expression  ->  shift_expression RIGHT_OP additive_expression .   (rule 41)

    '+' 	shift, and go to state 203
    '-' 	shift, and go to state 204

    $default	reduce using rule 41 (shift_expression)



state 278

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 40)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 41)
    relational_expression  ->  relational_expression LE_OP shift_expression .   (rule 47)

    LEFT_OP	shift, and go to state 205
    RIGHT_OP	shift, and go to state 206

    $default	reduce using rule 47 (relational_expression)



state 279

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 40)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 41)
    relational_expression  ->  relational_expression GE_OP shift_expression .   (rule 48)

    LEFT_OP	shift, and go to state 205
    RIGHT_OP	shift, and go to state 206

    $default	reduce using rule 48 (relational_expression)



state 280

    relational_expression  ->  relational_expression @4 '<' . shift_expression   (rule 44)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 331



state 281

    relational_expression  ->  relational_expression @5 '>' . shift_expression   (rule 46)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 332



state 282

    relational_expression  ->  relational_expression . @4 '<' shift_expression   (rule 44)
    relational_expression  ->  relational_expression . @5 '>' shift_expression   (rule 46)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 47)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 48)
    equality_expression  ->  equality_expression EQ_OP relational_expression .   (rule 50)

    LE_OP	shift, and go to state 207
    GE_OP	shift, and go to state 208

    $default	reduce using rule 50 (equality_expression)

    @4  	go to state 209
    @5  	go to state 210



state 283

    relational_expression  ->  relational_expression . @4 '<' shift_expression   (rule 44)
    relational_expression  ->  relational_expression . @5 '>' shift_expression   (rule 46)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 47)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 48)
    equality_expression  ->  equality_expression NE_OP relational_expression .   (rule 51)

    LE_OP	shift, and go to state 207
    GE_OP	shift, and go to state 208

    $default	reduce using rule 51 (equality_expression)

    @4  	go to state 209
    @5  	go to state 210



state 284

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 50)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 51)
    and_expression  ->  and_expression '&' equality_expression .   (rule 53)

    EQ_OP	shift, and go to state 211
    NE_OP	shift, and go to state 212

    $default	reduce using rule 53 (and_expression)



state 285

    and_expression  ->  and_expression . '&' equality_expression   (rule 53)
    exclusive_or_expression  ->  exclusive_or_expression '^' and_expression .   (rule 55)

    '&' 	shift, and go to state 213

    $default	reduce using rule 55 (exclusive_or_expression)



state 286

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 55)
    inclusive_or_expression  ->  inclusive_or_expression '|' exclusive_or_expression .   (rule 57)

    '^' 	shift, and go to state 214

    $default	reduce using rule 57 (inclusive_or_expression)



state 287

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 57)
    logical_and_expression  ->  logical_and_expression AND_OP inclusive_or_expression .   (rule 59)

    '|' 	shift, and go to state 215

    $default	reduce using rule 59 (logical_and_expression)



state 288

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 59)
    logical_or_expression  ->  logical_or_expression OR_OP logical_and_expression .   (rule 61)

    AND_OP	shift, and go to state 216

    $default	reduce using rule 61 (logical_or_expression)



state 289

    conditional_expression  ->  logical_or_expression '?' expression . ':' conditional_expression   (rule 63)
    expression  ->  expression . ',' assignment_expression   (rule 78)

    ',' 	shift, and go to state 219
    ':' 	shift, and go to state 333



state 290

    expression  ->  expression ',' assignment_expression .   (rule 78)

    $default	reduce using rule 78 (expression)



state 291

    compound_statement  ->  '{' declaration_list statement_list '}' .   (rule 219)

    $default	reduce using rule 219 (compound_statement)



state 292

    selection_statement  ->  selection_statement_first_half ELSE statement .   (rule 231)

    $default	reduce using rule 231 (selection_statement)



state 293

    direct_declarator  ->  direct_declarator '[' direct_declarator_needinsert constant_expression ']' .   (rule 151)

    $default	reduce using rule 151 (direct_declarator)



state 294

    parameter_declaration  ->  declaration_specifiers .   (rule 174)
    declaration_specifiers_declarator  ->  declaration_specifiers . after_decl_spec   (rule 177)

    $default	reduce using rule 178 (after_decl_spec)

    after_decl_spec	go to state 334



state 295

    direct_declarator  ->  direct_declarator @11 '(' @12 parameter_type_list . @13 ')'   (rule 156)

    $default	reduce using rule 155 (@13)

    @13 	go to state 335



state 296

    parameter_type_list  ->  parameter_list .   (rule 168)
    parameter_type_list  ->  parameter_list . ',' ELLIPSIS   (rule 169)
    parameter_list  ->  parameter_list . ',' parameter_declaration   (rule 171)

    ',' 	shift, and go to state 336

    $default	reduce using rule 168 (parameter_type_list)



state 297

    parameter_list  ->  parameter_declaration .   (rule 170)

    $default	reduce using rule 170 (parameter_list)



state 298

    parameter_declaration  ->  declaration_specifiers_declarator . declarator end_declarator   (rule 172)
    parameter_declaration  ->  declaration_specifiers_declarator . abstract_declarator end_declarator   (rule 173)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 337
    '[' 	shift, and go to state 258
    '*' 	shift, and go to state 25

    declarator	go to state 338
    direct_declarator	go to state 36
    pointer	go to state 339
    abstract_declarator	go to state 340
    direct_abstract_declarator	go to state 261



state 299

    direct_declarator  ->  direct_declarator @14 '(' identifier_list ')' .   (rule 158)

    $default	reduce using rule 158 (direct_declarator)



state 300

    identifier_list  ->  identifier_list ',' . IDENTIFIER   (rule 180)

    IDENTIFIER	shift, and go to state 341



state 301

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list enumerator_list_end '}' .   (rule 136)

    $default	reduce using rule 136 (enum_specifier)



state 302

    initializer  ->  '{' initializer_list ',' . '}'   (rule 204)
    initializer_list  ->  initializer_list ',' . initializer   (rule 206)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '{' 	shift, and go to state 149
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    '}' 	shift, and go to state 342

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 150
    initializer	go to state 343



state 303

    initializer  ->  '{' initializer_list '}' .   (rule 203)

    $default	reduce using rule 203 (initializer)



state 304

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' @6 struct_declaration_list @7 . '}'   (rule 115)

    '}' 	shift, and go to state 344



state 305

    struct_declaration_list  ->  struct_declaration_list struct_declaration .   (rule 124)

    $default	reduce using rule 124 (struct_declaration_list)



state 306

    struct_declarator  ->  ':' . constant_expression   (rule 133)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 163
    constant_expression	go to state 345



state 307

    struct_declaration  ->  specifier_qualifier_list struct_declarator_list . ';'   (rule 125)
    struct_declarator_list  ->  struct_declarator_list . ',' struct_declarator   (rule 131)

    ',' 	shift, and go to state 346
    ';' 	shift, and go to state 347



state 308

    struct_declarator_list  ->  struct_declarator .   (rule 130)

    $default	reduce using rule 130 (struct_declarator_list)



state 309

    struct_declarator  ->  declarator .   (rule 132)
    struct_declarator  ->  declarator . ':' constant_expression   (rule 134)

    ':' 	shift, and go to state 348

    $default	reduce using rule 132 (struct_declarator)



state 310

    struct_or_union_specifier  ->  struct_or_union @8 '{' @9 struct_declaration_list @10 . '}'   (rule 119)

    '}' 	shift, and go to state 349



state 311

    unary_expression  ->  SIZEOF '(' type_name ')' .   (rule 23)

    $default	reduce using rule 23 (unary_expression)



state 312

    labeled_statement  ->  CASE constant_expression ':' statement .   (rule 214)

    $default	reduce using rule 214 (labeled_statement)



state 313

    expression  ->  expression . ',' assignment_expression   (rule 78)
    selection_statement_first_half  ->  IF '(' @23 expression . @24 ')' @25 statement   (rule 229)

    ',' 	shift, and go to state 219

    $default	reduce using rule 227 (@24)

    @24 	go to state 350



state 314

    selection_statement  ->  SWITCH '(' expression ')' . statement   (rule 232)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 351
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 315

    iteration_statement  ->  WHILE '(' expression ')' . statement   (rule 233)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 352
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 316

    iteration_statement  ->  DO statement WHILE '(' . expression ')' ';'   (rule 234)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 353



state 317

    iteration_statement  ->  FOR '(' expression_statement expression_statement . ')' statement   (rule 235)
    iteration_statement  ->  FOR '(' expression_statement expression_statement . expression ')' statement   (rule 236)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    ')' 	shift, and go to state 354
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 355



state 318

    direct_abstract_declarator  ->  '(' ')' .   (rule 194)

    $default	reduce using rule 194 (direct_abstract_declarator)



state 319

    direct_abstract_declarator  ->  '(' abstract_declarator . @16 ')'   (rule 187)

    $default	reduce using rule 186 (@16)

    @16 	go to state 356



state 320

    direct_abstract_declarator  ->  '(' @19 . parameter_type_list @20 ')'   (rule 197)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    $default	reduce using rule 175 (parameter_declaration)

    declaration_specifiers	go to state 294
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    parameter_type_list	go to state 357
    parameter_list	go to state 296
    parameter_declaration	go to state 297
    declaration_specifiers_declarator	go to state 298



state 321

    direct_abstract_declarator  ->  '[' ']' .   (rule 188)

    $default	reduce using rule 188 (direct_abstract_declarator)



state 322

    direct_abstract_declarator  ->  '[' constant_expression . ']'   (rule 189)

    ']' 	shift, and go to state 358



state 323

    abstract_declarator  ->  pointer direct_abstract_declarator .   (rule 185)
    direct_abstract_declarator  ->  direct_abstract_declarator . @17 '[' ']'   (rule 191)
    direct_abstract_declarator  ->  direct_abstract_declarator . @18 '[' constant_expression ']'   (rule 193)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' ')'   (rule 198)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' @21 parameter_type_list @22 ')'   (rule 201)

    '(' 	shift, and go to state 324

    $default	reduce using rule 185 (abstract_declarator)

    @17 	go to state 325
    @18 	go to state 326



state 324

    direct_abstract_declarator  ->  direct_abstract_declarator '(' . ')'   (rule 198)
    direct_abstract_declarator  ->  direct_abstract_declarator '(' . @21 parameter_type_list @22 ')'   (rule 201)

    ')' 	shift, and go to state 359

    ')' 	[reduce using rule 199 (@21)]
    $default	reduce using rule 199 (@21)

    @21 	go to state 360



state 325

    direct_abstract_declarator  ->  direct_abstract_declarator @17 . '[' ']'   (rule 191)

    '[' 	shift, and go to state 361



state 326

    direct_abstract_declarator  ->  direct_abstract_declarator @18 . '[' constant_expression ']'   (rule 193)

    '[' 	shift, and go to state 362



state 327

    cast_expression  ->  '(' type_name ')' cast_expression .   (rule 31)

    $default	reduce using rule 31 (cast_expression)



state 328

    postfix_expression  ->  postfix_expression '(' argument_expression_list ')' .   (rule 11)

    $default	reduce using rule 11 (postfix_expression)



state 329

    argument_expression_list  ->  argument_expression_list ',' . assignment_expression   (rule 17)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 363



state 330

    postfix_expression  ->  postfix_expression @1 '[' @2 . expression @3 ']'   (rule 9)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 364



state 331

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 40)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 41)
    relational_expression  ->  relational_expression @4 '<' shift_expression .   (rule 44)

    LEFT_OP	shift, and go to state 205
    RIGHT_OP	shift, and go to state 206

    $default	reduce using rule 44 (relational_expression)



state 332

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 40)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 41)
    relational_expression  ->  relational_expression @5 '>' shift_expression .   (rule 46)

    LEFT_OP	shift, and go to state 205
    RIGHT_OP	shift, and go to state 206

    $default	reduce using rule 46 (relational_expression)



state 333

    conditional_expression  ->  logical_or_expression '?' expression ':' . conditional_expression   (rule 63)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 365



state 334

    declaration_specifiers_declarator  ->  declaration_specifiers after_decl_spec .   (rule 177)

    $default	reduce using rule 177 (declaration_specifiers_declarator)



state 335

    direct_declarator  ->  direct_declarator @11 '(' @12 parameter_type_list @13 . ')'   (rule 156)

    ')' 	shift, and go to state 366



state 336

    parameter_type_list  ->  parameter_list ',' . ELLIPSIS   (rule 169)
    parameter_list  ->  parameter_list ',' . parameter_declaration   (rule 171)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ELLIPSIS	shift, and go to state 367
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    $default	reduce using rule 175 (parameter_declaration)

    declaration_specifiers	go to state 294
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    parameter_declaration	go to state 368
    declaration_specifiers_declarator	go to state 298



state 337

    direct_declarator  ->  '(' . declarator ')'   (rule 150)
    direct_abstract_declarator  ->  '(' . abstract_declarator @16 ')'   (rule 187)
    direct_abstract_declarator  ->  '(' . ')'   (rule 194)
    direct_abstract_declarator  ->  '(' . @19 parameter_type_list @20 ')'   (rule 197)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 337
    ')' 	shift, and go to state 318
    '[' 	shift, and go to state 258
    '*' 	shift, and go to state 25

    ')' 	[reduce using rule 195 (@19)]
    $default	reduce using rule 195 (@19)

    declarator	go to state 43
    direct_declarator	go to state 36
    pointer	go to state 339
    abstract_declarator	go to state 319
    direct_abstract_declarator	go to state 261
    @19 	go to state 320



state 338

    parameter_declaration  ->  declaration_specifiers_declarator declarator . end_declarator   (rule 172)

    $default	reduce using rule 176 (end_declarator)

    end_declarator	go to state 369



state 339

    declarator  ->  pointer . direct_declarator   (rule 146)
    abstract_declarator  ->  pointer .   (rule 183)
    abstract_declarator  ->  pointer . direct_abstract_declarator   (rule 185)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 337
    '[' 	shift, and go to state 258

    $default	reduce using rule 183 (abstract_declarator)

    direct_declarator	go to state 64
    direct_abstract_declarator	go to state 323



state 340

    parameter_declaration  ->  declaration_specifiers_declarator abstract_declarator . end_declarator   (rule 173)

    $default	reduce using rule 176 (end_declarator)

    end_declarator	go to state 370



state 341

    identifier_list  ->  identifier_list ',' IDENTIFIER .   (rule 180)

    $default	reduce using rule 180 (identifier_list)



state 342

    initializer  ->  '{' initializer_list ',' '}' .   (rule 204)

    $default	reduce using rule 204 (initializer)



state 343

    initializer_list  ->  initializer_list ',' initializer .   (rule 206)

    $default	reduce using rule 206 (initializer_list)



state 344

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' @6 struct_declaration_list @7 '}' .   (rule 115)

    $default	reduce using rule 115 (struct_or_union_specifier)



state 345

    struct_declarator  ->  ':' constant_expression .   (rule 133)

    $default	reduce using rule 133 (struct_declarator)



state 346

    struct_declarator_list  ->  struct_declarator_list ',' . struct_declarator   (rule 131)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 24
    '*' 	shift, and go to state 25
    ':' 	shift, and go to state 306

    struct_declarator	go to state 371
    declarator	go to state 309
    direct_declarator	go to state 36
    pointer	go to state 37



state 347

    struct_declaration  ->  specifier_qualifier_list struct_declarator_list ';' .   (rule 125)

    $default	reduce using rule 125 (struct_declaration)



state 348

    struct_declarator  ->  declarator ':' . constant_expression   (rule 134)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 163
    constant_expression	go to state 372



state 349

    struct_or_union_specifier  ->  struct_or_union @8 '{' @9 struct_declaration_list @10 '}' .   (rule 119)

    $default	reduce using rule 119 (struct_or_union_specifier)



state 350

    selection_statement_first_half  ->  IF '(' @23 expression @24 . ')' @25 statement   (rule 229)

    ')' 	shift, and go to state 373



state 351

    selection_statement  ->  SWITCH '(' expression ')' statement .   (rule 232)

    $default	reduce using rule 232 (selection_statement)



state 352

    iteration_statement  ->  WHILE '(' expression ')' statement .   (rule 233)

    $default	reduce using rule 233 (iteration_statement)



state 353

    expression  ->  expression . ',' assignment_expression   (rule 78)
    iteration_statement  ->  DO statement WHILE '(' expression . ')' ';'   (rule 234)

    ')' 	shift, and go to state 374
    ',' 	shift, and go to state 219



state 354

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' . statement   (rule 235)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 375
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 355

    expression  ->  expression . ',' assignment_expression   (rule 78)
    iteration_statement  ->  FOR '(' expression_statement expression_statement expression . ')' statement   (rule 236)

    ')' 	shift, and go to state 376
    ',' 	shift, and go to state 219



state 356

    direct_abstract_declarator  ->  '(' abstract_declarator @16 . ')'   (rule 187)

    ')' 	shift, and go to state 377



state 357

    direct_abstract_declarator  ->  '(' @19 parameter_type_list . @20 ')'   (rule 197)

    $default	reduce using rule 196 (@20)

    @20 	go to state 378



state 358

    direct_abstract_declarator  ->  '[' constant_expression ']' .   (rule 189)

    $default	reduce using rule 189 (direct_abstract_declarator)



state 359

    direct_abstract_declarator  ->  direct_abstract_declarator '(' ')' .   (rule 198)

    $default	reduce using rule 198 (direct_abstract_declarator)



state 360

    direct_abstract_declarator  ->  direct_abstract_declarator '(' @21 . parameter_type_list @22 ')'   (rule 201)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    INLINE	shift, and go to state 22
    INLINE2	shift, and go to state 23

    $default	reduce using rule 175 (parameter_declaration)

    declaration_specifiers	go to state 294
    function_specifier	go to state 28
    storage_class_specifier	go to state 29
    type_specifier	go to state 30
    struct_or_union_specifier	go to state 31
    struct_or_union	go to state 32
    enum_specifier	go to state 33
    type_qualifier	go to state 34
    parameter_type_list	go to state 379
    parameter_list	go to state 296
    parameter_declaration	go to state 297
    declaration_specifiers_declarator	go to state 298



state 361

    direct_abstract_declarator  ->  direct_abstract_declarator @17 '[' . ']'   (rule 191)

    ']' 	shift, and go to state 380



state 362

    direct_abstract_declarator  ->  direct_abstract_declarator @18 '[' . constant_expression ']'   (rule 193)

    IDENTIFIER	shift, and go to state 148
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 162
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 163
    constant_expression	go to state 381



state 363

    argument_expression_list  ->  argument_expression_list ',' assignment_expression .   (rule 17)

    $default	reduce using rule 17 (argument_expression_list)



state 364

    postfix_expression  ->  postfix_expression @1 '[' @2 expression . @3 ']'   (rule 9)
    expression  ->  expression . ',' assignment_expression   (rule 78)

    ',' 	shift, and go to state 219

    $default	reduce using rule 8 (@3)

    @3  	go to state 382



state 365

    conditional_expression  ->  logical_or_expression '?' expression ':' conditional_expression .   (rule 63)

    $default	reduce using rule 63 (conditional_expression)



state 366

    direct_declarator  ->  direct_declarator @11 '(' @12 parameter_type_list @13 ')' .   (rule 156)

    $default	reduce using rule 156 (direct_declarator)



state 367

    parameter_type_list  ->  parameter_list ',' ELLIPSIS .   (rule 169)

    $default	reduce using rule 169 (parameter_type_list)



state 368

    parameter_list  ->  parameter_list ',' parameter_declaration .   (rule 171)

    $default	reduce using rule 171 (parameter_list)



state 369

    parameter_declaration  ->  declaration_specifiers_declarator declarator end_declarator .   (rule 172)

    $default	reduce using rule 172 (parameter_declaration)



state 370

    parameter_declaration  ->  declaration_specifiers_declarator abstract_declarator end_declarator .   (rule 173)

    $default	reduce using rule 173 (parameter_declaration)



state 371

    struct_declarator_list  ->  struct_declarator_list ',' struct_declarator .   (rule 131)

    $default	reduce using rule 131 (struct_declarator_list)



state 372

    struct_declarator  ->  declarator ':' constant_expression .   (rule 134)

    $default	reduce using rule 134 (struct_declarator)



state 373

    selection_statement_first_half  ->  IF '(' @23 expression @24 ')' . @25 statement   (rule 229)

    $default	reduce using rule 228 (@25)

    @25 	go to state 383



state 374

    iteration_statement  ->  DO statement WHILE '(' expression ')' . ';'   (rule 234)

    ';' 	shift, and go to state 384



state 375

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' statement .   (rule 235)

    $default	reduce using rule 235 (iteration_statement)



state 376

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' . statement   (rule 236)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 385
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 377

    direct_abstract_declarator  ->  '(' abstract_declarator @16 ')' .   (rule 187)

    $default	reduce using rule 187 (direct_abstract_declarator)



state 378

    direct_abstract_declarator  ->  '(' @19 parameter_type_list @20 . ')'   (rule 197)

    ')' 	shift, and go to state 386



state 379

    direct_abstract_declarator  ->  direct_abstract_declarator '(' @21 parameter_type_list . @22 ')'   (rule 201)

    $default	reduce using rule 200 (@22)

    @22 	go to state 387



state 380

    direct_abstract_declarator  ->  direct_abstract_declarator @17 '[' ']' .   (rule 191)

    $default	reduce using rule 191 (direct_abstract_declarator)



state 381

    direct_abstract_declarator  ->  direct_abstract_declarator @18 '[' constant_expression . ']'   (rule 193)

    ']' 	shift, and go to state 388



state 382

    postfix_expression  ->  postfix_expression @1 '[' @2 expression @3 . ']'   (rule 9)

    ']' 	shift, and go to state 389



state 383

    selection_statement_first_half  ->  IF '(' @23 expression @24 ')' @25 . statement   (rule 229)

    IDENTIFIER	shift, and go to state 80
    CONSTANT	shift, and go to state 81
    STRING_LITERAL	shift, and go to state 82
    SIZEOF	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    CASE	shift, and go to state 86
    DEFAULT	shift, and go to state 87
    IF  	shift, and go to state 88
    SWITCH	shift, and go to state 89
    WHILE	shift, and go to state 90
    DO  	shift, and go to state 91
    FOR 	shift, and go to state 92
    GOTO	shift, and go to state 93
    CONTINUE	shift, and go to state 94
    BREAK	shift, and go to state 95
    RETURN	shift, and go to state 96
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 104

    primary_expression	go to state 106
    postfix_expression	go to state 107
    unary_expression	go to state 108
    unary_operator	go to state 109
    cast_expression	go to state 110
    multiplicative_expression	go to state 111
    additive_expression	go to state 112
    shift_expression	go to state 113
    relational_expression	go to state 114
    equality_expression	go to state 115
    and_expression	go to state 116
    exclusive_or_expression	go to state 117
    inclusive_or_expression	go to state 118
    logical_and_expression	go to state 119
    logical_or_expression	go to state 120
    conditional_expression	go to state 121
    assignment_expression	go to state 122
    expression	go to state 123
    statement	go to state 390
    labeled_statement	go to state 127
    compound_statement	go to state 128
    expression_statement	go to state 131
    selection_statement_first_half	go to state 132
    selection_statement	go to state 133
    iteration_statement	go to state 134
    jump_statement	go to state 135



state 384

    iteration_statement  ->  DO statement WHILE '(' expression ')' ';' .   (rule 234)

    $default	reduce using rule 234 (iteration_statement)



state 385

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' statement .   (rule 236)

    $default	reduce using rule 236 (iteration_statement)



state 386

    direct_abstract_declarator  ->  '(' @19 parameter_type_list @20 ')' .   (rule 197)

    $default	reduce using rule 197 (direct_abstract_declarator)



state 387

    direct_abstract_declarator  ->  direct_abstract_declarator '(' @21 parameter_type_list @22 . ')'   (rule 201)

    ')' 	shift, and go to state 391



state 388

    direct_abstract_declarator  ->  direct_abstract_declarator @18 '[' constant_expression ']' .   (rule 193)

    $default	reduce using rule 193 (direct_abstract_declarator)



state 389

    postfix_expression  ->  postfix_expression @1 '[' @2 expression @3 ']' .   (rule 9)

    $default	reduce using rule 9 (postfix_expression)



state 390

    selection_statement_first_half  ->  IF '(' @23 expression @24 ')' @25 statement .   (rule 229)

    $default	reduce using rule 229 (selection_statement_first_half)



state 391

    direct_abstract_declarator  ->  direct_abstract_declarator '(' @21 parameter_type_list @22 ')' .   (rule 201)

    $default	reduce using rule 201 (direct_abstract_declarator)



state 392

    $   	go to state 393



state 393

    $default	accept
