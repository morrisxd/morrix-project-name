cscope 15 $HOME/WDDS_4_2_1_DEV_1537_UFE412_FOR_ERRICSON/Ericsson/enea/wdds_4_2/examples/spp_npu               0001129764
	@np_app.c

33 
	~"≈_comm⁄.h
"

34 
	~"•p_≈u_lök.h
"

35 
	~"•p_wddi_£rvî.h
"

36 
	~<£¨ch.h
>

37 
	~<£m≠h‹e.h
>

39 
	#ETH_ALEN
 6

	)

44 
	sëhhdr
 {

45 
WP_U8
 
	mh_de°
[
ETH_ALEN
];

46 
WP_U8
 
	mh_sour˚
[
ETH_ALEN
];

47 
WP_U16
 
	mh_¥Ÿo
;

50 
	svœn_ëhhdr
 {

51 
WP_U8
 
	mh_de°
[
ETH_ALEN
];

52 
WP_U8
 
	mh_sour˚
[
ETH_ALEN
];

53 
WP_U16
 
	mh_vœn_¥Ÿo
;

54 
WP_U16
 
	mh_vœn_TCI
;

55 
WP_U16
 
	mh_vœn_íˇpsuœãd_¥Ÿo
;

59 
	sudphdr
 {

60 
WP_U16
 
	msour˚
;

61 
WP_U16
 
	mde°
;

62 
WP_U16
 
	mÀn
;

63 
WP_U16
 
	mcheck
;

65 
	sùhdr
 {

66 
WP_U8
 
	mihl
:4,

67 
	mvîsi⁄
:4;

68 
WP_U8
 
	mtos
;

69 
WP_U16
 
	mtŸ_Àn
;

70 
WP_U16
 
	mid
;

71 
WP_U16
 
	m‰ag_off
;

72 
WP_U8
 
	mâl
;

73 
WP_U8
 
	m¥Ÿocﬁ
;

74 
WP_U16
 
	mcheck
;

75 
WP_U32
 
	mßddr
;

76 
WP_U32
 
	mdaddr
;

80 
pùefd
[2];

81 
pùefd_RxFrH¥io
[2];

82 
pùefdRxEth
[2];

83 
pùefdRxEthH¥io
[2];

84 
WP_U32
 
dps_ProgømImage
[];

85 
WP_U16
 
dps_PC_TabÀ_Inô
[];

86 
NODE
* 
‰_dl_bvci_nodehód
[];

87 
NODE
* 
‰_dl_dp‹t_nodehód
[];

88 
NODE
* 
upd©e_bvci_nodehód
;

89 
WUFE_h™dÀ
 
u„_devi˚_h™dÀ
[
N_UFE_MAX_LINES_T1
][32];

90 
g_logLevñ
;

92 
WP_CHAR
 
	g≠≤ame
[] = "sppÇpu";

93 
	#WPI_MASK_BITS
(
n
Ë((1 << (n)Ë- 1)

	)

94 
	#WPI_INDEX_MASK
 
	`WPI_MASK_BITS
(18)

	)

95 
	#WPI_SHIFT_MASK
(
x
,
s
,
m
Ë((((
WP_U32
)(x)Ë>> (s)Ë& (m))

	)

96 
	#WPI_HANDLE_INDEX
(
x
Ë
	`WPI_SHIFT_MASK
(x, 0, 
WPI_INDEX_MASK
)

	)

100 
AµRxEvít
(
WP_èg
 
èg
, 
WP_U32
 
d©a
, WP_U32 
öfo
);

101 #i‡
NPU_HOST_OLP


102 *
pcimem_c›y
(* 
b
,c⁄° * 
a
,
n
);

104 
‰_sy°em_öô
(
WP_U32
 
u„_p‹t
);

105 
≈_öôül_‰_qnode
(
WP_U32
 
u„_p‹t
);

107 
WP_h™dÀ
 
	g≈_Êow_ho°
[10];

109 
	#N_FLOWS
 20000

	)

110 
	#N_IW_PORTS
 10

	)

111 
	#N_IW_AGGS
 40000

	)

113 
	#POOL_LIMIT
 8

	)

114 
	#LEARNING_QUEUE_SIZE
 200

	)

116 
	#STATISTICS_ENABLE
 1

	)

119 
	#NPU_FILTER_NUM
 6

	)

120 #i‡
BFD_OVERETH


121 
	#NPU_FILTER_MASK_ALL
 0xfc000000

	)

122 
	#NPU_FILTER_MASK_DEFRAG
 0x0c000000

	)

123 
	#NPU_FILTER_MASK_MAC
 0x7c000000

	)

126 
	#NPU_FILTER_MASK_ALL
 0xf8000000

	)

127 
	#NPU_FILTER_MASK_DEFRAG
 0x18000000

	)

128 
	#NPU_FILTER_MASK_MAC
 0x78000000

	)

131 
	#NPU_FILTER_DST_MAC
 0

	)

132 
	#NPU_FILTER_DPORT_UDP_BFD
 1

	)

133 
	#NPU_FILTER_SIP_UDP_PEER
 2

	)

134 
	#NPU_FILTER_UDP_DEFRAG
 3

	)

135 
	#NPU_FILTER_DPORT_UDP_IP_UL
 4

	)

136 
	#NPU_FILTER_DPORT_UDP_FMC
 5

	)

139 
	#MAX_BFD_TRANSMISSION_RATE
 10

	)

140 
	#MIN_BFD_TRANSMISSION_RATE
 1

	)

141 
	#MAX_BFD_DETECTION_TIME
 10

	)

142 
	#MIN_BFD_DETECTION_TIME
 1

	)

143 
	#MAX_BFD_RX_SESSIONS
 1

	)

144 
	#MAX_BFD_TX_SESSIONS
 1

	)

147 vﬁ©ûê
WP_U32
 
	grx_evít
 = 0;

148 vﬁ©ûê
WP_U32
 
	gtx_evít
 = 0;

151 
WP_h™dÀ
 
	gdeÁu…_ho°_aggªg©i⁄
;

152 
WP_h™dÀ
 
	gagg_íë_1
, 
	gagg_íë_2
;

153 
WP_h™dÀ
 
	gagg_íë_dfc_1
, 
	gagg_íë_dfc_2
;

155 
WP_h™dÀ
 
	gqnode_iw
,
	gqniw_‰ag
,
	gqniw_de‰ag
;

156 
WP_h™dÀ
 
	giw_sys_bridgög
;

158 
WP_h™dÀ
 
	ggbï1
, 
	ggbï2
, 
	ggbedev1
, 
	ggbedev2
;

159 
WP_h™dÀ
 
	gpoﬁ_rög_ho°
;

160 
WP_h™dÀ
 
	gpoﬁ_256
,
	gpoﬁ_2048
,
	gpoﬁ_de‰ag
,
	gpoﬁ_‰ag
;

162 
WP_h™dÀ
 
	giwp_ho°
, 
	giw_ho°_dev
;

163 
WP_h™dÀ
 
	giw_tx_ho°_h™dÀ
;

164 
WP_h™dÀ
 
	giw_rx_ho°_h™dÀ
;

166 
WP_h™dÀ
 
	gtx_íë_h™dÀ_1
, 
	grx_íë_h™dÀ_1
, 
	gtx_íë_h™dÀ_2
, 
	grx_íë_h™dÀ_2
 ;

168 
WP_Êow_˛ass_ruÀ
 
	gruÀ_cfg
;

169 
WP_Êow_˛ass_f‹w¨dög_a˘i⁄
 
	gf‹w¨dög_a˘i⁄
;

172 
WP_h™dÀ
 
	gù_‰ag_sy°em_h™dÀ
;

173 
WP_h™dÀ
 
	gù_de‰ag_c⁄ãxt_poﬁ
;

174 
WP_h™dÀ
 
	gù_de‰ag_hash_poﬁ
;

177 
WP_öt_queue_èbÀ
 
	göt_queue_èbÀs
 = {{{30000, 1}, {3000, 1}, {10, 1}, {10, 1}}};

180 
WP_iw_globÆ
 
	gmax_iw
[1] = {

182  
N_IW_AGGS
,

189  
NULL
,

190  {
N_UFE_MAX_PHYS
*4+20, 0, 0,N_UFE_MAX_PHYS*4+20,0},

193 { 
WP_IW_POLICER_DISABLE
,

194  
WP_IW_STATISTICS_BUNDLE_STAT_DISABLE
,

195  
WP_IW_L2_HEADER_EXTENSION_ENABLE
,

196  
WP_IW_ENHANCED_FLOW_STAT_DISABLE
,

197  
WP_IW_FLOW_STAT_ENABLE
,

198  
WP_IW_FR_TX_FLOW_STAT_ENABLE
,

199  
WP_IW_MFC_ALLOC_ENABLE
,

200  
WP_IW_LEARNING_DISABLE
,

201  
WP_IW_PORT_FILTERING_ENABLE
,

202  
WP_IW_LPM_ALLOC_DISABLE
,

208  
N_IW_PORTS
,

212  
NULL
,

219 
WP_c⁄ãxt
 
	gc⁄ãxt
[1] =

224 { 
WP_BUS_PARAM
, 
APP_BANK_PARAM
},

225 { 
WP_BUS_PACKET
, 
APP_BANK_PACKET
},

226 { 
WP_BUS_INTERNAL
, 
APP_BANK_INTERNAL
},

227 { 
WP_BUS_HOST
, 
APP_BANK_HOST
},

228 { 
WP_BUS_HOST
, 
APP_BANK_HOST
},

229 { 
WP_BUS_HOST
, 
APP_BANK_HOST
},

230 { 
WP_BUS_NONE
, 0},

231 { 
WP_BUS_NONE
, 0},

232 { 
WP_BUS_INTERNAL
, 
APP_BANK_INTERNAL
},

233 { 
WP_BUS_INTERNAL
, 
APP_BANK_INTERNAL
},

234 { 
WP_BUS_PARAM
, 
APP_BANK_PARAM
},

235 { 
WP_BUS_HOST
 , 
APP_BANK_HOST
},

236 { 
WP_BUS_PARAM
 , 
APP_BANK_PARAM
},

237 { 
WP_BUS_PARAM
, 
APP_BANK_PARAM
},

238 { 
WP_BUS_PARAM
, 
APP_BANK_PARAM
},

239 { 
WP_BUS_PARAM
, 
APP_BANK_PARAM
},

240 { 
WP_BUS_PACKET
, 
APP_BANK_PACKET
},

241 { 
WP_BUS_PACKET
, 
APP_BANK_PACKET
},

242 { 
WP_BUS_PARAM
, 
APP_BANK_PARAM
},

243 { 
WP_BUS_INTERNAL
, 
APP_BANK_INTERNAL
},

244 { 
WP_BUS_PACKET
, 
APP_BANK_PARAM
},

246 { 
WP_BUS_PARAM
, 
APP_BANK_PARAM
},

247 { 
WP_BUS_PARAM
, 
APP_BANK_PARAM
},

248 { 
WP_BUS_PARAM
, 
APP_BANK_PARAM
},

249 { 
WP_BUS_INTERNAL
, 
APP_BANK_INTERNAL
},

250 { 
WP_BUS_HOST
,
APP_BANK_HOST
},

251 { 
WP_BUS_HOST
,
APP_BANK_HOST
},

252 { 
WP_BUS_NONE
, 0},

253 { 
WP_BUS_INTERNAL
, 
APP_BANK_INTERNAL
},

254 { 
WP_BUS_PARAM
, 
APP_BANK_PARAM
},

255 { 
WP_BUS_NONE
, 0},

256 { 
WP_BUS_NONE
, 0},

258 { 
WP_BUS_PARAM
, 
APP_BANK_PARAM
}

260 { 
WP_BUS_NONE
, 0},

261 { 
WP_BUS_NONE
, 0},

262 { 
WP_BUS_PARAM
, 
APP_BANK_PARAM
}

265 
dps_ProgømImage
, dps_ProgramImage

268 
dps_PC_TabÀ_Inô
, dps_PC_Table_Init

270 &
öt_queue_èbÀs
,

271 
POOL_LIMIT
,

272 
NULL
,

273 
max_iw
,

279 
WP_S32
 
	$QNCÆlback
(
WP_S32
 
°©us
) {

280 
	`F¥ötf
("Aµ: QNCÆlback: Sètu†ªtu∫ed i†%d\n",
°©us
);

282 
	}
}

285 
WP_poﬁ_buf„r_d©a
 
	gbuf„r_d©a_2048
[] = {

290  
WP_BUS_PACKET
,

291  
APP_BANK_PACKET
 }

293 
WP_poﬁ_buf„r_d©a
 
	gbuf„r_d©a_de‰ag
[] = {

298  
WP_BUS_PACKET
,

299  
APP_BANK_PACKET
 }

302 
WP_poﬁ_buf„r_d©a
 
	gbuf„r_d©a_‰ag
[] = {

305  
FRAG_SIZE
+256,

307  
WP_BUS_PACKET
,

308  
APP_BANK_PACKET
 }

311 
WP_qnode_iwq
 
	gqn_iw
[1]=

319 
WP_qnode_iwq
 
	gqn_iw_de‰ag
[1]=

328 
WP_qnode_iwq
 
	gqn_‰ag_iw
[1]=

339 
WP_p‹t_íë
 
	ggbe_s
[1] =

343  
WP_FLOWMODE_FAST
,

344  
WP_ENET_1000_BASE_X_AN
,

345  
WP_IW_BKGND_NOT_USED


351 
WP_mii_mgmt
 
	gmii_mgmt_cfg
[1] =

358 
WP_íë_fûãrs
 
	ggbe_rx_fûãrs
[1] =

361  
WP_ENET_FILTER_PROCESS
,

362  
WP_ENET_FILTER_HOSTTERM
,

363  
WP_ENET_FILTER_HOSTTERM


367 
WP_devi˚_íë_ex
 
	gext_devi˚_íë
[1] =

370  
WP_ENET_FULLDUPLEX
,

371  
WP_DISABLE
,

372  
WP_ENET_FLOW_ENABLE
,

373  
WP_ENET_FLOW_ENABLE
,

374  
WP_ENET_ADDR_ACCEPTALL
,

375 #i‡
STATISTICS_ENABLE


376  
WP_ENET_STAT_ENABLE
,

378  
WP_ENET_STAT_DISABLE
,

380 #i‡
STATISTICS_ENABLE


381  
WP_ENET_STAT_ENABLE
,

383  
WP_ENET_STAT_DISABLE
,

385 #i‡
STATISTICS_ENABLE


386  
WP_ENET_STAT_ENABLE
,

388  
WP_ENET_STAT_DISABLE
,

390  
WP_DISABLE
,

391  
gbe_rx_fûãrs
,

397 
WP_devi˚_íë
 
	ggbe_dev
[1] =

401  
N_MAX_IP_FRAME_SIZE
,

402  
WP_UNUSED
,

405  
WP_ENET_NORMAL
,

406  
NULL
,

412 
WP_ch_íë
 
	gch_íë
[1] =

415  
WP_PKTCH_INT_DISABLE
,

416  
WP_PKTCH_IWM_ENABLE
,

417  
WP_PKTCH_TEST_DISABLE
,

420  
WP_FMU_SHAPING_TYPE_STRICT
,

421  
NULL
,

422  
N_MAX_IP_FRAME_SIZE
,

433 
WP_dfc_sys_öfo
 
	gdfc_sys_öfo
[1] =

436  
WP_IW_2K_HASH_ENTRIES
,

437  
WP_IW_PORT_FILTERING_ENABLE
,

438  
WP_IW_DENY_EQUAL_IP_DISABLE
,

439  
WP_DISABLE


444 
WP_dfc_Êow_öfo
 
	gíë_to_íë_dfc_Êow_öfo
[
NPU_FILTER_NUM
] =

471 
WP_˛assifiˇti⁄_fûãr
 
	gíë_to_íë_˛assifiˇti⁄_fûãr_cfg
[
NPU_FILTER_NUM
] =

474  
WP_FIELD_IP_SA
 | 
WP_FIELD_PROTOCOL
,

475  
WP_CLASS_FILTER_NO_MATCH_CONTINUE
,

476  
WP_CLASS_FILTER_EMC
,

480  
WP_FIELD_PROTOCOL
 ,

481  
WP_CLASS_FILTER_NO_MATCH_CONTINUE
,

482  
WP_CLASS_FILTER_EMC
,

485  
WP_FIELD_DST_PORT
 ,

486  
WP_CLASS_FILTER_NO_MATCH_CONTINUE
,

487  
WP_CLASS_FILTER_EMC
,

490  
WP_FIELD_DST_PORT
 | 
WP_FIELD_PROTOCOL
 ,

491  
WP_CLASS_FILTER_NO_MATCH_ACCEPT
,

492  
WP_CLASS_FILTER_MFC
,

499 
WP_Êow_˛ass_ruÀ
 
	gíë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_NUM
] =

502  
NULL
,

503  
NULL
,

504  
WP_FLOW_CLASS_MODE_FLOW_AGG
,

509  
NULL
,

510  
NULL
,

511  
WP_FLOW_CLASS_MODE_FLOW_AGG
,

516  
NULL
,

517  
NULL
,

518  
WP_FLOW_CLASS_MODE_FLOW_AGG
,

523  
NULL
,

524  
NULL
,

525  
WP_FLOW_CLASS_MODE_FLOW_AGG
,

536 
WP_iw_sys_bridgög
 
	giw_sys_⁄e
[1]=

540  
N_IW_AGGS
+1,

541  
WP_IW_DYNAMIC_CLASS
,

542  {
WP_IW_DYNAMIC_CLASS
,
N_FLOWS
,0,
NULL
},

543  
WP_IW_BRIDGE_LEARNING_DISABLE
,

546  
WP_IW_IRQT0
,

547  
LEARNING_QUEUE_SIZE
,

548  
WP_LEARNING_POLLING_MODE
,

551  
WP_IW_32K_HASH_ENTRIES
,

552  
WP_IW_32K_HASH_ENTRIES
,

555  
dfc_sys_öfo


561 
WP_bridge_p‹t
 
	gbp‹t_c⁄f
[1] =

565  
WP_IW_DIRECT_MAP_DISABLE
,

567  
WP_IW_HOST_TERM_MODE
,

568  
WP_IW_LEARNING_DISABLE
,

569  
WP_IW_INGRESS_FILTER_DISABLE
,

572  
WP_IW_ACCEPT_TAGGED_UNTAGGED
,

574  
WP_IW_VLAN_TUNNEL_1Q_IN_1Q_DISABLE
,

575  
WP_IW_VLAN_PRIORITY_ENFORCE_DISABLED
,

576  
WP_IW_BPORT_STAG_VLAN_ETYPE_DISABLE


578  
N_FLOWS
,

580  
WP_IW_GROUP_FILTER_DISABLE
,

581  
WP_IW_UNK_MACSA_FILTER_DISABLE
,

582  
WP_IW_UNK_MC_DROP
,

583  
WP_IW_BC_HT_DISABLE
,

586 #i‡
STATISTICS_ENABLE


587  
WP_IW_PORT_STAT_ENABLE
,

589  
WP_IW_PORT_STAT_DISABLE
,

591  
WP_IW_UNK_UC_SR_DISABLE
,

592  
WP_IW_BPORT_CLASSIFICATION_ENABLED
,

593  
WP_IW_ADV_UNK_LOOKUP_DISABLED
,

594  
WP_IW_CFI_HT_DISABLE
,

595  
WP_IW_RES_MC_HT_DISABLE


597  
WP_DISABLE
,

601  
WP_DISABLE
,

602  
NULL
,

603  
WP_DISABLE


605  
WP_IW_PORT_DFC_LOG_DISABLE


610 
WP_bridge_p‹t
 
	gupd©e_bvci_bp‹t_c⁄f
[1] =

614  
WP_IW_DIRECT_MAP_DISABLE
,

616  
WP_IW_HOST_TERM_MODE
,

617  
WP_IW_LEARNING_DISABLE
,

618  
WP_IW_INGRESS_FILTER_ENABLE
,

621  
WP_IW_ACCEPT_TAGGED_UNTAGGED
,

623  
WP_IW_VLAN_TUNNEL_1Q_IN_1Q_DISABLE
,

624  
WP_IW_VLAN_PRIORITY_ENFORCE_DISABLED
,

625  
WP_IW_BPORT_STAG_VLAN_ETYPE_DISABLE


627  
N_FLOWS
,

629  
WP_IW_GROUP_FILTER_DISABLE
,

630  
WP_IW_UNK_MACSA_FILTER_DISABLE
,

631  
WP_IW_UNK_MC_DROP
,

632  
WP_IW_BC_HT_DISABLE
,

635 #i‡
STATISTICS_ENABLE


636  
WP_IW_PORT_STAT_ENABLE
,

638  
WP_IW_PORT_STAT_DISABLE
,

640  
WP_IW_UNK_UC_SR_ENABLE
,

641  
WP_IW_BPORT_CLASSIFICATION_ENABLED
,

642  
WP_IW_ADV_UNK_LOOKUP_DISABLED
,

643  
WP_IW_CFI_HT_DISABLE
,

644  
WP_IW_RES_MC_HT_DISABLE


646  
WP_DISABLE
,

650  
WP_DISABLE
,

651  
NULL
,

652  
WP_DISABLE


654  
WP_IW_PORT_DFC_LOG_DISABLE


660 
WP_tx_bödög
 
	gtx_bödög
[1]=

664  
WP_IW_DYN_CH_INSERT_DISABLE
,

671 
WP_rx_bödög_bridgög
 
	grx_bödög_íë
[1]=

675  
N_MAX_IP_FRAME_SIZE
,

681 
WP_rx_bödög_routög
 
	grx_bödög
[1] =

685  
WP_IW_IPV4
,

686  
N_MAX_IP_FRAME_SIZE
,

697 
WP_iw_agg_dúe˘m≠
 
	gtx_agg_íë
[1] =

702  
WP_IW_RFCS_DISABLE
,

703  
WP_IW_L2H_INSERT_DISABLE
,

704  
WP_IW_IRQT0
,

705  
WP_IW_ERRPKT_DISCARD
,

706  
WP_IW_INT_DISABLE
,

707 #i‡
STATISTICS_ENABLE


708  
WP_IW_STAT_ENABLE
,

710  
WP_IW_STAT_DISABLE
,

712  
WP_IW_TIME_STAMP_DISABLE
,

724  
NULL
,

726  
NULL
,

727  
WP_IW_LENGTH_UPDATE_DISABLED
,

732 
WP_iw_agg_dúe˘m≠
 
	gtx_agg_íë_dfc
[1] =

737  
WP_IW_RFCS_ENABLE
,

738  
WP_IW_L2H_INSERT_ENABLE
,

739  
WP_IW_IRQT0
,

740  
WP_IW_ERRPKT_DISCARD
,

741  
WP_IW_INT_DISABLE
,

742 #i‡
STATISTICS_ENABLE


743  
WP_IW_STAT_ENABLE
,

745  
WP_IW_STAT_DISABLE
,

747  
WP_IW_TIME_STAMP_DISABLE
,

762  
NULL
,

764  
NULL
,

765  
WP_IW_LENGTH_UPDATE_L3
,

771 
WP_iw_agg_dúe˘m≠_íë
 
	gtx_agg_íë_deÁu…
[1] =

776  
WP_IW_RFCS_ENABLE
,

777  
WP_IW_L2H_INSERT_DISABLE
,

778  
WP_IW_IRQT1
,

779  
WP_IW_ERRPKT_DISCARD
,

780  
WP_IW_INT_ENABLE
,

781 #i‡
STATISTICS_ENABLE


782  
WP_IW_STAT_ENABLE
,

784  
WP_IW_STAT_DISABLE
,

786  
WP_IW_TIME_STAMP_DISABLE
,

801  
NULL
,

803  
NULL
,

804  
WP_IW_LENGTH_UPDATE_DISABLED
,

811 
WP_ch_iw_rx
 
	gch_c⁄fig_iw
[1]=

816  
WP_IW_TX_BINDING
,

817  
tx_bödög


822 
WP_iw_ù_‰agmíèti⁄_sy°em
 
	gù_‰ag_sys
[1] =

829 
WP_IW_FRAG_FORWARDING_ANY


832 
WP_iw_ù_de‰ag_c⁄ãxt
 
	gc⁄ãxt_c⁄fig
[1] =

838 
WP_iw_ù_de‰ag_hash
 
	ghash_c⁄fig
[1] =

841  
WP_IW_2K_HASH_ENTRIES
,

844 
WP_iw_ù_‰ag_group
 
	g‰ag_group
[1] =

852 
WP_iw_ù_de‰ag_group
 
	gde‰ag_group
[1] =

858  
WP_IW_IP_DEFRAG_NORMAL_MODE
,

862 
WP_IW_IP_DEFRAG_TIMEOUT_HASH_ENTRIES_SEARCH_DIV_1
,

863  
N_MAX_IP_FRAME_SIZE


867 
WP_iw_agg_routög
 
	gtx_agg_l3
[1] =

872  
WP_IW_DSRV_DISABLE
,

873  
WP_IW_L2H_INSERT_ENABLE
,

874  
WP_IW_FAST_FWD_MODE
,

875  
WP_IW_IRQT1
,

877  
WP_IW_INT_DISABLE
,

878  
WP_IW_STAT_ENABLE
,

879  
WP_IW_TIME_STAMP_DISABLE
,

898 
	#DATA_LENGTH
 256

	)

899 
	#WPL_SIGNAL_RT_SER
 35

	)

900 
	#WPL_SIGNAL_RT_OV
 (
WPL_SIGNAL_RT_SER
 + 1)

	)

901 
	#WPL_SIGNAL_RT_BUSERR
 (
WPL_SIGNAL_RT_SER
 + 2)

	)

904 
WP_ˇÀnd¨_whìl
 
	gˇÀnd¨
[2] =

907  
WP_CW_PSU
,

908  
WP_CW_ID_A
,

909  
WT_MIN_CH_RATE
,

910  
WT_MAX_CH_RATE


912 
WP_CALENDAR_WHEEL_TERM


916 
WP_h™dÀ
 
	giw_íë_1
, 
	giw_íë_2
, 
	giw_íë_3
, 
	giw_íë_1_èg
, 
	giw_íë_2_èg
, 
	giw_íë_3_èg
;

918 
WP_CHAR
 
	gbuf
[4096];

919 
NP_SYSTEM_INFO
 
	g≈_sy°em
 = {0};

921 
WP_h™dÀ
 
	gíë_iw_Êow_de‰ag_aggªg©i⁄
;

922 
WP_h™dÀ
 
	gùde‰ag_agg
;

924 #i‡
USE_WDDI_LOG


925 
	$•pwddiLog
(
Àvñ
, *
msg
) {

926 if(
Àvñ
 <4)

928 
	`F¥ötf
("WDDI LOG: %†\n",
msg
);

931 
	}
}

933 
	$öô_tŸÆ_memöfo
()

936 
STRU_MEMORY_STATICS
 
gë_mem‹y_°©ics
;

937 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

939 
	`Np_ShowMem‹yAvaûabÀ
(&
gë_mem‹y_°©ics
);

941 
öôül_cfg
->
PackëMemTŸÆByã
 = 
gë_mem‹y_°©ics
.
PackëMemLe·Byã
;

942 
öôül_cfg
->
I¡îMemTŸÆByã

gë_mem‹y_°©ics
.
I¡îMemLe·Byã
;

943 
öôül_cfg
->
P¨amMemTŸÆByã

gë_mem‹y_°©ics
.
P¨amMemLe·Byã
;

945 
	}
}

947 
WP_S32
 
	$≈_öô
()

949 
WP_h™dÀ
 
°©us
 = 
WP_OK
;

950 
WP_U32
 
i
;

951 
WP_U32
 
u„_p‹t
;

953 
NP_SYSTEM_INFO
 * 
the_sy°em
 = 
	`≈_gë_sy°em_öfo
();

954 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

956 
	`F¥ötf
("sppÇp WP_DriverInit...\n");

957 
°©us
 = 
	`WP_DrivîInô
();

958 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_DriverInit");

959 
	`F¥ötf
("sppÇp boardconfigure...\n");

960 
u„_p‹t
 = 
WTUFE_UPI_PORT_1
;

961 
°©us
 = 
	`WPX_P‹tModeSë
(0, 
WPX_PORT_MODE_STM1
, 3);

962 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WPX_PortModeSet ETH");

963 
°©us
 = 
	`WPX_BﬂrdC⁄figuª
(0, 
WPX_CONFIGURE_XS_3200
);

964 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WPX_BoardConfigure() UFE4");

967 
	`F¥ötf
("sppÇp initial ...\n");

968 
i
=0;i<5000000;i++);

971 
°©us
 = 
	`WPX_BﬂrdSîdesInô
(0, 
WP_PORT_ENET4
, 
WPX_SERDES_INTERNAL_CLOCK
);

972 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WPX_BoardSerdesInit()");

973 #i‡
ENEA_RELEASE


974 
°©us
 = 
	`WPX_BﬂrdSîdesInô
(0, 
WP_PORT_ENET5
, 
WPX_SERDES_INTERNAL_CLOCK
);

975 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WPX_BoardSerdesInit()");

977 
°©us
 = 
	`WPX_BﬂrdSîdesInô
(0, 
WP_PORT_ENET5
, 
WPX_SERDES_INTERNAL_CLOCK
|
WPX_SERDES_LOOPBACK
);

978 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WPX_BoardSerdesInit()");

981 
	`F¥ötf
("sppÇp sysinit...\n");

982 
°©us
 = 
	`WP_SysInô
(
	`WP_WINPATH
(0), 
c⁄ãxt
);

983 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_SysInit");

984 
	`öô_tŸÆ_memöfo
();

989 
	`F¥ötf
("sppÇp ufe4 initial...\n");

990 
WUFE_öô_c⁄fig
 
c⁄fig
;

991 
	`mem£t
(&
c⁄fig
, 0, (
WUFE_öô_c⁄fig
));

992 
c⁄fig
.
u„_id
 = 0;

994 
	`WPX_U„4HwRe£t
(0, 0);

996 
°©us
 = 
	`WUFE_U„InôülizeFúmw¨e
(&
c⁄fig
);

997 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WUFE_UfeInitializeFirmware()");

999 
°©us
 = 
	`WPX_FpgaFúmw¨eInôüliz©i⁄Sètus
(0);

1000 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WPX_FpgaFirmwareInitializationStatus");

1004 
poﬁ_2048
 = 
	`WP_PoﬁCª©e
(
	`WP_WINPATH
(0), 
WP_poﬁ_iwbuf„r
, 
buf„r_d©a_2048
);

1005 
	`ãrmö©e_⁄_îr‹
(
poﬁ_2048
, "WP_PoolCreate()Öool_2048");

1008 
qn_iw
->
adjun˘_poﬁ
 = 
poﬁ_2048
;

1009 
qn_iw
->
num_buf„rs
 = 10000;

1010 
qnode_iw
 = 
	`WP_QNodeCª©e
(0, 
WP_QNODE_IWQ
 | 
WP_QNODE_OPT_DEDICATED_RX_HWQ
 | 
WP_QNODE_OPT_FMU
, 
qn_iw
);

1011 
	`ãrmö©e_⁄_îr‹
(
qnode_iw
, "WP_QNodeCreate IWQ with ENETÖaram");

1014 
qn_iw
->
adjun˘_poﬁ
 = 
poﬁ_2048
;

1015 
qn_iw
->
num_buf„rs
 = 1000;

1016 
qniw_‰ag
 = 
	`WP_QNodeCª©e
(
	`WP_WINPATH
(0), 
WP_QNODE_IWQ
, 
qn_iw
);

1017 
	`ãrmö©e_⁄_îr‹
(
qniw_‰ag
, "WP_QNodeCreate");

1020 #if(
IP_DEFRAG
)

1022 
WP_qnode_iwq_mdb
 
qn_iw_mdb_cfg
[] =

1031 
poﬁ_de‰ag
 = 
	`WP_PoﬁCª©e
(
	`WP_WINPATH
(0), 
WP_poﬁ_iwbuf„r
, 
buf„r_d©a_de‰ag
);

1032 
	`ãrmö©e_⁄_îr‹
(
poﬁ_de‰ag
, "WP_PoolCreate()Öool_defrag");

1034 
qn_iw_mdb_cfg
->
num_buf„rs
[0] = 1000;

1035 
qn_iw_mdb_cfg
->
num_of_adj_poﬁs
 = 1;

1036 
qn_iw_mdb_cfg
->
adjun˘_poﬁ
[0] = 
poﬁ_de‰ag
;

1040 
qniw_de‰ag
 = 
	`WP_QNodeCª©e
(
	`WP_WINPATH
(0), 
WP_QNODE_IW_MDB
|
WP_QNODE_OPT_FMU
, 
qn_iw_mdb_cfg
);

1041 
	`ãrmö©e_⁄_îr‹
(
qniw_de‰ag
, "WP_QNodeCreate");

1044 #i‡
IP_FRAG


1045 
poﬁ_‰ag
 = 
	`WP_PoﬁCª©e
(
	`WP_WINPATH
(0), 
WP_poﬁ_iwbuf„r
, 
buf„r_d©a_‰ag
);

1046 
	`ãrmö©e_⁄_îr‹
(
poﬁ_‰ag
, "WP_PoolCreate()Öool_frag");

1048 
qn_‰ag_iw
->
adjun˘_poﬁ
 = 
poﬁ_‰ag
;

1049 
qniw_‰ag
 = 
	`WP_QNodeCª©e
(
	`WP_WINPATH
(0), 
WP_QNODE_IWQ
|
WP_QNODE_OPT_FMU
, 
qn_‰ag_iw
);

1050 
	`ãrmö©e_⁄_îr‹
(
qniw_‰ag
, "WP_QNodeCreate");

1054 
WP_íë_fûãrs
 
íë_fûãrs
;

1055 
WP_devi˚_íë_ex
 
íë_ext
;

1056 
íë_fûãrs
.
rx_ucfûãr
 = 
WP_ENET_FILTER_PROCESS
;

1057 
íë_fûãrs
.
rx_bcfûãr
 = 
WP_ENET_FILTER_PROCESS
;

1058 
íë_fûãrs
.
rx_mcfûãr
 = 
WP_ENET_FILTER_PROCESS
;

1060 
íë_ext
.
du∂exmode
 = 
WP_ENET_FULLDUPLEX
;

1061 
íë_ext
.
rx_ma˛ookup_mode
 = 
WP_DISABLE
;

1062 
íë_ext
.
rx_Êowc⁄åﬁ
 = 
WP_ENET_FLOW_ENABLE
;

1063 
íë_ext
.
tx_Êowc⁄åﬁ
 = 
WP_ENET_FLOW_ENABLE
;

1064 
íë_ext
.
rx_addrmode
 = 
WP_ENET_ADDR_ACCEPTALL
;

1065 
íë_ext
.
phy°©mode
 = 
WP_ENET_STAT_ENABLE
;

1066 
íë_ext
.
tx_°©mode
 = 
WP_ENET_STAT_ENABLE
;

1067 
íë_ext
.
rx_°©mode
 = 
WP_ENET_STAT_ENABLE
;

1068 
íë_ext
.
tx_du∂iˇã
 = 
WP_DISABLE
;

1069 
íë_ext
.
rx_fûãrs
 = &
íë_fûãrs
;

1071 
gbï1
 = 
	`WP_P‹tCª©e
(
	`WP_WINPATH
(0),
WP_PORT_ENET4
,
gbe_s
);

1072 
	`ãrmö©e_⁄_îr‹
(
gbï1
, "WP_PortCreate() ENET1");

1073 
gbe_dev
[0].
exãnded_∑øms
 = 
NULL
;

1074 
gbedev1
 = 
	`WP_Devi˚Cª©e
(
gbï1
, 0, 
WP_DEVICE_ENET
, &
gbe_dev
);

1075 
	`ãrmö©e_⁄_îr‹
(
gbedev1
, "WP_DeviceCreate() ENET1 ");

1076 
gbe_dev
[0].
exãnded_∑øms
 = &
íë_ext
;

1077 
°©us
 = 
	`WP_Devi˚Modify
(
gbedev1
,

1078 
WP_DEV_MOD_ENET_PHYSTATMODE
 |

1079 
WP_DEV_MOD_ENET_TX_STATMODE
 |

1080 
WP_DEV_MOD_ENET_RX_STATMODE
,

1081 
gbe_dev
);

1082 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_DeviceModify gbedev1");

1084 
gbï2
 = 
	`WP_P‹tCª©e
(
	`WP_WINPATH
(0), 
WP_PORT_ENET5
, 
gbe_s
);

1085 
	`ãrmö©e_⁄_îr‹
(
gbï2
, "WP_PortCreate() ENET2");

1087 
gbe_dev
[0].
exãnded_∑øms
 = 
NULL
;

1088 
gbedev2
 = 
	`WP_Devi˚Cª©e
(
gbï2
, 0,
WP_DEVICE_ENET
, &
gbe_dev
);

1089 
	`ãrmö©e_⁄_îr‹
(
gbedev2
, "WP_DeviceCreate() ENET2");

1091 
gbe_dev
[0].
exãnded_∑øms
 = &
íë_ext
;

1092 
°©us
 = 
	`WP_Devi˚Modify
(
gbedev2
,

1093 
WP_DEV_MOD_ENET_PHYSTATMODE
 |

1094 
WP_DEV_MOD_ENET_TX_STATMODE
 |

1095 
WP_DEV_MOD_ENET_RX_STATMODE
,

1096 
gbe_dev
);

1097 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_DeviceModify gbedev2");

1101 
iwp_ho°
 = 
	`WP_P‹tCª©e
(
	`WP_WINPATH
(0), 
WP_PORT_IW_HOST
, 
NULL
);

1102 
	`ãrmö©e_⁄_îr‹
(
iwp_ho°
, "WP_PortCreate() IW Host");

1105 
iw_ho°_dev
 = 
	`WP_Devi˚Cª©e
(
iwp_ho°
, 0, 
WP_DEVICE_IW_HOST
, 
NULL
);

1106 
	`ãrmö©e_⁄_îr‹
(
iw_ho°_dev
, "WP_DeviceCreate() IW Host");

1108 #i‡(
IP_FRAG
 || 
IP_DEFRAG
)

1110 
ù_‰ag_sy°em_h™dÀ
 = 
	`WP_IwIpFøgmíèti⁄Sy°emCª©e
(0,
ù_‰ag_sys
);

1111 
	`ãrmö©e_⁄_îr‹
(
ù_‰ag_sy°em_h™dÀ
, "WP_IwIpFragmentationSystemCreate()");

1112 #i‡
IP_DEFRAG


1113 
ù_de‰ag_c⁄ãxt_poﬁ
 = 
	`WP_IwIpDe‰agC⁄ãxtPoﬁCª©e
(
ù_‰ag_sy°em_h™dÀ
,
c⁄ãxt_c⁄fig
);

1114 
	`ãrmö©e_⁄_îr‹
(
ù_de‰ag_c⁄ãxt_poﬁ
, "WP_IwIpDefragContextPoolCreate");

1115 
ù_de‰ag_hash_poﬁ
 = 
	`WP_IwIpDe‰agHashPoﬁCª©e
(
ù_‰ag_sy°em_h™dÀ
,
hash_c⁄fig
);

1116 
	`ãrmö©e_⁄_îr‹
(
ù_de‰ag_hash_poﬁ
, "WP_IwIpDefragHashPoolCreate");

1123 #i‡
START_SCHEDULER


1133 
°©us
 = 
	`WP_SysScheduÀrCª©e
(
	`WP_WINPATH
(0), 
ˇÀnd¨
);

1134 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_SysSchedulerCreate");

1136 
WP_„©uª_psu
 
„©uª_psu_c⁄fig
 =

1139  
N_UFE_MAX_PHYS
,

1143 
°©us
 = 
	`WP_FótuªInô
(
	`WP_WINPATH
(0), 
WP_FEATURE_PSU
, &
„©uª_psu_c⁄fig
);

1144 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_FeatureInit-PSU");

1155 
°©us
 = 
	`WP_C⁄åﬁRegi°î
(
WP_EVENT_RX_INDICATE
, &
AµRxEvít
);

1156 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_ControlRegister() RxEvent");

1157 #i‡
USE_WDDI_LOG


1158 
°©us
 = 
	`WP_C⁄åﬁRegi°î
(
WP_DEBUG_CALLBACK_WDDI_LOG
, 
•pwddiLog
);

1159 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_ControlRegister() wddiLog");

1165 
	`≈_öôül_‰_qnode
(
u„_p‹t
);

1168 #i‡
BFD_OVERETH


1170 
	`≈u_BfdModuÀInô
();

1172 
°©us
 = 
	`WP_SysCommô
();

1173 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_SysCommit");

1177 
WP_h™dÀ
 
upi_u„_p‹t
;

1178 
°©us
 = 
	`WP_P‹tE«bÀ
(
upi_u„_p‹t
, 
WP_DIRECTION_DUPLEX
);

1179 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_PortEnable()");

1183 
iw_rx_ho°_h™dÀ
 = 
	`WP_Ch™√lCª©e
(
RX_ETH_INT_TAG
, 
iw_ho°_dev
, 
qnode_iw
, 
WP_CH_RX
,
WP_IW_HOST
, &
ch_c⁄fig_iw
[0]);

1184 
	`ãrmö©e_⁄_îr‹
(
iw_rx_ho°_h™dÀ
, "WP_Channel_Create() IW Host");

1187 
the_sy°em
->
Ch™√l_IP_PrioRx0_ho°_h™dÀ
 = 
	`WP_Ch™√lCª©e
(
RX_ETH_INT_PRIO_MSG_TAG
, 
iw_ho°_dev
, 
qnode_iw
, 
WP_CH_RX
,
WP_IW_HOST
, &
ch_c⁄fig_iw
[0]);

1188 
	`ãrmö©e_⁄_îr‹
(
the_sy°em
->
Ch™√l_IP_PrioRx0_ho°_h™dÀ
, "WP_Channel_Create() IP_PrioRx0 IW Host");

1191 
rx_íë_h™dÀ_1
 = 
	`WP_Ch™√lCª©e
(2, 
gbedev1
, 
qnode_iw
, 
WP_CH_RX
, 
WP_ENET
, &
ch_íë
[0]);

1192 
	`ãrmö©e_⁄_îr‹
(
rx_íë_h™dÀ_1
, "WP_ChannelCreate() Enet RX 1");

1195 
tx_íë_h™dÀ_1
 = 
	`WP_Ch™√lCª©e
(3, 
gbedev1
, 
qnode_iw
, 
WP_CH_TX
, 
WP_ENET
, &
ch_íë
[0]);

1196 
	`ãrmö©e_⁄_îr‹
(
tx_íë_h™dÀ_1
, "WP_ChannelCreate() Enet TX 1");

1199 
rx_íë_h™dÀ_2

	`WP_Ch™√lCª©e
(4, 
gbedev2
, 
qnode_iw
, 
WP_CH_RX
, 
WP_ENET
, &
ch_íë
[0]);

1200 
	`ãrmö©e_⁄_îr‹
(
rx_íë_h™dÀ_2
, "WP_ChannelCreate() Enet RX 2");

1203 
tx_íë_h™dÀ_2
 = 
	`WP_Ch™√lCª©e
(5, 
gbedev2
, 
qnode_iw
, 
WP_CH_TX
, 
WP_ENET
, &
ch_íë
[0]);

1204 
	`ãrmö©e_⁄_îr‹
(
tx_íë_h™dÀ_2
, "WP_ChannelCreate() Enet TX 2");

1207 
iw_sys_bridgög
 = 
	`WP_IwSy°emCª©e
(0,
WP_IW_VLAN_AWARE_BRIDGING_MODE
,&
iw_sys_⁄e
);

1208 
	`ãrmö©e_⁄_îr‹
(
iw_sys_bridgög
, "WP_IwSystemCreate - Bridging");

1210 
tx_agg_íë_deÁu…
[0].
txfunc
 = 
iw_rx_ho°_h™dÀ
;

1211 
tx_agg_íë_deÁu…
[0].
èg
 = 
RX_ETH_INT_TAG
;

1212 
the_sy°em
->
agg_íë_deÁu…_ho°_h™dÀ
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(
	`WP_WINPATH
(0),
WP_IW_DIRECTMAP_MODE
,&
tx_agg_íë_deÁu…
);

1213 
	`ãrmö©e_⁄_îr‹
 (
the_sy°em
->
agg_íë_deÁu…_ho°_h™dÀ
, "WP_IwFlowAggregationCreate - Defaultággregation");

1215 
tx_agg_íë_deÁu…
[0].
txfunc
 = 
the_sy°em
->
Ch™√l_IP_PrioRx0_ho°_h™dÀ
;

1216 
tx_agg_íë_deÁu…
[0].
èg
 = 
RX_ETH_INT_PRIO_MSG_TAG
;

1217 
the_sy°em
->
agg_íë_PrioRx0_ho°_h™dÀ
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(
	`WP_WINPATH
(0),
WP_IW_DIRECTMAP_MODE
,&
tx_agg_íë_deÁu…
);

1218 
	`ãrmö©e_⁄_îr‹
 (
the_sy°em
->
agg_íë_PrioRx0_ho°_h™dÀ
, "WP_IwFlowAggregationCreate -ágg_enet_PrioRx0_host_handleággregation");

1221 
	`¸ót_IwHo°TxCh™√l
(
the_sy°em
->
agg_íë_deÁu…_ho°_h™dÀ
);

1223 
bp‹t_c⁄f
[0].
Êow_agg
 = 
the_sy°em
->
agg_íë_deÁu…_ho°_h™dÀ
;

1224 
bp‹t_c⁄f
[0].
öput_fûãrs_mask
 = 
NPU_FILTER_MASK_ALL
;

1225 
bp‹t_c⁄f
[0].
¥edeföed_ht_mode
 = 
WP_IW_ARP_HT_ENABLE
;

1226 
iw_íë_1
 = 
	`WP_IwP‹tCª©e
(
iw_sys_bridgög
, 
bp‹t_c⁄f
);

1227 
	`ãrmö©e_⁄_îr‹
(
iw_íë_1
, "WP_IwPortCreate - Enet1");

1228 
bp‹t_c⁄f
[0].
¥edeföed_ht_mode
 = 0;

1230 
the_sy°em
->
Bp‹t_íë1_h™dÀ
 = 
iw_íë_1
;

1231 
iw_íë_1_èg
 = 
bp‹t_c⁄f
->
èg
;

1232 
bp‹t_c⁄f
->
èg
++;

1234 
iw_íë_2
 = 
	`WP_IwP‹tCª©e
(
iw_sys_bridgög
, 
bp‹t_c⁄f
);

1235 
	`ãrmö©e_⁄_îr‹
(
iw_íë_2
, "WP_IwPortCreate - Enet2");

1236 
iw_íë_2_èg
 = 
bp‹t_c⁄f
->
èg
;

1237 
bp‹t_c⁄f
->
èg
++;

1239 
bp‹t_c⁄f
[0].
ö_fûãr_mode
 = 
WP_IW_INGRESS_FILTER_ENABLE
;

1240 
bp‹t_c⁄f
[0].
öput_fûãrs_mask
 = 
NPU_FILTER_MASK_DEFRAG
;

1241 
bp‹t_c⁄f
[0].
vœn_∑øm
.
vœn_èg
 = 
öôül_cfg
->
VœnTag
;

1245 
iw_íë_3
 = 
	`WP_IwP‹tCª©e
(
iw_sys_bridgög
, 
bp‹t_c⁄f
);

1246 
	`ãrmö©e_⁄_îr‹
(
iw_íë_3
, "WP_IwPortCreate - Enet3");

1247 
bp‹t_c⁄f
->
èg
++;

1249 
bp‹t_c⁄f
[0].
ö_fûãr_mode
 = 
WP_IW_INGRESS_FILTER_ENABLE
;

1250 
bp‹t_c⁄f
[0].
öput_fûãrs_mask
 = 
NPU_FILTER_MASK_MAC
;

1251 
bp‹t_c⁄f
[0].
vœn_∑øm
.
vœn_èg
 = 
öôül_cfg
->
VœnTag
;

1253 
the_sy°em
->
Bp‹t_mac_fûãr_h™dÀ

	`WP_IwP‹tCª©e
(
iw_sys_bridgög
, 
bp‹t_c⁄f
);

1254 
	`ãrmö©e_⁄_îr‹
(
the_sy°em
->
Bp‹t_mac_fûãr_h™dÀ
, "WP_IwPortCreate - Bport_mac_filter_handle");

1255 
bp‹t_c⁄f
->
èg
++;

1258 
bp‹t_c⁄f
[0].
ö_fûãr_mode
 = 
WP_IW_INGRESS_FILTER_ENABLE
;

1259 
bp‹t_c⁄f
[0].
öput_fûãrs_mask
 = 
NPU_FILTER_MASK_MAC
;

1260 
bp‹t_c⁄f
[0].
vœn_∑øm
.
vœn_èg
 = 
BPORT_DEFAULT_VLAN_TAG
;

1261 
the_sy°em
->
Bp‹t_mac_fûãr_‰om_ëh2_h™dÀ

	`WP_IwP‹tCª©e
(
iw_sys_bridgög
, 
bp‹t_c⁄f
);

1262 
	`ãrmö©e_⁄_îr‹
(
the_sy°em
->
Bp‹t_mac_fûãr_‰om_ëh2_h™dÀ
, "WP_IwPortCreate - Bport_mac_filter_from_eth2_handle");

1263 
bp‹t_c⁄f
->
èg
++;

1265 
°©us
 = 
	`WP_IwTxBödögCª©e
(
tx_íë_h™dÀ_1
, 
WP_IW_TX_BINDING
, &
tx_bödög
[0]);

1266 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwTxBindingCreate - ENET 1");

1268 
°©us
 = 
	`WP_IwTxBödögCª©e
(
tx_íë_h™dÀ_2
, 
WP_IW_TX_BINDING
, &
tx_bödög
[0]);

1269 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwTxBindingCreate - ENET 2");

1272 
tx_agg_íë
->
¥efix_Àngth
 = 0;

1273 
tx_agg_íë
->
exåa˘i⁄_Àngth
 =0;

1275 
tx_agg_íë
->
iw_p‹t
 = 
iw_íë_1
;

1276 
tx_agg_íë
->
txfunc
 = 
tx_íë_h™dÀ_1
;

1277 
agg_íë_1
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0,
WP_IW_DIRECTMAP_MODE
, 
tx_agg_íë
);

1278 
	`ãrmö©e_⁄_îr‹
(
agg_íë_1
, "WP_IwFlowAggregationCreateágg_enet_1");

1280 
tx_agg_íë
->
iw_p‹t
 = 
iw_íë_2
;

1281 
tx_agg_íë
->
txfunc
 = 
tx_íë_h™dÀ_2
;

1282 
agg_íë_2
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0,
WP_IW_DIRECTMAP_MODE
, 
tx_agg_íë
);

1283 
	`ãrmö©e_⁄_îr‹
(
agg_íë_2
, "WP_IwFlowAggregationCreateágg_enet_2");

1285 
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[
NPU_FILTER_DST_MAC
].
fûãr_ty≥
 = 
WP_CLASS_FILTER_EMC
;

1286 
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[
NPU_FILTER_DST_MAC
].
no_m©ch_a˘i⁄
 = 
WP_CLASS_FILTER_NO_MATCH_DENY
;

1287 
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[
NPU_FILTER_DST_MAC
].
fõlds_mask
 = 
WP_FIELD_DST_MAC
;

1290 
íë_to_íë_dfc_Êow_öfo
[
NPU_FILTER_DST_MAC
].
fûãr_h™dÀ
 = 
	`WP_IwCœssFûãrAdd
(
iw_sys_bridgög
, &(
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[NPU_FILTER_DST_MAC]));

1291 
	`ãrmö©e_⁄_îr‹
(
íë_to_íë_dfc_Êow_öfo
[
NPU_FILTER_DST_MAC
].
fûãr_h™dÀ
 , "WP_IwClassFilterAdd() iw_sys_bridging bfd");

1293 
	`≈_d°_mac_fûãr_ÊowAdd
(
the_sy°em
);

1295 #i‡
BFD_OVERETH


1296 
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[
NPU_FILTER_DPORT_UDP_BFD
].
fûãr_ty≥
 = 
WP_CLASS_FILTER_EMC
;

1297 
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[
NPU_FILTER_DPORT_UDP_BFD
].
no_m©ch_a˘i⁄
 = 
WP_CLASS_FILTER_NO_MATCH_CONTINUE
;

1298 
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[
NPU_FILTER_DPORT_UDP_BFD
].
fõlds_mask
 = 
WP_FIELD_DST_PORT
 | 
WP_FIELD_PROTOCOL
;

1301 
íë_to_íë_dfc_Êow_öfo
[
NPU_FILTER_DPORT_UDP_BFD
].
fûãr_h™dÀ
 = 
	`WP_IwCœssFûãrAdd
(
iw_sys_bridgög
, &(
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[NPU_FILTER_DPORT_UDP_BFD]));

1302 
	`ãrmö©e_⁄_îr‹
(
íë_to_íë_dfc_Êow_öfo
[
NPU_FILTER_DPORT_UDP_BFD
].
fûãr_h™dÀ
 , "WP_IwClassFilterAdd() iw_sys_bridging bfd");

1306 
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[
NPU_FILTER_SIP_UDP_PEER
].
fûãr_ty≥
 = 
WP_CLASS_FILTER_EMC
;

1307 
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[
NPU_FILTER_SIP_UDP_PEER
].
no_m©ch_a˘i⁄
 = 
WP_CLASS_FILTER_NO_MATCH_CONTINUE
;

1308 
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[
NPU_FILTER_SIP_UDP_PEER
].
fõlds_mask
 = 
WP_FIELD_IP_SA
 | 
WP_FIELD_PROTOCOL
;

1311 
íë_to_íë_dfc_Êow_öfo
[
NPU_FILTER_SIP_UDP_PEER
].
fûãr_h™dÀ
 = 
	`WP_IwCœssFûãrAdd
(
iw_sys_bridgög
, &(
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[NPU_FILTER_SIP_UDP_PEER]));

1312 
	`ãrmö©e_⁄_îr‹
(
íë_to_íë_dfc_Êow_öfo
[
NPU_FILTER_SIP_UDP_PEER
].
fûãr_h™dÀ
 , "WP_IwClassFilterAdd() iw_sys_bridgingÖeer");

1315 
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[
NPU_FILTER_UDP_DEFRAG
].
fûãr_ty≥
 = 
WP_CLASS_FILTER_EMC
;

1316 
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[
NPU_FILTER_UDP_DEFRAG
].
no_m©ch_a˘i⁄
 = 
WP_CLASS_FILTER_NO_MATCH_CONTINUE
;

1317 
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[
NPU_FILTER_UDP_DEFRAG
].
fõlds_mask
 = 
WP_FIELD_PROTOCOL
;

1320 
íë_to_íë_dfc_Êow_öfo
[
NPU_FILTER_UDP_DEFRAG
].
fûãr_h™dÀ
 = 
	`WP_IwCœssFûãrAdd
(
iw_sys_bridgög
, &(
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[NPU_FILTER_UDP_DEFRAG]));

1321 
	`ãrmö©e_⁄_îr‹
(
íë_to_íë_dfc_Êow_öfo
[
NPU_FILTER_UDP_DEFRAG
].
fûãr_h™dÀ
 , "WP_IwClassFilterAdd() iw_sys_bridging ifdefrag");

1325 
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[
NPU_FILTER_DPORT_UDP_IP_UL
].
fûãr_ty≥
 = 
WP_CLASS_FILTER_EMC
;

1326 
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[
NPU_FILTER_DPORT_UDP_IP_UL
].
no_m©ch_a˘i⁄
 = 
WP_CLASS_FILTER_NO_MATCH_CONTINUE
;

1327 
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[
NPU_FILTER_DPORT_UDP_IP_UL
].
fõlds_mask
 = 
WP_FIELD_DST_PORT
 | 
WP_FIELD_PROTOCOL
;

1330 
íë_to_íë_dfc_Êow_öfo
[
NPU_FILTER_DPORT_UDP_IP_UL
].
fûãr_h™dÀ
 = 
	`WP_IwCœssFûãrAdd
(
iw_sys_bridgög
, &(
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[NPU_FILTER_DPORT_UDP_IP_UL]));

1331 
	`ãrmö©e_⁄_îr‹
(
íë_to_íë_dfc_Êow_öfo
[
NPU_FILTER_DPORT_UDP_IP_UL
].
fûãr_h™dÀ
 , "WP_IwClassFilterAdd() iw_sys_bridging ip ul");

1333 
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[
NPU_FILTER_DPORT_UDP_FMC
].
fûãr_ty≥
 = 
WP_CLASS_FILTER_MFC
;

1334 
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[
NPU_FILTER_DPORT_UDP_FMC
].
no_m©ch_a˘i⁄
 = 
WP_CLASS_FILTER_NO_MATCH_ACCEPT
;

1335 
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[
NPU_FILTER_DPORT_UDP_FMC
].
fõlds_mask
 = 
WP_FIELD_DST_PORT
 | 
WP_FIELD_PROTOCOL
;

1338 
íë_to_íë_dfc_Êow_öfo
[
NPU_FILTER_DPORT_UDP_FMC
].
fûãr_h™dÀ
 = 
	`WP_IwCœssFûãrAdd
(
iw_sys_bridgög
, &(
íë_to_íë_˛assifiˇti⁄_fûãr_cfg
[NPU_FILTER_DPORT_UDP_FMC]));

1339 
	`ãrmö©e_⁄_îr‹
(
íë_to_íë_dfc_Êow_öfo
[
NPU_FILTER_DPORT_UDP_FMC
].
fûãr_h™dÀ
 , "WP_IwClassFilterAdd() iw_sys_bridging fmc");

1341 
WP_CHAR
 
mfc_ruÀ_°rög
[30]={0};

1344 
rx_bödög_íë
[0].
öput_p‹t
 = 
iw_íë_1
;

1345 
°©us
 = 
	`WP_IwRxBödögCª©e
(
rx_íë_h™dÀ_1
,
iw_sys_bridgög
,
qnode_iw
,&
rx_bödög_íë
[0]);

1346 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwRxBindingCreate - Enet1");

1348 
rx_bödög_íë
[0].
öput_p‹t
 = 
iw_íë_2
;

1349 
°©us
 = 
	`WP_IwRxBödögCª©e
(
rx_íë_h™dÀ_2
,
iw_sys_bridgög
,
qnode_iw
,&
rx_bödög_íë
[0]);

1350 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwRxBindingCreate - Enet2");

1352 
°©us
 = 
	`WP_IwSy°emBuûd
(
iw_sys_bridgög
);

1353 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwSystemBuild - BasicRules");

1355 
	`•rötf
 (
mfc_ruÀ_°rög
, "n;n;n;n;n;n;*;*;");

1356 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DPORT_UDP_FMC
].
˛assifõr_°rög
 = 
mfc_ruÀ_°rög
;

1357 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DPORT_UDP_FMC
].
a˘i⁄_öfo
.
f‹w¨dög_a˘i⁄
.
Êow_aggªg©i⁄
 = 
the_sy°em
->
agg_íë_deÁu…_ho°_h™dÀ
;

1358 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DPORT_UDP_FMC
].
dfc_öfo
 = &
íë_to_íë_dfc_Êow_öfo
[NPU_FILTER_DPORT_UDP_FMC];

1359 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DPORT_UDP_FMC
].
m©ch_a˘i⁄
 = 
WP_FLOW_CLASS_MODE_FLOW_AGG
;

1360 
the_sy°em
->
Êow_deÁu…_mfc
 = 
	`WP_IwFlowAdd
(
iw_sys_bridgög
, 
WP_FLOW_CLASS_RULE
,&
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DPORT_UDP_FMC
]);

1361 
	`ãrmö©e_⁄_îr‹
(
the_sy°em
->
Êow_deÁu…_mfc
, "WP_IwFlowAdd() flow_default_mfc");

1362 
°©us
 = 
	`WP_IwSy°emBuûd
(
iw_sys_bridgög
);

1363 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwSystemBuild - BasicRules");

1368 
	`F¥ötf
("np fr_system_init start \n");

1369 ()
	`≈_‰IwSy°emCª©e
(&
≈_sy°em
);

1370 
	`‰_sy°em_öô
(
u„_p‹t
);

1374 
°©us
 = 
	`WP_LookupCª©e
(0, 3200, (
wp_globÀ_π
));

1375 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_LookupCreate()");

1377 
°©us
 = 
	`WP_U£rDefHashTabÀCª©e
(0,0x10000);

1379 if(
°©us
 != 0)

1381 
	`F¥ötf
("WP_U£rDefHashTabÀCª©êÁû sètu†%d\n",
°©us
);

1385 
WP_U16
 
ªsu…
=0xffff;

1386 
key1
,
key2
;
hsd©a
= 0x03;

1387 
key1
 = 0;key1<16;key1++)

1388 
key2
= 0;key2<3;key2++)

1390 
	`WPI_U£rDefHashE¡ryIn£π
 (0,

1391 
key1
,
key2
,
hsd©a
++);

1393 
	`F¥ötf
("hashÑesult\n");

1394 
key1
 = 0;key1<16;key1++)

1395 
key2
= 0;key2<3;key2++)

1397 
	`WPI_U£rDefHashE¡ryDi•œy
(0,
key1
,
key2
,&
ªsu…
);

1398 
	`F¥ötf
("hashÑesu… = 0x%x\n",
ªsu…
);

1400 
	`exô
(1);

1402 #i‡
IP_DEFRAG


1403 
WP_iw_mbc_„©uª_öô
 
„©uª_mbc_c⁄fig
;

1404 
„©uª_mbc_c⁄fig
.
qniw_ªas£mbÀ
 = 
qnode_iw
;

1405 
„©uª_mbc_c⁄fig
.
qniw_mbc
 = 
qniw_‰ag
;

1406 
°©us
 = 
	`WP_FótuªInô
(
	`WP_WINPATH
(0), 
WP_FEATURE_MBC
, &
„©uª_mbc_c⁄fig
);

1407 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_FeatureInit-WP_FEATURE_MBC");

1409 
tx_agg_íë
->
iw_p‹t
 = 
iw_íë_3
;

1410 
tx_agg_íë
->
txfunc
 = 
iw_sys_bridgög
;

1411 
the_sy°em
->
agg_a·î_de‰ag
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0,
WP_IW_DIRECTMAP_MODE
, 
tx_agg_íë
);

1412 
	`ãrmö©e_⁄_îr‹
(
the_sy°em
->
agg_a·î_de‰ag
, "WP_IwFlowAggregationCreateÅhe_system->agg_bridge_to_route");

1414 
	`≈_ùde‰ag_Êow_add
();

1415 
	`F¥ötf
("IP defragment create success!\n");

1417 
	`≈_£nd2ëh_rouã_sy°em_¸óã
();

1418 
	`≈_íë2_to_íë1_ruÀ_add
();

1421 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

1423 #i‡
START_SCHEDULER


1424 
°©us
 = 
	`WP_SysPsuE«bÀ
(0);

1425 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_SysPsuEnable()");

1428 
	`≈_c⁄fig_Æl_phys
();

1430 #i‡
BFD_OVERETH


1432 
	`≈u_BfdInô
();

1435 #i‡
NPU_PRIORITY_MSG


1436 
wp_¥i‹ôy_msg
 
ÊowTabÀ
;

1437 
	`mem£t
(&
ÊowTabÀ
,0,(flowTable));

1438 
ÊowTabÀ
.
Êow_num
[0] = 
the_sy°em
->
agg_íë_PrioRx0_ho°_h™dÀ
;

1439 ()
	`WP_Pri‹ôyMsgFlowSë
(0,
WP_PRIORIYT_MSG_IP_TYPE
,&
ÊowTabÀ
);

1441 
	`≈_¸óã_¨p_hq
();

1444 
°©us
 = 
	`WP_P‹tE«bÀ
(
gbï1
, 
WP_DIRECTION_DUPLEX
);

1445 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_PortEnable ENET 1");

1447 
°©us
 = 
	`WP_Devi˚E«bÀ
(
gbedev1
, 
WP_DIRECTION_DUPLEX
);

1448 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_DeviceEnable - ENET 1");

1450 *(vﬁ©ûê*)()(0x1e0082c4 + 
	`WPL_RIF_VIRTUAL
(0, 0)Ë
	`ht⁄l
(0x01618000);

1451 
	`u¶ìp
(1);

1452 *(vﬁ©ûê*)()(0x1e0082c4 + 
	`WPL_RIF_VIRTUAL
(0, 0)Ë
	`ht⁄l
(0x05618000);

1455 
°©us
 = 
	`WP_P‹tE«bÀ
(
gbï2
, 
WP_DIRECTION_DUPLEX
);

1456 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_PortEnable ENET 2");

1458 
°©us
 = 
	`WP_Devi˚E«bÀ
(
gbedev2
, 
WP_DIRECTION_DUPLEX
);

1459 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_DeviceEnable - ENET 2");

1461 *(vﬁ©ûê*)()(0x1e0082c0 + 
	`WPL_RIF_VIRTUAL
(0, 0)Ë
	`ht⁄l
(0x01618000);

1462 
	`u¶ìp
(1);

1463 *(vﬁ©ûê*)()(0x1e0082c0 + 
	`WPL_RIF_VIRTUAL
(0, 0)Ë
	`ht⁄l
(0x05618000);

1466 
°©us
 = 
	`WP_Ch™√lE«bÀ
(
tx_íë_h™dÀ_1
);

1467 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelEnable - ENET 1 Tx");

1469 
°©us
 = 
	`WP_Ch™√lE«bÀ
(
rx_íë_h™dÀ_1
);

1470 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelEnable - ENET 1 Rx");

1472 
°©us
 = 
	`WP_Ch™√lE«bÀ
(
tx_íë_h™dÀ_2
);

1473 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelEnable - ENET 2 Tx");

1475 
°©us
 = 
	`WP_Ch™√lE«bÀ
(
rx_íë_h™dÀ_2
);

1476 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelEnable - ENET 2 Rx");

1478 
g_≈öôülFœg
 = 
NPU_INITALIZED
;

1479 
°rc⁄fig
[200];

1480 *
w‹kögDú
;

1482 
	`•rötf
(
°rc⁄fig
,"%s/wöutûÅb inô",
w‹kögDú
);

1484 
	`F¥ötf
("%s\n",
°rc⁄fig
);

1485 i‡((
°©us
 = 
	`sy°em
(
°rc⁄fig
)) < 0)

1486 
	`WDDI_ERR
("systemwinutilÅb init");

1488 
	`≈u_íabÀ_u„_£rdes_öãºu±
();

1489 
	`F¥ötf
("sppÇp initial complete\n");

1492 
	}
}

1495 
	$ãrmö©e_⁄_îr‹
(
WP_h™dÀ
 
h™dÀ
, 
WP_CHAR
 *
s
)

1497 i‡(
	`WP_ERROR_P
(
h™dÀ
)) {

1498 
	`F¥ötf
("%s: TîmöÆÉº‹ (h™dÀ 0x%xË%s\n", 
≠≤ame
, 
h™dÀ
, 
s
);

1499 
	`F¥ötf
("%s: Eº‹Åy≥ - %s\n", 
≠≤ame
, 
WP_îr‹_«me
[
	`WP_ERROR
(
h™dÀ
)]);

1500 
	`WP_DrivîRñó£
();

1501 
	`exô
(1);

1503 
	}
}

1506 
	$¸ót_IwHo°TxCh™√l
(
WP_h™dÀ
 
Êow_agg
)

1508 
WP_h™dÀ
 
bridge_p‹t
;

1510 
WP_ch_iw_tx
 
ch_c⁄fig_iw_tx
[1] =

1515  
WP_IW_CH_GROUP_ID_NULL
,

1521 
WP_bridge_p‹t
 
bp‹t_c⁄f
[1] =

1525  
WP_IW_DIRECT_MAP_DISABLE
,

1527  
WP_IW_HOST_TERM_MODE
,

1528  
WP_IW_LEARNING_DISABLE
,

1529  
WP_IW_INGRESS_FILTER_DISABLE
,

1532  
WP_IW_ACCEPT_TAGGED_UNTAGGED
,

1537  
WP_IW_GROUP_FILTER_DISABLE
,

1539  
WP_IW_UNK_MC_SR
,

1540  
WP_IW_BC_HT_DISABLE
,

1543  
WP_IW_PORT_STAT_ENABLE


1548 
bp‹t_c⁄f
->
èg
 = 0xfffe;

1549 
bp‹t_c⁄f
->
Êow_agg
 = flow_agg;

1551 
bridge_p‹t
 = 
	`WP_IwP‹tCª©e
(
iw_sys_bridgög
,
bp‹t_c⁄f
);

1552 
	`ãrmö©e_⁄_îr‹
–
bridge_p‹t
,"IwHostTxChannel() WP_IwPortCreate");

1555 
NP_SYSTEM_INFO
 * 
the_sy°em
 = 
	`≈_gë_sy°em_öfo
();

1556 
the_sy°em
->
Bp‹t_íë2ho°_h™dÀ
 = 
bridge_p‹t
;

1558 
ch_c⁄fig_iw_tx
->
öput_p‹t
 = 
bridge_p‹t
;

1559 
ch_c⁄fig_iw_tx
->
iw_sy°em
 = 
iw_sys_bridgög
;

1560 
iw_tx_ho°_h™dÀ
 = 
	`WP_Ch™√lCª©e
–0x123456, 
iw_ho°_dev
, 
qnode_iw
, 
WP_CH_TX
,

1561 
WP_IW_HOST
, &
ch_c⁄fig_iw_tx
[0]);

1562 
	`ãrmö©e_⁄_îr‹
–
iw_tx_ho°_h™dÀ
, "WP_ChannelCreate() iw host Tx channel");

1564 
	}
}

1566 
WP_d©a_unô
 
	gd©a_unô
;

1567 
WP_d©a_£gmít
 
	gtx_buf
;

1568 
WP_U8
 *
	gd©a_±r
;

1570 
	$≈_ëh_ho°_£nd
(
WP_S32
 
D©aLígth
, 
WP_CHAR
* 
pTxD©a
)

1572 
WP_°©us
 
°©us
;

1573 
WP_d©a_£gmít
* 
cuº_buf
;

1575 if(
D©aLígth
 > 1536)

1577 
	`WDDI_WARNING
("≈_ëh_ho°_£nd faû D©aLígthÅoÿbig i†%d \n",
D©aLígth
);

1581 
d©a_unô
.
d©a_size
 = 
D©aLígth
;

1582 
d©a_unô
.
n_a˘ive
 = 1;

1584 
tx_buf
.
d©a_size
 = 
d©a_unô
.data_size;

1585 
d©a_±r
 = 
	`WP_PoﬁAŒoc
(
poﬁ_2048
);

1587 if(
d©a_±r
 =
NULL
)

1589 
	`WDDI_WARNING
("np_eth_host_send fail WP_PoolAlloc is NULL \n");

1592 
tx_buf
.
d©a
 = 
d©a_±r
;

1593 
tx_buf
.
poﬁ_h™dÀ
 = 
poﬁ_2048
;

1594 
tx_buf
.
di•œ˚mít
 = 0;

1595 
tx_buf
.
u£r_öfo
 = 0;

1596 
tx_buf
.
√xt
 = 
NULL
;

1597 
tx_buf
.
buf„r_˛ass
 = 0;

1599 
d©a_unô
.
c⁄åﬁ
 =

1600 
	`WP_HT_IW_B_MODE_FIELD
(
WP_HT_IW_B_FAST_MODE
)|

1601 
	`WP_HT_IW_B_VA_DEST_TYPE_FIELD
(
WP_HT_IW_B_VA_DESTINATION_FLOW_AGG
)|

1602 
	`WP_HT_IW_FSP_FLOW_AGG_FIELD
(
agg_íë_1
) |

1603 
	`WP_HT_IW_CRC_FIELD
(0);

1604 
d©a_unô
.
£gmít
 = (&
tx_buf
);

1605 
d©a_unô
.
n_£gmíts
 = 1;

1606 
d©a_unô
.
n_a˘ive
 = 1;

1607 
d©a_unô
.
ty≥
 = 
WP_DATA_IW
;

1608 
d©a_unô
.
d©a_ªtu∫
 = 0;

1609 
d©a_unô
.
°©us
 = 0;

1612 #i‡
NPU_HOST_OLP


1613 
	`pcimem_c›y
(
d©a_±r
, 
pTxD©a
, 
D©aLígth
);

1615 
	`WP_MEM_BYTES_SET
(
d©a_±r
, 
pTxD©a
, 
D©aLígth
);

1618 
	`WDDI_PRINT
("Info:Çp_ëh_ho°_£nd, SídÖackë:0x%x,Üí:%d\n", ()
pTxD©a
, 
D©aLígth
);

1619 
cuº_buf
 = 
d©a_unô
.
£gmít
;

1621 
	`WDDI_STRING
(
cuº_buf
->
d©a
, cuº_buf->
d©a_size
);

1622 
°©us
 = 
	`WP_Ho°Síd
(
iw_tx_ho°_h™dÀ
, &
d©a_unô
);

1625 if(
	`WP_ERROR_P
(
°©us
))

1627 i‡(
	`WP_ERROR
(
°©us
Ë=
WP_ERR_WMM_FIFO_PUT
)

1629 
	`WDDI_WARNING
("np_eth_host_send fail \n");

1633 
	`WP_PoﬁFªe
(
cuº_buf
->
poﬁ_h™dÀ
, cuº_buf->
d©a
);

1635 
	`WDDI_WARNING
("≈_ëh_ho°_£nd faûÉº‹ codêi†%d \n",
	`WP_ERROR
(
°©us
));

1639 
	}
}

1642 
	$≈_ëh_ho°_ª˚ive
(
WP_h™dÀ
 
rx_ho°_h™dÀ
,
WP_S32
 *
D©aLígth
, 
WP_CHAR
* 
pTxD©a
)

1644 
WP_°©us
 
°©us
;

1645 
WP_d©a_unô
 
du
={0};

1646 
WP_d©a_£gmít
 
£g
={0};

1647 
WP_d©a_£gmít
* 
cuº_buf
;

1648 
WP_U32
 
j
;

1649 
du
.
£gmít
 = &
£g
;

1650 
du
.
ty≥
 = 
WP_DATA_IW
;

1651 
du
.
n_£gmíts
 = 1;

1653 i‡(
WP_OK
 !(
°©us
 = 
	`WP_Ho°Re˚ive
(
rx_ho°_h™dÀ
, &
du
)))

1655 i‡–
	`°rcmp
("WP_ERR_HST_NO_DATA_TO_GET", 
WP_îr‹_«me
[
	`WP_ERROR
(
°©us
)]) != 0)

1660 
cuº_buf
 = 
du
.
£gmít
;

1661 
j
 = 0; j < 
du
.
n_a˘ive
; j++, 
cuº_buf
++)

1664 
k
 = 0; k < 
cuº_buf
->
d©a_size
; k++)

1666 
pTxD©a
[
k
]=
cuº_buf
->
d©a
[k];

1669 #i‡
NPU_HOST_OLP


1670 
	`pcimem_c›y
(
pTxD©a
,
cuº_buf
->
d©a
,cuº_buf->
d©a_size
);

1672 
	`mem˝y
(
pTxD©a
,
cuº_buf
->
d©a
,cuº_buf->
d©a_size
);

1675 
	`WDDI_STRING
(
pTxD©a
, 
cuº_buf
->
d©a_size
);

1676 *
D©aLígth
 = 
cuº_buf
->
d©a_size
;

1677 if(*
D©aLígth
 >1536)

1679 
	`WDDI_WARNING
("np_eth_host_receiveá bigÖacket\n");

1680 *
D©aLígth
 = 1536;

1682 
	`WDDI_PRINT
("Info:Çp_ëh_ho°_ª˚ive,ÖTxD©a:0x%x, D©aLígth:%d\n", ()
pTxD©a
, 
D©aLígth
);

1684 
	`WP_PoﬁFªe
(
cuº_buf
->
poﬁ_h™dÀ
, cuº_buf->
d©a
);

1688  
°©us
;

1689 
	}
}

1693 
WP_iw_agg_dúe˘m≠_íë
 
	gíë_iw_agg_cfg
[1] =

1698  
WP_IW_RFCS_ENABLE
,

1699  
WP_IW_L2H_INSERT_ENABLE
,

1700  
WP_IW_IRQT1
,

1701  
WP_IW_ERRPKT_DISCARD
,

1702  
WP_IW_INT_DISABLE
,

1703 #i‡
STATISTICS_ENABLE


1704  
WP_IW_STAT_ENABLE
,

1706  
WP_IW_STAT_DISABLE
,

1708  
WP_IW_TIME_STAMP_DISABLE
,

1724  
NULL
,

1726  
NULL
,

1727  
WP_IW_LENGTH_UPDATE_L3
,

1733 
WP_iw_agg_dúe˘m≠_íë
 
	gíë_iw_agg_de‰ag_cfg
[1] =

1738  
WP_IW_RFCS_DISABLE
,

1739  
WP_IW_L2H_INSERT_DISABLE
,

1740  
WP_IW_IRQT1
,

1741  
WP_IW_ERRPKT_DISCARD
,

1742  
WP_IW_INT_DISABLE
,

1743 #i‡
STATISTICS_ENABLE


1744  
WP_IW_STAT_ENABLE
,

1746  
WP_IW_STAT_DISABLE
,

1748  
WP_IW_TIME_STAMP_DISABLE
,

1756  
NULL
,

1758  
NULL
,

1759  
WP_IW_LENGTH_UPDATE_DISABLED
,

1765 
Dp‹tGΩaggInfo
 
	gDp‹tGΩagg_h™dÀ
[65535] = {0};

1766 
WP_h™dÀ
 
	gDp‹tGΩÊow_h™dÀ
[65535] = {0};

1768 
	$≈_dl_rouã_èbÀ_add
(
STRU_SET_DOWNLINK_PATH_RULE
 * 
ruÀ
)

1770 
WP_iw_agg_dúe˘m≠
 
iw_agg_cfg
 [1] = {

1775  
WP_IW_RFCS_DISABLE
,

1776  
WP_IW_L2H_INSERT_ENABLE
,

1777  
WP_IW_L2H_INSERT_DISABLE
,

1778  
WP_IW_ERRPKT_DISCARD
,

1779  
WP_IW_INT_DISABLE
,

1780  
WP_IW_STAT_ENABLE
,

1781  
WP_IW_TIME_STAMP_DISABLE
,

1782  
WP_IW_OV_POOL_DISABLE
,

1797  
WP_IW_POLICER_DISABLE
,

1798  
NULL
,

1799  
WP_IW_CONGESTION_DISABLE
,

1800  
NULL
,

1801  
WP_IW_LENGTH_UPDATE_L3
,

1803  
WP_IW_FLOW_AGG_PRIMARY
,

1807 
WP_S32
 
°©us
;

1808 
WP_h™dÀ
 
Êow_h™dÀ
;

1809 
NP_SYSTEM_INFO
 * 
the_sy°em
 = 
	`≈_gë_sy°em_öfo
();

1810 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

1811 
STRU_VPORT_INFO
 *
Vp‹tInfo
;

1812 
STRU_SET_DOWNLINK_PATH_LINK_TABLE
 * 
lök_èbÀ
;

1813 
WP_h™dÀ
 
íë_iw_Êow_aggªg©i⁄
;

1814 
WP_CHAR
 
íë_ruÀ_°rög
[128]={0};

1815 
NP_DL_FLOW_INFO
 
Êow_öfo
 = {0};

1818 
ùhdr
 *
ùhódî
;

1819 
udphdr
 *
udphódî
;

1820 
ªt
 = 0;

1823 if(
Dp‹tGΩÊow_h™dÀ
[
ruÀ
->
Dp‹tSèπVÆue
] == 0)

1827 
íë_iw_agg_cfg
->
l2_hódî_ö£π_mode
 = 
WP_IW_L2H_INSERT_DISABLE
;

1828 
íë_iw_agg_cfg
->
txfunc
 =
the_sy°em
->
agg_íë_deÁu…_ho°_h™dÀ
;

1829 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_IP
)

1831 
íë_iw_agg_cfg
->
mtu
 = 0xa6a6;

1836 
íë_iw_agg_cfg
->
mtu
 = 0xa5a5;

1839 
íë_iw_agg_cfg
->
¥efix_Àngth
 = 0;

1840 
íë_iw_agg_cfg
->
exåa˘i⁄_Àngth
 = 0;

1841 
íë_iw_Êow_aggªg©i⁄
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0,
WP_IW_DIRECTMAP_MODE
, 
íë_iw_agg_cfg
);

1842 
	`ãrmö©e_⁄_îr‹
(
íë_iw_Êow_aggªg©i⁄
, "WP_IwFlowAggregationCreateágg_queue");

1843 
íë_iw_agg_cfg
->
l2_hódî_ö£π_mode
 = 
WP_IW_L2H_INSERT_ENABLE
;

1844 
	`•rötf
 (
íë_ruÀ_°rög
, "n;n;n;n;n;n;[%d-%d];UDP;",
	`ht⁄s
(
ruÀ
->
Dp‹tSèπVÆue
),ht⁄s‘uÀ->Dp‹tSèπVÆue)+ruÀ->
P‹tSize
-1);

1845 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DPORT_UDP_FMC
].
˛assifõr_°rög
 = 
íë_ruÀ_°rög
;

1846 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DPORT_UDP_FMC
].
a˘i⁄_öfo
.
f‹w¨dög_a˘i⁄
.
Êow_aggªg©i⁄
 = 
íë_iw_Êow_aggªg©i⁄
;

1847 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DPORT_UDP_FMC
].
dfc_öfo
 = &
íë_to_íë_dfc_Êow_öfo
[NPU_FILTER_DPORT_UDP_FMC];

1848 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DPORT_UDP_FMC
].
m©ch_a˘i⁄
 = 
WP_FLOW_CLASS_MODE_FLOW_AGG
;

1849 
Êow_h™dÀ
 = 
	`WP_IwFlowIn£π
(
iw_sys_bridgög
,
the_sy°em
->
Êow_deÁu…_mfc
,
WP_FLOW_CLASS_RULE
,&(
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DPORT_UDP_FMC
]));

1850 
	`ãrmö©e_⁄_îr‹
(
Êow_h™dÀ
, "WP_IwFlowInsert()Énet_to_enet_iw_sys");

1854 
Dp‹tGΩagg_h™dÀ
[
ruÀ
->
Dp‹tSèπVÆue
].
h™dÀ
 = 
íë_iw_Êow_aggªg©i⁄
;

1855 
Dp‹tGΩagg_h™dÀ
[
ruÀ
->
Dp‹tSèπVÆue
].
P‹tSize
 =Ñule->PortSize;

1856 
Dp‹tGΩÊow_h™dÀ
[
ruÀ
->
Dp‹tSèπVÆue
] =
Êow_h™dÀ
;

1858 
ªt
 = 1;

1861 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_IP
)

1864 
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
ruÀ
->
n£i_p‹tSrc
.
p‹tSrc
);

1865 if(
Vp‹tInfo
 =
NULL
)

1867 
	`WDDI_WARNING
("≈_dl_rouã_èbÀ_addÇpu_gë_vp‹t_öfÿÁû vp‹t0x%x",
ruÀ
->
n£i_p‹tSrc
.
p‹tSrc
);

1868  
ERR_DOWNLINX_FLOW_ADD
;

1870 if(
Vp‹tInfo
->
U£dFœg
 =
UNUSED
)

1872 
	`WDDI_WARNING
("≈_dl_rouã_èbÀ_addÇpu_gë_vp‹t_öfÿÁû ,vp‹à˛o£d vp‹t0x%x",
ruÀ
->
n£i_p‹tSrc
.
p‹tSrc
);

1873  
ERR_DOWNLINX_FLOW_ADD
;

1876 
NP_ARP_INFO
 
¨p
 = {0};

1878 
lök_èbÀ
 = 
	`≈u_gë_ul_lök_èbÀ_öfo
(
ruÀ
->
n£i_p‹tSrc
.
p‹tSrc
);

1879 if(
lök_èbÀ
 =
NULL
)

1881 
	`WDDI_WARNING
("d»lökÅabÀ i†nŸÉxi°ed ,key P‹tSr¯0x%x",
ruÀ
->
n£i_p‹tSrc
.
p‹tSrc
);

1882  
ERR_DOWNLINX_FLOW_ADD
;

1884 if(
lök_èbÀ
->
IpEpAcôveNum
 == 0)

1886 
	`WDDI_WARNING
("dlÜinkÅable isÇotÉxisted ,IpEpAcitveNum = 0\n");

1887  
ERR_DOWNLINX_FLOW_ADD
;

1891 
ªt
;

1892 
AºayBuf
[10];

1893 
WP_U32
 
IpD°
 = 
lök_èbÀ
->
IpEp
[0].IpDst;

1895 
ªt
 = 
	`èp_sockë_gë¨p
(
IpD°
, 
AºayBuf
);

1896 if(
ªt
 == 0)

1898 
¨p
.
Ip
 = 
IpD°
;

1899 
	`mem˝y
(
¨p
.
Mac
,
AºayBuf
,6);

1901 ()
	`≈u_£t_¨p_öfo
(
IpD°
,&
¨p
);

1902 
	`≈_upd©e_mac_ö_rouã_sy°em
(&
¨p
);

1907 
	`WDDI_WARNING
("≈_dl_rouã_èbÀ_addÇpu_gë_¨p_öfÿÁû ipd°0x%x",
IpD°
);

1908  
ERR_DOWNLINX_FLOW_ADD
;

1912 if(
Vp‹tInfo
->
agg_dl_ù2ùtx2E√t1
 == 0)

1915 
ùhódî
 = (
ùhdr
 *)&
iw_agg_cfg
->
¥efix_hódî
[0];

1917 
ùhódî
->
daddr
=0;

1918 
ùhódî
->
ßddr
=
	`ht⁄l
(
öôül_cfg
->
ifI∑ddr
);

1920 
udphódî
 = (
udphdr
 *Ë(
ùhódî
 +1);

1921 
udphódî
->
sour˚
 = 
ruÀ
->
n£i_p‹tSrc
.
p‹tSrc
;

1922 
udphódî
->
de°
 = 0;

1924 
iw_agg_cfg
->
iw_p‹t
 = 
the_sy°em
->
Rp‹t_íë1_h™lde
;

1925 
iw_agg_cfg
->
txfunc
 = 
the_sy°em
->
sy°em_rouã_£nd2ëh1_h™dÀ
 ;

1926 
iw_agg_cfg
->
¥efix_Àngth
 = 28;

1927 if(
öôül_cfg
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

1929 
iw_agg_cfg
->
exåa˘i⁄_Àngth
 = 46;

1933 
iw_agg_cfg
->
exåa˘i⁄_Àngth
 = 42;

1935 
Vp‹tInfo
->
agg_dl_ù2ùtx2E√t1
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0,
WP_IW_DIRECTMAP_MODE
,
iw_agg_cfg
);

1936 
	`ãrmö©e_⁄_îr‹
(
Vp‹tInfo
->
agg_dl_ù2ùtx2E√t1
, "WP_IwFlowAggregationCreateágg_dl_ip2iptx2Enet1");

1939 
Êow_öfo
.
ÊowH™dÀ
 = 
Dp‹tGΩÊow_h™dÀ
[
ruÀ
->
Dp‹tSèπVÆue
];

1940 
Êow_öfo
.
agg_dl_dp‹tGΩ_h™dÀ

Dp‹tGΩagg_h™dÀ
[
ruÀ
->
Dp‹tSèπVÆue
].
h™dÀ
;

1941 
	`mem˝y
(&
Êow_öfo
.
ruÀ
,ruÀ,(
STRU_SET_DOWNLINK_PATH_RULE
));

1943 
wp_dl_π
 
dl_π
;

1944 
dl_π
.
bvci_n
 = 
ruÀ
->
BVCI√w
;

1945 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

1947 
dl_π
.
n£i_i
 = 
ruÀ
->
n£i_p‹tSrc
.
NSEI
;

1948 
dl_π
.
Êow_num
 = 
	`WPI_HANDLE_INDEX
(
Êow_öfo
.
agg_dl_dp‹tGΩ_h™dÀ
);

1952 if(
the_sy°em
->
agg_dl_ù_to_íë2_h™dÀ
 == 0)

1954 
	`≈_dl_ù_f‹w¨d_to_íë2_¸óã
();

1956 
dl_π
.
n£i_i
 = 
	`ht⁄s
(
ruÀ
->
n£i_p‹tSrc
.
p‹tSrc
);

1958 
dl_π
.
Êow_num
 = (
	`WPI_HANDLE_INDEX
(
the_sy°em
->
agg_dl_ù_to_íë2_h™dÀ
)<<16Ë| WPI_HANDLE_INDEX(
Vp‹tInfo
->
agg_dl_ù2ùtx2E√t1
);

1962 
	`WDDI_INFO
("Info:Çp_dl_rouã_èbÀ_add, key1:0x%x, key2:0x%x, NSEI:0x%x, BVCI_√w:0x%x\n",
	`WPI_HANDLE_INDEX
(
Êow_öfo
.
agg_dl_dp‹tGΩ_h™dÀ
),
ruÀ
->
BVCI
,
dl_π
.
n£i_i
,dl_π.
bvci_n
);

1963 
°©us
 = 
	`WP_DlLookupE¡ryIn£π
(
iw_sys_bridgög
, 
Êow_öfo
.
agg_dl_dp‹tGΩ_h™dÀ
,

1964 
ruÀ
->
BVCI
, &
dl_π
);

1966 if(
°©us
 != 0)

1968 
	`WDDI_WARNING
("≈_dl_rouã_èbÀ_add faû sètu†0x%x \n",
°©us
);

1969  
°©us
;

1971 
Êow_öfo
.
U£dFœg
 = 
USED
;

1972 
	`≈u_£t_dow∆ök_öfo
(&
Êow_öfo
);

1974  
ªt
;

1975 
	}
}

1976 
	#WPI_NSVC_REMOTE_BIT_MASK
 0x20000000

	)

1979 
	$≈_dl_lök_èbÀ_£t
(
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
 * 
lök_èbÀ
)

1982 
WP_iw_agg_dúe˘m≠_íë
 
íë_iw_agg_cfg
[1] =

1987  
WP_IW_RFCS_ENABLE
,

1988  
WP_IW_L2H_INSERT_ENABLE
,

1989  
WP_IW_IRQT1
,

1990  
WP_IW_ERRPKT_DISCARD
,

1991  
WP_IW_INT_DISABLE
,

1992 #i‡
STATISTICS_ENABLE


1993  
WP_IW_STAT_ENABLE
,

1995  
WP_IW_STAT_DISABLE
,

1997  
WP_IW_TIME_STAMP_DISABLE
,

2013  
NULL
,

2015  
NULL
,

2016  
WP_IW_LENGTH_UPDATE_L3
,

2022 
WP_U32
 
i
=0,
j
=0;

2023 
WP_U32
 
vf‹t
;

2024 
WP_S32
 
°©us
;

2025 
WP_h™dÀ
 
íë_iw_Êow_aggªg©i⁄
;

2026 
wp_vp‹t_èbÀ
 
dl_lök_èbÀs
;

2027 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

2028 
i
 =0 ;i< 
lök_èbÀ
->
FrVp‹tAcôveNum
;i++)

2030 if(
lök_èbÀ
->
NsvcGΩ
[
i
].
Fœg
 =
LOCAL_FLAG
)

2032 
vf‹t
 = 
lök_èbÀ
->
NsvcGΩ
[
i
].vfort;

2033 
STRU_VPORT_INFO
 *
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
vf‹t
);

2034 
FR_CHANNEL_INFO
 * 
ch_öfo
;

2035 if(
Vp‹tInfo
 =
NULL
)

2037  
ERR_DOWNLINX_FLOW_ADD
;

2039 if(
Vp‹tInfo
->
U£dFœg
 =
UNUSED
)

2041  
ERR_DOWNLINX_FLOW_ADD
;

2044 
ch_öfo
 = &
Vp‹tInfo
->ch_info;

2045 if(
ch_öfo
->
agg_dow∆ök_tx2‰_devi˚
 ==0)

2047 #i‡
ENEA_RELEASE


2048 
íë_iw_agg_cfg
->
txfunc
 =
ch_öfo
->
tx_iw_h™dÀ
;

2050 
íë_iw_agg_cfg
->
txfunc
 = 
ch_öfo
->
agg_‰_rx_ho°_Êow
;

2052 if(
íë_iw_agg_cfg
->
txfunc
 == 0)

2054 
	`WDDI_WARNING
("np_dl_link_table_set ch_info isÇot correct !\n");

2055  
ERR_DOWNLINX_FLOW_ADD
;

2057 
íë_iw_agg_cfg
->
l2_hódî_ö£π_mode
 = 
WP_IW_L2H_INSERT_ENABLE
;

2058 
íë_iw_agg_cfg
->
¥efix_Àngth
 = 2;

2059 
íë_iw_agg_cfg
->
dy«mic_Àngth_upd©e
 = 
WP_IW_LENGTH_UPDATE_DISABLED
;

2060 if(
öôül_cfg
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

2062 
íë_iw_agg_cfg
->
exåa˘i⁄_Àngth
 = 46;

2066 
íë_iw_agg_cfg
->
exåa˘i⁄_Àngth
 = 42;

2068 
	`WP_FR_HEADER_2OCT_SET
(
íë_iw_agg_cfg
->
¥efix_hódî
,
ch_öfo
->
dlci
,0,0,0,0);

2069 
ch_öfo
->
agg_dow∆ök_tx2‰_devi˚
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0,
WP_IW_DIRECTMAP_MODE
, 
íë_iw_agg_cfg
);

2070 
	`ãrmö©e_⁄_îr‹
(
ch_öfo
->
agg_dow∆ök_tx2‰_devi˚
, "WP_IwFlowAggregationCreateÇp_dl_link_table_set");

2072 
dl_lök_èbÀs
.
Êow_num
[
i
] = 
	`WPI_HANDLE_INDEX
(
ch_öfo
->
agg_dow∆ök_tx2‰_devi˚
);

2073 
j
++;

2077 
WP_U32
 
≥î_vf‹t
;

2078 
≥î_vf‹t
 = 
lök_èbÀ
->
NsvcGΩ
[
i
].
vf‹t
;

2079 
STRU_PEER_VPORT_INFO
 *
Vp‹tInfo
 = 
	`≈u_£t_≥î_vp‹t_öfo
(
≥î_vf‹t
);

2080 if(
Vp‹tInfo
->
agg_dow∆ök_tx2≥î‰
 == 0)

2082 
ùhdr
 * 
ùhódî
;

2083 
vœn_ëhhdr
 * 
vœn_ëhhódî
;

2084 
íë_iw_agg_cfg
->
l2_hódî_ö£π_mode
 = 
WP_IW_L2H_INSERT_ENABLE
;

2085 
íë_iw_agg_cfg
->
txfunc
 = 
agg_íë_2
;

2086 
íë_iw_agg_cfg
->
mtu
 = 0x600;

2087 
íë_iw_agg_cfg
->
¥efix_Àngth
 = 46;

2088 
vœn_ëhhódî
 = (
vœn_ëhhdr
 *)&
íë_iw_agg_cfg
->
¥efix_hódî
[0];

2089 
	`mem£t
(&
vœn_ëhhódî
->
h_de°
[0], 0xfe, 6);

2090 
	`mem˝y
(&
vœn_ëhhódî
->
h_sour˚
[0], 
öôül_cfg
->
ifMAC§c
, 6);

2091 
vœn_ëhhódî
->
h_vœn_¥Ÿo
 = 
	`ht⁄s
(0x8100);

2092 
vœn_ëhhódî
->
h_vœn_TCI
 = 
	`ht⁄s
(
BPORT_DEFAULT_VLAN_TAG
);

2093 
vœn_ëhhódî
->
h_vœn_íˇpsuœãd_¥Ÿo
 = 
	`ht⁄s
(0x0800);

2094 if(
öôül_cfg
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

2096 
íë_iw_agg_cfg
->
exåa˘i⁄_Àngth
 = 46;

2100 
íë_iw_agg_cfg
->
exåa˘i⁄_Àngth
 = 42;

2102 
íë_iw_agg_cfg
->
dy«mic_Àngth_upd©e
 = 
WP_IW_LENGTH_UPDATE_L3
;

2103 
íë_iw_agg_cfg
->
Àngth_off£t
 = 18;

2106 
ùhódî
 = (
ùhdr
 *)&
íë_iw_agg_cfg
->
¥efix_hódî
[18];

2107 
ùhódî
->
ßddr
=
	`ht⁄l
(
lök_èbÀ
->
NsvcGΩ
[
i
].
vf‹t
);

2113 
íë_iw_Êow_aggªg©i⁄
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0,
WP_IW_DIRECTMAP_MODE
, 
íë_iw_agg_cfg
);

2114 
	`ãrmö©e_⁄_îr‹
(
°©us
, "np_dl_link_table_setÉnet_iw_flow_aggregation");

2115 
Vp‹tInfo
->
agg_dow∆ök_tx2≥î‰
 = 
íë_iw_Êow_aggªg©i⁄
;

2118 
dl_lök_èbÀs
.
Êow_num
[
i
] = 
	`WPI_HANDLE_INDEX
(
Vp‹tInfo
->
agg_dow∆ök_tx2≥î‰
);

2122 
dl_lök_èbÀs
.
vÆid_num
 =
lök_èbÀ
->
FrVp‹tAcôveNum
;

2124 if(
j
 =(
lök_èbÀ
->
FrVp‹tAcôveNum
 - j))

2126 if(
j
 ==0)

2128 
dl_lök_èbÀs
.
vÆid_num
 =0;

2132 
dl_lök_èbÀs
.
vÆid_num
 |=
WPI_NSVC_REMOTE_BIT_MASK
;

2135 
dl_lök_èbÀs
.
vÆid_num
 |(
j
<<16);

2137 
°©us
 = 
	`WP_VP‹tE¡ryIn£π
(0, 
lök_èbÀ
->
NSEI
, &
dl_lök_èbÀs
);

2138 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_VPortEntryInsert");

2139 
	`WDDI_INFO
("Info:Çp_dl_lök_èbÀ_£t, vf‹t:0x%x,Üök_èbÀ->FrVp‹tAcôveNum:%d,Üök_èbÀ->NSEI:%d\n",
vf‹t
,
lök_èbÀ
->
FrVp‹tAcôveNum
,lök_èbÀ->
NSEI
);

2140 
	`≈u_£t_‰_dl_lök_èbÀ_öfo
(
lök_èbÀ
);

2142 
	}
}

2144 
	$≈_ùde‰ag_Êow_add
()

2146 
WP_S32
 
°©us
;

2147 
WP_h™dÀ
 
Êow_h™dÀ
;

2150 
NP_SYSTEM_INFO
 * 
the_sy°em
 = 
	`≈_gë_sy°em_öfo
();

2151 
vœn_ëhhdr
 * 
vœn_ëhhódî
;

2152 
ëhhdr
 *Éthhdr;

2153 
WP_CHAR
 
íë_ruÀ_°rög
[128]={0};

2154 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

2156 if(
öôül_cfg
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

2158 
vœn_ëhhódî
 = (
vœn_ëhhdr
 *)&
tx_agg_l3
->
¥efix_hódî
[0];

2159 
tx_agg_l3
->
¥efix_Àngth
 = 18;

2160 
	`mem˝y
(&
vœn_ëhhódî
->
h_de°
[0], 
öôül_cfg
->
ifMAC§c
, 6);

2161 
vœn_ëhhódî
->
h_vœn_¥Ÿo
 = 
	`ht⁄s
(0x8100);

2162 
vœn_ëhhódî
->
h_vœn_TCI
 = 
	`ht⁄s
(
öôül_cfg
->
VœnTag
);

2163 
vœn_ëhhódî
->
h_vœn_íˇpsuœãd_¥Ÿo
 = 
	`ht⁄s
(0x0800);

2167 
ëhhdr
 = (ëhhd∏*)&
tx_agg_l3
->
¥efix_hódî
[0];

2168 
	`mem˝y
(&
ëhhdr
->
h_de°
[0], 
öôül_cfg
->
ifMAC§c
, 6);

2169 
tx_agg_l3
->
¥efix_Àngth
 = 14;

2170 
ëhhdr
->
h_¥Ÿo
 = 
	`ht⁄s
(0x0800);

2172 
tx_agg_l3
->
l2_hódî_ö£π_mode
 = 
WP_IW_L2H_INSERT_ENABLE
;

2173 
tx_agg_l3
->
txfunc
 = 
the_sy°em
->
agg_a·î_de‰ag
;

2175 
tx_agg_l3
->
mtu
 = 
N_MAX_IP_FRAME_SIZE
;

2176 
ùde‰ag_agg
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0, 
WP_IW_ROUTING_MODE
,
tx_agg_l3
);

2177 
	`ãrmö©e_⁄_îr‹
(
ùde‰ag_agg
, "WP_IwFlowAggregationCreate");

2180 
de‰ag_group
->
de‰ag_poﬁ
 = 
ù_de‰ag_c⁄ãxt_poﬁ
;

2181 
de‰ag_group
->
de‰ag_hash
 = 
ù_de‰ag_hash_poﬁ
;

2182 
de‰ag_group
->
qniw
 = 
qniw_de‰ag
;

2183 
the_sy°em
->
ù_de‰ag_group
 = 
	`WP_IwIpDe‰agGroupCª©e
(
ù_‰ag_sy°em_h™dÀ
,
ùde‰ag_agg
,
de‰ag_group
);

2184 
	`ãrmö©e_⁄_îr‹
(
the_sy°em
->
ù_de‰ag_group
, "WP_IwIpDefragGroupCreate");

2185 
íë_iw_agg_de‰ag_cfg
->
txfunc
 = 
ùde‰ag_agg
;

2186 if(
öôül_cfg
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

2188 
íë_iw_agg_de‰ag_cfg
->
exåa˘i⁄_Àngth
 = 18;

2192 
íë_iw_agg_de‰ag_cfg
->
exåa˘i⁄_Àngth
 = 14;

2194 
íë_iw_Êow_de‰ag_aggªg©i⁄
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0,
WP_IW_DIRECTMAP_MODE
, 
íë_iw_agg_de‰ag_cfg
);

2195 
	`ãrmö©e_⁄_îr‹
(
íë_iw_Êow_de‰ag_aggªg©i⁄
, "WP_IwFlowAggregationCreateÉnet_iw_flow_defrag_aggregation");

2197 
	`•rötf
(
íë_ruÀ_°rög
, "n;n;n;n;n;n;n;UDP;");

2198 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_UDP_DEFRAG
].
˛assifõr_°rög
 = 
íë_ruÀ_°rög
;

2199 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_UDP_DEFRAG
].
a˘i⁄_öfo
.
f‹w¨dög_a˘i⁄
.
Êow_aggªg©i⁄
 = 
íë_iw_Êow_de‰ag_aggªg©i⁄
;

2200 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_UDP_DEFRAG
].
dfc_öfo
 = &
íë_to_íë_dfc_Êow_öfo
[NPU_FILTER_UDP_DEFRAG];

2201 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_UDP_DEFRAG
].
m©ch_a˘i⁄
 = 
WP_FLOW_CLASS_MODE_FLOW_AGG
;

2202 
Êow_h™dÀ
 = 
	`WP_IwFlowAdd
(
iw_sys_bridgög
, 
WP_FLOW_CLASS_RULE
,&
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_UDP_DEFRAG
]);

2203 
	`ãrmö©e_⁄_îr‹
(
Êow_h™dÀ
, "WP_IwFlowAdd()Énet_to_enet_iw_sys_defrag");

2205 
°©us
 = 
	`WP_IwSy°emBuûd
(
iw_sys_bridgög
);

2206 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwSystemBuild -Çp_ipdefrag_flow_add");

2208 
	}
}

2211 
	$≈_dl_rouã_èbÀ_dñëe
(
WP_U16
 
Dp‹tSèπVÆue
,WP_U16 
bvci
,
WP_U32
 
O±Mode
)

2220 
NP_DL_FLOW_INFO
 *
Êow_öfo_±r
;

2221 *
key
;

2222 
NODE
 * 
ãmp
;

2223 if(
O±Mode
 =
DEL_DL_RULE_TALBE_BASED_ON_DPORT_BVCI
)

2225 
Êow_öfo_±r
 = 
	`≈u_gë_dow∆ök_öfo
(
Dp‹tSèπVÆue
,
bvci
);

2227 if(
Êow_öfo_±r
 =
NULL
)

2229 
	`WDDI_WARNING
("ˇ¿nŸ föd fﬁwÅÿbêdñëed.Dp‹tSèπVÆuê%d bvci%d \n",
Dp‹tSèπVÆue
,
bvci
);

2230  
ERR_DOWNLINX_FLOW_DELETE
;

2232 if(
Êow_öfo_±r
->
U£dFœg
 =
UNUSED
)

2234 
	`WDDI_WARNING
("this dlÑoute has been been deleted OptMode = DEL_DL_RULE_TALBE_BASED_ON_DPORT_BVCI\n");

2235  
ERR_DOWNLINX_FLOW_DELETE
;

2238 
	`WDDI_INFO
("Info:Çp_dl_rouã_èbÀ_dñëe::1, Dp‹tSèπVÆue:0x%x, bvci:%d\n",
Dp‹tSèπVÆue
,
bvci
);

2239 
	`WP_DlLookupE¡ryRemove
(0,
Êow_öfo_±r
->
agg_dl_dp‹tGΩ_h™dÀ
,
bvci
);

2240 
Êow_öfo_±r
->
U£dFœg
 = 
UNUSED
;

2241 
	`≈u_£t_dow∆ök_öfo
(
Êow_öfo_±r
);

2243 if(
O±Mode
 =
DEL_DL_RULE_TALBE_BASED_ON_DPORT
)

2245 
ãmp
 = 
‰_dl_dp‹t_nodehód
[
Dp‹tSèπVÆue
];

2246 
ãmp
!=
NULL
)

2248 
key
 = 
ãmp
->
ht_key
;

2249 
ãmp
Òemp->
√xt
;

2250 
Êow_öfo_±r
 = 
	`≈u_gë_dl_rouã_èbÀ_öfo
(
key
);

2251 if(
Êow_öfo_±r
 =
NULL
)

2253 
	`WDDI_WARNING
("W¨n: c™ÇŸ föd fﬁwÅÿbêdñëed.Dp‹tSèπVÆuê%d \n",
Dp‹tSèπVÆue
);

2256 if(
Êow_öfo_±r
->
U£dFœg
 =
UNUSED
)

2258 
	`WDDI_WARNING
("Warn:Åhis dlÑoute has been been deleted ,OptMode = DEL_DL_RULE_TALBE_BASED_ON_DPORT\n");

2263 
	`WDDI_INFO
("Info:Çp_dl_rouã_èbÀ_dñëe::2, Dp‹tSèπVÆue:0x%x, bvci:%d\n",
Dp‹tSèπVÆue
,
bvci
);

2264 
	`WP_DlLookupE¡ryRemove
(0,
Êow_öfo_±r
->
agg_dl_dp‹tGΩ_h™dÀ
,Êow_öfo_±r->
ruÀ
.
BVCI
);

2265 
Êow_öfo_±r
->
U£dFœg
 = 
UNUSED
;

2266 
	`≈u_£t_dow∆ök_öfo
(
Êow_öfo_±r
);

2270 if(
O±Mode
 =
DEL_DL_RULE_TALBE_BASED_ON_BVCI
)

2272 
ãmp
 = 
‰_dl_bvci_nodehód
[
bvci
];

2273 
ãmp
!=
NULL
)

2275 
key
 = 
ãmp
->
ht_key
;

2276 
ãmp
Òemp->
√xt
;

2277 
Êow_öfo_±r
 = 
	`≈u_gë_dl_rouã_èbÀ_öfo
(
key
);

2278 if(
Êow_öfo_±r
 =
NULL
)

2280 
	`WDDI_WARNING
("W¨n: c™ÇŸ föd fﬁwÅÿbêdñëed.bvci%d \n",
bvci
);

2283 if(
Êow_öfo_±r
->
U£dFœg
 =
UNUSED
)

2285 
	`WDDI_WARNING
("Warn:Åhis dlÑoute has been been deleted ,OptMode = DEL_DL_RULE_TALBE_BASED_ON_BVCI\n");

2290 
	`WDDI_INFO
("Info:Çp_dl_rouã_èbÀ_dñëe::3, Dp‹tSèπVÆue:0x%x, bvci:%d\n",
Dp‹tSèπVÆue
,
bvci
);

2291 
	`WP_DlLookupE¡ryRemove
(0,
Êow_öfo_±r
->
agg_dl_dp‹tGΩ_h™dÀ
,
bvci
);

2292 
Êow_öfo_±r
->
U£dFœg
 = 
UNUSED
;

2293 
	`≈u_£t_dow∆ök_öfo
(
Êow_öfo_±r
);

2299 
	`WDDI_ERR
("Eº‹:Çp_dl_rouã_èbÀ_dñëêO±Mode%d \n",
O±Mode
);

2304 
	}
}

2306 
	$WT_Tøn¶©eAsciiToHexGIGEGIGE
(
WP_CHAR
 *
Hex
, WP_CHAR *
Ascii
,

2307 
WP_U32
 
Àngth
)

2309 
WP_S32
 
i
, 
fú°
 = 0, 
£c⁄d
 = 0;

2311 
i
=0;i<
Àngth
;i++) {

2312 i‡(
Ascii
[2*
i
] >= '0' && Ascii[2*i] <= '9')

2313 
fú°
 = 
Ascii
[2*
i
] - '0';

2314 i‡(
Ascii
[2*
i
] >= 'a' && Ascii[2*i] <= 'f')

2315 
fú°
 = 
Ascii
[2*
i
] - 'a' + 10;

2316 i‡(
Ascii
[2*
i
+1] >= '0' && Ascii[2*i+1] <= '9')

2317 
£c⁄d
 = 
Ascii
[2*
i
+1] - '0';

2318 i‡(
Ascii
[2*
i
+1] >= 'a' && Ascii[2*i+1] <= 'f')

2319 
£c⁄d
 = 
Ascii
[2*
i
+1] - 'a' + 10;

2321 
Hex
[
i
] = (
WP_CHAR
)(
fú°
 * 16 + 
£c⁄d
);

2324 
	}
}

2332 
	gpùefuŒ
 = 0;

2333 
	gpùefuŒFRH
 = 0;

2334 
	gpùefuŒEthH
 =0;

2335 
	gpùefuŒEthL
 =0;

2336 
	gpùeWrôeEvítNum
 =0;

2337 
	$AµRxEvít
(
WP_èg
 
èg
, 
WP_U32
 
d©a
, WP_U32 
öfo
)

2339 
ªt
 = 0;

2340 if(
g_logLevñ
 ==0 )

2342 
tmp
[100];

2343 
	`•rötf
(
tmp
,"AµRxEvíàèg = %d \n",
èg
);

2346 if(
èg
 =
RX_ETH_INT_TAG
)

2348 
ªt
 =
	`wrôe
(
pùefdRxEth
[1], (*)&
èg
, 4);

2349 if(
ªt
 < 0)

2352 
pùefuŒEthL
++;

2354 
pùeWrôeEvítNum
++;

2356 if(
èg
 =
RX_ETH_INT_PRIO_MSG_TAG
 )

2358 
ªt
 =
	`wrôe
(
pùefdRxEthH¥io
[1], (*)&
èg
, 4);

2359 if(
ªt
 < 0)

2362 
pùefuŒEthH
++;

2364 
pùeWrôeEvítNum
++;

2367 if(
èg
 =
RX_FR_INT_PRIO_MSG_TAG
)

2369 
ªt
 =
	`wrôe
(
pùefd_RxFrH¥io
[1], (*)&
èg
, 4);

2370 i‡(
ªt
 < 0)

2372 
pùefuŒFRH
++;

2377 
ªt
 =
	`wrôe
(
pùefd
[1], (*)&
èg
, 4);

2378 if(
ªt
 < 0)

2380 
pùefuŒ
++;

2384 
	}
}

2387 
NP_SYSTEM_INFO
 *
	$≈_gë_sy°em_öfo
()

2389  &
≈_sy°em
;

2390 
	}
}

2392 
	$≈_di•œy_iw_p‹t_°©
()

2394 
NP_SYSTEM_INFO
 * 
the_sy°em
 = 
	`≈_gë_sy°em_öfo
();

2396 
	`F¥ötf
("\n display Bport_enet1_handle info\n");

2397 
	`iw_p‹t_°©
(
the_sy°em
->
Bp‹t_íë1_h™dÀ
);

2398 
	`F¥ötf
("\n display Bport_enet2host_handle info\n");

2399 
	`iw_p‹t_°©
(
the_sy°em
->
Bp‹t_íë2ho°_h™dÀ
);

2400 
	`F¥ötf
("###\n display iw_enet_defrag info###\n");

2401 
	`iw_p‹t_°©
(
iw_íë_3
);

2402 
	`F¥ötf
("###\n display Rport_enet1_hanlde info###\n");

2403 
	`iw_rouã_p‹t_°©
(
the_sy°em
->
Rp‹t_íë1_h™lde
);

2404 
	`F¥ötf
("###\n display Bport_mac_filter_handle info###\n");

2405 
	`iw_p‹t_°©
(
the_sy°em
->
Bp‹t_mac_fûãr_h™dÀ
);

2406 
	`F¥ötf
("###\n display Bport_mac_filter_from_eth2_handle info###\n");

2407 
	`iw_p‹t_°©
(
the_sy°em
->
Bp‹t_mac_fûãr_‰om_ëh2_h™dÀ
);

2408 
	}
}

2410 
WP_bridge_p‹t
 
	gbridge_bp‹t_c⁄f
[1] =

2414  
WP_IW_DIRECT_MAP_DISABLE
,

2416  
WP_IW_HOST_TERM_MODE
,

2417  
WP_IW_LEARNING_DISABLE
,

2418  
WP_IW_INGRESS_FILTER_DISABLE
,

2421  
WP_IW_ACCEPT_TAGGED_UNTAGGED
,

2426  
WP_IW_GROUP_FILTER_DISABLE
,

2428  
WP_IW_UNK_MC_HT
,

2429  
WP_IW_BC_HT_DISABLE
,

2432 #i‡
STATISTICS_ENABLE


2433  
WP_IW_PORT_STAT_ENABLE
,

2435  
WP_IW_PORT_STAT_DISABLE
,

2437  
WP_IW_UNK_UC_SR_ENABLE
,

2438  
WP_IW_BPORT_CLASSIFICATION_ENABLED
,

2439  
WP_IW_ADV_UNK_LOOKUP_DISABLED
,

2440  
WP_IW_CFI_HT_DISABLE
,

2441  
WP_IW_RES_MC_HT_DISABLE


2446 
WP_iw_agg_dúe˘m≠
 
	gbridge_iw_agg_cfg
 [1] = {

2451  
WP_IW_RFCS_DISABLE
,

2452  
WP_IW_L2H_INSERT_ENABLE
,

2453  
WP_IW_L2H_INSERT_DISABLE
,

2454  
WP_IW_ERRPKT_DISCARD
,

2455  
WP_IW_INT_DISABLE
,

2456  
WP_IW_STAT_ENABLE
,

2457  
WP_IW_TIME_STAMP_DISABLE
,

2458  
WP_IW_OV_POOL_DISABLE
,

2473  
WP_IW_POLICER_DISABLE
,

2474  
NULL
,

2475  
WP_IW_CONGESTION_DISABLE
,

2476  
NULL
,

2477  
WP_IW_LENGTH_UPDATE_L3
,

2479  
WP_IW_FLOW_AGG_PRIMARY
,

2484 
WP_iw_agg_bridgög
 
	gbridge_ho°_agg_cfg
[] =

2490  
WP_IW_RFCS_ENABLE
,

2491  
WP_IW_L2H_INSERT_DISABLE
,

2492  
WP_IW_VLAN_TAG_DISABLE
,

2493  
WP_IW_IRQT1
,

2494  
WP_IW_ERRPKT_DISCARD
,

2495  
WP_IW_INT_ENABLE
,

2496  
WP_IW_STAT_ENABLE
,

2497  
WP_IW_TIME_STAMP_DISABLE
,

2498  
WP_IW_OV_POOL_DISABLE
,

2500  
WP_IW_REPLACE_VTAG_DISABLE
,

2509  
WP_IW_POLICER_DISABLE
,

2510  
NULL
,

2511  
WP_IW_CONGESTION_DISABLE
,

2512  
NULL


2518 
	$≈_upd©eBVCI_Êow_add
(
STRU_SET_UPDATE_BVCI_PATH_RULE
 *
ruÀ
)

2521 
WP_iw_agg_dúe˘m≠
 
bridge_iw_agg_cfg
 [1] = {

2526  
WP_IW_RFCS_DISABLE
,

2527  
WP_IW_L2H_INSERT_ENABLE
,

2528  
WP_IW_L2H_INSERT_DISABLE
,

2529  
WP_IW_ERRPKT_DISCARD
,

2530  
WP_IW_INT_DISABLE
,

2531  
WP_IW_STAT_ENABLE
,

2532  
WP_IW_TIME_STAMP_DISABLE
,

2533  
WP_IW_OV_POOL_DISABLE
,

2548  
WP_IW_POLICER_DISABLE
,

2549  
NULL
,

2550  
WP_IW_CONGESTION_DISABLE
,

2551  
NULL
,

2552  
WP_IW_LENGTH_UPDATE_L3
,

2554  
WP_IW_FLOW_AGG_PRIMARY
,

2559 
WP_S32
 
°©us
;

2560 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

2561 
STRU_VPORT_INFO
 *
Vp‹tInfo
;

2562 
u32
 
ˇrd
;

2563 
u32
 
åunk
;

2564 
u32
 
group
;

2565 
u32
 
dlci
;

2566 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

2568 
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
ruÀ
->
u_p‹t
.
vÂ‹t
);

2569 
	`≈_‰addr_u≈ack
(
ruÀ
->
u_p‹t
.
vÂ‹t
,&
ˇrd
,&
åunk
,&
group
,&
dlci
);

2573 
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
ruÀ
->
u_p‹t
.
p‹tD°
);

2575 if(
Vp‹tInfo
 =
NULL
)

2577 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

2579 
	`WDDI_WARNING
("Eº‹:Çp_upd©eBVCI_Êow_add::≈u_gë_vp‹t_öfÿÁûed! vp‹à%d S%dP%dFR%dD%d\¿",
ruÀ
->
u_p‹t
.
vÂ‹t
,
ˇrd
,
åunk
,
group
,
dlci
);

2583 
	`WDDI_WARNING
("Eº‹:Çp_upd©eBVCI_Êow_add::≈u_gë_vp‹t_öfÿÁûed! vp‹à%d \¿",
ruÀ
->
u_p‹t
.
vÂ‹t
);

2585  
ERR_BVCI_FLOW_ADD
;

2587 if(
Vp‹tInfo
->
U£dFœg
 =
UNUSED
)

2589 
	`WDDI_WARNING
("Eº‹:Çp_upd©eBVCI_Êow_add::≈u_gë_vp‹t_öfo, vp‹t:%d UNUSED!\¿",
ruÀ
->
u_p‹t
.
vÂ‹t
);

2590  
ERR_BVCI_FLOW_ADD
;

2592 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

2594 
	`WDDI_INFO
("Info:Çp_upd©eBVCI_Êow_add::≈u_gë_vp‹t_öfo, vp‹à0x%x:S%dP%dFR%dD%d\¿",
ruÀ
->
u_p‹t
.
vÂ‹t
,
ˇrd
,
åunk
,
group
,
dlci
);

2595 
FR_CHANNEL_INFO
 *
ch_öfo
 = &
Vp‹tInfo
->ch_info;

2597 if(
ch_öfo
->
agg_tx2E√t1
 == 0)

2600 
	`WDDI_WARNING
("Çp_upd©eBVCI_Êow_addÉº‹,thêFR ch_öfo->agg_tx2E√t1 i†NULL!\¿",
ruÀ
->
u_p‹t
.
vÂ‹t
);

2601  
ERR_BVCI_FLOW_ADD
;

2604 if(
ch_öfo
->
agg_tx2E√t1
 == 0)

2607 
bridge_iw_agg_cfg
->
txfunc
 = 
agg_íë_1
;

2609 
bridge_iw_agg_cfg
->
¥efix_Àngth
 = 46;

2610 
bridge_iw_agg_cfg
->
exåa˘i⁄_Àngth
 = 2;

2611 
ch_öfo
->
agg_tx2E√t1
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0,
WP_IW_DIRECTMAP_MODE
, 
bridge_iw_agg_cfg
);

2612 
	`ãrmö©e_⁄_îr‹
(
ch_öfo
->
agg_tx2E√t1
, "WP_IwFlowAggregationCreate ch_info->agg_tx2Enet1");

2615 
°©us
 = 
	`WPI_U£rDefHashE¡ryIn£π
(
ch_öfo
->
devi˚_h™dÀ
,
	`WPI_HANDLE_INDEX
(ch_öfo->
agg_tx2E√t1
),
ruÀ
->
NS_BVCI_ﬁd
,ruÀ->
NS_BVCI
);

2616 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WPI_UserDefHashEntryInsert LOCAL IPEP");

2618 if(
ch_öfo
->
agg_‰_to_íë2
 == 0)

2620 
	`≈_ul_‰_to_íë2_¸óã
(
ch_öfo
);

2623 
°©us
 = 
	`WPI_U£rDefHashE¡ryIn£π
(
ch_öfo
->
devi˚_h™dÀ
,
	`WPI_HANDLE_INDEX
(ch_öfo->
agg_‰_to_íë2
),
ruÀ
->
NS_BVCI_ﬁd
,ruÀ->
NS_BVCI
);

2624 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WPI_UserDefHashEntryInsert PEER IPEP");

2627 
WP_U32
 
ªsu…
 = 0;

2629 
ªsu…
 = 0;

2630 
°©us
 = 
	`WPI_U£rDefHashE¡ryDi•œy
(
ch_öfo
->
devi˚_h™dÀ
,
	`WPI_HANDLE_INDEX
(ch_öfo->
agg_tx2E√t1
),
ruÀ
->
NS_BVCI_ﬁd
,(
WPI_PTR
)
hash_ba£
,&
ªsu…
);

2631 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WPI_UserDefHashEntryDisplay");

2632 
	`F¥ötf
("key1 = %d key2=0x%x d©®0x%x\n",
	`WPI_HANDLE_INDEX
(
ch_öfo
->
agg_tx2E√t1
),
ruÀ
->
NS_BVCI_ﬁd
,
ªsu…
);

2638 
	`WDDI_INFO
("Info:Çp_upd©eBVCI_Êow_add::≈u_gë_vp‹t_öfo, vp‹t:%d\n",
ruÀ
->
u_p‹t
.
vÂ‹t
);

2641 if(
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1
 == 0)

2643 
NP_SYSTEM_INFO
 * 
the_sy°em
 = 
	`≈_gë_sy°em_öfo
();

2644 
bridge_iw_agg_cfg
->
txfunc
 =
the_sy°em
->
agg_íë_deÁu…_ho°_h™dÀ
;

2645 
bridge_iw_agg_cfg
->
¥efix_Àngth
 = 28;

2646 
bridge_iw_agg_cfg
->
exåa˘i⁄_Àngth
 = 46;

2647 
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0,
WP_IW_DIRECTMAP_MODE
,
bridge_iw_agg_cfg
);

2648 
	`ãrmö©e_⁄_îr‹
(
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1
, "np_updateBVCI_flow_add WP_IwFlowAggregationCreateágg_ul_ip2iptx2Enet1");

2651 
°©us
 = 
	`WPI_U£rDefHashE¡ryIn£π
(0,
	`WPI_HANDLE_INDEX
(
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1
),
ruÀ
->
NS_BVCI_ﬁd
,ruÀ->
NS_BVCI
);

2652 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WPI_UserDefHashEntryInsertágg_ul_ip2iptx2Enet1");

2654 if(
Vp‹tInfo
->
agg_ul_ù_to_íë2_h™dÀ
 == 0)

2656 
	`≈_ul_ù_f‹w¨d_to_íë2_¸óã
(
Vp‹tInfo
);

2658 
°©us
 = 
	`WPI_U£rDefHashE¡ryIn£π
(0,
	`WPI_HANDLE_INDEX
(
Vp‹tInfo
->
agg_ul_ù_to_íë2_h™dÀ
),
ruÀ
->
NS_BVCI_ﬁd
,ruÀ->
NS_BVCI
);

2659 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WPI_UserDefHashEntryInsertágg_ul_ip_to_enet2_handle" );

2664 
NP_UPDATE_BVCI_FLOW_INFO
 
Êow_öfo
;

2665 
Êow_öfo
.
agg_upd©eBVCI_h™dÀ
 = 0;

2666 
Êow_öfo
.
ÊowH™dÀ_bvci
 = 0;

2667 
Êow_öfo
.
vp‹t
 = 
ruÀ
->
u_p‹t
.
vÂ‹t
;

2668 
Êow_öfo
.
NS_BVCI
 = 
ruÀ
->NS_BVCI;

2669 
Êow_öfo
.
NS_BVCI_ﬁd

ruÀ
->NS_BVCI_old;

2670 
Êow_öfo
.
U£dFœg
 = 
USED
;

2673 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

2675 ()
	`≈u_£t_upd©e_bvci_öfo
(
ruÀ
->
u_p‹t
.
vÂ‹t
,ruÀ->
NS_BVCI_ﬁd
,&
Êow_öfo
,
Vp‹tInfo
);

2680 ()
	`≈u_£t_upd©e_bvci_öfo
(
ruÀ
->
u_p‹t
.
p‹tD°
,ruÀ->
NS_BVCI_ﬁd
,&
Êow_öfo
,
Vp‹tInfo
);

2684 
	}
}

2686 
	$≈_upd©eBVCI_Êow_dñëe
(
WP_U32
 
vÂ‹t
,
WP_U16
 
NS_BVCI_ﬁd
,WP_U32 
O±Mode
)

2689 
°©us
 = 
WP_OK
;

2690 
NP_UPDATE_BVCI_FLOW_INFO
 * 
bvci_öfo
 = 
NULL
;

2691 
STRU_VPORT_INFO
 *
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
vÂ‹t
);

2692 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

2694 if(
Vp‹tInfo
 =
NULL
)

2696 
	`WDDI_WARNING
("Eº‹:Çp_upd©eBVCI_Êow_dñëe::≈u_gë_vp‹t_öfÿÁûed! vp‹t:%d\n",
vÂ‹t
);

2697  
ERR_BVCI_FLOW_DELETE
;

2698 }if(
Vp‹tInfo
->
U£dFœg
 =
UNUSED
)

2700 
	`WDDI_WARNING
("Eº‹:Çp_upd©eBVCI_Êow_dñëe::≈u_gë_vp‹t_öfo, vp‹t:%d unu£d!\¿",
vÂ‹t
);

2701  
ERR_BVCI_FLOW_DELETE
;

2703 if(
O±Mode
 =
DEL_UL_UPDATE_BVCI_TALBE_BASED_ON_PORT_BVCI
)

2705 
bvci_öfo
 = 
	`≈u_gë_upd©e_bvci_öfo
(
vÂ‹t
,
NS_BVCI_ﬁd
);

2706 if(
NULL
 =
bvci_öfo
)

2708 
	`WDDI_WARNING
("Çp_upd©eBVCI_Êow_dñëê≈u_gë_upd©e_bvci_öfÿvp‹à%d \¿",
vÂ‹t
);

2709  
ERR_BVCI_FLOW_DELETE
;

2711 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

2713 
FR_CHANNEL_INFO
 *
ch_öfo
 = &
Vp‹tInfo
->ch_info;

2714 
°©us
 = 
	`WPI_U£rDefHashE¡ryRemove
(0,
	`WPI_HANDLE_INDEX
(
ch_öfo
->
agg_tx2E√t1
),
NS_BVCI_ﬁd
,
bvci_öfo
->
NS_BVCI
);

2715 i‡(
°©us
 =
WP_ERR_NOT_EXIST_IN_HASH
)

2717 
	`WDDI_WARNING
("WPI_UserDefHashEntryRemove keyÇotÉxist in hash \n");

2718  
ERR_BVCI_FLOW_DELETE
;

2720 
°©us
 = 
	`WPI_U£rDefHashE¡ryRemove
(0,
	`WPI_HANDLE_INDEX
(
ch_öfo
->
agg_‰_to_íë2
),
NS_BVCI_ﬁd
,
bvci_öfo
->
NS_BVCI
);

2721 i‡(
°©us
 =
WP_ERR_NOT_EXIST_IN_HASH
)

2723 
	`WDDI_WARNING
("WPI_UserDefHashEntryRemove keyÇotÉxist in hash \n");

2724  
ERR_BVCI_FLOW_DELETE
;

2726 
	`WDDI_INFO
("Info:Çp_updateBVCI_flow_delete::1\n");

2730 
°©us
 = 
	`WPI_U£rDefHashE¡ryRemove
(0,
	`WPI_HANDLE_INDEX
(
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1
),
NS_BVCI_ﬁd
,
bvci_öfo
->
NS_BVCI
);

2731 i‡(
°©us
 =
WP_ERR_NOT_EXIST_IN_HASH
)

2733 
	`WDDI_WARNING
("WPI_UserDefHashEntryRemove keyÇotÉxist in hash \n");

2734  
ERR_BVCI_FLOW_DELETE
;

2736 
°©us
 = 
	`WPI_U£rDefHashE¡ryRemove
(0,
	`WPI_HANDLE_INDEX
(
Vp‹tInfo
->
agg_ul_ù_to_íë2_h™dÀ
),
NS_BVCI_ﬁd
,
bvci_öfo
->
NS_BVCI
);

2737 i‡(
°©us
 =
WP_ERR_NOT_EXIST_IN_HASH
)

2739 
	`WDDI_WARNING
("WPI_UserDefHashEntryRemove keyÇotÉxist in hash \n");

2740  
ERR_BVCI_FLOW_DELETE
;

2742 
	`WDDI_INFO
("Info:Çp_updateBVCI_flow_delete::2\n");

2745 
WP_U32
 
ªsu…
 = 0;

2746 
°©us
 = 
	`WPI_U£rDefHashE¡ryDi•œy
(
ch_öfo
->
devi˚_h™dÀ
,
	`WPI_HANDLE_INDEX
(ch_öfo->
agg_tx2E√t1
),
NS_BVCI_ﬁd
,&
ªsu…
);

2747 i‡(
°©us
 !
WP_ERR_NOT_EXIST_IN_HASH
)

2749 
	`F¥ötf
("key1 = %d key2=0x%x d©®0x%x\n",
	`WPI_HANDLE_INDEX
(
ch_öfo
->
agg_tx2E√t1
),
NS_BVCI_ﬁd
,
ªsu…
);

2753 
	`F¥ötf
(" WPI_UserDefHashEntryDisplay keyÇotÉxist in hash \n ");

2757 
bvci_öfo
->
U£dFœg
 = 
UNUSED
;

2758 ()
	`≈u_£t_upd©e_bvci_öfo
(
vÂ‹t
,
NS_BVCI_ﬁd
,
bvci_öfo
,
Vp‹tInfo
);

2760 if(
O±Mode
 =
DEL_UL_UPDATE_BVCI_TALBE_BASED_ON_PORT
)

2763 
NODE
 *
ãmp
;

2764 *
key
;

2765 
NP_UPDATE_BVCI_FLOW_INFO
 *
p_BvciFlowInfo
;

2766 
u32
 
i
 = 0;

2767 
ãmp
=
Vp‹tInfo
->
bvci_nodehód
;

2768 
ãmp
!=
NULL
)

2770 
key
 = 
ãmp
->
ht_key
;

2771 
ãmp
Òemp->
√xt
;

2772 
p_BvciFlowInfo
 = 
	`≈u_gë_ul_bvci_èbÀ_öfo
(
key
);

2773 if(
NULL
 =
p_BvciFlowInfo
)

2775 
	`WDDI_WARNING
("WhenÇpu_get_ul_bvci_table_info failed\n");

2777 if(
p_BvciFlowInfo
->
U£dFœg
 =
UNUSED
)

2784 if(
vÂ‹t
 =
p_BvciFlowInfo
->
vp‹t
)

2786 
bvci_öfo
 = 
	`≈u_gë_upd©e_bvci_öfo
(
vÂ‹t
,
p_BvciFlowInfo
->
NS_BVCI_ﬁd
);

2787 if(
NULL
 =
bvci_öfo
)

2789 
	`WDDI_WARNING
("Çp_upd©eBVCI_Êow_addÇpu_gë_upd©e_bvci_öfÿvp‹à%d \¿",
vÂ‹t
);

2790  
ERR_BVCI_FLOW_DELETE
;

2792 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

2794 
FR_CHANNEL_INFO
 *
ch_öfo
 = &
Vp‹tInfo
->ch_info;

2795 
°©us
 = 
	`WPI_U£rDefHashE¡ryRemove
(0,
	`WPI_HANDLE_INDEX
(
ch_öfo
->
agg_tx2E√t1
),
p_BvciFlowInfo
->
NS_BVCI_ﬁd
,
bvci_öfo
->
NS_BVCI
);

2796 i‡(
°©us
 =
WP_ERR_NOT_EXIST_IN_HASH
)

2798 
	`WDDI_WARNING
("WPI_UserDefHashEntryRemove keyÇotÉxist in hash \n");

2801 
	`WDDI_INFO
("Info:Çp_updateBVCI_flow_delete::3\n");

2805 
°©us
 = 
	`WPI_U£rDefHashE¡ryRemove
(0,
	`WPI_HANDLE_INDEX
(
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1
),
p_BvciFlowInfo
->
NS_BVCI_ﬁd
,
bvci_öfo
->
NS_BVCI
);

2806 i‡(
°©us
 =
WP_ERR_NOT_EXIST_IN_HASH
)

2808 
	`WDDI_WARNING
("WPI_UserDefHashEntryRemove keyÇotÉxist in hash \n");

2809  
ERR_BVCI_FLOW_DELETE
;

2811 
	`WDDI_INFO
("Info:Çp_updateBVCI_flow_delete::4\n");

2813 
p_BvciFlowInfo
->
U£dFœg
 = 
UNUSED
;

2819 
	}
}

2821 
	$≈_ul_rouã_èbÀ_add
(
STRU_SET_UPLINK_PATH_RULE
 *
u∂ök_ruÀ
)

2823 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

2824 
NP_SYSTEM_INFO
 * 
the_sy°em
 = 
	`≈_gë_sy°em_öfo
();

2825 
WP_U32
 
NRI
 = 0;

2832 
NRI
 = 
u∂ök_ruÀ
->
NRIVÆue
;

2834 if(
NRI
>256)

2836 
	`WDDI_WARNING
("Eº‹:Çp_ul_rouã_èbÀ_add, NIR:%d invÆid!\n",
NRI
);

2837  
ERR_UPLINX_FLOW_ADD
;

2841 
ùhdr
 *
ùhódî
;

2842 
udphdr
 *
udphódî
;

2843 
WP_°©us
 
°©us
;

2844 
NP_UL_FLOW_INFO
 
Êow_öfo
;

2845 
FR_CHANNEL_INFO
 * 
ch_öfo
;

2846 
STRU_SET_UPLINK_PATH_LINK_TABLE
 *
ul_lök_èbÀ
;

2848 
WP_h™dÀ
 
Êow_agg
[2]={0};

2850 
STRU_VPORT_INFO
 *
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
u∂ök_ruÀ
->
u_p‹t
.
vÂ‹t
);

2851 if(
Vp‹tInfo
 =
NULL
)

2853 
	`WDDI_WARNING
("Eº‹:Çp_ul_rouã_èbÀ_add::≈u_gë_vp‹t_öfÿÁû! vÂ‹à%d\n",
u∂ök_ruÀ
->
u_p‹t
.
vÂ‹t
);

2854  
ERR_UPLINX_FLOW_ADD
;

2856 if(
Vp‹tInfo
->
U£dFœg
 =
UNUSED
)

2858 
	`WDDI_WARNING
("Eº‹:Çp_ul_rouã_èbÀ_add::≈u_gë_vp‹t_öfo, vÂ‹t:%d unu£d!\n",
u∂ök_ruÀ
->
u_p‹t
.
vÂ‹t
);

2859  
ERR_UPLINX_FLOW_ADD
;

2861 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

2863 
ch_öfo
 = &
Vp‹tInfo
->ch_info;

2865 if(
ch_öfo
->
agg_tx2E√t1
 == 0)

2868 
bridge_iw_agg_cfg
->
txfunc
 = 
agg_íë_1
;

2871 if(
öôül_cfg
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

2873 
bridge_iw_agg_cfg
->
¥efix_Àngth
 = 46;

2877 
bridge_iw_agg_cfg
->
¥efix_Àngth
 = 42;

2879 
bridge_iw_agg_cfg
->
exåa˘i⁄_Àngth
 = 2;

2880 
ch_öfo
->
agg_tx2E√t1
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0,
WP_IW_DIRECTMAP_MODE
, 
bridge_iw_agg_cfg
);

2881 
	`ãrmö©e_⁄_îr‹
(
ch_öfo
->
agg_tx2E√t1
, "WP_IwFlowAggregationCreate ch_info->agg_tx2Enet1");

2887 
NP_ARP_INFO
 
¨p
={0};

2889 
ul_lök_èbÀ
 = 
	`≈u_gë_ul_lök_èbÀ_öfo
(
u∂ök_ruÀ
->
P‹tSrc
);

2890 if(
ul_lök_èbÀ
 =
NULL
)

2892 
	`WDDI_WARNING
("u»lökÅabÀ i†nŸÉxi°ed ,key P‹tSr¯0x%x",
u∂ök_ruÀ
->
P‹tSrc
);

2893  
ERR_UPLINX_FLOW_ADD
;

2895 if(
ul_lök_èbÀ
->
IpEpAcôveNum
 == 0)

2897 
	`WDDI_WARNING
("ulÜinkÅable isÇotÉxisted ,IpEpAcitveNum = 0\n");

2898  
ERR_UPLINX_FLOW_ADD
;

2900 
ªt
;

2901 
AºayBuf
[10];

2903 
WP_U32
 
IpD°
 = 
ul_lök_èbÀ
->
IpEp
[0].IpDst;

2905 
ªt
 = 
	`èp_sockë_gë¨p
(
IpD°
, 
AºayBuf
);

2906 if(
ªt
 == 0)

2908 
¨p
.
Ip
 = 
IpD°
;

2909 
	`mem˝y
(
¨p
.
Mac
,
AºayBuf
,6);

2911 ()
	`≈u_£t_¨p_öfo
(
IpD°
,&
¨p
);

2912 
	`≈_upd©e_mac_ö_rouã_sy°em
(&
¨p
);

2916 
	`WDDI_WARNING
("≈_ul_rouã_èbÀ_addÇpu_gë_¨p_öfÿÁû ipd°0x%x",
IpD°
);

2917  
ERR_UPLINX_FLOW_ADD
;

2923 if(
ch_öfo
->
agg_‰_rx_ho°_Êow
 !0 && ch_öfo->
agg_tx2E√t1
 !0 && ch_öfo->
agg_tx2E√t1ModifyFœg
 == 0)

2926 
ùhódî
 = (
ùhdr
 *)&
bridge_iw_agg_cfg
->
¥efix_hódî
[0];

2928 
ùhódî
->
daddr
=0;

2929 
ùhódî
->
ßddr
=
	`ht⁄l
(
öôül_cfg
->
ifI∑ddr
);

2931 
udphódî
 = (
udphdr
 *Ë(
ùhódî
 +1);

2932 
udphódî
->
sour˚
 = 0;

2933 
udphódî
->
de°
 = 0;

2936 
bridge_iw_agg_cfg
->
mtu
 = 1536;

2937 
bridge_iw_agg_cfg
->
iw_p‹t
 = 
the_sy°em
->
Rp‹t_íë1_h™lde
;

2938 
bridge_iw_agg_cfg
->
txfunc
 = 
the_sy°em
->
sy°em_rouã_£nd2ëh1_h™dÀ
;

2939 
bridge_iw_agg_cfg
->
¥efix_Àngth
 = 28;

2940 
bridge_iw_agg_cfg
->
exåa˘i⁄_Àngth
 = 2;

2948 
°©us
 = 
	`WP_IwFlowAggªg©i⁄Modify
(
ch_öfo
->
agg_tx2E√t1
,
WP_IW_FLOW_AGG_MOD_PRX
 | 
WP_IW_FLOW_AGG_MOD_TXFUNC
|
WP_IW_FLOW_AGG_MOD_IWPORT
,
bridge_iw_agg_cfg
);

2949 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwFlowAggregationModify");

2950 
ch_öfo
->
agg_tx2E√t1ModifyFœg
 = 1;

2953 if(
ch_öfo
->
agg_‰_to_íë2
 == 0)

2955 
	`≈_ul_‰_to_íë2_¸óã
(
ch_öfo
);

2957 
Êow_agg
[0] = 
ch_öfo
->
agg_tx2E√t1
;

2958 
Êow_agg
[1] = 
ch_öfo
->
agg_‰_to_íë2
;

2959 if(
ch_öfo
->
agg_‰_rx_ho°_Êow
 !=0)

2961 
	`WDDI_INFO
("Info:Çp_ul_rouã_èbÀ_add::1, vÂ‹t:0x%x\n",
u∂ök_ruÀ
->
u_p‹t
.
vÂ‹t
);

2962 
°©us
 = 
	`WP_LookupE¡ryIn£π
(
ch_öfo
->
devi˚_h™dÀ
, ch_öfo->
agg_‰_rx_ho°_Êow
, 
Êow_agg
, 
NRI
, 
	`ht⁄s
(
u∂ök_ruÀ
->
P‹tSrc
));

2963 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_LookupEntryInsert");

2966 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_IP
)

2968 
WP_CHAR
 
ruÀ_°rög
[128]={0};

2970 
NP_ARP_INFO
 
¨p
 ={0};

2972 
ul_lök_èbÀ
 = 
	`≈u_gë_ul_lök_èbÀ_öfo
(
u∂ök_ruÀ
->
P‹tSrc
);

2973 if(
ul_lök_èbÀ
 =
NULL
)

2975 
	`WDDI_WARNING
("Eº‹:Çp_ul_rouã_èbÀ_add::≈u_gë_ul_lök_èbÀ_öfÿÁûed! u∂ök_ruÀ->P‹tSrc:0x%x",
u∂ök_ruÀ
->
P‹tSrc
);

2976  
ERR_UPLINX_FLOW_ADD
;

2978 if(
ul_lök_èbÀ
->
IpEpAcôveNum
 == 0)

2980 
	`WDDI_WARNING
("Error:Çp_ul_route_table_add,ul_link_table->IpEpAcitveNum:0\n");

2981  
ERR_UPLINX_FLOW_ADD
;

2985 
ªt
;

2986 
AºayBuf
[10];

2987 
WP_U32
 
IpD°
 = 
ul_lök_èbÀ
->
IpEp
[0].IpDst;

2989 
ªt
 = 
	`èp_sockë_gë¨p
(
IpD°
, 
AºayBuf
);

2990 if(
ªt
 == 0)

2992 
¨p
.
Ip
 = 
IpD°
;

2993 
	`mem˝y
(
¨p
.
Mac
,
AºayBuf
,6);

2995 ()
	`≈u_£t_¨p_öfo
(
IpD°
,&
¨p
);

2996 
	`≈_upd©e_mac_ö_rouã_sy°em
(&
¨p
);

3000 
	`WDDI_WARNING
("Eº‹:Çp_ul_rouã_èbÀ_addÇpu_gë_¨p_öfÿÁû ipd°0x%x",
IpD°
);

3001  
ERR_UPLINX_FLOW_ADD
;

3005 if(
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1
 == 0)

3008 
ùhódî
 = (
ùhdr
 *)&
bridge_iw_agg_cfg
->
¥efix_hódî
[0];

3010 
ùhódî
->
daddr
=0;

3011 
ùhódî
->
ßddr
=
	`ht⁄l
(
öôül_cfg
->
ifI∑ddr
);

3013 
udphódî
 = (
udphdr
 *Ë(
ùhódî
 +1);

3014 
udphódî
->
sour˚
 = 
u∂ök_ruÀ
->
P‹tSrc
;

3015 
udphódî
->
de°
 = 0;

3017 
bridge_iw_agg_cfg
->
iw_p‹t
 = 
the_sy°em
->
Rp‹t_íë1_h™lde
;

3018 
bridge_iw_agg_cfg
->
txfunc
 = 
the_sy°em
->
sy°em_rouã_£nd2ëh1_h™dÀ
;

3019 
bridge_iw_agg_cfg
->
¥efix_Àngth
 = 28;

3020 if(
öôül_cfg
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

3022 
bridge_iw_agg_cfg
->
exåa˘i⁄_Àngth
 = 46;

3026 
bridge_iw_agg_cfg
->
exåa˘i⁄_Àngth
 = 42;

3028 
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0,
WP_IW_DIRECTMAP_MODE
,
bridge_iw_agg_cfg
);

3029 
	`ãrmö©e_⁄_îr‹
(
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1
, "WP_IwFlowAggregationCreateágg_ul_ip2iptx2Enet1");

3033 if(
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1ModifyFœg
 == 0)

3036 
ùhódî
 = (
ùhdr
 *)&
bridge_iw_agg_cfg
->
¥efix_hódî
[0];

3038 
ùhódî
->
daddr
=0xdc21aa0a;

3039 
ùhódî
->
ßddr
=
	`ht⁄l
(
öôül_cfg
->
ifI∑ddr
);

3041 
udphódî
 = (
udphdr
 *Ë(
ùhódî
 +1);

3042 
udphódî
->
sour˚
 = 
u∂ök_ruÀ
->
P‹tSrc
;

3043 
udphódî
->
de°
 = 0;

3045 
bridge_iw_agg_cfg
->
iw_p‹t
 = 
the_sy°em
->
Rp‹t_íë1_h™lde
;

3046 
bridge_iw_agg_cfg
->
txfunc
 =
the_sy°em
->
sy°em_rouã_£nd2ëh1_h™dÀ
;

3047 
bridge_iw_agg_cfg
->
¥efix_Àngth
 = 28;

3048 if(
öôül_cfg
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

3050 
bridge_iw_agg_cfg
->
exåa˘i⁄_Àngth
 = 46;

3054 
bridge_iw_agg_cfg
->
exåa˘i⁄_Àngth
 = 42;

3056 
°©us
 = 
	`WP_IwFlowAggªg©i⁄Modify
(
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1
,
WP_IW_FLOW_AGG_MOD_PRX
 | 
WP_IW_FLOW_AGG_MOD_TXFUNC
|
WP_IW_FLOW_AGG_MOD_IWPORT
,
bridge_iw_agg_cfg
);

3057 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwFlowAggregationModify");

3058 
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1ModifyFœg
 = 1;

3062 if(
Vp‹tInfo
->
agg_ù2ùtx2ho°
 == 0)

3064 
íë_iw_agg_cfg
->
l2_hódî_ö£π_mode
 = 
WP_IW_L2H_INSERT_DISABLE
;

3065 
íë_iw_agg_cfg
->
txfunc
 = 
the_sy°em
->
agg_íë_deÁu…_ho°_h™dÀ
;

3066 
íë_iw_agg_cfg
->
mtu
 = 0xa6a6;

3067 
íë_iw_agg_cfg
->
¥efix_Àngth
 = 0;

3068 
íë_iw_agg_cfg
->
exåa˘i⁄_Àngth
 = 0;

3069 
íë_iw_agg_cfg
->
dy«mic_Àngth_upd©e
 = 
WP_IW_LENGTH_UPDATE_DISABLED
;

3070 
Vp‹tInfo
->
agg_ù2ùtx2ho°
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0,
WP_IW_DIRECTMAP_MODE
, 
íë_iw_agg_cfg
);

3071 
	`ãrmö©e_⁄_îr‹
(
Vp‹tInfo
->
agg_ù2ùtx2ho°
, "WP_IwFlowAggregationCreateágg_ip2iptx2host");

3073 
íë_iw_agg_cfg
->
l2_hódî_ö£π_mode
 = 
WP_IW_L2H_INSERT_ENABLE
;

3077 if(
Vp‹tInfo
->
Êow_ul_tx2íë1
 == 0)

3080 
	`•rötf
 (
ruÀ_°rög
, "n;n;n;n;n;n;%d;UDP;",
	`ht⁄s
((
WP_U16
)
u∂ök_ruÀ
->
u_p‹t
.
p‹tD°
));

3081 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DPORT_UDP_IP_UL
].
˛assifõr_°rög
 = 
ruÀ_°rög
;

3082 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DPORT_UDP_IP_UL
].
a˘i⁄_öfo
.
f‹w¨dög_a˘i⁄
.
Êow_aggªg©i⁄
 = 
Vp‹tInfo
->
agg_ù2ùtx2ho°
;

3083 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DPORT_UDP_IP_UL
].
dfc_öfo
 = &
íë_to_íë_dfc_Êow_öfo
[NPU_FILTER_DPORT_UDP_IP_UL];

3084 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DPORT_UDP_IP_UL
].
m©ch_a˘i⁄
 = 
WP_FLOW_CLASS_MODE_FLOW_AGG
;

3086 
Vp‹tInfo
->
Êow_ul_tx2íë1
 = 
	`WP_IwFlowAdd
(
iw_sys_bridgög
, 
WP_FLOW_CLASS_RULE
,&(
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DPORT_UDP_IP_UL
]));

3087 
	`ãrmö©e_⁄_îr‹
(
Vp‹tInfo
->
Êow_ul_tx2íë1
, "WP_IwFlowAdd()Énet_to_enet_iw_sys");

3088 
°©us
 = 
	`WP_IwSy°emBuûd
(
iw_sys_bridgög
);

3089 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwSystemBuild - ip up flowÑule");

3093 if(
Vp‹tInfo
->
agg_ul_ù_to_íë2_h™dÀ
 == 0)

3095 
	`≈_ul_ù_f‹w¨d_to_íë2_¸óã
(
Vp‹tInfo
);

3097 
Êow_agg
[0] = 
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1
;

3098 
Êow_agg
[1] = 
Vp‹tInfo
->
agg_ul_ù_to_íë2_h™dÀ
;

3099 if(
Vp‹tInfo
->
agg_ù2ùtx2ho°
 != 0)

3101 
	`WDDI_INFO
("Info:Çp_ul_rouã_èbÀ_add::2, vÂ‹t:%d\n",
u∂ök_ruÀ
->
u_p‹t
.
vÂ‹t
);

3102 
°©us
 = 
	`WP_LookupE¡ryIn£π
(0, 
Vp‹tInfo
->
agg_ù2ùtx2ho°
, 
Êow_agg
, 
NRI
, 
	`ht⁄s
(
u∂ök_ruÀ
->
P‹tSrc
));

3103 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_LookupEntryInsert");

3108  
ERR_UPLINX_FLOW_ADD
;

3110 
Êow_öfo
.
NRI
 = NRI;

3111 
Êow_öfo
.
vp‹t
 = 
u∂ök_ruÀ
->
u_p‹t
.
vÂ‹t
;

3112 
Êow_öfo
.
U£dFœg
 = 
USED
;

3113 
Êow_öfo
.
p‹tSrc
 = 
u∂ök_ruÀ
->
P‹tSrc
;

3115 
	`≈u_£t_u∂ök_öfo
(&
Êow_öfo
);

3116 
u32
 
ƒöum
;

3117 
ƒöum
 = 0;nrinum< 257;nrinum++)

3119 if(
Vp‹tInfo
->
ƒi_vÆid_èlbe
[
ƒöum
]== 0)

3121 
Vp‹tInfo
->
ƒi_vÆid_èlbe
[
ƒöum
]=
NRI
+1;

3126 if(
Vp‹tInfo
->
ƒi_vÆid_èlbe
[
ƒöum
]=
NRI
+1)

3135 
	}
}

3137 
	$≈_ul_rouã_èbÀ_dñëe
(
WP_U32
 
vÂ‹t
,WP_U32 
NRIVÆue
)

3140 
WP_°©us
 
°©us
 = 
WP_OK
;

3141 
NP_UL_FLOW_INFO
 * 
p_Êow_öfo
;

3142 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

3144 
p_Êow_öfo
 = 
	`≈u_gë_u∂ök_öfo
(
vÂ‹t
, 
NRIVÆue
);

3145 if(
p_Êow_öfo
 =
NULL
)

3148  
ERR_UPLINX_FLOW_DELETE
;

3150 if(
p_Êow_öfo
->
U£dFœg
 =
UNUSED
)

3152 
	`WDDI_WARNING
("W¨n:Çp_ul_rouã_èbÀ_dñëe::p_Êow_öfo->U£dFœg:UNUSED! vÂ‹t:0x%x,NRIVÆue:%d\n",
vÂ‹t
,
NRIVÆue
);

3153  
ERR_UPLINX_FLOW_DELETE
;

3155 
FR_CHANNEL_INFO
 * 
ch_öfo
;

3156 
STRU_VPORT_INFO
 *
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
p_Êow_öfo
->
vp‹t
);

3157 if(
Vp‹tInfo
 =
NULL
)

3159 
	`WDDI_WARNING
("Eº‹:Çp_ul_rouã_èbÀ_dñëe::≈u_gë_vp‹t_öfÿÁûed! vÂ‹t:%d\n",
p_Êow_öfo
->
vp‹t
);

3160  
ERR_UPLINX_FLOW_ADD
;

3162 if(
Vp‹tInfo
->
U£dFœg
 =
UNUSED
)

3164 
	`WDDI_WARNING
("Eº‹:Çp_ul_rouã_èbÀ_dñëê≈u_gë_vp‹t_öfo, vp‹t:0x%x unu£d!\n",
vÂ‹t
);

3165  
ERR_DOWNLINX_FLOW_ADD
;

3167 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

3169 
ch_öfo
 = &
Vp‹tInfo
->ch_info;

3170 
°©us
 = 
	`WP_LookupE¡ryRemove
(0, 
ch_öfo
->
agg_‰_rx_ho°_Êow
, 
NRIVÆue
);

3171 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_LookupEntryRemove");

3174 
p_Êow_öfo
->
U£dFœg
 = 
UNUSED
;

3175 
	`≈u_£t_u∂ök_öfo
(
p_Êow_öfo
);

3176 
	`WDDI_INFO
("Info:Çp_ul_rouã_èbÀ_dñëe::1, vÂ‹t:0x%x, NRIVÆue:%d\n",
vÂ‹t
,
NRIVÆue
);

3180 
°©us
 = 
	`WP_LookupE¡ryRemove
(0, 
Vp‹tInfo
->
agg_ù2ùtx2ho°
, 
NRIVÆue
);

3181 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_LookupEntryRemove");

3182 
p_Êow_öfo
->
U£dFœg
 = 
UNUSED
;

3183 
	`≈u_£t_u∂ök_öfo
(
p_Êow_öfo
);

3184 
	`WDDI_INFO
("Info:Çp_ul_rouã_èbÀ_dñëe::2,Ö‹tSrc:0x%x, NRIVÆue:%d\n",
vÂ‹t
,
NRIVÆue
);

3187  
°©us
;

3188 
	}
}

3190 
	#WPI_VALID_BIT_MASK
 0x80000000

	)

3191 
	$≈_ul_lök_èbÀ_£t
(
STRU_SET_UPLINK_PATH_LINK_TABLE
 *
lök_èbÀ
)

3193 
u32
 
i
=0,
j
=0;

3194 
wp_loˇl_π
 
loˇl_π
 = {0};

3195 
loˇl_π
.
vÆid_num
 = 
lök_èbÀ
->
IpEpAcôveNum
;

3196 
u32
 
LﬂˇlAΩÁû
 =0;

3197 if(
loˇl_π
.
vÆid_num
 == 0)

3199 
	`WP_IPEndPoötE¡ryIn£π
(0,
	`ht⁄s
(
lök_èbÀ
->
P‹tSrc
), &
loˇl_π
);

3200 
	`WDDI_INFO
("≈_ul_lök_èbÀ_£àP‹tSr¯0x%xÜöknum=%d\n",
lök_èbÀ
->
P‹tSrc
,lök_èbÀ->
IpEpAcôveNum
);

3201 
	`≈u_£t_‰_ul_lök_èbÀ_öfo
(
lök_èbÀ
);

3208 
NP_ARP_INFO
 
¨p
={0};

3209 
ªt
;

3210 
AºayBuf
[10];

3212 
WP_U32
 
IpD°
 = 
lök_èbÀ
->
IpEp
[0].IpDst;

3214 
ªt
 = 
	`èp_sockë_gë¨p
(
IpD°
, 
AºayBuf
);

3215 if(
ªt
 == 0)

3217 
¨p
.
Ip
 = 
IpD°
;

3218 
	`mem˝y
(
¨p
.
Mac
,
AºayBuf
,6);

3220 ()
	`≈u_£t_¨p_öfo
(
IpD°
,&
¨p
);

3221 
	`≈_upd©e_mac_ö_rouã_sy°em
(&
¨p
);

3225 
	`WDDI_WARNING
("W¨n:Çp_ul_lök_èbÀ_£t::èp_sockë_gë¨∞Áûed! ipd°0x%x\n",
IpD°
);

3227 
LﬂˇlAΩÁû
 = 1;

3232 if(
LﬂˇlAΩÁû
 ==0)

3235 
i
 = 0;i< 
loˇl_π
.
vÆid_num
 ;i++)

3237 if(
lök_èbÀ
->
IpEp
[
i
].
Fœg
 =
LOCAL_FLAG
)

3239 
j
++;

3241 
loˇl_π
.
ù_ï
[
i
].
ù_addr
 = 
	`ht⁄l
(
lök_èbÀ
->
IpEp
[i].
IpD°
);

3242 
loˇl_π
.
ù_ï
[
i
].
d°_p‹t
 = 
	`ht⁄s
(
lök_èbÀ
->
IpEp
[i].
P‹tD°
);

3245 
loˇl_π
.
ù_ï
[
i
].
§c_p‹t
 = 
lök_èbÀ
->
IpEp
[i].
Fœg
;

3247 if(
j
 =(
loˇl_π
.
vÆid_num
 - j))

3249 if(
j
==0)

3251 
loˇl_π
.
vÆid_num
 =0;

3256 
loˇl_π
.
vÆid_num
 |
WPI_VALID_BIT_MASK
;

3260 
loˇl_π
.
vÆid_num
 |(
j
<<16);

3265 
STRU_SET_UPLINK_PATH_LINK_TABLE
 
lök_èbÀ_tmp
 ;

3266 
	`mem£t
(&
lök_èbÀ_tmp
,0,(link_table_tmp));

3267 
lök_èbÀ_tmp
.
P‹tSrc
 = 
lök_èbÀ
->PortSrc;

3268 
i
 = 0;i< 
loˇl_π
.
vÆid_num
 ;i++)

3270 if(
lök_èbÀ
->
IpEp
[
i
].
Fœg
 =
LOCAL_FLAG
)

3275 
loˇl_π
.
ù_ï
[
j
].
ù_addr
 = 
	`ht⁄l
(
lök_èbÀ
->
IpEp
[
i
].
IpD°
);

3276 
loˇl_π
.
ù_ï
[
j
].
d°_p‹t
 = 
	`ht⁄s
(
lök_èbÀ
->
IpEp
[
i
].
P‹tD°
);

3279 
loˇl_π
.
ù_ï
[
j
].
§c_p‹t
 = 
lök_èbÀ
->
IpEp
[
i
].
Fœg
;

3281 
lök_èbÀ_tmp
.
IpEpAcôveNum
 = 
j
+1;

3282 
lök_èbÀ_tmp
.
IpEp
[
j
].
Fœg
 = 
lök_èbÀ
->IpEp[
i
].Flag;

3283 
lök_èbÀ_tmp
.
IpEp
[
j
].
IpD°
 = 
lök_èbÀ
->IpEp[
i
].IpDst;

3284 
lök_èbÀ_tmp
.
IpEp
[
j
].
P‹tD°
 = 
lök_èbÀ
->IpEp[
i
].PortDst;

3285 
j
++;

3287 
loˇl_π
.
vÆid_num
 = 
j
;

3288 if(
loˇl_π
.
vÆid_num
 == 0)

3290 
	`WDDI_WARNING
("Warn:Çp_ul_link_table_set,Ço PEERÜink configured!");

3291  
ERR_UPLINX_FLOW_ADD
;

3293 
	`WP_IPEndPoötE¡ryIn£π
(0,
	`ht⁄s
(
lök_èbÀ_tmp
.
P‹tSrc
), &
loˇl_π
);

3294 
	`WDDI_INFO
("Info:Çp_ul_lök_èbÀ_£à⁄lyÖìr,P‹tSr¯0x%x,löknum=%d\n",
lök_èbÀ_tmp
.
P‹tSrc
,lök_èbÀ_tmp.
IpEpAcôveNum
);

3295 
	`≈u_£t_‰_ul_lök_èbÀ_öfo
(&
lök_èbÀ_tmp
);

3296  
ERR_UPLINX_FLOW_ADD_ARP_FAIL
;

3298 
	`WP_IPEndPoötE¡ryIn£π
(0,
	`ht⁄s
(
lök_èbÀ
->
P‹tSrc
), &
loˇl_π
);

3299 
	`WDDI_INFO
("Info:Çp_ul_lök_èbÀ_£t, P‹tSr¯0x%x,IpEpAcôveNum=%d\n",
lök_èbÀ
->
P‹tSrc
,lök_èbÀ->
IpEpAcôveNum
);

3300 
	`≈u_£t_‰_ul_lök_èbÀ_öfo
(
lök_èbÀ
);

3302 
	}
}

3306 
	$≈_ul_ªÀa£_vp‹t_ªsour˚
(
u32
 
vp‹t
)

3308 
WP_S32
 
°©us
;

3309 
STRU_VPORT_INFO
 *
Vp‹tInfo
;

3310 
FR_CHANNEL_INFO
 * 
ch_öfo
;

3311 
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
vp‹t
);

3313 if(
Vp‹tInfo
 =
NULL
)

3315 
	`WDDI_WARNING
("Eº‹:Çp_ul_ªÀa£_ªsour˚::≈u_gë_vp‹t_öfÿÁû! vp‹t:0x%x\n",
vp‹t
);

3316  
ERR_UL_RELEASE_RESOURCE
;

3318 if(
Vp‹tInfo
->
U£dFœg
 =
UNUSED
)

3320 
	`WDDI_WARNING
("Eº‹:Çp_ul_ªÀa£_ªsour˚::≈u_gë_vp‹t_öfo, vp‹t:0x%x unu£d!\n",
vp‹t
);

3321  
ERR_UL_RELEASE_RESOURCE
;

3324 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

3325 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

3327 
ch_öfo
 = &
Vp‹tInfo
->ch_info;

3328 if(
ch_öfo
->
agg_tx2E√t1
 !=0 )

3330 
°©us
 = 
	`WP_IwFlowAggªg©i⁄Dñëe
(
ch_öfo
->
agg_tx2E√t1
);

3331 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwFlowAggregationDelete -ágg_tx2Enet1 ");

3332 
ch_öfo
->
agg_tx2E√t1
 = 0;

3333 
ch_öfo
->
agg_tx2E√t1ModifyFœg
 = 0;

3335 if(
ch_öfo
->
agg_‰_to_íë2
 !=0 )

3337 
°©us
 = 
	`WP_IwFlowAggªg©i⁄Dñëe
(
ch_öfo
->
agg_‰_to_íë2
);

3338 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwFlowAggregationDelete -ágg_fr_to_enet2 ");

3339 
ch_öfo
->
agg_‰_to_íë2
 = 0;

3341 
	`WDDI_INFO
("Info:Çp_ul_ªÀa£_ªsour˚::1, vp‹t:0x%x\n",
vp‹t
);

3345 if(
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1
 !=0 )

3347 
°©us
 = 
	`WP_IwFlowAggªg©i⁄Dñëe
(
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1
);

3348 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwFlowAggregationDelete -ágg_ul_ip2iptx2Enet1 ");

3349 
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1
 = 0;

3350 
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1ModifyFœg
 = 0;

3352 if(
Vp‹tInfo
->
agg_ul_ù_to_íë2_h™dÀ
 !=0 )

3354 
°©us
 = 
	`WP_IwFlowAggªg©i⁄Dñëe
(
Vp‹tInfo
->
agg_ul_ù_to_íë2_h™dÀ
);

3355 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwFlowAggregationDelete -ágg_ul_ip_to_enet2_handle ");

3356 
Vp‹tInfo
->
agg_ul_ù_to_íë2_h™dÀ
 = 0;

3359 if(
Vp‹tInfo
->
Êow_ul_tx2íë1
 != 0)

3361 
°©us
 = 
	`WP_IwFlowDißbÀ
(
iw_sys_bridgög
, 
Vp‹tInfo
->
Êow_ul_tx2íë1
);

3362 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwFlowDisable() VportInfo->flow_ul_tx2enet1");

3363 
°©us
 = 
	`WP_IwFlowDñëe
(
iw_sys_bridgög
, 
Vp‹tInfo
->
Êow_ul_tx2íë1
);

3364 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwFlowDelete() flow_ul_tx2enet1");

3365 
°©us
 = 
	`WP_IwSy°emBuûd
(
iw_sys_bridgög
);

3366 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwSystemBuild - deleteÑule");

3367 
Vp‹tInfo
->
Êow_ul_tx2íë1
 = 0;

3370 if(
Vp‹tInfo
->
agg_ù2ùtx2ho°
 !=0 )

3372 
°©us
 = 
	`WP_IwFlowAggªg©i⁄Dñëe
(
Vp‹tInfo
->
agg_ù2ùtx2ho°
);

3373 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwFlowAggregationDelete -ágg_ip2iptx2host ");

3374 
Vp‹tInfo
->
agg_ù2ùtx2ho°
 = 0;

3377 
	`WDDI_INFO
("Info:Çp_ul_ªÀa£_ªsour˚::2, vp‹t:0x%x\n",
vp‹t
);

3381 
	}
}

3384 
	$≈_dl_ªÀa£_vp‹t_ªsour˚
(
u32
 
vp‹t
)

3386 
WP_S32
 
°©us
;

3387 
STRU_VPORT_INFO
 *
Vp‹tInfo
;

3388 
FR_CHANNEL_INFO
 * 
ch_öfo
;

3389 
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
vp‹t
);

3391 if(
Vp‹tInfo
 =
NULL
)

3393 
	`WDDI_WARNING
("Eº‹:Çp_dl_ªÀa£_ªsour˚::≈u_gë_vp‹t_öfÿÁû! vp‹t:0x%x\n",
vp‹t
);

3394  
ERR_DL_RELEASE_RESOURCE
;

3396 if(
Vp‹tInfo
->
U£dFœg
 =
UNUSED
)

3398 
	`WDDI_WARNING
("Eº‹:Çp_dl_ªÀa£_ªsour˚::≈u_gë_vp‹t_öfo, vp‹t:0x%x unu£d!\n",
vp‹t
);

3399  
ERR_DL_RELEASE_RESOURCE
;

3402 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

3403 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

3405 
ch_öfo
 = &
Vp‹tInfo
->ch_info;

3406 if(
ch_öfo
->
Êow_íë2_to_‰
 != 0)

3408 
°©us
 = 
	`WP_IwFlowDißbÀ
(
iw_sys_bridgög
, 
ch_öfo
->
Êow_íë2_to_‰
);

3409 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwFlowDisable() ch_info->flow_enet2_to_fr");

3410 
°©us
 = 
	`WP_IwFlowDñëe
(
iw_sys_bridgög
, 
ch_öfo
->
Êow_íë2_to_‰
);

3411 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwFlowDelete() ch_info->flow_enet2_to_fr");

3412 
°©us
 = 
	`WP_IwSy°emBuûd
(
iw_sys_bridgög
);

3413 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwSystemBuild - delete flow_enet2_to_fr");

3414 
ch_öfo
->
Êow_íë2_to_‰
 = 0;

3416 if(
ch_öfo
->
agg_dow∆ök_tx2‰_devi˚
 != 0)

3418 
°©us
 = 
	`WP_IwFlowAggªg©i⁄Dñëe
(
ch_öfo
->
agg_dow∆ök_tx2‰_devi˚
);

3419 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwFlowAggregationDelete -ágg_downlink_tx2fr_device ");

3420 
ch_öfo
->
agg_dow∆ök_tx2‰_devi˚
 = 0;

3423 if(
ch_öfo
->
agg_íë2_to_‰
 != 0)

3425 
°©us
 = 
	`WP_IwFlowAggªg©i⁄Dñëe
(
ch_öfo
->
agg_íë2_to_‰
);

3426 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwFlowAggregationDelete -ágg_enet2_to_fr ");

3427 
ch_öfo
->
agg_íë2_to_‰
 = 0;

3429 
	`WDDI_INFO
("Info:Çp_dl_ªÀa£_ªsour˚::1, vp‹t:0x%x\n",
vp‹t
);

3433 if(
Vp‹tInfo
->
agg_dl_ù2ùtx2E√t1
 !=0 )

3435 
°©us
 = 
	`WP_IwFlowAggªg©i⁄Dñëe
(
Vp‹tInfo
->
agg_dl_ù2ùtx2E√t1
);

3436 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwFlowAggregationDelete -ágg_dl_ip2iptx2Enet1 ");

3437 
Vp‹tInfo
->
agg_dl_ù2ùtx2E√t1
 = 0;

3439 
	`WDDI_INFO
("Info:Çp_dl_ªÀa£_ªsour˚::2, vp‹t:0x%x\n",
vp‹t
);

3443 
	}
}

3444 
	$≈_ul_ù_f‹w¨d_to_íë2_¸óã
(
STRU_VPORT_INFO
 *
Vp‹tInfo
)

3446 
WP_iw_agg_dúe˘m≠
 
tx_agg_íë
[1] =

3451  
WP_IW_RFCS_DISABLE
,

3452  
WP_IW_L2H_INSERT_DISABLE
,

3453  
WP_IW_IRQT0
,

3454  
WP_IW_ERRPKT_DISCARD
,

3455  
WP_IW_INT_DISABLE
,

3456 #i‡
STATISTICS_ENABLE


3457  
WP_IW_STAT_ENABLE
,

3459  
WP_IW_STAT_DISABLE
,

3461  
WP_IW_TIME_STAMP_DISABLE
,

3473  
NULL
,

3475  
NULL
,

3476  
WP_IW_LENGTH_UPDATE_DISABLED
,

3481 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

3482 
vœn_ëhhdr
 * 
vœn_ëhhódî
;

3483 
ùhdr
 *
ùhódî
;

3484 
udphdr
 *
udphódî
;

3486 
vœn_ëhhódî
 = (
vœn_ëhhdr
 *)&
tx_agg_íë
->
¥efix_hódî
[0];

3488 
	`mem£t
(&
vœn_ëhhódî
->
h_de°
[0], 0xfe, 6);

3490 
	`mem˝y
(&
vœn_ëhhódî
->
h_sour˚
[0], 
öôül_cfg
->
ifMAC§c
, 6);

3492 
vœn_ëhhódî
->
h_vœn_¥Ÿo
 = 
	`ht⁄s
(0x8100);

3493 
vœn_ëhhódî
->
h_vœn_TCI
 = 
	`ht⁄s
(
BPORT_DEFAULT_VLAN_TAG
);

3494 
vœn_ëhhódî
->
h_vœn_íˇpsuœãd_¥Ÿo
 = 
	`ht⁄s
(0x0800);

3497 
ùhódî
 = (
ùhdr
 *)(
vœn_ëhhódî
 + 1);

3499 
ùhódî
->
daddr
=0;

3500 
ùhódî
->
ßddr
=
	`ht⁄l
(0x00000001);

3501 
udphódî
 = (
udphdr
 *Ë(
ùhódî
 +1);

3502 
udphódî
->
sour˚
 = 0;

3503 
udphódî
->
de°
 = 0;

3505 
tx_agg_íë
->
txfunc
 = 
agg_íë_2
;

3506 
tx_agg_íë
->
¥efix_Àngth
 = 46;

3507 if(
öôül_cfg
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

3509 
tx_agg_íë
->
exåa˘i⁄_Àngth
 = 46;

3513 
tx_agg_íë
->
exåa˘i⁄_Àngth
 = 42;

3515 
tx_agg_íë
->
dy«mic_Àngth_upd©e
 = 
WP_IW_LENGTH_UPDATE_L3
;

3516 
tx_agg_íë
->
Àngth_off£t
 = 18;

3517 
tx_agg_íë
->
l2_hódî_ö£π_mode
 = 
WP_IW_L2H_INSERT_ENABLE
;

3518 
Vp‹tInfo
->
agg_ul_ù_to_íë2_h™dÀ
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0,
WP_IW_DIRECTMAP_MODE
, 
tx_agg_íë
);

3519 
	`ãrmö©e_⁄_îr‹
(
Vp‹tInfo
->
agg_ul_ù_to_íë2_h™dÀ
, "WP_IwFlowAggregationCreate VportInfo->agg_ul_ip_to_enet2_handle");

3520 
	`WDDI_INFO
("Info:Çp_ul_ù_f‹w¨d_to_íë2_¸óã, Vp‹tInfo->agg_ul_ù_to_íë2_h™dÀ:0x%x\n",
Vp‹tInfo
->
agg_ul_ù_to_íë2_h™dÀ
);

3525 
	}
}

3527 
	$≈_dl_ù_f‹w¨d_to_íë2_¸óã
()

3529 
WP_iw_agg_dúe˘m≠
 
tx_agg_íë
[1] =

3534  
WP_IW_RFCS_DISABLE
,

3535  
WP_IW_L2H_INSERT_DISABLE
,

3536  
WP_IW_IRQT0
,

3537  
WP_IW_ERRPKT_DISCARD
,

3538  
WP_IW_INT_DISABLE
,

3539 #i‡
STATISTICS_ENABLE


3540  
WP_IW_STAT_ENABLE
,

3542  
WP_IW_STAT_DISABLE
,

3544  
WP_IW_TIME_STAMP_DISABLE
,

3556  
NULL
,

3558  
NULL
,

3559  
WP_IW_LENGTH_UPDATE_DISABLED
,

3565 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

3566 
NP_SYSTEM_INFO
 * 
the_sy°em
 = 
	`≈_gë_sy°em_öfo
();

3567 
vœn_ëhhdr
 * 
vœn_ëhhódî
;

3568 
ùhdr
 *
ùhódî
;

3569 
udphdr
 *
udphódî
;

3571 
vœn_ëhhódî
 = (
vœn_ëhhdr
 *)&
tx_agg_íë
->
¥efix_hódî
[0];

3573 
	`mem£t
(&
vœn_ëhhódî
->
h_de°
[0], 0xfe, 6);

3575 
	`mem˝y
(&
vœn_ëhhódî
->
h_sour˚
[0], 
öôül_cfg
->
ifMAC§c
, 6);

3577 
vœn_ëhhódî
->
h_vœn_¥Ÿo
 = 
	`ht⁄s
(0x8100);

3579 
vœn_ëhhódî
->
h_vœn_TCI
 = 
	`ht⁄s
(
BPORT_DEFAULT_VLAN_TAG
);

3580 
vœn_ëhhódî
->
h_vœn_íˇpsuœãd_¥Ÿo
 = 
	`ht⁄s
(0x0800);

3583 
ùhódî
 = (
ùhdr
 *)(
vœn_ëhhódî
 + 1);

3585 
ùhódî
->
daddr
=0;

3586 
ùhódî
->
ßddr
=
	`ht⁄l
(0x00000001);

3587 
udphódî
 = (
udphdr
 *Ë(
ùhódî
 +1);

3588 
udphódî
->
sour˚
 = 0;

3589 
udphódî
->
de°
 = 0;

3591 
tx_agg_íë
->
txfunc
 = 
agg_íë_2
;

3592 
tx_agg_íë
->
¥efix_Àngth
 = 46;

3593 if(
öôül_cfg
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

3595 
tx_agg_íë
->
exåa˘i⁄_Àngth
 = 46;

3599 
tx_agg_íë
->
exåa˘i⁄_Àngth
 = 42;

3601 
tx_agg_íë
->
dy«mic_Àngth_upd©e
 = 
WP_IW_LENGTH_UPDATE_L3
;

3602 
tx_agg_íë
->
Àngth_off£t
 = 18;

3603 
tx_agg_íë
->
l2_hódî_ö£π_mode
 = 
WP_IW_L2H_INSERT_ENABLE
;

3604 
the_sy°em
->
agg_dl_ù_to_íë2_h™dÀ
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0,
WP_IW_DIRECTMAP_MODE
, 
tx_agg_íë
);

3605 
	`ãrmö©e_⁄_îr‹
(
the_sy°em
->
agg_dl_ù_to_íë2_h™dÀ
, "WP_IwFlowAggregationCreateÅhe_system->agg_dl_ip_to_enet2_handle");

3607 
	`WDDI_INFO
("Info:Çp_dl_ù_f‹w¨d_to_íë2_¸óã,Åhe_sy°em->agg_dl_ù_to_íë2_h™dÀ:0x%x\n",
the_sy°em
->
agg_dl_ù_to_íë2_h™dÀ
);

3610 
	}
}

3612 
WP_iw_agg_dúe˘m≠
 
	g‰_to_íë2_agg_cfg
 [1] = {

3617  
WP_IW_RFCS_DISABLE
,

3618  
WP_IW_L2H_INSERT_ENABLE
,

3619  
WP_IW_L2H_INSERT_DISABLE
,

3620  
WP_IW_ERRPKT_DISCARD
,

3621  
WP_IW_INT_DISABLE
,

3622  
WP_IW_STAT_ENABLE
,

3623  
WP_IW_TIME_STAMP_DISABLE
,

3624  
WP_IW_OV_POOL_DISABLE
,

3639  
WP_IW_POLICER_DISABLE
,

3640  
NULL
,

3641  
WP_IW_CONGESTION_DISABLE
,

3642  
NULL
,

3643  
WP_IW_LENGTH_UPDATE_L3
,

3645  
WP_IW_FLOW_AGG_PRIMARY
,

3651 
	$≈_ul_‰_to_íë2_¸óã
(
FR_CHANNEL_INFO
 * 
ch_öfo
)

3653 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

3655 
vœn_ëhhdr
 * 
vœn_ëhhódî
;

3656 
ùhdr
 *
ùhódî
;

3657 
udphdr
 *
udphódî
;

3660 
vœn_ëhhódî
 = (
vœn_ëhhdr
 *)&
‰_to_íë2_agg_cfg
->
¥efix_hódî
[0];

3662 
	`mem£t
(&
vœn_ëhhódî
->
h_de°
[0], 0xfe, 6);

3664 
	`mem˝y
(&
vœn_ëhhódî
->
h_sour˚
[0], 
öôül_cfg
->
ifMAC§c
, 6);

3666 
vœn_ëhhódî
->
h_vœn_¥Ÿo
 = 
	`ht⁄s
(0x8100);

3667 
vœn_ëhhódî
->
h_vœn_TCI
 = 
	`ht⁄s
(
öôül_cfg
->
VœnTag
);

3668 
vœn_ëhhódî
->
h_vœn_TCI
 = 
	`ht⁄s
(
BPORT_DEFAULT_VLAN_TAG
);

3669 
vœn_ëhhódî
->
h_vœn_íˇpsuœãd_¥Ÿo
 = 
	`ht⁄s
(0x0800);

3672 
ùhódî
 = (
ùhdr
 *)(
vœn_ëhhódî
 + 1);

3674 
ùhódî
->
daddr
=0;

3675 
ùhódî
->
ßddr
=
	`ht⁄l
(0x00000001);

3677 
udphódî
 = (
udphdr
 *Ë(
ùhódî
 +1);

3678 
udphódî
->
sour˚
 = 0;

3679 
udphódî
->
de°
 = 0;

3682 
‰_to_íë2_agg_cfg
->
mtu
 = 
N_MAX_IP_FRAME_SIZE
;

3683 
‰_to_íë2_agg_cfg
->
txfunc
 = 
agg_íë_2
;

3684 
‰_to_íë2_agg_cfg
->
¥efix_Àngth
 = 46;

3685 
‰_to_íë2_agg_cfg
->
exåa˘i⁄_Àngth
 = 2;

3686 
ch_öfo
->
agg_‰_to_íë2

	`WP_IwFlowAggªg©i⁄Cª©e
(0,
WP_IW_DIRECTMAP_MODE
, 
‰_to_íë2_agg_cfg
);

3687 
	`ãrmö©e_⁄_îr‹
(
ch_öfo
->
agg_‰_to_íë2
, "WP_IwFlowAggregationCreate ch_info->agg_fr_to_enet2");

3688 
	`WDDI_INFO
("Info:Çp_ul_‰_to_íë2_¸óã, ch_öfo->agg_‰_to_íë2:0x%x\n",
ch_öfo
->
agg_‰_to_íë2
);

3693 
	}
}

3694 
	$≈_íë2_to_íë1_ruÀ_add
()

3697 
WP_iw_agg_dúe˘m≠_íë
 
íë_to_íëiw_agg_cfg
[1] =

3702  
WP_IW_RFCS_DISABLE
,

3703  
WP_IW_L2H_INSERT_ENABLE
,

3704  
WP_IW_IRQT1
,

3705  
WP_IW_ERRPKT_DISCARD
,

3706  
WP_IW_INT_DISABLE
,

3707 #i‡
STATISTICS_ENABLE


3708  
WP_IW_STAT_ENABLE
,

3710  
WP_IW_STAT_DISABLE
,

3712  
WP_IW_TIME_STAMP_DISABLE
,

3728  
NULL
,

3730  
NULL
,

3731  
WP_IW_LENGTH_UPDATE_L3
,

3733 
WP_IW_FLOW_AGG_PRIMARY


3737 
WP_S32
 
°©us
;

3738 
WP_h™dÀ
 
Êow_h™dÀ
;

3739 
NP_SYSTEM_INFO
 * 
the_sy°em
 = 
	`≈_gë_sy°em_öfo
();

3741 
WP_h™dÀ
 
íë_iw_Êow_aggªg©i⁄
 ;

3742 
WP_CHAR
 
íë_ruÀ_°rög
[256]={0};

3744 
vœn_ëhhdr
 * 
íëhódî
;

3749 
íëhódî
 = (
vœn_ëhhdr
 *)&
tx_agg_l3
->
¥efix_hódî
[0];

3751 
	`mem£t
(&
íëhódî
->
h_de°
[0], 0xff, 6);

3754 
	`mem£t
(&
íëhódî
->
h_sour˚
[0], 0xff, 6);

3755 
íëhódî
->
h_vœn_¥Ÿo
 = 
	`ht⁄s
(0x8100);

3756 
íëhódî
->
h_vœn_TCI
 = 
	`ht⁄s
(
öôül_cfg
->
VœnTag
);

3757 
íëhódî
->
h_vœn_íˇpsuœãd_¥Ÿo
 = 
	`ht⁄s
(0x0800);

3758 
tx_agg_l3
->
txfunc
 = 
tx_íë_h™dÀ_1
;

3759 
tx_agg_ù‰ag
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0, 
WP_IW_ROUTING_MODE
,
tx_agg_l3
);

3760 
	`ãrmö©e_⁄_îr‹
(
tx_agg_ù‰ag
, "enet2_to_enet1 WP_IwFlowAggregationCreate");

3762 
íë_to_íëiw_agg_cfg
->
rfcs
 = 
WP_IW_RFCS_ENABLE
;

3763 
íë_to_íëiw_agg_cfg
->
iw_p‹t
 = 
the_sy°em
->
Rp‹t_íë1_h™lde
;

3764 
íë_to_íëiw_agg_cfg
->
l2_hódî_ö£π_mode
 = 
WP_IW_L2H_INSERT_DISABLE
;

3765 
íë_to_íëiw_agg_cfg
->
txfunc
 = 
the_sy°em
->
sy°em_rouã_£nd2ëh1_h™dÀ
;

3766 
íë_to_íëiw_agg_cfg
->
mtu
 = 
N_MAX_IP_FRAME_SIZE
;

3767 
íë_to_íëiw_agg_cfg
->
¥efix_Àngth
 = 0;

3768 
íë_to_íëiw_agg_cfg
->
exåa˘i⁄_Àngth
 = 18;

3769 
íë_to_íëiw_agg_cfg
->
dy«mic_Àngth_upd©e
 = 
WP_IW_LENGTH_UPDATE_L3
;

3770 
íë_to_íëiw_agg_cfg
->
Àngth_off£t
 = 0;

3771 
íë_iw_Êow_aggªg©i⁄
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0,
WP_IW_DIRECTMAP_MODE
, &
íë_to_íëiw_agg_cfg
[0]);

3772 
	`ãrmö©e_⁄_îr‹
(
íë_iw_Êow_aggªg©i⁄
, "WP_IwFlowAggregationCreateágg_queue");

3773 
the_sy°em
->
agg_íë2_to_íë1
 = 
íë_iw_Êow_aggªg©i⁄
;

3778 
	`•rötf
(
íë_ruÀ_°rög
, "0.0/255.255;0.1/255.255;n;n;n;n;n;UDP;");

3780 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_SIP_UDP_PEER
].
˛assifõr_°rög
 = 
íë_ruÀ_°rög
;

3781 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_SIP_UDP_PEER
].
a˘i⁄_öfo
.
f‹w¨dög_a˘i⁄
.
Êow_aggªg©i⁄
 = 
íë_iw_Êow_aggªg©i⁄
;

3782 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_SIP_UDP_PEER
].
dfc_öfo
 = &
íë_to_íë_dfc_Êow_öfo
[NPU_FILTER_SIP_UDP_PEER];

3783 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_SIP_UDP_PEER
].
m©ch_a˘i⁄
 = 
WP_FLOW_CLASS_MODE_FLOW_AGG
;

3785 
Êow_h™dÀ
 = 
	`WP_IwFlowAdd
(
iw_sys_bridgög
, 
WP_FLOW_CLASS_RULE
,&(
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_SIP_UDP_PEER
]));

3786 
	`ãrmö©e_⁄_îr‹
(
Êow_h™dÀ
, "WP_IwFlowAdd()Énet_to_enet_iw_sys");

3787 
°©us
 = 
	`WP_IwSy°emBuûd
(
iw_sys_bridgög
);

3788 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwSystemBuild - ip up flowÑule");

3791 
	}
}

3794 
	$≈_dl_íë2_to_‰_ruÀ_add
(
FR_CHANNEL_INFO
 * 
ch_öfo
)

3796 
WP_S32
 
°©us
;

3797 
WP_h™dÀ
 
Êow_h™dÀ
;

3800 
WP_h™dÀ
 
íë_iw_Êow_aggªg©i⁄
;

3801 
WP_CHAR
 
íë_ruÀ_°rög
[256]={0};

3802 
WP_U8
 * 
ùaddªss
;

3805 #i‡
ENEA_RELEASE


3806 
íë_iw_agg_cfg
->
txfunc
 =
ch_öfo
->
tx_iw_h™dÀ
;

3808 
íë_iw_agg_cfg
->
txfunc
 = 
ch_öfo
->
agg_‰_rx_ho°_Êow
;

3810 
íë_iw_agg_cfg
->
l2_hódî_ö£π_mode
 = 
WP_IW_L2H_INSERT_ENABLE
;

3811 
íë_iw_agg_cfg
->
dy«mic_Àngth_upd©e
 = 
WP_IW_LENGTH_UPDATE_DISABLED
;

3812 
íë_iw_agg_cfg
->
¥efix_Àngth
 = 2;

3813 
íë_iw_agg_cfg
->
exåa˘i⁄_Àngth
 = 46;

3815 
	`WP_FR_HEADER_2OCT_SET
(
íë_iw_agg_cfg
->
¥efix_hódî
,
ch_öfo
->
dlci
,0,0,0,0);

3817 
íë_iw_Êow_aggªg©i⁄
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0,
WP_IW_DIRECTMAP_MODE
, 
íë_iw_agg_cfg
);

3818 
	`ãrmö©e_⁄_îr‹
(
íë_iw_Êow_aggªg©i⁄
, "WP_IwFlowAggregationCreateágg_downlink_tx2fr_device");

3819 
ch_öfo
->
agg_íë2_to_‰

íë_iw_Êow_aggªg©i⁄
;

3821 
ùaddªss
 = (
WP_U8
 *Ë&
ch_öfo
->
vÂ‹t
;

3822 
	`•rötf
(
íë_ruÀ_°rög
, "%d.%d/255.255;%d.%d/255.255;n;n;n;n;n;UDP;",

3823 
ùaddªss
[3],ipaddress[2],ipaddress[1], ipaddress[0]);

3828 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_SIP_UDP_PEER
].
˛assifõr_°rög
 = 
íë_ruÀ_°rög
;

3829 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_SIP_UDP_PEER
].
a˘i⁄_öfo
.
f‹w¨dög_a˘i⁄
.
Êow_aggªg©i⁄
 = 
íë_iw_Êow_aggªg©i⁄
;

3830 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_SIP_UDP_PEER
].
dfc_öfo
 = &
íë_to_íë_dfc_Êow_öfo
[NPU_FILTER_SIP_UDP_PEER];

3831 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_SIP_UDP_PEER
].
m©ch_a˘i⁄
 = 
WP_FLOW_CLASS_MODE_FLOW_AGG
;

3832 
Êow_h™dÀ
 = 
	`WP_IwFlowAdd
(
iw_sys_bridgög
, 
WP_FLOW_CLASS_RULE
,&(
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_SIP_UDP_PEER
]));

3833 
	`ãrmö©e_⁄_îr‹
(
Êow_h™dÀ
, "WP_IwFlowAdd()Énet2_to_fr");

3834 
ch_öfo
->
Êow_íë2_to_‰
 = 
Êow_h™dÀ
;

3835 
°©us
 = 
	`WP_IwSy°emBuûd
(
iw_sys_bridgög
);

3836 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwSystemBuild -Énet2_to_fr");

3837 
	`WDDI_INFO
("Info:Çp_dl_íë2_to_‰_ruÀ_add, ch_öfo->Êow_íë2_to_‰:0x%x\n",
Êow_h™dÀ
);

3839 
	}
}

3841 
NODE
* 
¨p_nodehód
;

3842 
h£¨ch_d©a
 *
¨p_ht
;

3844 
	$≈_ªc⁄fig_vœn_ö_rouãSy°em
()

3846 
WP_iw_agg_routög
 
tx_rouã_agg
[1] =

3851  
WP_IW_DSRV_DISABLE
,

3852  
WP_IW_L2H_INSERT_ENABLE
,

3853  
WP_IW_FAST_FWD_MODE
,

3854  
WP_IW_IRQT1
,

3856  
WP_IW_INT_DISABLE
,

3857  
WP_IW_STAT_ENABLE
,

3858  
WP_IW_TIME_STAMP_DISABLE
,

3876 
NODE
 *
ãmp
;

3877 
ENTRY
 
ôem
={0};

3878 
ENTRY
 *
found_ôem
;

3879 
NP_ARP_INFO
 *
p_AΩInfo
;

3880 
ãmp
=
¨p_nodehód
;

3881 
WP_S32
 
°©us
;

3882 
vœn_ëhhdr
 *
vœn_ëhhódî
;

3883 
ëhhdr
 * 
ëhhódî
;

3885 
STRU_SET_INITAIL_CONFIG
 *
≈_ªc⁄fig
 = 
	`≈u_gë_≈_ªc⁄fig
();

3886 
	`WDDI_INFO
("Info:Çp_ªc⁄fig_vœn_ö_rouãSy°em,Çp_ªc⁄fig->VœnFœg:0x%x\n",
≈_ªc⁄fig
->
VœnFœg
);

3887 
ãmp
!=
NULL
)

3889 
ôem
.
key
 = 
ãmp
->
ht_key
;

3890 
ãmp
Òemp->
√xt
;

3892 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
¨p_ht
))

3898 
p_AΩInfo
 = (
NP_ARP_INFO
 *)
found_ôem
->
d©a
;

3900 if(
≈_ªc⁄fig
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

3902 
vœn_ëhhódî
 = (
vœn_ëhhdr
 *)&
tx_rouã_agg
->
¥efix_hódî
[0];

3903 
	`mem˝y
(&
vœn_ëhhódî
->
h_de°
[0], 
p_AΩInfo
->
Mac
, 6);

3904 
	`mem˝y
(&
vœn_ëhhódî
->
h_sour˚
[0], 
≈_ªc⁄fig
->
ifMAC§c
, 6);

3905 
tx_rouã_agg
->
¥efix_Àngth
 = 18;

3907 
vœn_ëhhódî
->
h_vœn_¥Ÿo
 = 
	`ht⁄s
(0x8100);

3908 
vœn_ëhhódî
->
h_vœn_TCI
 = 
	`ht⁄s
(
≈_ªc⁄fig
->
VœnTag
);

3909 
vœn_ëhhódî
->
h_vœn_íˇpsuœãd_¥Ÿo
 = 
	`ht⁄s
(0x0800);

3913 
ëhhódî
 = (
ëhhdr
 *)&
tx_rouã_agg
->
¥efix_hódî
[0];

3914 
	`mem˝y
(&
ëhhódî
->
h_de°
[0], 
p_AΩInfo
->
Mac
, 6);

3915 
	`mem˝y
(&
ëhhódî
->
h_sour˚
[0], 
≈_ªc⁄fig
->
ifMAC§c
, 6);

3916 
ëhhódî
->
h_¥Ÿo
 =
	`ht⁄s
(0x0800);

3917 
tx_rouã_agg
->
¥efix_Àngth
 = 14;

3919 if(
p_AΩInfo
->
agg_ù‰ag
!= 0)

3921 
°©us
 = 
	`WP_IwFlowAggªg©i⁄Modify
(
p_AΩInfo
->
agg_ù‰ag
, 
WP_IW_FLOW_AGG_MOD_PRX
 ,&
tx_rouã_agg
[0]);

3922 
	`ãrmö©e_⁄_îr‹
(
°©us
, "np_reconfig_vport_in_routeSystem WP_IwFlowAggregationModify");

3926 
	}
}

3927 
	$≈_dl_ªÀa£_FMC_ªsour˚
(
u16
 
Dp‹tSèπVÆue
)

3929 
°©us
;

3930 if(
Dp‹tGΩÊow_h™dÀ
[
Dp‹tSèπVÆue
] != 0)

3932 
°©us
 = 
	`WP_IwFlowDißbÀ
(
iw_sys_bridgög
, 
Dp‹tGΩÊow_h™dÀ
[
Dp‹tSèπVÆue
]);

3933 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwFlowDisable() DportGrpflow_handle[DportStartValue");

3934 
°©us
 = 
	`WP_IwFlowDñëe
(
iw_sys_bridgög
, 
Dp‹tGΩÊow_h™dÀ
[
Dp‹tSèπVÆue
]);

3935 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwFlowDelete() DportGrpflow_handle[DportStartValue]");

3936 
°©us
 = 
	`WP_IwSy°emBuûd
(
iw_sys_bridgög
);

3937 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwSystemBuild -Çp_dl_release_FMC_resource");

3938 
Dp‹tGΩÊow_h™dÀ
[
Dp‹tSèπVÆue
] = 0;

3939 
	`WDDI_INFO
("Info:Çp_dl_ªÀa£_FMC_ªsour˚::1, Dp‹tSèπVÆue:0x%x\n",
Dp‹tSèπVÆue
);

3941 if(
Dp‹tGΩagg_h™dÀ
[
Dp‹tSèπVÆue
].
h™dÀ
 != 0)

3943 
°©us
 = 
	`WP_IwFlowAggªg©i⁄Dñëe
(
Dp‹tGΩagg_h™dÀ
[
Dp‹tSèπVÆue
].
h™dÀ
);

3944 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwFlowAggregationDelete - DportGrpflow_handle[DportStartValue]");

3945 
Dp‹tGΩagg_h™dÀ
[
Dp‹tSèπVÆue
].
h™dÀ
 = 0;

3946 
Dp‹tGΩagg_h™dÀ
[
Dp‹tSèπVÆue
].
P‹tSize
 = 0;

3947 
	`WDDI_INFO
("Info:Çp_dl_ªÀa£_FMC_ªsour˚::2, Dp‹tSèπVÆue:0x%x\n",
Dp‹tSèπVÆue
);

3949 
	}
}

3951 
	$≈_di•œy_de‰ag_öfo
(
WP_h™dÀ
 
h™dÀ
)

3953 
WP_°©us
 
°©us
;

3954 if(
h™dÀ
 == 0)

3956 
	`F¥ötf
("np_display_defrag_info handle = NULL!\n");

3959 
WP_°©s_iw_ù_de‰ag_group
 
de‰ag_group_°©s
;

3960 
	`mem£t
(&
de‰ag_group_°©s
, 0, (defrag_group_stats));

3961 
°©us
 = 
	`WP_IwIpDe‰agGroupSèti°ics
(
h™dÀ
, &
de‰ag_group_°©s
);

3962 
	`ãrmö©e_⁄_îr‹
(
°©us
,

3965 
	`F¥ötf
 ("\nIPv4 Defrag Statistics:\n");

3966 
	`F¥ötf
 ("Ñx_‰agmít† -> %d\n", (
WP_U32
)
de‰ag_group_°©s
.
rx_‰agmíts
);

3967 
	`F¥ötf
 ("Ñx_îr_‰ag_fb∞-> %d\n", (
WP_U32
)
de‰ag_group_°©s
.
rx_îr_‰ag_fbp
);

3968 
	`F¥ötf
 ("Ñx_îr_timeouà -> %d\n", (
WP_U32
)
de‰ag_group_°©s
.
rx_îr_timeout
);

3969 
	`F¥ötf
 ("Ñx_∑ckës -> %d\n", (
WP_U32
)
de‰ag_group_°©s
.
rx_∑ckës
);

3970 
	`F¥ötf
 ("Ñx_îr_de‰ag -> %d\n", (
WP_U32
)
de‰ag_group_°©s
.
rx_îr_de‰ag
);

3971 
	`F¥ötf
 ("Ñx_îr_mbc -> %d\n", (
WP_U32
)
de‰ag_group_°©s
.
rx_îr_de‰ag_chaö_back
);

3973 
	}
}

3974 
	$≈_di•œy_‰ag_öfo
(
WP_h™dÀ
 
group_h™dÀ
)

3977 
WP_°©us
 
°©us
 = 
WP_OK
;

3978 
WP_°©s_iw_ù_‰ag_group
 
°©s
;

3979 if(
group_h™dÀ
 == 0)

3981 
	`F¥ötf
("np_display_frag_info handle = NULL!\n");

3984 
	`mem£t
(&
°©s
, 0, (stats));

3985 
°©us
 = 
	`WP_IwIpFøgGroupSèti°ics
(
group_h™dÀ
,

3986 &
°©s
);

3987 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwIpFragGroupStatistics");

3989 
	`F¥ötf
 ("\nIP Frag Group statistics:\n");

3990 
	`F¥ötf
("\nTx Føgmíts: %d ", (
WP_U32
)
°©s
.
tx_‰agmíts
);

3991 
	`F¥ötf
("\nTx Packës: %d ", (
WP_U32
)
°©s
.
tx_∑ckës
);

3992 
	`F¥ötf
("\nTx FBP dr›s: %d ", (
WP_U32
)
°©s
.
tx_fbp_dr›s
);

3993 
	`F¥ötf
("\nTx Qdïth dr›s: %d ", (
WP_U32
)
°©s
.
tx_qdïth_dr›s
);

3994 
	`F¥ötf
("\n###############################\n");

3996 
	}
}

3999 
WP_dfc_Êow_öfo
 
	g£nd2ëh_rouã_dfc_Êow_öfo
[1] =

4009 
	$≈_£nd2ëh_rouã_sy°em_¸óã
()

4013 
WP_dfc_sys_öfo
 
dfc_sys_öfo
[1] =

4016  
WP_IW_4K_HASH_ENTRIES
,

4017  
WP_IW_PORT_FILTERING_DISABLE
,

4018  
WP_IW_DENY_EQUAL_IP_DISABLE


4021 
WP_iw_ùv4_sys_öfo
 
ùv4_sys_öfo
[1] =

4024  
WP_IW_DYNAMIC_CLASS
,

4026  &
dfc_sys_öfo
[0]

4030 
WP_iw_sys_routög
 
rouã_sys_öfo
[1] =

4036  
WP_IW_SYS_IPV4
,

4037  
ùv4_sys_öfo
,

4038  
NULL
,

4039  
NULL


4043 
WP_iw_rouã_p‹t
 
rouã_p‹t_cfg
 =

4048  
WP_IW_PORT_STAT_ENABLE
,

4049  
WP_IW_FORWARDING_DFC
|
WP_IW_FORWARDING_DIRECT_MAP
,

4056 
WP_˛assifiˇti⁄_fûãr
 
˛assifiˇti⁄_fûãr_cfg
[1] =

4061  
WP_FIELD_IPV4_DA
,

4062  
WP_CLASS_FILTER_NO_MATCH_DENY
,

4063  
WP_CLASS_FILTER_EMC
,

4069 
WP_S32
 
°©us
;

4073 
NP_SYSTEM_INFO
 * 
the_sy°em
 = 
	`≈_gë_sy°em_öfo
();

4077 
the_sy°em
->
sy°em_rouã_£nd2ëh1_h™dÀ

	`WP_IwSy°emCª©e
(
	`WP_WINPATH
(0), 
WP_IW_ROUTING_MODE
, &
rouã_sys_öfo
[0]);

4078 
	`ãrmö©e_⁄_îr‹
(
the_sy°em
->
sy°em_rouã_£nd2ëh1_h™dÀ
, "WP_IwSystemCreate() system_route_send2eth1_handle");

4079 
rouã_p‹t_cfg
.
èg
 = 1;

4080 
rouã_p‹t_cfg
.
Êow_agg
 = 
the_sy°em
->
agg_íë_deÁu…_ho°_h™dÀ
;

4081 
the_sy°em
->
Rp‹t_íë1_h™lde
 = 
	`WP_IwP‹tCª©e
—he_sy°em->
sy°em_rouã_£nd2ëh1_h™dÀ
, &
rouã_p‹t_cfg
);

4082 
	`ãrmö©e_⁄_îr‹
(
the_sy°em
->
Rp‹t_íë1_h™lde
, "WP_IwPortCreate - Rport_enet1_hanlde");

4085 
£nd2ëh_rouã_dfc_Êow_öfo
[0].
fûãr_h™dÀ
 = 
	`WP_IwCœssFûãrAdd
 (
the_sy°em
->
sy°em_rouã_£nd2ëh1_h™dÀ
, &
˛assifiˇti⁄_fûãr_cfg
[0]);

4086 
	`ãrmö©e_⁄_îr‹
(
£nd2ëh_rouã_dfc_Êow_öfo
[0].
fûãr_h™dÀ
 , "WP_IwClassFilterAdd() send2eth_route_dfc_flow_info forÉth 1");

4088 
°©us
 = 
	`WP_IwSy°emBuûd
(
the_sy°em
->
sy°em_rouã_£nd2ëh1_h™dÀ
);

4089 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwSystemBuild - system_route_send2eth1_handle");

4092 
	}
}

4097 
	$≈_£nd2ëh_rouã_Êow_add
(
NP_ARP_INFO
 * 
¨pInfo
)

4100 
WP_iw_agg_dúe˘m≠_íë
 
íë_to_íëiw_agg_cfg
[1] =

4105  
WP_IW_RFCS_DISABLE
,

4106  
WP_IW_L2H_INSERT_ENABLE
,

4107  
WP_IW_IRQT1
,

4108  
WP_IW_ERRPKT_DISCARD
,

4109  
WP_IW_INT_DISABLE
,

4110 #i‡
STATISTICS_ENABLE


4111  
WP_IW_STAT_ENABLE
,

4113  
WP_IW_STAT_DISABLE
,

4115  
WP_IW_TIME_STAMP_DISABLE
,

4131  
NULL
,

4133  
NULL
,

4134  
WP_IW_LENGTH_UPDATE_L3
,

4136 
WP_IW_FLOW_AGG_PRIMARY


4140 
WP_iw_agg_routög
 
tx_rouã_agg
[1] =

4145  
WP_IW_DSRV_DISABLE
,

4146  
WP_IW_L2H_INSERT_ENABLE
,

4147  
WP_IW_FAST_FWD_MODE
,

4148  
WP_IW_IRQT1
,

4150  
WP_IW_INT_DISABLE
,

4151  
WP_IW_STAT_ENABLE
,

4152  
WP_IW_TIME_STAMP_DISABLE
,

4170 
IpHódî
[]={

4177 
WP_S32
 
°©us
;

4178 
NP_SYSTEM_INFO
 * 
the_sy°em
 = 
	`≈_gë_sy°em_öfo
();

4179 
WP_Êow_˛ass_ruÀ
 
Êow_pﬁicy_cfg
;

4180 
WP_CHAR
 
ruÀ_°rög
[128]={0};

4181 
WP_U8
 *
IP§c
;

4182 
WP_U32
 
i
;

4183 
vœn_ëhhdr
 * 
vœn_ëhhódî
;

4184 
ëhhdr
 * 
ëhhódî
;

4185 
ùhdr
 * 
ùhódî
;

4186 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

4190 if(
öôül_cfg
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

4192 
vœn_ëhhódî
 = (
vœn_ëhhdr
 *)&
tx_rouã_agg
->
¥efix_hódî
[0];

4193 
	`mem˝y
(&
vœn_ëhhódî
->
h_de°
[0], 
¨pInfo
->
Mac
, 6);

4194 
	`mem˝y
(&
vœn_ëhhódî
->
h_sour˚
[0], 
öôül_cfg
->
ifMAC§c
, 6);

4195 
tx_rouã_agg
->
¥efix_Àngth
 = 18;

4197 
vœn_ëhhódî
->
h_vœn_¥Ÿo
 = 
	`ht⁄s
(0x8100);

4198 
vœn_ëhhódî
->
h_vœn_TCI
 = 
	`ht⁄s
(
öôül_cfg
->
VœnTag
);

4199 
vœn_ëhhódî
->
h_vœn_íˇpsuœãd_¥Ÿo
 = 
	`ht⁄s
(0x0800);

4203 
ëhhódî
 = (
ëhhdr
 *)&
tx_rouã_agg
->
¥efix_hódî
[0];

4204 
	`mem˝y
(&
ëhhódî
->
h_de°
[0], 
¨pInfo
->
Mac
, 6);

4205 
	`mem˝y
(&
ëhhódî
->
h_sour˚
[0], 
öôül_cfg
->
ifMAC§c
, 6);

4206 
ëhhódî
->
h_¥Ÿo
 =
	`ht⁄s
(0x0800);

4207 
tx_rouã_agg
->
¥efix_Àngth
 = 14;

4210 if(
¨pInfo
->
agg_ù‰ag
 == 0)

4212 #i‡
IP_FRAG


4213 if(
öôül_cfg
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

4215 
tx_rouã_agg
->
mtu
 = 
FRAG_SIZE
+60+18;

4219 
tx_rouã_agg
->
mtu
 = 
FRAG_SIZE
+60+14;

4222 
tx_rouã_agg
->
txfunc
 = 
tx_íë_h™dÀ_1
;

4223 
tx_rouã_agg
->
l2_hódî_ö£π_mode
 = 
WP_IW_L2H_INSERT_ENABLE
;

4224 
¨pInfo
->
agg_ù‰ag

	`WP_IwFlowAggªg©i⁄Cª©e
(0, 
WP_IW_ROUTING_MODE
,&
tx_rouã_agg
);

4225 
	`ãrmö©e_⁄_îr‹
(
¨pInfo
->
agg_ù‰ag
, "WP_IwFlowAggregationCreateárpInfo->agg_ipfrag");

4226 
	`WDDI_INFO
("Info:Çp_£nd2ëh_rouã_Êow_add,áΩInfo->agg_ù‰ag:0x%x\n",
¨pInfo
->
agg_ù‰ag
);

4227 
	`mem˝y
(
¨pInfo
->
MacOld
,áΩInfo->
Mac
, 6);

4231 
i
 = 0;i <6;i++)

4233 if(
¨pInfo
->
Mac
[
i
] !¨pInfo->
MacOld
[i])

4238 if(
i
 != 6)

4241 
°©us
 = 
	`WP_IwFlowAggªg©i⁄Modify
(
¨pInfo
->
agg_ù‰ag
,
WP_IW_FLOW_AGG_MOD_PRX
 ,&
tx_rouã_agg
[0]);

4242 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwFlowAggregationModifyárpInfo->agg_ipfrag");

4244 
	`mem˝y
(
¨pInfo
->
MacOld
,áΩInfo->
Mac
, 6);

4248 #i‡
IP_FRAG


4249 
‰ag_group
->
qniw
 = 
qniw_‰ag
;

4250 
‰ag_group
->
‰ag_size
 = 
FRAG_SIZE
;

4251 if(
¨pInfo
->
‰agGΩH™dÀ
 == 0)

4253 
¨pInfo
->
‰agGΩH™dÀ

	`WP_IwIpFøgGroupCª©e
(
ù_‰ag_sy°em_h™dÀ
,¨pInfo->
agg_ù‰ag
,
‰ag_group
);

4254 
	`ãrmö©e_⁄_îr‹
(
¨pInfo
->
‰agGΩH™dÀ
, "WP_IwIpFragGroupCreateárpInfo->fragGrpHandle");

4259 
ùhódî
 = (
ùhdr
 *)&
íë_to_íëiw_agg_cfg
->
¥efix_hódî
[0];

4260 
	`mem˝y
(
ùhódî
,
IpHódî
,16);

4261 
ùhódî
->
ßddr
=
	`ht⁄l
(
öôül_cfg
->
ifI∑ddr
);

4262 
íë_to_íëiw_agg_cfg
[0].
iw_p‹t
 = 0;

4263 
íë_to_íëiw_agg_cfg
[0].
l2_hódî_ö£π_mode
 = 
WP_IW_L2H_INSERT_ENABLE
;

4264 
íë_to_íëiw_agg_cfg
[0].
txfunc
 = 
¨pInfo
->
agg_ù‰ag
;

4265 
íë_to_íëiw_agg_cfg
[0].
mtu
 = 
N_MAX_IP_FRAME_SIZE
;

4266 
íë_to_íëiw_agg_cfg
[0].
¥efix_Àngth
 = 16;

4267 
íë_to_íëiw_agg_cfg
[0].
exåa˘i⁄_Àngth
 = 16;

4268 
íë_to_íëiw_agg_cfg
[0].
Àngth_off£t
 = 0;

4271 if(
¨pInfo
->
agg_tx2ëh1
 == 0)

4273 
¨pInfo
->
agg_tx2ëh1
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0,
WP_IW_DIRECTMAP_MODE
, &
íë_to_íëiw_agg_cfg
[0]);

4274 
	`ãrmö©e_⁄_îr‹
(
¨pInfo
->
agg_tx2ëh1
, "WP_IwFlowAggregationCreateÇp_send2eth_route_flow_add");

4275 
	`WDDI_INFO
("Info:Çp_£nd2ëh_rouã_Êow_add,áΩInfo->agg_tx2ëh1:0x%x\n",
¨pInfo
->
agg_tx2ëh1
);

4278 if–
¨pInfo
->
ÊowH™dÀ
 == 0)

4280 
IP§c
 = (
WP_U8
 *)&(
¨pInfo
->
Ip
);

4281 
	`•rötf
(
ruÀ_°rög
, "n;n;n;n;%d.%d/255.255;%d.%d/255.255;",

4282 
IP§c
[0],IPsrc[1],IPsrc[2], IPsrc[3]);

4283 
	`mem£t
(&
Êow_pﬁicy_cfg
,0,(flow_policy_cfg));

4284 
Êow_pﬁicy_cfg
.
˛assifõr_°rög
 = 
ruÀ_°rög
;

4285 
Êow_pﬁicy_cfg
.
m©ch_a˘i⁄
 = 
WP_FLOW_CLASS_MODE_FLOW_AGG
;

4286 
Êow_pﬁicy_cfg
.
a˘i⁄_öfo
.
f‹w¨dög_a˘i⁄
.
Êow_aggªg©i⁄
 = 
¨pInfo
->
agg_tx2ëh1
;

4288 
Êow_pﬁicy_cfg
.
dfc_öfo
 = &
£nd2ëh_rouã_dfc_Êow_öfo
[0];

4289 
¨pInfo
->
ÊowH™dÀ

	`WP_IwFlowAdd
(
the_sy°em
->
sy°em_rouã_£nd2ëh1_h™dÀ
, 
WP_FLOW_CLASS_RULE
, &
Êow_pﬁicy_cfg
);

4290 
	`ãrmö©e_⁄_îr‹
(
¨pInfo
->
ÊowH™dÀ
, "WP_IwFlowAdd()árpInfo->flowHandle");

4291 
	`WDDI_INFO
("Info:Çp_£nd2ëh_rouã_Êow_add,áΩInfo->Ip:0x%x,áΩInfo->ÊowH™dÀ:0x%x\n",
¨pInfo
->
Ip
,áΩInfo->
ÊowH™dÀ
);

4293 
°©us
 = 
	`WP_IwSy°emBuûd
(
the_sy°em
->
sy°em_rouã_£nd2ëh1_h™dÀ
);

4294 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwSystemBuild - system_route_send2eth1_handle");

4298 
	}
}

4300 
	$≈_upd©e_mac_ö_rouã_sy°em
(
NP_ARP_INFO
 *
¨pInfo
 )

4302 
NP_ARP_INFO
 * 
¨pInfoHash
 = 
NULL
;

4303 
¨pInfoHash
 = 
	`≈u_gë_¨p_öfo
(
¨pInfo
->
Ip
);

4304 if(
¨pInfoHash
 !
NULL
)

4306 
	`≈_£nd2ëh_rouã_Êow_add
(
¨pInfoHash
);

4309 
	}
}

4310 
	$≈_ul_lök_èbÀ_dñëe
(
WP_U32
 
p‹t§c
)

4312 
STRU_SET_UPLINK_PATH_LINK_TABLE
 *
lök_èbÀ
;

4313 
ªt
;

4315 
lök_èbÀ
 = 
	`≈u_gë_ul_lök_èbÀ_öfo
(
p‹t§c
);

4316 if(
lök_èbÀ
 =
NULL
)

4318 
	`WDDI_WARNING
("Eº‹:Çp_ul_lök_èbÀ_dñëe::≈u_gë_ul_lök_èbÀ_öfÿÁû! P‹tSrc: 0x%x\n",
p‹t§c
);

4319  
ERR_DOWNLINX_FLOW_ADD
;

4321 if(
lök_èbÀ
->
IpEpAcôveNum
 == 0)

4323 
	`WDDI_WARNING
("Error:Çp_ul_link_table_delete::npu_get_ul_link_table_info,link_table->IpEpAcitveNum is 0\n");

4324  
ERR_DOWNLINX_FLOW_ADD
;

4327 
lök_èbÀ
->
IpEpAcôveNum
 = 0;

4328 
ªt
 = 
	`≈_ul_lök_èbÀ_£t
(
lök_èbÀ
);

4329 
	`WDDI_INFO
("Info:Çp_ul_lök_èbÀ_dñëe,p‹t§c:0x%x\n", 
p‹t§c
);

4331 
	}
}

4335 
	$≈u_BfdModuÀInô
()

4337 
WP_°©us
 
°©us
;

4339 
WP_moduÀ_iw_bfd
 
bfd_c⁄fig
 = { 
MAX_BFD_TRANSMISSION_RATE
,

4340  
MIN_BFD_TRANSMISSION_RATE
,

4341  
MAX_BFD_DETECTION_TIME
,

4342  
MIN_BFD_DETECTION_TIME
,

4343  
WP_IW_32_HASH_ENTRIES
,

4344  
MAX_BFD_RX_SESSIONS
,

4345  
MAX_BFD_TX_SESSIONS
,

4346 
WP_IRQT0
,

4350 
°©us
 = 
	`WP_ModuÀInô
(
	`WP_SYSHANDLE
(0),

4351 
WP_WDDI_MODULE_IW_BFD
,

4352 &
bfd_c⁄fig
);

4355 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_ModuleInit()");

4356 
	`F¥ötf
("initial BFD moulde success!\n");

4357 
	}
}

4359 
	$≈u_BfdInô
()

4362 
NP_SYSTEM_INFO
 * 
the_sy°em
 = 
	`≈_gë_sy°em_öfo
();

4363 
WP_iw_sys_dúe˘m≠
 
iw_sys_⁄e
 =

4370 
the_sy°em
->
sy°em_bfd_h™dÀ

	`WP_IwSy°emCª©e
(0,

4371 
WP_IW_DIRECTMAP_MODE
,

4372 &
iw_sys_⁄e
);

4373 
	`ãrmö©e_⁄_îr‹
(
the_sy°em
->
sy°em_bfd_h™dÀ
," WP_IwSystemCreate() system_bfd_handle");

4376 
WP_iw_agg_dúe˘m≠_íë
 
bfd_tx
[1] =

4381  
WP_IW_RFCS_DISABLE
,

4382  
WP_IW_L2H_INSERT_ENABLE
,

4383  
WP_IW_IRQT1
,

4384  
WP_IW_ERRPKT_DISCARD
,

4385  
WP_IW_INT_DISABLE
,

4386 #i‡
STATISTICS_ENABLE


4387  
WP_IW_STAT_ENABLE
,

4389  
WP_IW_STAT_DISABLE
,

4391  
WP_IW_TIME_STAMP_DISABLE
,

4399  
NULL
,

4401  
NULL
,

4402  
WP_IW_LENGTH_UPDATE_L3
,

4404 
WP_IW_FLOW_AGG_PRIMARY


4407 
IpHódî
[]={

4415 
vœn_ëhhdr
 * 
vœn_ëhhódî
;

4416 
ùhdr
 * 
ùhódî
;

4417 
udphdr
 *
udphódî
;

4418 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

4419 
vœn_ëhhódî
 = (
vœn_ëhhdr
 *)&
bfd_tx
->
¥efix_hódî
[0];

4420 
	`mem£t
(&
vœn_ëhhódî
->
h_de°
[0],0xff, 6);

4421 
	`mem˝y
(&
vœn_ëhhódî
->
h_sour˚
[0], 
öôül_cfg
->
ifMAC§c
, 6);

4423 
vœn_ëhhódî
->
h_vœn_¥Ÿo
 = 
	`ht⁄s
(0x8100);

4424 
vœn_ëhhódî
->
h_vœn_TCI
 = 
	`ht⁄s
(133);

4425 
vœn_ëhhódî
->
h_vœn_íˇpsuœãd_¥Ÿo
 = 
	`ht⁄s
(0x0800);

4427 
ùhódî
 = (
ùhdr
 *)&
bfd_tx
->
¥efix_hódî
[18];

4429 
	`mem˝y
(
ùhódî
,
IpHódî
,20);

4430 
ùhódî
->
ßddr
=
	`ht⁄l
(
öôül_cfg
->
ifI∑ddr
);

4431 
ùhódî
->
daddr
=(0xdc21aa0a);

4432 
udphódî
 = (
udphdr
 *Ë(
ùhódî
 +1);

4433 
udphódî
->
sour˚
 = 
	`ht⁄s
(
UDP_BFD_TMP_SPORT
);

4434 
udphódî
->
de°
 = 
	`ht⁄s
(
UDP_BFD_PORT
);

4435 
bfd_tx
[0].
Àngth_off£t
 = 18;

4436 
bfd_tx
[0].
dy«mic_Àngth_upd©e
 = 
WP_IW_LENGTH_UPDATE_L3
;

4437 
bfd_tx
[0].
¥efix_Àngth
 = 46;

4438 
bfd_tx
[0].
txfunc
 = 
tx_íë_h™dÀ_1
;

4439 
the_sy°em
->
agg_bfd_tx_h™dÀ
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0,

4440 
WP_IW_DIRECTMAP_MODE
,

4441 
bfd_tx
);

4442 
	`ãrmö©e_⁄_îr‹
(
the_sy°em
->
agg_bfd_tx_h™dÀ
," WP_IwFlowAggregationCreate()Åhe_system->agg_bfd_tx_handle");

4445 
	`WPE_BfdTxSessi⁄Buûd
(
the_sy°em
);

4446 
	`WPE_BfdRxSessi⁄Buûd
(
the_sy°em
);

4447 
	`≈_BFD_ÊowAdd
(
the_sy°em
);

4449 
	`F¥ötf
("initial BFD success!\n");

4450 
	}
}

4452 
	$WPE_BfdTxSessi⁄Buûd
(
NP_SYSTEM_INFO
 *
the_sy°em
)

4454 
WP_°©us
 
°©us
;

4457 
WP_U8
 
∑ckë
[24] = {0x20,0x00,0x05,0x18,

4464 
WP_iw_ﬂm_swôchög_sy°em_∑øms
 
swôchög_∑øms
;

4465 
swôchög_∑øms
.
Êow_agg
 = 
the_sy°em
->
agg_bfd_tx_h™dÀ
;

4468 
WP_iw_bfd_tx_d©a
 
tx_d©a
 =

4470  
NULL
,

4471  
NULL
,

4472  
NULL
,

4473  
NULL


4476 
WP_iw_bfd_tx_d©a
 
tx_d©a
;

4477 
tx_d©a
.
tx_iw_sy°em
 = 
the_sy°em
->
sy°em_bfd_h™dÀ
;

4478 
tx_d©a
.
tx_qnode_h™dÀ
 = 
qnode_iw
;

4479 
tx_d©a
.
tx_iw_sy°em_∑øms
 = &
swôchög_∑øms
;

4480 
tx_d©a
.
∑ckë
 =Öacket;

4482 
WP_iw_bfd_tx_èbÀ_c⁄fig
 
tx_èbÀ_c⁄fig
 =

4485  
WP_IW_BFD_NOT_METICULOUS
,

4488  
poﬁ_2048
,

4489  
tx_d©a
,

4492 
∑ckë
[7] = 1;

4493 
∑ckë
[11] = 1;

4494 
tx_èbÀ_c⁄fig
.
èg
 = 0;

4496 
the_sy°em
->
bfd_tx_èbÀ_h™dÀ
 = 
	`WP_IwBfdSessi⁄Cª©e
(
	`WP_WINPATH
(0),

4497 
WP_BFD_TX_SESSION
,

4498 &
tx_èbÀ_c⁄fig
);

4499 
	`ãrmö©e_⁄_îr‹
(
the_sy°em
->
bfd_tx_èbÀ_h™dÀ
, "WP_IwBfdSessionCreate()");

4500 
°©us
 = 
	`WP_IwBfdSessi⁄E«bÀ
(
the_sy°em
->
bfd_tx_èbÀ_h™dÀ
);

4501 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwBfdSessionEnable()");

4503 
	}
}

4506 
	$WPE_BfdRxSessi⁄Buûd
(
NP_SYSTEM_INFO
 *
the_sy°em
)

4508 
WP_°©us
 
°©us
;

4509 
WP_bfd_£ssi⁄_°©i°ics
 
£ssi⁄_°©i°ics
[
MAX_BFD_RX_SESSIONS
] ;

4511 
WP_iw_bfd_rx_èbÀ_c⁄fig
 
rx_èbÀ_c⁄fig
 =

4517  
WP_IW_BFD_WITHOUT_AUTHENTICATION_CHECK
,

4519  
WP_IW_BFD_NOT_METICULOUS
,

4520  
WP_IW_BFD_INTERRUPT
,

4524 
rx_èbÀ_c⁄fig
.
rx_p‹t_h™dÀ
 = 
iw_íë_2
;

4525 
rx_èbÀ_c⁄fig
.
dis¸imö©‹
 = 1;

4526 
rx_èbÀ_c⁄fig
.
èg
 = 
RX_ETH_BFD_INT_TMO_TAG
;

4527 
the_sy°em
->
bfd_rx_èbÀ_h™dÀ
 = 
	`WP_IwBfdSessi⁄Cª©e
(
	`WP_WINPATH
(0),

4528 
WP_BFD_RX_SESSION
,

4529 &
rx_èbÀ_c⁄fig
);

4530 
	`ãrmö©e_⁄_îr‹
(
the_sy°em
->
bfd_rx_èbÀ_h™dÀ
, "WP_IwBfdSessionCreate()");

4532 
°©us
 = 
	`WP_IwBfdSessi⁄E«bÀ
(
the_sy°em
->
bfd_rx_èbÀ_h™dÀ
);

4533 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwBfdSessionEnable()");

4534 
	}
}

4537 
	$≈_BFD_ÊowAdd
(
NP_SYSTEM_INFO
* 
the_sy°em
)

4539 
WP_°©us
 
°©us
;

4540 
WP_CHAR
 
ruÀ_°rög
[128]={0};

4541 
WP_Êow_˛ass_ruÀ
 
˛ass_cfg
;

4542 
WP_Êow_˛ass_f‹w¨dög_a˘i⁄
 
f‹w¨dög_a˘i⁄
;

4543 
WP_iw_agg_bfd
 
Êow_agg_c⁄fig
 =

4547  
WP_IW_RFCS_ENABLE
,

4548  
WP_IW_INT_ENABLE
,

4549  
WP_IW_IRQT1
,

4550  
WP_IW_STAT_ENABLE
,

4551  
WP_IW_OV_POOL_ENABLE
,

4555  
WP_IW_AGG_PRIMARY
,

4559 
Êow_agg_c⁄fig
.
èg
 = 
RX_ETH_BFD_INT_TAG
;

4560 
Êow_agg_c⁄fig
.
ötmode
 = 
WP_IW_INT_ENABLE
;

4561 
Êow_agg_c⁄fig
.
exåa˘i⁄_Àngth
 = 42;

4562 
Êow_agg_c⁄fig
.
txfunc
 = 
iw_rx_ho°_h™dÀ
;

4563 
the_sy°em
->
agg_bfd_rx_h™dÀ

	`WP_IwFlowAggªg©i⁄Cª©e
(
	`WP_WINPATH
(0),

4564 
WP_IW_BFD_MODE
,

4565 &
Êow_agg_c⁄fig
);

4566 
	`ãrmö©e_⁄_îr‹
(
the_sy°em
->
agg_bfd_rx_h™dÀ
," WP_IwFlowAggregationCreate()");

4568 
	`•rötf
 (
ruÀ_°rög
, "n;n;n;n;n;n;%d;UDP;",
UDP_BFD_PORT
);

4569 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DPORT_UDP_BFD
].
˛assifõr_°rög
 = 
ruÀ_°rög
;

4570 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DPORT_UDP_BFD
].
a˘i⁄_öfo
.
f‹w¨dög_a˘i⁄
.
Êow_aggªg©i⁄
 = 
the_sy°em
->
agg_bfd_rx_h™dÀ
;

4571 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DPORT_UDP_BFD
].
dfc_öfo
 = &
íë_to_íë_dfc_Êow_öfo
[NPU_FILTER_DPORT_UDP_BFD];

4572 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DPORT_UDP_BFD
].
m©ch_a˘i⁄
 = 
WP_FLOW_CLASS_MODE_FLOW_AGG
;

4574 
the_sy°em
->
Êow_bdf_h™dÀ
 = 
	`WP_IwFlowAdd
(
iw_sys_bridgög
, 
WP_FLOW_CLASS_RULE
,&(
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DPORT_UDP_BFD
]));

4575 
	`ãrmö©e_⁄_îr‹
(
the_sy°em
->
Êow_bdf_h™dÀ
, "WP_IwFlowAdd()Çp_BFD_flowAdd");

4576 
°©us
 = 
	`WP_IwSy°emBuûd
(
iw_sys_bridgög
);

4577 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwSystemBuild -Çp_BFD_flowAdd");

4578 
	}
}

4580 
	$≈_d°_mac_fûãr_ÊowAdd
(
NP_SYSTEM_INFO
* 
the_sy°em
)

4582 
WP_°©us
 
°©us
;

4583 
WP_CHAR
 
ruÀ_°rög
[128]={0};

4585 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

4588 
WP_iw_agg_dúe˘m≠_íë
 
mac_fûãr_agg
[1] =

4593  
WP_IW_RFCS_DISABLE
,

4594  
WP_IW_L2H_INSERT_DISABLE
,

4595  
WP_IW_IRQT1
,

4596  
WP_IW_ERRPKT_DISCARD
,

4597  
WP_IW_INT_DISABLE
,

4598 #i‡
STATISTICS_ENABLE


4599  
WP_IW_STAT_ENABLE
,

4601  
WP_IW_STAT_DISABLE
,

4603  
WP_IW_TIME_STAMP_DISABLE
,

4611  
NULL
,

4613  
NULL
,

4614  
WP_IW_LENGTH_UPDATE_DISABLED
,

4616 
WP_IW_FLOW_AGG_PRIMARY


4620 
mac_fûãr_agg
[0].
txfunc
 = 
iw_sys_bridgög
;

4621 
mac_fûãr_agg
[0].
iw_p‹t
 = 
the_sy°em
->
Bp‹t_mac_fûãr_h™dÀ
;

4622 
the_sy°em
->
agg_mac_fûãr_h™dÀ
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0,
WP_IW_DIRECTMAP_MODE
, &
mac_fûãr_agg
[0]);

4623 
	`ãrmö©e_⁄_îr‹
(
the_sy°em
->
agg_mac_fûãr_h™dÀ
, "WP_IwFlowAggregationCreateÅhe_system->agg_mac_filter_handle");

4625 
mac_fûãr_agg
[0].
txfunc
 = 
iw_sys_bridgög
;

4626 
mac_fûãr_agg
[0].
iw_p‹t
 = 
the_sy°em
->
Bp‹t_mac_fûãr_‰om_ëh2_h™dÀ
;

4627 
mac_fûãr_agg
[0].
mtu
 = 
N_MAX_IP_FRAME_SIZE
;

4628 
the_sy°em
->
agg_mac_fûãr_‰om_ëh2_h™dÀ
 = 
	`WP_IwFlowAggªg©i⁄Cª©e
(0,
WP_IW_DIRECTMAP_MODE
, &
mac_fûãr_agg
[0]);

4629 
	`ãrmö©e_⁄_îr‹
(
the_sy°em
->
agg_mac_fûãr_‰om_ëh2_h™dÀ
, "WP_IwFlowAggregationCreateÅhe_system->agg_mac_filter_from_eth2_handle");

4632 
	`•rötf
 (
ruÀ_°rög
, "n;n;n;n;n;n;n;n;n;%d.%d.%d.%d.%d.%d;",0xff,

4638 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DST_MAC
].
˛assifõr_°rög
 = 
ruÀ_°rög
;

4639 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DST_MAC
].
a˘i⁄_öfo
.
f‹w¨dög_a˘i⁄
.
Êow_aggªg©i⁄
 = 
the_sy°em
->
agg_mac_fûãr_h™dÀ
;

4640 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DST_MAC
].
dfc_öfo
 = &
íë_to_íë_dfc_Êow_öfo
[NPU_FILTER_DST_MAC];

4641 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DST_MAC
].
m©ch_a˘i⁄
 = 
WP_FLOW_CLASS_MODE_FLOW_AGG
;

4643 
the_sy°em
->
Êow_mac_fûãr_h™dÀ
 = 
	`WP_IwFlowAdd
(
iw_sys_bridgög
, 
WP_FLOW_CLASS_RULE
,&(
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DST_MAC
]));

4644 
	`ãrmö©e_⁄_îr‹
(
the_sy°em
->
Êow_mac_fûãr_h™dÀ
, "WP_IwFlowAdd() flow_mac_filter_handle 0xff ..");

4647 
	`•rötf
 (
ruÀ_°rög
, "n;n;n;n;n;n;n;n;n;%d.%d.%d.%d.%d.%d;",
öôül_cfg
->
ifMAC§c
[0],

4648 
öôül_cfg
->
ifMAC§c
[1],

4649 
öôül_cfg
->
ifMAC§c
[2],

4650 
öôül_cfg
->
ifMAC§c
[3],

4651 
öôül_cfg
->
ifMAC§c
[4],

4652 
öôül_cfg
->
ifMAC§c
[5]);

4654 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DST_MAC
].
˛assifõr_°rög
 = 
ruÀ_°rög
;

4655 
the_sy°em
->
Êow_mac_fûãr_h™dÀ
 = 
	`WP_IwFlowAdd
(
iw_sys_bridgög
, 
WP_FLOW_CLASS_RULE
,&(
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DST_MAC
]));

4656 
	`ãrmö©e_⁄_îr‹
(
the_sy°em
->
Êow_mac_fûãr_h™dÀ
, "WP_IwFlowAdd() flow_mac_filter_handle");

4659 
	`•rötf
 (
ruÀ_°rög
, "n;n;n;n;n;n;n;n;n;%d.%d.%d.%d.%d.%d;",0xfe,

4665 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DST_MAC
].
˛assifõr_°rög
 = 
ruÀ_°rög
;

4666 
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DST_MAC
].
a˘i⁄_öfo
.
f‹w¨dög_a˘i⁄
.
Êow_aggªg©i⁄
 = 
the_sy°em
->
agg_mac_fûãr_‰om_ëh2_h™dÀ
;

4667 
the_sy°em
->
Êow_mac_fûãr_h™dÀ
 = 
	`WP_IwFlowAdd
(
iw_sys_bridgög
, 
WP_FLOW_CLASS_RULE
,&(
íë_to_íë_Êow_pﬁicy_cfg
[
NPU_FILTER_DST_MAC
]));

4668 
	`ãrmö©e_⁄_îr‹
(
the_sy°em
->
Êow_mac_fûãr_h™dÀ
, "WP_IwFlowAdd() flow_mac_filter_handle 0xfe ..");

4670 
°©us
 = 
	`WP_IwSy°emBuûd
(
iw_sys_bridgög
);

4671 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwSystemBuild - flow_mac_filter_handle");

4672 
	}
}

4674 
	$≈_ªc⁄fig_vœn_ö_iwP‹t
()

4676 
WP_iw_agg_dúe˘m≠_íë
 
mac_fûãr_agg
[1] =

4681  
WP_IW_RFCS_DISABLE
,

4682  
WP_IW_L2H_INSERT_DISABLE
,

4683  
WP_IW_IRQT1
,

4684  
WP_IW_ERRPKT_DISCARD
,

4685  
WP_IW_INT_DISABLE
,

4686 #i‡
STATISTICS_ENABLE


4687  
WP_IW_STAT_ENABLE
,

4689  
WP_IW_STAT_DISABLE
,

4691  
WP_IW_TIME_STAMP_DISABLE
,

4699  
NULL
,

4701  
NULL
,

4702  
WP_IW_LENGTH_UPDATE_DISABLED
,

4704 
WP_IW_FLOW_AGG_PRIMARY


4707 
vœn_ëhhdr
 *
vœn_ëhhódî
;

4708 
ëhhdr
 *Éthhdr;

4709 
WP_°©us
 
°©us
;

4710 
STRU_SET_INITAIL_CONFIG
 *
≈_ªc⁄fig
 = 
	`≈u_gë_≈_ªc⁄fig
();

4711 
NP_SYSTEM_INFO
 * 
the_sy°em
 = 
	`≈_gë_sy°em_öfo
();

4713 
	`F¥ötf
("Info:Çp_ªc⁄fig_vœn_ö_iwP‹t,Çp_ªc⁄fig->VœnTag:%d\n",
≈_ªc⁄fig
->
VœnTag
);

4714 
bp‹t_c⁄f
[0].
vœn_∑øm
.
vœn_èg
 = 
≈_ªc⁄fig
->
VœnTag
;

4716 if(
the_sy°em
->
Bp‹t_mac_fûãr_h™dÀ
 != 0)

4718 
°©us
 = 
	`WP_IwBridgögP‹tModify
(
iw_sys_bridgög
,
the_sy°em
->
Bp‹t_mac_fûãr_h™dÀ
,
WP_IW_BPORT_MOD_VLAN_DEFAULT_TAG
,
bp‹t_c⁄f
);

4719 if(
WP_OK
 !
°©us
)

4721 
	`WDDI_WARNING
("Warn:Çp_reconfig_vlan_in_iwPort::WP_IwPortModify::1 fail!\n");

4724 if(
the_sy°em
->
agg_mac_fûãr_h™dÀ
 != 0)

4726 
mac_fûãr_agg
->
iw_p‹t
 = 
the_sy°em
->
Bp‹t_mac_fûãr_h™dÀ
;

4727 
°©us
 = 
	`WP_IwFlowAggªg©i⁄Modify
(
the_sy°em
->
agg_mac_fûãr_h™dÀ
, 
WP_IW_FLOW_AGG_MOD_IWPORT
 ,
mac_fûãr_agg
);

4728 if(
WP_OK
 !
°©us
)

4730 
	`WDDI_WARNING
("Warn:Çp_reconfig_vlan_in_iwPort::WP_IwFlowAggregationModify::0 fail!\n");

4734 if(
iw_íë_3
 != 0)

4736 
°©us
 = 
	`WP_IwBridgögP‹tModify
(
iw_sys_bridgög
,
iw_íë_3
,
WP_IW_BPORT_MOD_VLAN_DEFAULT_TAG
,
bp‹t_c⁄f
);

4737 if(
WP_OK
 !
°©us
)

4739 
	`WDDI_WARNING
("Warn:Çp_reconfig_vlan_in_iwPort::WP_IwPortModify::2 fail!\n");

4743 if(
≈_ªc⁄fig
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

4745 
vœn_ëhhódî
 = (
vœn_ëhhdr
 *)&
tx_agg_l3
->
¥efix_hódî
[0];

4746 
tx_agg_l3
->
¥efix_Àngth
 = 18;

4747 
vœn_ëhhódî
->
h_vœn_¥Ÿo
 = 
	`ht⁄s
(0x8100);

4748 
vœn_ëhhódî
->
h_vœn_TCI
 = 
	`ht⁄s
(
≈_ªc⁄fig
->
VœnTag
);

4749 
vœn_ëhhódî
->
h_vœn_íˇpsuœãd_¥Ÿo
 = 
	`ht⁄s
(0x0800);

4753 
ëhhdr
 = (ëhhd∏*)&
tx_agg_l3
->
¥efix_hódî
[0];

4754 
tx_agg_l3
->
¥efix_Àngth
 = 14;

4755 
ëhhdr
->
h_¥Ÿo
 = 
	`ht⁄s
(0x0800);

4758 if(
ùde‰ag_agg
 != 0)

4761 
°©us
 = 
	`WP_IwFlowAggªg©i⁄Modify
(
ùde‰ag_agg
, 
WP_IW_FLOW_AGG_MOD_PRX
 ,
tx_agg_l3
);

4762 if(
WP_OK
 !
°©us
)

4764 
	`WDDI_WARNING
("Warn:Çp_reconfig_vlan_in_iwPort::WP_IwFlowAggregationModify::1 fail!\n");

4768 
tx_agg_íë
->
iw_p‹t
 = 
iw_íë_3
;

4769 
°©us
 = 
	`WP_IwFlowAggªg©i⁄Modify
(
the_sy°em
->
agg_a·î_de‰ag
, 
WP_IW_FLOW_AGG_MOD_IWPORT
,
tx_agg_íë
);

4772 if(
WP_OK
 !
°©us
)

4774 
	`WDDI_WARNING
("Warn:Çp_reconfig_vlan_in_iwPort::WP_IwFlowAggregationModify::2 fail!\n");

4776 
	}
}

4778 
	#WPL_INTRPT_MASK_EXTERNAL_L
 (
w∂_rif_ba£
 + 0xc2b0)

	)

4779 
	#WPL_INTRPT_MASK_EXTERNAL_H
 (
w∂_rif_ba£
 + 0xc2b4)

	)

4781 
WP_U32
 
	gw∂_rif_ba£
 = 0;

4783 
	#WPL_INTRPT_REGISTER_GET
(
vÆ
, 
ªg
Ë
	`WP_MEM_GET
((vÆ), *((
WP_U32
*Ïeg))

	)

4784 
	#WPL_INTRPT_REGISTER_SET
(
ªg
, 
vÆ
Ë
	`WP_MEM_SET
(*((
WP_U32
*Ïeg), (vÆ))

	)

4786 
	$≈_c⁄åﬁ_öãºu±
(
u8
 
Êag
,u8 
Irqnum
)

4788 
WP_U32
 
öå±_mask
;

4789 if(
w∂_rif_ba£
 ==0)

4791 
	`WPLI_Bu£sRifBa£Gë
(0, &
w∂_rif_ba£
);

4793 if(
Êag
)

4795 
	`WPL_INTRPT_REGISTER_GET
(
öå±_mask
, 
WPL_INTRPT_MASK_EXTERNAL_H
);

4796 if(
Irqnum
 ==0)

4798 
öå±_mask
 |= 0x00100000;

4800 if(
Irqnum
 == 1)

4802 
öå±_mask
 |= 0x00200000;

4807 
	`WPL_INTRPT_REGISTER_SET
(
WPL_INTRPT_MASK_EXTERNAL_H
, 
öå±_mask
);

4812 
	`WPL_INTRPT_REGISTER_GET
(
öå±_mask
, 
WPL_INTRPT_MASK_EXTERNAL_H
);

4813 if(
Irqnum
 ==0)

4815 
öå±_mask
 &= ~0x00100000;

4817 if(
Irqnum
 == 1)

4819 
öå±_mask
 &= ~0x00200000;

4824 
	`WPL_INTRPT_REGISTER_SET
(
WPL_INTRPT_MASK_EXTERNAL_H
, 
öå±_mask
);

4826 
	}
}

4827 
	$≈_£t_ovî_öãºu±
()

4829 
WP_U32
 
öå±_mask
;

4830 if(
w∂_rif_ba£
 ==0)

4832 
	`WPLI_Bu£sRifBa£Gë
(0, &
w∂_rif_ba£
);

4834 
	`WPL_INTRPT_REGISTER_GET
(
öå±_mask
, 
WPL_INTRPT_MASK_EXTERNAL_H
);

4835 if((
öå±_mask
 & 0x0003c000) == 0)

4837 
öå±_mask
 |= 0x0003c000;

4838 
	`WPL_INTRPT_REGISTER_SET
(
WPL_INTRPT_MASK_EXTERNAL_H
, 
öå±_mask
);

4839 
	`F¥ötf
("Info:Çp_set_over_interrupt \n");

4841 
	}
}

4844 
ölöe
 
	$c›y16byãs
(*
d°
, c⁄° *
§c
)

4846 
asm
 volatile ("movdqu (%[src]), %%xmm0\n\t"

4849 : [
§c
] "r" (§c), [
d°
] "r"(dst)

4851 
	}
}

4853 
ölöe
 
	$c›y32byãs
(*
d°
, c⁄° *
§c
) {

4854 c⁄° *
s
 =
§c
;

4855 *
d
 = 
d°
;

4856 
	`c›y16byãs
(
d
, 
s
);

4857 
	`c›y16byãs
(
d
+16, 
s
+16);

4858 
	}
}

4860 
ölöe
 
	$c›y64byãs
(*
d°
, c⁄° *
§c
) {

4861 c⁄° *
s
 =
§c
;

4862 *
d
 = 
d°
;

4863 
	`c›y32byãs
(
d
, 
s
);

4864 
	`c›y32byãs
(
d
+16, 
s
+16);

4865 
	}
}

4867 
ölöe
 
	$c›y128byãs
(*
d°
, c⁄° *
§c
) {

4868 c⁄° *
s
 =
§c
;

4869 *
d
 = 
d°
;

4870 
	`c›y64byãs
(
d
, 
s
);

4871 
	`c›y64byãs
(
d
+16, 
s
+16);

4872 
	}
}

4874 
ölöe
 
	$c›y256byãs
(*
d°
, c⁄° *
§c
) {

4875 c⁄° *
s
 =
§c
;

4876 *
d
 = 
d°
;

4877 
	`c›y128byãs
(
d
, 
s
);

4878 
	`c›y128byãs
(
d
+16, 
s
+16);

4879 
	}
}

4882 #i‡
NPU_HOST_OLP


4884 *
	$pcimem_c›y
(* 
b
,c⁄° * 
a
,
size_t
 
n
)

4887 *
s1
 = 
b
;

4888 c⁄° *
s2
 = 
a
;

4889 ; 0<
n
; --n)*
s1
++ = *
s2
++;

4890  
b
;

4894 *
s1W‹ds2
 = 
b
;

4895 c⁄° *
s2W‹ds2
 = 
a
;

4896 
n2W¨ds
 = 
n
 >> 4;

4897 
ByãLe·
 = 
n
 & 15;

4898 
i
;

4900 
i
 = 0;ò< 
n2W¨ds
;i++) {

4901 *
s1W‹ds2
++ = *
s2W‹ds2
++;

4904 *
s1Byãs
 = (*)
s1W‹ds2
;

4905 c⁄° *
s2Byãs
 = (*)
s2W‹ds2
;

4907 
i
 = 0;ò< 
ByãLe·
;i++) {

4908 *
s1Byãs
++ = *
s2Byãs
++;

4911 c⁄° *
§c
 = 
a
;

4912 *
d°
 = 
b
;

4914 
n
 > 256) {

4915 
	`c›y256byãs
(
d°
, 
§c
);

4916 
n
 -= 256;

4917 
§c
 += 256;

4918 
d°
 += 256;

4921 i‡(
n
 & 128) {

4922 
	`c›y128byãs
(
d°
, 
§c
);

4923 
n
 -= 128;

4924 
§c
 += 128;

4925 
d°
 += 128;

4928 i‡(
n
 & 64) {

4929 
	`c›y64byãs
(
d°
, 
§c
);

4930 
n
 -= 64;

4931 
§c
 += 64;

4932 
d°
 += 64;

4935 i‡(
n
 & 32) {

4936 
	`c›y32byãs
(
d°
, 
§c
);

4937 
n
 -= 32;

4938 
§c
 += 32;

4939 
d°
 += 32;

4942 i‡(
n
 & 16) {

4943 
	`c›y16byãs
(
d°
, 
§c
);

4944 
n
 -= 16;

4945 
§c
 += 16;

4946 
d°
 += 16;

4949 
	`mem˝y
(
d°
, 
§c
, 
n
);

4953 
	}
}

4955 
ölöe
 
	$c›y16byãs
(
uöt8_t
 *
d°
, c⁄° uöt8_à*
§c
)

4957 
asm
 volatile ("movdqu (%[src]), %%xmm0\n\t"

4960 : [
§c
] "r" (§c), [
d°
] "r"(dst)

4962 
	}
}

4964 
ölöe
 
	$c›y32byãs
(
uöt8_t
 *
d°
, c⁄° uöt8_à*
§c
)

4966 
asm
 volatile ("movdqu (%[src]), %%xmm0\n\t"

4971 : [
§c
] "r" (§c), [
d°
] "r"(dst)

4973 
	}
}

4975 
ölöe
 
	$c›y64byãs
(
uöt8_t
 *
d°
, c⁄° uöt8_à*
§c
)

4977 
asm
 volatile ("movdqu (%[src]), %%xmm0\n\t"

4986 : [
§c
] "r" (§c), [
d°
] "r"(dst)

4988 
	}
}

4990 
ölöe
 
	$c›y128byãs
(
uöt8_t
 *
d°
, c⁄° uöt8_à*
§c
)

4992 
asm
 volatile ("movdqu (%[src]), %%xmm0\n\t"

5009 : [
§c
] "r" (§c), [
d°
] "r"(dst)

5011 
	}
}

5014 * 
	$pcimem_c›y
(* 
d°
, c⁄° * 
§c
, 
n
)

5016 c⁄° 
uöt8_t
 * 
s
 = (uöt8_à*)
§c
;

5017 
uöt8_t
 * 
d
 = (uöt8_à*)
d°
;

5019 i‡(
n
 <= 0)

5021 
	`F¥ötf
("ÀngthÉº‹ i¿my cpy fun˘i⁄ %d\n", 
n
);

5022  
NULL
;

5025 i‡(
n
 < 16)

5027 
	`mem˝y
(
d
, 
s
, 
n
);

5028  
d°
;

5032 i‡–
n
 < 128 )

5034 i‡(
n
 >> 6)

5036 
	`c›y64byãs
(
d
, 
s
);

5037 
n
 -= 64;

5038 
d
 += 64;

5039 
s
 += 64;

5042 i‡(
n
 >> 5)

5044 
	`c›y32byãs
(
d
, 
s
);

5045 
n
 -= 32;

5046 
d
 += 32;

5047 
s
 += 32;

5050 i‡(
n
 >> 4)

5052 
	`c›y16byãs
(
d
, 
s
);

5053 
n
 -= 16;

5054 
d
 += 16;

5055 
s
 += 16;

5059 i‡(
n
 > 0)

5061 
	`c›y16byãs
(
d
 - 16 + 
n
, 
s
 - 16 +Ç);

5064  
d°
;

5068 
n
 >= 128)

5070 
	`c›y128byãs
(
d
, 
s
);

5071 
n
 -= 128;

5072 
s
 += 128;

5073 
d
 += 128;

5078 i‡(
n
 >> 6)

5080 
	`c›y64byãs
(
d
,
s
);

5081 
n
 -= 64;

5082 
s
 += 64;

5083 
d
 += 64;

5086 i‡(
n
 >> 5)

5088 
	`c›y32byãs
(
d
,
s
);

5089 
n
 -= 32;

5090 
s
 += 32;

5091 
d
 += 32;

5094 i‡(
n
 >> 4)

5096 
	`c›y16byãs
(
d
,
s
);

5097 
n
 -= 16;

5098 
s
 += 16;

5099 
d
 += 16;

5103 i‡(
n
 > 0)

5105 
	`c›y16byãs
(
d
 - 16 + 
n
, 
s
 - 16 +Ç);

5108  
d°
;

5109 
	}
}

5111 
	$≈_¸óã_¨p_hq
()

5114 
NP_SYSTEM_INFO
 * 
the_sy°em
 = 
	`≈_gë_sy°em_öfo
();

5115 
WP_iw_agg_hq
 
hq_c⁄fig
[1] =

5122  
WP_IW_IRQT1
,

5123  
WP_IW_INT_ENABLE
,

5124  
WP_IW_STAT_ENABLE
,

5125  
WP_IW_TIME_STAMP_DISABLE
,

5129  
WP_IW_FLOW_PASS
,

5130  
WP_IW_FORCE_NO
,

5131  
WP_IW_L4_NO_CHECKSUM
,

5133  
WP_IW_AGG_PRIMARY


5136 
hq_c⁄fig
[0].
èg
 = 
RX_ETH_INT_PRIO_MSG_TAG
;

5137 
hq_c⁄fig
[0].
txfunc
 = 
the_sy°em
->
Ch™√l_IP_PrioRx0_ho°_h™dÀ
;

5138 
the_sy°em
->
agg_ho°_¨p_agg

	`WP_IwFlowAggªg©i⁄Cª©e
(
	`WP_WINPATH
(0), 
WP_IW_HOST_QUEUE_MODE
,&
hq_c⁄fig
[0]);

5139 
	`ãrmö©e_⁄_îr‹
(
the_sy°em
->
agg_ho°_¨p_agg
,"WP_IwFlowAggregationCreate() Host ARP");

5141 
	}
}

5143 
	$≈u_¥ötf_debugReg
()

5145 
WP_S32
 
ªt
;

5146 
WP_U32
 *
addr
,
ba£_addr
,
i
;

5147 
ªt
 = 
	`WPI_DebugBa£AddrGë
(0,&
ba£_addr
,&
addr
);

5148 if(
ªt
 != 0)

5151 
	`F¥ötf
("WPI_DebugBaseAddrGet failed \n");

5155 
	`F¥ötf
(" debug ba£_add∏i†0x%xáddr0x%x \n",
ba£_addr
,
addr
);

5156 
i
 = 0;i < 16;i++)

5158 if(
i
%4 == 0)

5160 
	`F¥ötf
("\n");

5161 
	`F¥ötf
(" 0x%x: ",
addr
);

5163 
	`F¥ötf
("0x%x ",*(
WP_U32
 *)
addr
);

5164 
addr
++;

5166 
	`F¥ötf
("\n");

5167 
	}
}

5168 
	$show_dps_dl_lök_ôem
(
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
 *
p_lökInfo
)

5170 
wp_vp‹t_èbÀ
 
vp‹tIãm
 = {0};

5171 
i
;

5172 
	`WP_VP‹tE¡ryGë
(0, 
p_lökInfo
->
NSEI
, &
vp‹tIãm
);

5173 
	`F¥ötf
("DPS DL Lök is::vÆid_num:0x%x\n",
vp‹tIãm
.
vÆid_num
);

5174 
i
 = 0; i < 16; i++)

5176 if(
i
%2 =0Ë
	`F¥ötf
("\n");

5177 
	`F¥ötf
("Êow_num[%d]:0x%x, ",
i
, 
vp‹tIãm
.
Êow_num
[i]);

5179 
	`F¥ötf
("\n");

5180 
	}
}

5182 
	$show_dps_ul_rouã_ôem
(
NP_UL_FLOW_INFO
 *
p_FrFlowInfo
)

5184 
i
;

5185 
FR_CHANNEL_INFO
 * 
ch_öfo
;

5186 
wp_globÀ_π
 
ul_rouã_ôem
 = {0};

5187 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

5188 if(
NULL
 =
öôül_cfg
)

5190 
	`F¥ötf
("Error: show_dps_ul_route_item::npu_get_initial_cfg_info fail!\n");

5195 
STRU_VPORT_INFO
 *
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
p_FrFlowInfo
->
vp‹t
);

5196 if(
NULL
 =
Vp‹tInfo
)

5198 
	`F¥ötf
("Eº‹: show_dps_ul_rouã_ôem::≈u_gë_vp‹t_öfÿÁû! vp‹t:%d\n", 
p_FrFlowInfo
->
vp‹t
);

5201 
ch_öfo
 = &
Vp‹tInfo
->ch_info;

5203 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

5206 
	`WP_lookupE¡ryGë
(0, 
ch_öfo
->
agg_‰_rx_ho°_Êow
, &
ul_rouã_ôem
);

5209 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_IP
)

5211 
	`F¥ötf
("Info: show_dps_ul_rouã_ôem::NPU_MODE_IP, Vp‹tInfo->agg_ù2ùtx2ho°:0x%x\n", 
Vp‹tInfo
->
agg_ù2ùtx2ho°
);

5212 
	`WP_lookupE¡ryGë
(0, 
Vp‹tInfo
->
agg_ù2ùtx2ho°
, &
ul_rouã_ôem
);

5215 
	`F¥ötf
("DPS UL Rouã is::Êow_num:0x%x\n",
ul_rouã_ôem
.
Êow_num
);

5216 
i
 = 0; i < 257; i++)

5218 if(
i
%2 =0Ë
	`F¥ötf
("\n");

5219 
	`F¥ötf
("p‹t_num[%d]:0x%x, ",
i
, 
ul_rouã_ôem
.
p‹t_num
[i]);

5221 
	`F¥ötf
("\n");

5222 
	}
}

5224 
	$show_dps_dl_rouã_ôem
(
NP_DL_FLOW_INFO
 *
p_EthFlowInfo
)

5226 
ªt
 = 0;

5227 
wp_dl_π
 
dl_rouã_ôem
 = {0};

5228 
STRU_SET_DOWNLINK_PATH_RULE
 * 
ruÀ
 = &
p_EthFlowInfo
->rule;

5230 
wp_dl_π
 
dl_π
;

5231 
STRU_VPORT_INFO
 *
Vp‹tInfo
;

5232 
NP_SYSTEM_INFO
 * 
the_sy°em
 = 
	`≈_gë_sy°em_öfo
();

5233 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

5234 
dl_π
.
bvci_n
 = 
ruÀ
->
BVCI√w
;

5235 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

5237 
dl_π
.
n£i_i
 = 
ruÀ
->
n£i_p‹tSrc
.
NSEI
;

5238 
dl_π
.
Êow_num
 = 
	`WPI_HANDLE_INDEX
(
p_EthFlowInfo
->
agg_dl_dp‹tGΩ_h™dÀ
);

5242 
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
ruÀ
->
n£i_p‹tSrc
.
p‹tSrc
);

5243 if(
NULL
 =
Vp‹tInfo
)

5245 
	`F¥ötf
("Eº‹: show_dps_dl_rouã_ôem::≈u_gë_vp‹t_öfÿÁûed!Ö‹t§c:%d\n", 
ruÀ
->
n£i_p‹tSrc
.
p‹tSrc
);

5248 
dl_π
.
n£i_i
 = 
	`ht⁄s
(
ruÀ
->
n£i_p‹tSrc
.
p‹tSrc
);

5249 
dl_π
.
Êow_num
 = (
	`WPI_HANDLE_INDEX
(
the_sy°em
->
agg_dl_ù_to_íë2_h™dÀ
)<<16Ë| WPI_HANDLE_INDEX(
Vp‹tInfo
->
agg_dl_ù2ùtx2E√t1
);

5252 
ªt
 = 
	`WP_DLlookupE¡ryGë
(0, 
p_EthFlowInfo
->
agg_dl_dp‹tGΩ_h™dÀ
, 
ruÀ
->
BVCI
, &
dl_rouã_ôem
);

5253 if(0 =
ªt
)

5255 
	`F¥ötf
("DPS DL Route is::flow_num:0x%x, bvci_n:%d(0x%x),Çsei_i:%d(0x%x)\n", \

5256 
dl_rouã_ôem
.
Êow_num
, dl_rouã_ôem.
bvci_n
, dl_rouã_ôem.bvci_n, dl_rouã_ôem.
n£i_i
, dl_route_item.nsei_i);

5260 
	`F¥ötf
("DPS DL Route get failed!\n");

5262 
	}
}

5264 
	$show_dps_ul_lök_ôem
(
STRU_SET_UPLINK_PATH_LINK_TABLE
 *
p_lökInfo
)

5266 
wp_loˇl_π
 
ul_lök_ôem
 = {0};

5267 
i
;

5268 
	`WP_IPEndPoötE¡ryGë
(0, 
	`ht⁄s
(
p_lökInfo
->
P‹tSrc
), &
ul_lök_ôem
);

5269 
	`F¥ötf
("DPS UL Lök is::vÆid_num:0x%x\n",
ul_lök_ôem
.
vÆid_num
);

5270 
i
 = 0; i < 64; i++)

5272 
	`F¥ötf
("ù_ï[%d].ù_addr:0x%x, ",
i
, 
ul_lök_ôem
.
ù_ï
[i].
ù_addr
);

5273 
	`F¥ötf
("ù_ï[%d].d°_p‹t:0x%x, ",
i
, 
ul_lök_ôem
.
ù_ï
[i].
d°_p‹t
);

5274 
	`F¥ötf
("ù_ï[%d].§c_p‹t:0x%x\n",
i
, 
ul_lök_ôem
.
ù_ï
[i].
§c_p‹t
);

5277 
	}
}

5279 
	$show_dps_bvci_ôem
(
NP_UPDATE_BVCI_FLOW_INFO
 *
p_BvciFlowInfo
)

5281 
WP_U16
 
hashRë1
, 
hashRë2
;

5282 
π
;

5283 
STRU_VPORT_INFO
 *
Vp‹tInfo
;

5284 
FR_CHANNEL_INFO
 *
ch_öfo
;

5285 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

5286 
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
p_BvciFlowInfo
->
vp‹t
);

5287 if(
NULL
 =
Vp‹tInfo
)

5289 
	`F¥ötf
("Eº‹: show_dps_bvci_ôem::≈u_gë_vp‹t_öfÿÁû! vp‹t:0x%x\n", 
p_BvciFlowInfo
->
vp‹t
);

5293 
ch_öfo
 = &
Vp‹tInfo
->ch_info;

5294 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

5296 
π
 = 
	`WPI_U£rDefHashE¡ryDi•œy
(0,
	`WPI_HANDLE_INDEX
(
ch_öfo
->
agg_tx2E√t1
),
p_BvciFlowInfo
->
NS_BVCI_ﬁd
,&
hashRë1
);

5297 if(0 =
π
)

5299 
	`F¥ötf
("DPS bvci-FR: flowNum_E1:0x%x, bvci_ﬁd:%d, bvci_√w:%d\n", 
ch_öfo
->
agg_tx2E√t1
, 
p_BvciFlowInfo
->
NS_BVCI_ﬁd
, 
hashRë1
);

5301 
π
 = 
	`WPI_U£rDefHashE¡ryDi•œy
(0,
	`WPI_HANDLE_INDEX
(
ch_öfo
->
agg_‰_to_íë2
),
p_BvciFlowInfo
->
NS_BVCI_ﬁd
,&
hashRë2
);

5302 if(0 =
π
)

5304 
	`F¥ötf
("DPS bvci-FR: flowNum_E2:0x%x, bvci_ﬁd:%d, bvci_√w:%d\n", 
ch_öfo
->
agg_‰_to_íë2
, 
p_BvciFlowInfo
->
NS_BVCI_ﬁd
, 
hashRë2
);

5307 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_IP
)

5309 
π
 = 
	`WPI_U£rDefHashE¡ryDi•œy
(0,
	`WPI_HANDLE_INDEX
(
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1
),
p_BvciFlowInfo
->
NS_BVCI_ﬁd
,&
hashRë1
);

5310 if(0 =
π
)

5312 
	`F¥ötf
("DPS bvci-IP: flowNum_E1:0x%x, bvci_ﬁd:%d, bvci_√w:%d\n", 
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1
, 
p_BvciFlowInfo
->
NS_BVCI_ﬁd
, 
hashRë1
);

5314 
π
 = 
	`WPI_U£rDefHashE¡ryDi•œy
(0,
	`WPI_HANDLE_INDEX
(
Vp‹tInfo
->
agg_ul_ù_to_íë2_h™dÀ
),
p_BvciFlowInfo
->
NS_BVCI_ﬁd
,&
hashRë2
);

5315 if(0 =
π
)

5317 
	`F¥ötf
("DPS bvci-IP: flowNum_E2:0x%x, bvci_ﬁd:%d, bvci_√w:%d\n", 
Vp‹tInfo
->
agg_ul_ù_to_íë2_h™dÀ
, 
p_BvciFlowInfo
->
NS_BVCI_ﬁd
, 
hashRë2
);

5320 
	}
}

5321 
	$≈_di•œy_dp‹t_Êow_öfo
(
u16
 
dp‹t
)

5323 
wp_ns_bssgp_°©is
 
wp_°©ics
;

5325 
	`mem£t
(&
wp_°©ics
,0,(wp_statics));

5326 
	`F¥ötf
("≈_di•œy_dp‹t_Êow_öfo(): dp‹t=%d, h™dÀ=0x%x\n",
dp‹t
, 
Dp‹tGΩagg_h™dÀ
[dp‹t].
h™dÀ
);

5327 if(
Dp‹tGΩagg_h™dÀ
[
dp‹t
].
h™dÀ
)

5329 
	`WP_FlowSèti°icsGë
(0,
Dp‹tGΩagg_h™dÀ
[
dp‹t
].
h™dÀ
,&
wp_°©ics
);

5330 
	`F¥ötf
("Hi: Dp‹tAgg:RxNsByãs=0x%x\n",*(*)(&
wp_°©ics
.
RxNsByãs
));

5331 
	`F¥ötf
("Lo: Dp‹tAgg:RxNsByãs=0x%x\n",*((*)(&
wp_°©ics
.
RxNsByãs
)+1));

5332 
	`F¥ötf
("Hi: Dp‹tAgg:RxNsD©aPackës=0x%x\n",*(*)(&
wp_°©ics
.
RxNsD©aPackës
));

5333 
	`F¥ötf
("Lo: Dp‹tAgg:RxNsD©aPackës=0x%x\n",*((*)(&
wp_°©ics
.
RxNsD©aPackës
)+1));

5334 
	`F¥ötf
("Hi: Dp‹tAgg:RxNsSig«lPackës=0x%x\n",*(*)(&
wp_°©ics
.
RxNsSig«lPackës
));

5335 
	`F¥ötf
("Lo: Dp‹tAgg:RxNsSig«lPackës=0x%x\n",*((*)(&
wp_°©ics
.
RxNsSig«lPackës
)+1));

5336 
	`F¥ötf
("Hi: Dp‹tAgg:RxBssgpByãs=0x%x\n",*(*)(&
wp_°©ics
.
RxBssgpByãs
));

5337 
	`F¥ötf
("Lo: Dp‹tAgg:RxBssgpByãs=0x%x\n",*((*)(&
wp_°©ics
.
RxBssgpByãs
)+1));

5338 
	`F¥ötf
("Hi: Dp‹tAgg:RxBssgpD©aPackës=0x%x\n",*(*)(&
wp_°©ics
.
RxBssgpD©aPackës
));

5339 
	`F¥ötf
("Lo: Dp‹tAgg:RxBssgpD©aPackës=0x%x\n",*((*)(&
wp_°©ics
.
RxBssgpD©aPackës
)+1));

5340 
	`F¥ötf
("Hi: Dp‹tAgg:RxBssgpSig«lPackës=0x%x\n",*(*)(&
wp_°©ics
.
RxBssgpSig«lPackës
));

5341 
	`F¥ötf
("Lo: Dp‹tAgg:RxBssgpSig«lPackës=0x%x\n",*((*)(&
wp_°©ics
.
RxBssgpSig«lPackës
)+1));

5342 
	`F¥ötf
("Hi: Dp‹tAgg:TxNsByãs=0x%x\n",*(*)(&
wp_°©ics
.
TxNsByãs
));

5343 
	`F¥ötf
("Lo: Dp‹tAgg:TxNsByãs=0x%x\n",*((*)(&
wp_°©ics
.
TxNsByãs
)+1));

5344 
	`F¥ötf
("Hi: Dp‹tAgg:TxNsD©aPackës=0x%x\n",*(*)(&
wp_°©ics
.
TxNsD©aPackës
));

5345 
	`F¥ötf
("Lo: Dp‹tAgg:TxNsD©aPackës=0x%x\n",*((*)(&
wp_°©ics
.
TxNsD©aPackës
)+1));

5346 
	`F¥ötf
("Hi: Dp‹tAgg:TxNsSig«lPackës=0x%x\n",*(*)(&
wp_°©ics
.
TxNsSig«lPackës
));

5347 
	`F¥ötf
("Lo: Dp‹tAgg:TxNsSig«lPackës=0x%x\n",*((*)(&
wp_°©ics
.
TxNsSig«lPackës
)+1));

5348 
	`F¥ötf
("Hi: Dp‹tAgg:TxBssgpByãs=0x%x\n",*(*)(&
wp_°©ics
.
TxBssgpByãs
));

5349 
	`F¥ötf
("Lo: Dp‹tAgg:TxBssgpByãs=0x%x\n",*((*)(&
wp_°©ics
.
TxBssgpByãs
)+1));

5350 
	`F¥ötf
("Hi: Dp‹tAgg:TxBssgpD©aPackës=0x%x\n",*(*)(&
wp_°©ics
.
TxBssgpD©aPackës
));

5351 
	`F¥ötf
("Lo: Dp‹tAgg:TxBssgpD©aPackës=0x%x\n",*((*)(&
wp_°©ics
.
TxBssgpD©aPackës
)+1));

5352 
	`F¥ötf
("Hi: Dp‹tAgg:TxBssgpSig«lPackës=0x%x\n",*(*)(&
wp_°©ics
.
TxBssgpSig«lPackës
));

5353 
	`F¥ötf
("Lo: Dp‹tAgg:TxBssgpSig«lPackës=0x%x\n",*((*)(&
wp_°©ics
.
TxBssgpSig«lPackës
)+1));

5357 
	}
}

5359 
	$≈_di•œy_èbÀ_ôem
(
STRU_GET_TABLE_ITEM
 *
p°ru_gë_tblIãm
)

5361 
u32
 
i
;

5362 
u16
 
tblIãm
 = 
p°ru_gë_tblIãm
->
èbÀLoc
[1];

5363 
p°ru_gë_tblIãm
->
èbÀLoc
[0])

5365 
UL_ROUTE
:

5367 
wp_globÀ_π
 
ul_rouã_ôem
 = {0};

5368 
	`WP_lookupE¡ryGë
(0, 
tblIãm
, &
ul_rouã_ôem
);

5369 
	`F¥ötf
("DPS UL Rouã is::Êow_num:0x%x\n",
ul_rouã_ôem
.
Êow_num
);

5370 
i
 = 0; i < 257; i++)

5372 if(
i
%2 =0Ë
	`F¥ötf
("\n");

5373 
	`F¥ötf
("p‹t_num[%d]:0x%x, ",
i
, 
ul_rouã_ôem
.
p‹t_num
[i]);

5375 
	`F¥ötf
("\n");

5378 
UL_LINK
:

5380 
STRU_SET_UPLINK_PATH_LINK_TABLE
 
ulLökD©a
 = {0};

5381 
ulLökD©a
.
P‹tSrc
 = 
tblIãm
;

5382 
	`show_dps_ul_lök_ôem
(&
ulLökD©a
);

5385 
DL_ROUTE
:

5387 
wp_dl_π
 
dl_rouã_ôem
 = {0};

5388 
	`WP_DLlookupE¡ryDúe˘Gë
(
tblIãm
, &
dl_rouã_ôem
);

5389 
	`F¥ötf
("DPS DL Route is::flow_num:0x%x, bvci_n:%d(0x%x),Çsei_i:%d(0x%x)\n", \

5390 
dl_rouã_ôem
.
Êow_num
, dl_rouã_ôem.
bvci_n
, dl_rouã_ôem.bvci_n, dl_rouã_ôem.
n£i_i
, dl_route_item.nsei_i);

5393 
DL_LINK
:

5395 
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
 
dlLökD©a
 = {0};

5396 
dlLökD©a
.
NSEI
 = 
tblIãm
;

5397 
	`show_dps_dl_lök_ôem
(&
dlLökD©a
);

5400 
BVCI
:

5402 
u16
 
hashRë
;

5403 
WP_°©us
 
π
;

5404 
π
 = 
	`WPI_U£rDefHashE¡ryDi•œy
(0,
tblIãm
,
p°ru_gë_tblIãm
->
èbÀLoc
[2],&
hashRë
);

5405 if(0 =
π
)

5407 
	`F¥ötf
("DPS bvci: flowNum:0x%x, bvci_ﬁd:%d, bvci_√w:%d\n", 
tblIãm
, 
p°ru_gë_tblIãm
->
èbÀLoc
[2], 
hashRë
);

5411 
	`F¥ötf
("Eº‹: hash faûed. flowNum:0x%x, bvci_ﬁd:%d\n", 
tblIãm
, 
p°ru_gë_tblIãm
->
èbÀLoc
[2]);

5417 
	`F¥ötf
("Error:ÅableÇumber is out of bound!\n");

5421 
	}
}

	@np_common.h

1 #i‚de‡
__NPU_COMMON_H


2 
	#__NPU_COMMON_H


	)

3 
	~<°dlib.h
>

4 
	~<°dio.h
>

5 
	~<°rög.h
>

6 
	~<uni°d.h
>

7 
	~<√töë/ö.h
>

8 
	~<as£π.h
>

9 
	~"≠i/wp_wddi.h
"

10 
	~"≠i/wp_ho°_io.h
"

12 
	~"wpi_víìr.h
"

13 
	~"wpx_≠p_d©a.h
"

14 
	~"wpx_íë_phy.h
"

15 
	~"wpx_pö_mux_£À˘‹.h
"

16 
	~<wpx_bﬂrd_d©a.h
>

17 
	~"≈_°©s.h
"

19 
	~<wu„_ty≥s.h
>

20 
	~<wu„_îr‹s.h
>

21 
	~<wu„i_u£r_c⁄fig.h
>

22 
	~<wu„_u£r_c⁄fig.h
>

23 
	~<wu„_u„.h
>

24 
	~<wu„_evíts.h
>

25 
	~<wpx_u„/wpx_‰mr/Êexmux/WO_FRMR_API_public.h
>

29 
	~"wti_Êexmux_utû.h
"

31 
	~"wddi_log.h
"

32 
	~"•p_≈u_lök.h
"

33 
	~"tun_dev.h
"

34 
	~"wp_bfd.h
"

36 
WP_U32
 
	tWPI_PTR
;

39 #i‚de‡
WPI_LOOKUP_H


40 
	~"ö˛ude/c‹e/wpi_lookup.h
"

42 
	#UFE_LOOPBACK
 0

	)

43 
	#ENEA_RELEASE
 1

	)

44 
	#USE_WDDI_LOG
 0

	)

45 
	#BFD_OVERETH
 0

	)

46 
	#IP_FRAG
 1

	)

47 
	#IP_DEFRAG
 1

	)

48 
	#START_SCHEDULER
 1

	)

49 
	#FRAG_SIZE
 1496

	)

50 
	#NPU_HOST_OLP
 1

	)

51 
	#NPU_PRIORITY_MSG
 1

	)

52 
	#NPU_WAIT_FINISHED
 0xff

	)

53 
	#NPU_FR_RX_MAXT
 20

	)

54 
	#NPU_FR_TX_MAXT
 20

	)

55 
	#NPU_FR_RX_MAXT_PRI
 4000

	)

57 #i‡
ENEA_RELEASE


58 
	#NPU_WAIT_TIME
 2

	)

60 
	#NPU_WAIT_TIME
 2

	)

62 #i‡
ENEA_RELEASE


63 
	#¥ötf
(
fmt
, ...Ë
	`WDDI_WARNING
(fmt,## 
__VA_ARGS__
)

	)

73 
	#UFE_CLOCK_MASTER_MODE
 
WPX_UFE_FRAMER_TRANSMIT_TIMING_SONET_TIMING


74 
	#UFE_CLOCK_SLAVE_MODE
 
WPX_UFE_FRAMER_TRANSMIT_TIMING_RX_PATH


	)

75 
FILE
 *
debug_log_fûe
;

76 #i‡
ENEA_RELEASE


77 
	#F¥ötf
(
fmt
, ...) do { \

78 i‡(
debug_log_fûe
 !
NULL
) \

79 
	`Ârötf
(
debug_log_fûe
,
fmt
,## 
__VA_ARGS__
); \

80 
	`¥ötf
(
fmt
,## 
__VA_ARGS__
); } 0)

	)

82 
	#F¥ötf
(
fmt
, ...Ë
	`¥ötf
(fmt,## 
__VA_ARGS__
)

	)

85 
	#NPU_DEBUG_FILE_ENABLE
(Ëdo{ 
fûeName
[60]; \

86 
tm
 *
p
; \

87 
time_t
 
timï
; \

88 
	`time
(&
timï
); \

89 
p

	`loˇ…ime
(&
timï
); \

90 
	`•rötf
(
fûeName
,"/v¨/log/•p_wddi_debug_ã°_%4d-%02d-%02d_%2.2d:%2.2d:%2.2d.log",
p
->
tm_yór
+1900,p->
tm_m⁄
+1,p->
tm_mday
,p->
tm_hour
,p->
tm_mö
,p->
tm_£c
); \

91 
debug_log_fûe
 = 
	`f›í
(
fûeName
,"w"); \

92 }0)

	)

94 
	#NPU_DEBUG_FILE_DISABLE
() do { \

95 i‡(
debug_log_fûe
 !
NULL
)
	`f˛o£
(debug_log_file); \

96 
debug_log_fûe
 = 
NULL
; \

97 }0)

	)

100 
	#N_UFE_CORES
 1

	)

101 
	#N_UFE_MAX_LINES_T1
 168

102 
	#N_UFE_MAX_LINES_E1
 126

103 
	#N_UFE_MAX_PHYS
 3200

	)

104 
	#N_UFE_MAX_LINES_SPE_E1
 21

	)

105 
	#N_UFE_MAX_LINES_SPE_T1
 28

	)

106 
	#N_MAX_SPE_PER_STM1
 3

	)

107 
	#N_UFE_SPE_MAX_INDX
 
WUFE_MAX_N_CORE
*
WUFE_MAX_N_STM1
*
WUFE_MAX_N_SPE


	)

108 
	#UFE_ID
 0

	)

109 
	#N_FR_MAX_RX_HT_CHANNEL
 3600

	)

110 
	#N_FR_MAX_IW_TX_CHANNEL
 3600

	)

111 
	#N_FR_MAX_IW_RX_CHANNEL
 3600

	)

112 
	#N_FR_MAX_SDU
 1984

	)

113 
	#BPORT_DEFAULT_VLAN_TAG
 0x0a

	)

114 
	#N_MAX_IP_FRAME_SIZE
 8192

	)

116 
	#WT_MIN_CH_RATE
 6000

	)

117 
	#WT_MAX_CH_RATE
 3000000

	)

119 
	#WTUFE_UPI_PORT_1
 0

	)

120 
	#WTUFE_UPI_PORT_2
 1

	)

122 
	#UFE_LB_SYSTEM
 1

	)

123 
	#UFE_LB_LINE
 2

	)

124 
	#UFE_NO_LOOPBK
 3

	)

126 
	#ERR_UPLINX_FLOW_ADD
 -1

	)

127 
	#ERR_DOWNLINX_FLOW_ADD
 -2

	)

128 
	#ERR_UPLINX_FLOW_DELETE
 -3

	)

129 
	#ERR_DOWNLINX_FLOW_DELETE
 -4

	)

131 
	#ERR_BVCI_FLOW_ADD
 -5

	)

132 
	#ERR_BVCI_FLOW_DELETE
 -6

	)

133 
	#ERR_DOWNLINX_FLOW_EXIST
 -7

	)

135 
	#ERR_UL_RELEASE_RESOURCE
 -8

	)

136 
	#ERR_DL_RELEASE_RESOURCE
 -9

	)

137 
	#ERR_UPLINX_FLOW_ADD_ARP_FAIL
 -10

	)

140 
	#N_ETH_MAX_HT_CHANNEL
 10

	)

142 
	#N_FR_HT_RX_CHANNEL_TAG_BASE
 0

	)

143 
	#N_ETH_HT_RX_CHANNEL_TAG_BASE
 
N_FR_MAX_RX_HT_CHANNEL


	)

145 
	#RX_ETH_INT_TAG
 65530

	)

146 
	#RX_ETH_BFD_INT_TAG
 65531

	)

147 
	#RX_ETH_BFD_INT_TMO_TAG
 65532

	)

148 
	#RX_ETH_INT_PRIO_MSG_TAG
 65533

	)

149 
	#RX_FR_INT_PRIO_MSG_TAG
 65534

	)

151 
	#UDP_BFD_PORT
 3784

	)

152 
	#UDP_BFD_TMP_SPORT
 49153

	)

154 
	#WP_PRIORIYT_MSG_FR_TYPE
 0

	)

155 
	#WP_PRIORIYT_MSG_IP_TYPE
 1

	)

157 
	#WP_FR_MAX_RSV_LOWPRIO_NUMBER
 5

	)

158 
	#WP_FR_MAX_RSV_HIPRIO_NUMBER
 20

	)

160 
	#WP_ETH_MAX_RSV_LOWPRIO_NUMBER
 10

	)

161 
	#WP_ETH_MAX_RSV_HIPRIO_NUMBER
 20

	)

166 
WP_U64
 
	mTxNsByãs
;

167 
WP_U64
 
	mTxNsD©aPackës
;

168 
WP_U64
 
	mTxNsSig«lPackës
;

169 
WP_U64
 
	mTxBssgpByãs
;

170 
WP_U64
 
	mTxBssgpD©aPackës
;

171 
WP_U64
 
	mTxBssgpSig«lPackës
;

172 }
	tHOST_NS_BSSGP_STATICS
;

175 
	sFR_CHANNEL_INFO_TAG


177 
WP_h™dÀ
 
	mrx_iw_h™dÀ
;

178 
WP_h™dÀ
 
	mtx_iw_h™dÀ
;

179 
WP_h™dÀ
 
	mrx_ho°_h™dÀ
;

180 
WP_h™dÀ
 
	mtx_ho°_h™dÀ
;

181 
WP_h™dÀ
 
	magg_‰_rx_ho°_Êow
;

182 
WP_h™dÀ
 
	magg_tx2E√t1ModifyFœg
;

183 
WP_h™dÀ
 
	magg_tx2E√t1
;

184 
WP_h™dÀ
 
	magg_‰_to_íë2
;

185 
WP_h™dÀ
 
	mphy_h™dÀ
;

186 
WP_h™dÀ
 
	mdevi˚_h™dÀ
;

187 
WP_h™dÀ
 
	mdevi˚_iw_h™dÀ
;

188 
WP_U32
 
	mvÂ‹t
;

189 
WP_U32
 
	mQosEn
;

190 
WP_U32
 
	mbe
;

191 
WP_U32
 
	mbc
;

192 
WP_U32
 
	mcú
;

193 
WP_U32
 
	mdlci
;

194 
WP_U32
 
	mˇrd
;

195 
WP_U32
 
	måunk
;

196 
WP_U32
 
	mgroup
;

197 
WP_U32
 
	m¶Ÿ_£À˘i⁄
;

198 
WP_h™dÀ
 
	magg_dow∆ök_tx2‰_devi˚
;

199 
WP_h™dÀ
 
	magg_íë2_to_‰
;

200 
WP_h™dÀ
 
	mÊow_íë2_to_‰
;

201 }
	tFR_CHANNEL_INFO
;

203 
	sNP_UL_FLOW_INFO_TAG


205 
WP_U32
 
	mU£dFœg
;

206 
WP_U32
 
	mvp‹t
;

207 
WP_U32
 
	mNRI
;

208 
WP_U32
 
	mp‹tSrc
;

209 }
	tNP_UL_FLOW_INFO
;

211 
	sNP_UPDATE_BVCI_FLOW_INFO_TAG


213 
WP_h™dÀ
 
	mÊowH™dÀ_bvci
;

214 
WP_h™dÀ
 
	magg_upd©eBVCI_h™dÀ
;

215 
WP_U32
 
	mU£dFœg
;

216 
WP_U32
 
	mvp‹t
;

217 
WP_U16
 
	mNS_BVCI
;

218 
WP_U16
 
	mNS_BVCI_ﬁd
;

219 }
	tNP_UPDATE_BVCI_FLOW_INFO
;

222 
	sNP_DL_FLOW_INFO_TAG


224 
WP_h™dÀ
 
	mÊowH™dÀ
;

225 
WP_h™dÀ
 
	magg_dl_dp‹tGΩ_h™dÀ
;

226 
WP_U32
 
	mU£dFœg
;

227 
STRU_SET_DOWNLINK_PATH_RULE
 
	mruÀ
;

228 }
	tNP_DL_FLOW_INFO
;

231 
	sNP_ARP_INFO_TAG


233 
WP_U32
 
	mIp
;

234 
WP_U8
 
	mMac
[6];

235 
WP_h™dÀ
 
	magg_ù‰ag
;

236 
WP_h™dÀ
 
	magg_tx2ëh1
;

237 
WP_h™dÀ
 
	m‰agGΩH™dÀ
;

238 
WP_h™dÀ
 
	mÊowH™dÀ
;

239 
WP_U8
 
	mMacOld
[6];

240 }
	tNP_ARP_INFO
;

242 
	sNP_TRUNK_INFO_TAG


244 
WP_U32
 
	måunkid
;

245 
WP_U32
 
	mGroupNum
;

246 
WP_U32
 
	mGroupid
[32];

247 }
	tNP_TRUNK_INFO
;

249 
	sNP_SYSTEM_INFO_TAG


251 
WP_h™dÀ
 
	msy°em_‰_h™dÀ
;

252 
WP_h™dÀ
 
	mBp‹t_íë1_h™dÀ
;

253 
WP_h™dÀ
 
	mBp‹t_íë2ho°_h™dÀ
;

254 
WP_h™dÀ
 
	magg_íë_deÁu…_ho°_h™dÀ
;

255 
WP_h™dÀ
 
	magg_íë2_to_íë1
;

256 
WP_h™dÀ
 
	magg_dl_ù_to_íë2_h™dÀ
;

258 
WP_U32
 
	m≈um⁄_ˇ±uª_íabÀ_Êag
;

259 
WP_h™dÀ
 
	mÊow_deÁu…_mfc
;

260 
WP_h™dÀ
 
	mù_de‰ag_group
;

261 
WP_h™dÀ
 
	msy°em_rouã_£nd2ëh1_h™dÀ
;

262 
WP_h™dÀ
 
	mRp‹t_íë1_h™lde
;

263 
WP_h™dÀ
 
	msy°em_bfd_h™dÀ
;

264 
WP_h™dÀ
 
	mBp‹t_bfd_h™dÀ
;

265 
WP_h™dÀ
 
	magg_bfd_tx_h™dÀ
;

266 
WP_h™dÀ
 
	mbfd_tx_èbÀ_h™dÀ
;

267 
WP_h™dÀ
 
	magg_bfd_rx_h™dÀ
;

268 
WP_h™dÀ
 
	mbfd_rx_èbÀ_h™dÀ
;

269 
WP_h™dÀ
 
	mÊow_bdf_h™dÀ
;

270 
WP_h™dÀ
 
	mBp‹t_mac_fûãr_h™dÀ
;

271 
WP_h™dÀ
 
	magg_mac_fûãr_h™dÀ
;

272 
WP_h™dÀ
 
	mÊow_mac_fûãr_h™dÀ
;

273 
WP_h™dÀ
 
	magg_mac_fûãr_‰om_ëh2_h™dÀ
;

274 
WP_h™dÀ
 
	mBp‹t_mac_fûãr_‰om_ëh2_h™dÀ
;

275 
WP_h™dÀ
 
	mCh™√l_IP_PrioRx0_ho°_h™dÀ
;

276 
WP_h™dÀ
 
	magg_íë_PrioRx0_ho°_h™dÀ
;

277 
WP_h™dÀ
 
	mCh™√l_FR_PrioRx0_ho°_h™dÀ
;

278 
WP_h™dÀ
 
	magg_FR_PrioRx0_ho°_h™dÀ
;

279 
WP_h™dÀ
 
	magg_ho°_¨p_agg
;

280 
WP_h™dÀ
 
	magg_a·î_de‰ag
;

281 }
	tNP_SYSTEM_INFO
;

283 
	sNP_ALARM_STATUS_TAG


285 
u32
 
	m°m1_°©us
;

286 
u32
 
	me1_°©us
;

287 }
	tNP_ALARM_STATUS
;

291 
	mdlci
:16;

292 
	mtsgroup
:6;

293 
	måunk
:7;

294 
	mˇrd
:3;

295 }
	t‰_addr_t
;

299 
	mNPU_INITALIZED
 = 0,

300 
	mNPU_UNINITALIZED


301 }
	tNP_Fœg
;

304 
	sSTRU_PVC_QOS_INFO_TAG


306 
u8
 
	madmöSèã
;

307 
u32
 
	mbe
;

308 
u32
 
	mbc
;

309 
u32
 
	mcú
;

310 }
	tSTRU_PVC_QOS_INFO
;

312 
	sSTRU_E1_GROUP_INFO_TAG


314 
u8
 
	m¸c_ty≥
;

316 
u16
 
	mmax_‰ame_size
;

317 
u8
 
	mgroupVÆid
;

318 
u32
 
	m¶Ÿ_£À˘i⁄
;

319 
STRU_PVC_QOS_INFO
 
	mPVCQos
[1025];

321 }
	tSTRU_E1_GROUP_INFO
;

323 
	sSTRU_E1_TRUNK_INFO_TAG


325 
u32
 
	mO±_Mode
;

326 
u8
 
	måunkVÆid
;

327 
u32
 
	m˛ock_mode
;

329 
STRU_E1_GROUP_INFO
 
	mgroup_öfo
[
SPP_MAX_GROUP_NUM
];

330 }
	tSTRU_E1_TRUNK_INFO
;

332 
	sSTRU_STM1_CFG_INFO_TAG


334 
u8
 
	m°m1VÆid
;

335 
STRU_E1_TRUNK_INFO
 
	måunk_öfo
[
SPP_MAX_TRUNK_NUM
];

337 
u32
 
	mE1T1ty≥
;

338 }
	tSTRU_STM1_CFG_INFO
;

340 
	sSTRU_STM1_RECFG_TAG


342 
u32
 
	måunkId
;

343 
STRU_E1_GROUP_INFO
 
	mgroup_öfo
[
SPP_MAX_GROUP_NUM
];

344 }
	tSTRU_STM1_RECFG
;

347 
	sSTRU_ROUTE_INFO_TAG


349 
u32
 
	mIpD°
;

350 
u32
 
	mmask
;

351 
u32
 
	mG©ewayIP
;

352 }
	tSTRU_ROUTE_INFO
;

354 
	sSTRU_SET_INITAIL_CONFIG_TAG


356 
u32
 
	mVœnFœg
;

357 
u32
 
	mVœnTag
;

358 
u32
 
	mO±î©eMode
;

359 
u8
 
	mifMAC§c
[6];

360 
u32
 
	mifI∑ddr
;

361 
u32
 
	mifIpNëMask
;

362 
u32
 
	m°m1_num
;

363 
u32
 
	mNRI_bôLí
;

364 
u32
 
	mP‹tPoﬁSize
;

365 
u32
 
	mPackëMemTŸÆByã
;

366 
u32
 
	mP¨amMemTŸÆByã
;

367 
u32
 
	mI¡îMemTŸÆByã
;

368 
STRU_STM1_CFG_INFO
 
	m°ru_°m1_cfg_öfo
[
SPP_MAX_STM1_PORT_NUM
];

369 
STRU_ROUTE_INFO
 
	mrouãInfo
[
SPP_MAX_ROUTE_NUM
];

370 }
	tSTRU_SET_INITAIL_CONFIG
;

374 
	mOPMODE_T1_D4
 = 0x0001,

375 
	mOPMODE_T1_ESF
 = 0x0002,

377 
	mOPMODE_E1_TRUE_CRC4
 = 0x0008,

378 
	mOPMODE_E1_FALSE
 = 0x0010,

379 }
	tE1T1O±Mode
;

381 
	sSTRU_STM1_SDH_ALARM_TAG


383 
u8
 
	mSDH_LOS
;

384 
u8
 
	mSDH_LOF
;

385 
u8
 
	mSDH_RS_TIM
;

386 
u8
 
	mSDH_MS_AIS
;

387 
u8
 
	mSDH_MS_RDI
;

388 
u8
 
	mSDH_OOF
;

389 
u8
 
	mSDH_MS_EXC
;

390 
u8
 
	mSDH_MS_DEG
;

391 
u8
 
	mSDH_AU_AIS
;

392 
u8
 
	mSDH_AU_LOP
;

393 
u8
 
	mSDH_HP_LOM
;

394 
u8
 
	mSDH_HP_TIM
;

395 
u8
 
	mSDH_HP_PLM
;

396 
u8
 
	mSDH_HP_UNEQ
;

397 
u8
 
	mSDH_HP_RDI
;

398 
u8
 
	mSDH_HP_EXC
;

399 
u8
 
	mSDH_HP_DEG
;

400 
u8
 
	mSDH_LP_TIM
;

401 
u8
 
	mSDH_LP_PLM
;

402 
u8
 
	mSDH_LP_UNEQ
;

403 
u8
 
	mSDH_LP_RDI
;

404 
u8
 
	mSDH_LP_EXC
;

405 
u8
 
	mSDH_LP_DEG
;

406 
u8
 
	mSDH_TU_AIS
;

407 
u8
 
	mSDH_TU_LOP
;

408 }
	tSTRU_STM1_SDH_ALARM
;

410 
	sSTRU_STM1_E1T1_ALARM_INFO_TAG


412 
u8
 
	mLOS
;

413 
u8
 
	mLOF
;

414 
u8
 
	mAIS
;

415 
u8
 
	mAIS_CI
;

416 
u8
 
	mRAI
;

417 
u8
 
	mRAI_CI
;

418 }
	tSTRU_STM1_E1T1_ALARM_INFO
;

420 
	sSTRU_STM1_SDH_ALARM_INFO_TAG


422 
STRU_STM1_SDH_ALARM
 
	mSDH_Æ¨m
[
SPP_MAX_STM1_PORT_NUM
];

423 
STRU_STM1_E1T1_ALARM_INFO
 
	mE1T1_Æ¨m
[
SPP_MAX_STM1_PORT_NUM
][
SPP_MAX_TRUNK_NUM
];

424 }
	tSTRU_STM1_ALARM_INFO
;

426 
	sDp‹tGΩaggInfo_TAG


428 
WP_h™dÀ
 
	mh™dÀ
;

429 
u16
 
	mP‹tSize
;

430 }
	tDp‹tGΩaggInfo
;

432 
g_≈öôülFœg
;

433 
g_≈n⁄poﬁFœg
;

434 
g_≈N£AggFœg
;

436 
WP_S32
 
≈_öô
();

437 
≈_di•œy_u„_sy°em
();

438 
≈_di•œy_u„_phy
(
WP_U32
 
phyIndex
);

439 
≈_di•œy_u„_löe
(
WP_U32
 
löeIndex
);

440 
≈_ëh_ho°_£nd
(
WP_S32
 
D©aLígth
, 
WP_CHAR
* 
pTxD©a
);

441 
≈_ëh_ho°_ª˚ive
(
WP_h™dÀ
 
rx_ho°_h™dÀ
,
WP_S32
 *
D©aLígth
, 
WP_CHAR
* 
pTxD©a
);

442 
≈u_£nd_‰_∑ckë
(
WP_U8
 *
p
, 
WP_U32
 
Àn
,WP_U32 
vÂ‹t
);

443 
≈_‰_ho°_£nd
(
WP_h™dÀ
 
tx_ho°_h™dÀ
,
WP_S32
 
D©aLígth
, 
WP_CHAR
* 
pTxD©a
,
WP_U32
 
dlci
,WP_U32 
p‹t
);

444 
≈_‰_ho°_ª˚ive
(
WP_h™dÀ
 
rx_ho°_h™dÀ
,
WP_S32
 *
D©aLígth
, 
WP_CHAR
* 
pTxD©a
);

445 
WP_U32
 
≈_‰addr_∑ck
(WP_U32 
ˇrd
, WP_U32 
åunk
, WP_U32 
tsgroup
, WP_U32 
dlci
);

446 
≈_‰addr_u≈ack
(
WP_U32
 
‰p‹t
, WP_U32* 
ˇrd
, WP_U32* 
åunk
, WP_U32* 
tsgroup
, WP_U32* 
dlci
);

447 
≈_¸ót_‰_vp‹t
(
WP_U32
 
vÂ‹t
);

448 
≈_¸ót_‰_ho°_ch™√l
(
FR_CHANNEL_INFO
 * 
ch_öfo
);

449 
≈_˛o£_‰_vp‹t
(
WP_U32
 
vÂ‹t
);

450 
≈_dißbÀ_‰_ho°_ch™√l
(
FR_CHANNEL_INFO
 * 
ch_öfo
);

451 
≈_dñëe_‰_ho°_ch™√l
(
FR_CHANNEL_INFO
 * 
ch_öfo
);

453 
≈_íabÀ_‰_ho°_ch™√l
(
FR_CHANNEL_INFO
 * 
ch_öfo
);

454 
≈_‰IwSy°emCª©e
(
NP_SYSTEM_INFO
 *
≈_sy°em
);

455 
≈_¸ót_‰_iw_ch™√l
(
FR_CHANNEL_INFO
 * 
ch_öfo
);

456 
NP_SYSTEM_INFO
 *
≈_gë_sy°em_öfo
();

457 
≈_di•œy_Êow_agg
(
WP_U32
 
vp‹t
);

458 
≈_di•œy_iw_p‹t_°©
();

459 
≈_íabÀ_‰_iw_ch™√l
(
FR_CHANNEL_INFO
 * 
ch_öfo
);

460 
≈_dißbÀ_‰_iw_ch™√l
(
FR_CHANNEL_INFO
 * 
ch_öfo
);

461 
≈_dñëe_‰_iw_ch™√l
(
FR_CHANNEL_INFO
 * 
ch_öfo
);

462 
≈_ul_rouã_èbÀ_add
(
STRU_SET_UPLINK_PATH_RULE
 *
u∂ök_ruÀ
);

463 
≈_ul_rouã_èbÀ_dñëe
(
WP_U32
 
vÂ‹t
,WP_U32 
NRIVÆue
);

464 
≈_dl_rouã_èbÀ_add
(
STRU_SET_DOWNLINK_PATH_RULE
 * 
ruÀ
);

465 
≈_dl_rouã_èbÀ_dñëe
(
WP_U16
 
Dp‹tSèπVÆue
,WP_U16 
bvc
,
WP_U32
 
O±Mode
);

466 
≈_upd©eBVCI_Êow_dñëe
(
WP_U32
 
vÂ‹t
,
WP_U16
 
NS_BVCI_ﬁd
,WP_U32 
O±Mode
);

467 
≈_upd©eBVCI_Êow_add
(
STRU_SET_UPDATE_BVCI_PATH_RULE
 *
ruÀ
);

468 
≈_pﬁl_ªp‹t_Æ¨m
();

469 
≈_ul_lök_èbÀ_£t
(
STRU_SET_UPLINK_PATH_LINK_TABLE
 *
lök_èbÀ
);

470 
≈_ul_lök_èbÀ_dñëe
(
WP_U32
 
p‹t§c
);

471 
≈_dl_lök_èbÀ_£t
(
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
 * 
lök_èbÀ
);

472 
≈u_dl_lök_èbÀ_dñëe
(
WP_U32
 
vf‹t
);

473 
Np_ShowMem‹yAvaûabÀ
(
STRU_MEMORY_STATICS
 *
gë_mem‹y_°©ics
);

474 
Np_Gë_Utûiz©i⁄
(
STRU_CPU_STATICS
 *
gë_˝u_°©ics
);

475 
≈_ùde‰ag_Êow_add
();

476 
IwHo°TxCh™√l
(
WP_h™dÀ
 
Êow_agg
);

477 
¸ót_IwHo°TxCh™√l
(
WP_h™dÀ
 
Êow_agg
);

478 
ãrmö©e_⁄_îr‹
(
WP_h™dÀ
 
h™dÀ
, 
WP_CHAR
 *
s
);

479 
≈_dl_ªÀa£_vp‹t_ªsour˚
(
u32
 
vp‹t
);

480 
≈_ul_ªÀa£_vp‹t_ªsour˚
(
u32
 
vp‹t
);

481 
≈_gë_ns_bssgp_°©ics
(
u32
 
vp‹t
,
STRU_GET_NS_BSSGP_STATICS
 * 
°©ics
);

482 
≈_˛ór_ns_bssgp_°©ics
(
u32
 
vp‹t
);

483 
≈_ho°_£t_ns_bssgp_°©ics
(
u8
 * 
buf
,
u32
 
Àn
,
HOST_NS_BSSGP_STATICS
 * 
°©ics
);

484 
≈_dl_íë2_to_‰_ruÀ_add
(
FR_CHANNEL_INFO
 * 
ch_öfo
);

485 
≈_dl_ù_f‹w¨d_to_íë2_¸óã
();

486 
≈_ul_‰_to_íë2_¸óã
(
FR_CHANNEL_INFO
 * 
ch_öfo
);

487 
≈_íë2_to_íë1_ruÀ_add
();

488 
≈_ul_ªc⁄fig_vp‹t_vœn
(
u32
 
vp‹t
);

489 
≈_dl_ªc⁄fig_vp‹t_vœn
(
u32
 
vp‹t
);

490 
di•œyU„Evíts
();

491 
èp_öãrÁ˚_ªc⁄fig
();

495 
WP_°©us
 
WP_U£rDefHashTabÀCª©e
(
WP_U32
 
wpid
,

496 
WP_U32
 
n_íåõs
);

497 
WP_°©us
 
WP_DlLookupE¡ryIn£π
(
WP_h™dÀ
 
devi˚
,

498 
WP_h™dÀ
 
ñök
,

499 
WP_U16
 
key1
,

500 
wp_dl_π
 *
dl_π
);

501 
WP_°©us
 
WP_VP‹tE¡ryIn£π
(
WP_h™dÀ
 
devi˚
,

502 
WP_U16
 
key
,

503 
wp_vp‹t_èbÀ
 *
vp‹t_èbÀ
);

504 
WP_°©us
 
WP_DlLookupE¡ryRemove
(
WP_h™dÀ
 
devi˚
,

505 
WP_h™dÀ
 
ñök
,

506 
WP_U16
 
key1
);

507 
WP_°©us
 
WPI_U£rDefHashE¡ryRemove
 (
WP_h™dÀ
 
dev_h™dÀ
,

508 
WP_U32
 
key1
,
WP_U16
 
key2
,WP_U16 
d©a
);

509 
WP_°©us
 
WPI_U£rDefHashE¡ryIn£π
 (
WP_h™dÀ
 
dev_h™dÀ
,

510 
WP_U32
 
key1
,
WP_U16
 
key2
,WP_U16 
d©a
);

511 
WP_°©us
 
WP_LookupE¡ryIn£π
(
WP_h™dÀ
 
devi˚
,

512 
WP_h™dÀ
 
ñök
,

513 
WP_h™dÀ
 
Êow_agg_h
[],

514 
WP_U32
 
ƒi
,

515 
WP_U32
 
p‹t_num
);

516 
WP_°©us
 
WPI_U£rDefHashE¡ryIn£π
 (
WP_h™dÀ
 
dev_h™dÀ
,

517 
WP_U32
 
key1
,
WP_U16
 
key2
,WP_U16 
d©a
);

518 
WP_°©us
 
WP_LookupE¡ryRemove
(
WP_h™dÀ
 
devi˚
,

519 
WP_h™dÀ
 
ñök
,

520 
WP_U32
 
ƒi
);

522 
WP_°©us
 
WP_IPEndPoötE¡ryIn£π
(
WP_h™dÀ
 
devi˚
,

523 
WP_U32
 
key
,

524 
wp_loˇl_π
 *
loˇl_π
);

526 
WP_°©us
 
WTUFE_Rec⁄fig_Stm1
(
WP_U32
 
°m1id
, WP_U32 
löe_ödex_ba£
,
STRU_STM1_RECFG
 *
ªc⁄fig_öfo
,
STRU_SET_INITAIL_CONFIG
 *
p2
);

527 
WP_°©us
 
WTUFE_Rec⁄fig_Stm1_öLo›
(
WP_U32
 
°m1id
, WP_U32 
åunkid
, WP_U32 
groupid
, WP_U32 
löe_ödex_ba£
,
STRU_STM1_RECFG
 *
ªc⁄fig_öfo
,
STRU_SET_INITAIL_CONFIG
 *
p2
);

528 
WP_°©us
 
WTUFE_Rec⁄fig_Stm1_AŒ
(
STRU_SET_INITAIL_CONFIG
 *
p1
, STRU_SET_INITAIL_CONFIG *
p2
);

529 
WUFE_°©us
 
WUFE_PhyDi•œy
(
WUFE_h™dÀ
 
u„_phy_h™dÀ
);

530 
WUFE_°©us
 
WUFE_LöeDi•œy
(
WUFE_h™dÀ
 
u„_löe_h™dÀ
);

531 
WUFE_°©us
 
WUFE_Sy°emDi•œy
(
WP_U32
 
wu„_id
);

532 
WP_°©us
 
WP_FlowSèti°icsGë
(
WP_h™dÀ
 
devi˚
,

533 
WP_U32
 
ñök
,

534 
wp_ns_bssgp_°©is
 * 
°©is_±r
);

535 
WP_°©us
 
WP_FlowSèti°icsCÀ¨
(
WP_h™dÀ
 
devi˚
,

536 
WP_U32
 
ñök
);

537 
WP_°©us
 
WP_Pri‹ôyMsgFlowSë
(
WP_h™dÀ
 
devi˚
,

538 
WP_U16
 
ty≥
,

539 
wp_¥i‹ôy_msg
 *
ÊowèbÀ
);

540 
WP_°©us
 
WP_WDDI_ResWddiGë
(
WP_U32
 
fiwtIndex
,
wpi_ªs_fiwt
 *
ªs_fiwt
);

541 
WT_Np_U„LöeC⁄figuªAndCª©eE1
(
WP_U32
 
löe_ödex
, 
WP_U16
 
‰amög_mode
, 
WP_U8
 
ˇs_íabÀ
,WP_U32 
löe_lb_mode
,WP_U32 
˛ock_mode
);

542 
WT_Np_U„LöeC⁄figuªAndCª©eT1
(
WP_U32
 
löe_ödex
, 
WP_U16
 
‰amög_mode
, 
WP_U8
 
ˇs_íabÀ
,WP_U32 
löe_lb_mode
,WP_U32 
˛ock_mode
);

543 
WT_Np_U„LöeSdhC⁄fig
(
WT_u„_löe_sdh_∑øms
 *
löe_sdh_∑øms
,
WUFE_löe_sdh
 *
löe_cfg
);

544 
WP_S32
 
WTI_Np_FÀxmuxClõ¡P‹tIndexGë
(
WP_U32
 
u„_löe_ödex
, 
WUFE_löe_å™sf_ty≥
 
å™s„r_ty≥
);

545 
WP_S32
 
WTI_Np_FÀxmuxLöeP‹tIndexGë
(
WP_U32
 
u„_löe_ödex
, WP_U32 
Êexmux_id
);

546 
WT_Np_U„LöeCª©e
(
WP_U32
 
löe_ödex
,
WUFE_löe_sdh
 *
löe_cfg
,
WT_u„_löe_sdh_∑øms
 *
löe_sdh_∑øms
,WP_U32 
löe_lb_mode
);

547 
WTUFE_c⁄fig_phys
(
WP_U32
 
löe_ödex
,WP_U32 
groupId
,WP_U32 
¶Ÿ_£À˘i⁄
,WP_U32 
löe_ödex_ba£
 );

549 
STRU_STM1_ALARM_INFO
* 
≈_gë_u„4_¨Æm_öfo
();

550 
≈_di•œy_u„4_shd_°©us
();

551 
≈_£t_u„4_¨Æm_öfo
(
WP_U32
 
LöeP‹t
, WP_U32 
AœrmC©eg‹y
, WP_U32 
IsAs£πed
);

552 
≈_£t_u„4_E1T1_¨Æm_öfo
(
WPX_UFE_FRAMER_COMMON_SDH_SONET_ENDPOINT_TYPE
 * 
pLöeEndpoöt
, 
WP_U32
 
AœrmC©eg‹y
, WP_U32 
IsAs£πed
);

553 
≈_£t_u„4_E1T1_¨Æm_öfo_‰omClõ¡P‹t
–
WP_U32
 
Clõ¡P‹t
, WP_U32 
AœrmC©eg‹y
, WP_U32 
IsAs£πed
);

555 
≈_check_u„4_°m1_°©us
(
WP_U32
 
LöeP‹t
);

556 
≈_c⁄fig_Æl_phys
();

557 
≈_dl_ªÀa£_FMC_ªsour˚
(
u16
 
Dp‹tSèπVÆue
);

558 
≈u_upi_°©_˛ór
(
WP_U32
 
åunkid
,WP_U32 
groupid
);

559 
WP_°©us
 
upi_°©_gë_by_group
(
WP_U32
 
åunkid
, WP_U32 
groupid
,
STRU_UPI_STATICS
 *
p
);

560 
≈u_‰_ch™√l_°©_˛ór
(
WP_h™dÀ
 
ch™√lH™dÀ
 ,
Rx‹Tx
);

561 
≈_di•œy_de‰ag_öfo
(
WP_h™dÀ
 
h™dÀ
);

562 
≈_di•œy_‰ag_öfo
(
WP_h™dÀ
 
group_h™dÀ
);

564 
≈_upd©e_mac_ö_rouã_sy°em
(
NP_ARP_INFO
 *
¨pInfo
 );

565 
≈_£nd2ëh_rouã_Êow_add
(
NP_ARP_INFO
 * 
¨pInfo
);

566 
≈_£nd2ëh_rouã_sy°em_¸óã
();

567 
WPE_PrötIWP‹tSèts
(
WP_rouã_p‹t_°©s
* 
iwp‹t_°©s
);

568 
WP_U32
 
iw_rouã_p‹t_°©
(
WP_h™dÀ
 
iw_p‹t
);

569 
WPE_PrötIWP‹tSèts
(
WP_rouã_p‹t_°©s
* 
iwp‹t_°©s
);

570 
≈_ªc⁄fig_vœn_ö_rouãSy°em
();

571 
≈_di•Æy_sy°em_Êow_agg
();

572 
≈_Devi˚Dñëe
(
WP_U32
 
åunkid
,WP_U32 
groupid
);

573 
WP_°©us
 
≈_U„_Phy_Dñëe
(
WP_U32
 
åunkid
,WP_U32 
groupid
);

574 
WP_°©us
 
≈_Ch™√l_is_N⁄e
(
WP_U32
 
°m1Id
, WP_U32 
åunkid
, WP_U32 
groupid
);

576 
≈u_BfdModuÀInô
();

577 
≈u_BfdInô
();

578 
WPE_BfdTxSessi⁄Buûd
(
NP_SYSTEM_INFO
 *
the_sy°em
);

579 
WPE_BfdRxSessi⁄Buûd
(
NP_SYSTEM_INFO
 *
the_sy°em
);

580 
≈_BFD_ÊowAdd
(
NP_SYSTEM_INFO
* 
the_sy°em
);

581 
≈_d°_mac_fûãr_ÊowAdd
(
NP_SYSTEM_INFO
* 
the_sy°em
);

583 
≈_c⁄åﬁ_öãºu±
(
u8
 
Êag
,u8 
Irqnum
);

584 
h™dÀ_rx_‰_∑ckë
(*
P¨am
);

585 
h™dÀ_rx_ëh_∑ckë
(*
P¨am
);

586 
≈_¸óã_¨p_hq
();

587 
≈u_u„_ªc⁄fig_˛ock_mode
–
WP_U32
 
löe_ödex
 ,WP_U32 
å™s_ty≥
 ,WP_U32 
˛ock_mode
);

	@np_stats.c

33 
	~"≈_comm⁄.h
"

34 
	~"•p_wddi_£rvî.h
"

35 
ãrmö©e_⁄_îr‹
(
WP_h™dÀ
 
h™dÀ
, 
WP_CHAR
 *
s
);

36 
WP_h™dÀ
 
gbedev1
, 
gbedev2
;

37 
WUFE_h™dÀ
 
u„_devi˚_h™dÀ
[
N_UFE_MAX_LINES_T1
][32];

39 
	gSètFõld


41 
WP_U64
 
	gfõld
;

43 
WP_U32
 
	glow
;

44 
WP_U32
 
	ghigh
;

45 } 
	g∑π
;

46 } 
	tWPE_SètFõld
;

49 
WP_°©us
 
	$tx‰_°©_gë
(
WP_U32
 
Ch™√ o
, *
p
) {

50 
WP_°©us
 
°©us
;

51 
WP_U32
 
size
;

52 
WP_°©s_‰_tx
 
‰_ho°
,
‰_iw
;

53 
STRU_VPORT_INFO
 *
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
Ch™√ o
);

54 if(
Vp‹tInfo
 =
NULL
)

56 
	`WDDI_WARNING
(" c™'àgë f∏vp‹àöfÿvp‹à%d \¿",
Ch™√ o
);

59 if(
Vp‹tInfo
->
U£dFœg
 =
UNUSED
)

61 
	`WDDI_WARNING
(" c™'àgë f∏vp‹àöfÿ,‰ vp‹à˛o£d ! vp‹à%d \¿",
Ch™√ o
);

64 
FR_CHANNEL_INFO
 *
ch_öfo
 = &
Vp‹tInfo
->ch_info;

65 
	`mem£t
 (
p
, 0, (
WP_°©s_‰_tx
));

66 
	`mem£t
 (&
‰_ho°
, 0, (
WP_°©s_‰_tx
));

67 
	`mem£t
 (&
‰_iw
, 0, (
WP_°©s_‰_tx
));

68 
°©us
 = 
	`WP_Ch™√lSèti°ics
(
ch_öfo
->
tx_iw_h™dÀ
, (*)&
‰_ho°
);

69 i‡(
°©us
)

71 
	`F¥ötf
("Error ReadingÅxfr Stat\n");

72  
°©us
;

75 
°©us
 = 
	`WP_Ch™√lSèti°ics
(
ch_öfo
->
tx_ho°_h™dÀ
, (*)&
‰_iw
);

76 i‡(
°©us
)

78 
	`F¥ötf
("Error ReadingÅxfr Stat\n");

79  
°©us
;

83 
WP_U32
 
i
;

84 
i
 = 0;ò< (
WP_°©s_‰_tx
)/(
WP_U64
);i++)

86 *((
WP_U64
 *)
p
 + 
i
Ë*((WP_U64 *)&
‰_ho°
 + iË+ *((WP_U64 *)&
‰_iw
 + i);

88  
WP_OK
;

89 
	}
}

91 
WP_°©us
 
	$rx‰_°©_gë
(
WP_U32
 
Ch™√ o
, *
p
) {

92 
WP_°©us
 
°©us
;

93 
WP_U32
 
size
;

94 
STRU_VPORT_INFO
 *
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
Ch™√ o
);

95 if(
Vp‹tInfo
 =
NULL
)

97 
	`WDDI_WARNING
(" c™'àgë f∏vp‹àöfÿvp‹à%d \¿",
Ch™√ o
);

100 if(
Vp‹tInfo
->
U£dFœg
 =
UNUSED
)

102 
	`WDDI_WARNING
(" c™'àgë f∏vp‹àöfÿ,vp‹àunu£d ! vp‹à%d \¿",
Ch™√ o
);

105 
FR_CHANNEL_INFO
 *
ch_öfo
 = &
Vp‹tInfo
->ch_info;

107 
	`mem£t
 (
p
, 0, (
WP_°©s_‰_rx
));

108 
°©us
 = 
	`WP_Ch™√lSèti°ics
(
ch_öfo
->
rx_iw_h™dÀ
, (
WP_°©s_‰_rx
 *)
p
);

109 i‡(
°©us
)

111 
	`F¥ötf
("Error ReadingÑxfr Stat\n");

112  
°©us
;

114  
WP_OK
;

115 
	}
}

117 
°ru˘_pos_‰_add
(
WP_°©s_pos_‰
* 
p1
, WP_°©s_pos_‰* 
p2
)

119 
	gp1
->
	grx_‰ames
 = 
p1
->
rx_‰ames
 + 
p2
->rx_frames;

120 
	gp1
->
	grx_byãs
 = 
p1
->
rx_byãs
 + 
p2
->rx_bytes;

121 
	gp1
->
	grx_‰ames_de_£t
 = 
p1
->
rx_‰ames_de_£t
 + 
p2
->rx_frames_de_set;

122 
	gp1
->
	grx_byãs_de_£t
 = 
p1
->
rx_byãs_de_£t
 + 
p2
->rx_bytes_de_set;

123 
	gp1
->
	grx_‰ames_„˙_£t
 = 
p1
->
rx_‰ames_„˙_£t
 + 
p2
->rx_frames_fecn_set;

124 
	gp1
->
	grx_‰ames_be˙_£t
 = 
p1
->
rx_‰ames_be˙_£t
 + 
p2
->rx_frames_becn_set;

125 
	gp1
->
	grx_disˇrded_îr_¸c
 = 
p1
->
rx_disˇrded_îr_¸c
 + 
p2
->rx_discarded_err_crc;

126 
	gp1
->
	grx_disˇrded_îr_Æignmít
 = 
p1
->
rx_disˇrded_îr_Æignmít
 + 
p2
->rx_discarded_err_alignment;

127 
	gp1
->
	grx_disˇrded_Àngth_viﬁ©i⁄
 = 
p1
->
rx_disˇrded_Àngth_viﬁ©i⁄
 + 
p2
->rx_discarded_length_violation;

128 
	gp1
->
	grx_disˇrded_ûÀgÆ_hódî
 = 
p1
->
rx_disˇrded_ûÀgÆ_hódî
 + 
p2
->rx_discarded_illegal_header;

129 
	gp1
->
	grx_disˇrded_ab‹t
 = 
p1
->
rx_disˇrded_ab‹t
 + 
p2
->rx_discarded_abort;

130 
	gp1
->
	grx_disˇrded_unsuµ‹ãd_dlci
 = 
p1
->
rx_disˇrded_unsuµ‹ãd_dlci
 + 
p2
->rx_discarded_unsupported_dlci;

131 
	gp1
->
	grx_œ°_unsuµ‹ãd_dlci
 = 
p1
->
rx_œ°_unsuµ‹ãd_dlci
 + 
p2
->rx_last_unsupported_dlci;

132 
	gp1
->
	grx_disˇrded_fbp_em±y
 = 
p1
->
rx_disˇrded_fbp_em±y
 + 
p2
->rx_discarded_fbp_empty;

133 
	gp1
->
	grx_disˇrded_ho°q_fuŒ
 = 
p1
->
rx_disˇrded_ho°q_fuŒ
 + 
p2
->rx_discarded_hostq_full;

134 
	gp1
->
	grx_disˇrded_îr_∑rôy
 = 
p1
->
rx_disˇrded_îr_∑rôy
 + 
p2
->rx_discarded_err_parity;

135 
	gp1
->
	grx_disˇrded_îr_s›_e›
 = 
p1
->
rx_disˇrded_îr_s›_e›
 + 
p2
->rx_discarded_err_sop_eop;

136 
	gp1
->
	grx_tŸÆ_îr_byãs
 = 
p1
->
rx_tŸÆ_îr_byãs
 + 
p2
->rx_total_err_bytes;

137 
	gp1
->
	gtx_‰ames
 = 
p1
->
tx_‰ames
 + 
p2
->tx_frames;

138 
	gp1
->
	gtx_byãs
 = 
p1
->
tx_byãs
 + 
p2
->tx_bytes;

139 
	gp1
->
	gtx_‰ames_de_£t
 = 
p1
->
tx_‰ames_de_£t
 + 
p2
->tx_frames_de_set;

140 
	gp1
->
	gtx_byãs_de_£t
 = 
p1
->
tx_byãs_de_£t
 + 
p2
->tx_bytes_de_set;

141 
	gp1
->
	gtx_‰ames_„˙_£t
 = 
p1
->
tx_‰ames_„˙_£t
 + 
p2
->tx_frames_fecn_set;

142 
	gp1
->
	gtx_‰ames_be˙_£t
 = 
p1
->
tx_‰ames_be˙_£t
 + 
p2
->tx_frames_becn_set;

143 
	gp1
->
	gtx_undîrun
 = 
p1
->
tx_undîrun
 + 
p2
->tx_underrun;

144 
	gp1
->
	gtx_ab‹ãd_‰ames
 = 
p1
->
tx_ab‹ãd_‰ames
 + 
p2
->tx_aborted_frames;

145 
	gp1
->
	g£rül_dps_if_°©s
.
	gtx_‰ames
 = 
p1
->
£rül_dps_if_°©s
.
tx_‰ames
 + 
p2
->serial_dps_if_stats.tx_frames;

146 
	gp1
->
	g£rül_dps_if_°©s
.
	gtx_byãs
 = 
p1
->
£rül_dps_if_°©s
.
tx_byãs
 + 
p2
->serial_dps_if_stats.tx_bytes;

147 
	gp1
->
	g£rül_dps_if_°©s
.
	grx_‰ames
 = 
p1
->
£rül_dps_if_°©s
.
rx_‰ames
 + 
p2
->serial_dps_if_stats.rx_frames;

148 
	gp1
->
	g£rül_dps_if_°©s
.
	grx_byãs
 = 
p1
->
£rül_dps_if_°©s
.
rx_byãs
 + 
p2
->serial_dps_if_stats.rx_bytes;

149 
	gp1
->
	g£rül_dps_if_°©s
.
	grx_dr›≥d_‰ames
 = 
p1
->
£rül_dps_if_°©s
.
rx_dr›≥d_‰ames
 + 
p2
->serial_dps_if_stats.rx_dropped_frames;

150 
	gp1
->
	g£rül_dps_if_°©s
.
	grx_p˚_díõd_‰ames
 = 
p1
->
£rül_dps_if_°©s
.
rx_p˚_díõd_‰ames
 + 
p2
->serial_dps_if_stats.rx_pce_denied_frames;

153 
°ru˘_upi_°©ics_add
(
STRU_UPI_STATICS
* 
p1
, STRU_UPI_STATICS* 
p2
)

155 
	gp1
->
	grx_‰ames
 = 
p1
->
rx_‰ames
 + 
p2
->rx_frames;

156 
	gp1
->
	grx_byãs
 = 
p1
->
rx_byãs
 + 
p2
->rx_bytes;

157 
	gp1
->
	grx_‰ames_de_£t
 = 
p1
->
rx_‰ames_de_£t
 + 
p2
->rx_frames_de_set;

158 
	gp1
->
	grx_byãs_de_£t
 = 
p1
->
rx_byãs_de_£t
 + 
p2
->rx_bytes_de_set;

159 
	gp1
->
	grx_‰ames_„˙_£t
 = 
p1
->
rx_‰ames_„˙_£t
 + 
p2
->rx_frames_fecn_set;

160 
	gp1
->
	grx_‰ames_be˙_£t
 = 
p1
->
rx_‰ames_be˙_£t
 + 
p2
->rx_frames_becn_set;

161 
	gp1
->
	grx_disˇrded_îr_¸c
 = 
p1
->
rx_disˇrded_îr_¸c
 + 
p2
->rx_discarded_err_crc;

162 
	gp1
->
	grx_disˇrded_îr_Æignmít
 = 
p1
->
rx_disˇrded_îr_Æignmít
 + 
p2
->rx_discarded_err_alignment;

163 
	gp1
->
	grx_disˇrded_Àngth_viﬁ©i⁄
 = 
p1
->
rx_disˇrded_Àngth_viﬁ©i⁄
 + 
p2
->rx_discarded_length_violation;

164 
	gp1
->
	grx_disˇrded_ûÀgÆ_hódî
 = 
p1
->
rx_disˇrded_ûÀgÆ_hódî
 + 
p2
->rx_discarded_illegal_header;

165 
	gp1
->
	grx_disˇrded_ab‹t
 = 
p1
->
rx_disˇrded_ab‹t
 + 
p2
->rx_discarded_abort;

166 
	gp1
->
	grx_disˇrded_unsuµ‹ãd_dlci
 = 
p1
->
rx_disˇrded_unsuµ‹ãd_dlci
 + 
p2
->rx_discarded_unsupported_dlci;

167 
	gp1
->
	grx_œ°_unsuµ‹ãd_dlci
 = 
p1
->
rx_œ°_unsuµ‹ãd_dlci
 + 
p2
->rx_last_unsupported_dlci;

168 
	gp1
->
	grx_disˇrded_fbp_em±y
 = 
p1
->
rx_disˇrded_fbp_em±y
 + 
p2
->rx_discarded_fbp_empty;

169 
	gp1
->
	grx_disˇrded_ho°q_fuŒ
 = 
p1
->
rx_disˇrded_ho°q_fuŒ
 + 
p2
->rx_discarded_hostq_full;

170 
	gp1
->
	grx_disˇrded_îr_∑rôy
 = 
p1
->
rx_disˇrded_îr_∑rôy
 + 
p2
->rx_discarded_err_parity;

171 
	gp1
->
	grx_disˇrded_îr_s›_e›
 = 
p1
->
rx_disˇrded_îr_s›_e›
 + 
p2
->rx_discarded_err_sop_eop;

172 
	gp1
->
	grx_tŸÆ_îr_byãs
 = 
p1
->
rx_tŸÆ_îr_byãs
 + 
p2
->rx_total_err_bytes;

173 
	gp1
->
	gtx_‰ames
 = 
p1
->
tx_‰ames
 + 
p2
->tx_frames;

174 
	gp1
->
	gtx_byãs
 = 
p1
->
tx_byãs
 + 
p2
->tx_bytes;

175 
	gp1
->
	gtx_‰ames_de_£t
 = 
p1
->
tx_‰ames_de_£t
 + 
p2
->tx_frames_de_set;

176 
	gp1
->
	gtx_byãs_de_£t
 = 
p1
->
tx_byãs_de_£t
 + 
p2
->tx_bytes_de_set;

177 
	gp1
->
	gtx_‰ames_„˙_£t
 = 
p1
->
tx_‰ames_„˙_£t
 + 
p2
->tx_frames_fecn_set;

178 
	gp1
->
	gtx_‰ames_be˙_£t
 = 
p1
->
tx_‰ames_be˙_£t
 + 
p2
->tx_frames_becn_set;

179 
	gp1
->
	gtx_undîrun
 = 
p1
->
tx_undîrun
 + 
p2
->tx_underrun;

180 
	gp1
->
	gtx_ab‹ãd_‰ames
 = 
p1
->
tx_ab‹ãd_‰ames
 + 
p2
->tx_aborted_frames;

181 
	gp1
->
	g£rül_dps_if_tx_‰ames
 = 
p1
->
£rül_dps_if_tx_‰ames
 + 
p2
->serial_dps_if_tx_frames;

182 
	gp1
->
	g£rül_dps_if_tx_byãs
 = 
p1
->
£rül_dps_if_tx_byãs
 + 
p2
->serial_dps_if_tx_bytes;

183 
	gp1
->
	g£rül_dps_if_rx_‰ames
 = 
p1
->
£rül_dps_if_rx_‰ames
 + 
p2
->serial_dps_if_rx_frames;

184 
	gp1
->
	g£rül_dps_if_rx_byãs
 = 
p1
->
£rül_dps_if_rx_byãs
 + 
p2
->serial_dps_if_rx_bytes;

185 
	gp1
->
	g£rül_dps_if_rx_dr›≥d_‰ames
 = 
p1
->
£rül_dps_if_rx_dr›≥d_‰ames
 + 
p2
->serial_dps_if_rx_dropped_frames;

186 
	gp1
->
	g£rül_dps_if_rx_p˚_díõd_‰ames
 = 
p1
->
£rül_dps_if_rx_p˚_díõd_‰ames
 + 
p2
->serial_dps_if_rx_pce_denied_frames;

189 
WP_°©us
 
upi_°©_gë_by_åunk
(
WP_U32
 
åunkid
, 
STRU_UPI_STATICS
 *
p
)

191 
WP_°©us
 
	g°©us
;

192 
WP_h™dÀ
 
	gdevi˚_h™dÀ
;

193 
WP_U32
 
	gGroupid
;

194 
WP_U16
 
	gi
;

195 
NP_TRUNK_INFO
 * 
	gPåunkInfo
 = 
≈u_gë_åunk_öfo
(
åunkid
);

196 
WP_°©s_pos_‰
 
	gpos_‰
,
	gpos_‰_ﬁd
;

197 if(
	gPåunkInfo
 =
NULL
)

199 
WDDI_WARNING
(" c™'àgëÅrunk infÿåunkid = %d \¿",
åunkid
);

202 if(
	gPåunkInfo
->
	gGroupNum
 > 31)

204 
F¥ötf
("!!!!!!\n");

207 
mem£t
 (&
pos_‰
, 0, (
WP_°©s_pos_‰
));

208 
	gi
 = 0; i < (
	gPåunkInfo
->
	gGroupNum
); i++)

210 
	gGroupid
 = 
PåunkInfo
->
Groupid
[
i
];

211 if(
	gGroupid
 >31)

213 
F¥ötf
("Groupid %d invÆid \n",
Groupid
);

216 
	gdevi˚_h™dÀ
 = 
u„_devi˚_h™dÀ
[
åunkid
][
Groupid
];

217 
mem£t
 (&
pos_‰_ﬁd
, 0, (
WP_°©s_pos_‰
));

218 if(
	gdevi˚_h™dÀ
 == 0)

222 
	g°©us
 = 
WP_Devi˚Sèti°ics
(
devi˚_h™dÀ
,(*)&
pos_‰_ﬁd
);

223 i‡(
	g°©us
)

225 
F¥ötf
("Error Reading UPI Stat\n");

226  
	g°©us
;

228 
°ru˘_pos_‰_add
(&
pos_‰
, &
pos_‰_ﬁd
);

230 
mem˝y
((*)
p
,(*)&
pos_‰
,(
STRU_UPI_STATICS
));

231  
	gWP_OK
;

234 
WP_°©us
 
upi_°©_gë_by_group
(
WP_U32
 
åunkid
, WP_U32 
groupid
,
STRU_UPI_STATICS
 *
p
)

236 
WP_°©us
 
	g°©us
;

237 
WP_h™dÀ
 
	gdevi˚_h™dÀ
;

238 
WP_°©s_pos_‰
 
	gpos_‰
;

239 
mem£t
 (&
pos_‰
, 0, (
WP_°©s_pos_‰
));

241 
	gdevi˚_h™dÀ
 = 
u„_devi˚_h™dÀ
[
åunkid
][
groupid
];

242 
mem£t
 (
p
, 0, (
STRU_UPI_STATICS
));

243 if(
	gdevi˚_h™dÀ
 == 0)

245 
F¥ötf
("Error Reading UPI Stat deviceÇotÉxist!Årunkid = %d groupid = %d\n");

248 
	g°©us
 = 
WP_Devi˚Sèti°ics
(
devi˚_h™dÀ
, (*)
p
);

249 i‡(
	g°©us
)

251 
F¥ötf
("Error Reading UPI Stat\n");

252  
	g°©us
;

254  
	gWP_OK
;

257 
WP_°©us
 
upi_°m1_°©_gë
(
WP_U32
 
°m1id
,
STRU_UPI_STATICS
 *
p
)

259 
WP_°©us
 
	g°©us
;

260 
WP_U16
 
	gi
;

261 
STRU_UPI_STATICS
 
	gpos_‰
;

262 
STRU_SET_INITAIL_CONFIG
 *
	göôül_cfg
 = 
≈u_gë_öôül_cfg_öfo
();

263 
WP_U32
 
	glöe_ödex_ba£
,
	glöe_ödex_cou¡s
;

265 if(
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gE1T1ty≥
 =
NPU_MODE_E1
)

267 
löe_ödex_ba£
 = 
°m1id
*
N_UFE_MAX_LINES_E1
/2;

268 
	glöe_ödex_cou¡s
 = (1+
°m1id
)*
N_UFE_MAX_LINES_E1
/2;

272 
	glöe_ödex_ba£
 = 
°m1id
*
N_UFE_MAX_LINES_T1
/2;

273 
	glöe_ödex_cou¡s
 = (1+
°m1id
)*
N_UFE_MAX_LINES_T1
/2;

277 if(
	gNPU_VALID
 =
öôül_cfg
->
°ru_°m1_cfg_öfo
[
°m1id
].
°m1VÆid
)

279 
mem£t
 (&
pos_‰
, 0, (
STRU_UPI_STATICS
));

280 
	gi
 = 
löe_ödex_ba£
; i < 
	glöe_ödex_cou¡s
; i ++)

282 if(
	gNPU_VALID
 =
öôül_cfg
->
°ru_°m1_cfg_öfo
[
°m1id
].
åunk_öfo
[
i
-
löe_ödex_ba£
].
åunkVÆid
)

284 
mem£t
(
p
, 0, (
STRU_UPI_STATICS
));

285 
	g°©us
 = 
upi_°©_gë_by_åunk
(
i
,
p
);

286 if(-1 =
°©us
)

290 i‡(
	g°©us
)

292 
F¥ötf
("Error upi_stat_get_by_trunk!\n");

293  
	g°©us
;

295 
°ru˘_upi_°©ics_add
(&
pos_‰
, 
p
);

298 
mem˝y
((*)
p
,(*)&
pos_‰
,(pos_fr));

302 
F¥ötf
("Thi†°m1 %d i†nŸ c⁄figed!\n",
°m1id
);

305  
	gWP_OK
;

308 
WP_°©us
 
	$íë_°©_gë
(
WP_U32
 
ëhno
, *
p
) {

310 
WP_°©us
 
°©us
;

311 
WP_h™dÀ
 
íë_devi˚
;

312 
WP_U32
 
size
;

314 
	`mem£t
 (
p
, 0, (
WP_°©s_íë
));

315 if(1 =
ëhno
)

317 
íë_devi˚
 = 
gbedev1
;

319 if(2 =
ëhno
)

321 
íë_devi˚
 = 
gbedev2
;

323 
°©us
 = 
	`WP_Devi˚Sèti°ics
(
íë_devi˚
, (
WP_°©s_íë
 *)
p
);

324 i‡(
°©us
)

326 
	`F¥ötf
("Error Reading Hs Enet Stat\n");

327  
°©us
;

329  
WP_OK
;

330 
	}
}

334 
	$iw_p‹t_°©
(
WP_h™dÀ
 
iw_p‹t
) {

335 
WP_°©us
 
°©us
;

337 
WP_bp‹t_°©s
 
iw_p‹t_°©s
;

338 if(
iw_p‹t
 == 0)

340 
	`F¥ötf
("iw_port is 0 \n");

343 
°©us
=
	`WP_IwP‹tSèti°ics
(
iw_p‹t
, &
iw_p‹t_°©s
);

344 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwPortStatistics()");

346 
	`F¥ötf
("VÆidÖackë† = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
rx_vÆid_∑ckës
 & 0xffff));

347 
	`F¥ötf
("Disˇrd VLANác˚±abÀ fûã∏ = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
disˇrd_vœn_ac˚±abÀ_fûãr
 & 0xffff));

348 
	`F¥ötf
("Disˇrd Ingªs†fûã∏ = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
disˇrd_ögªss_fûãr
 & 0xffff));

349 
	`F¥ötf
("Disˇrd Bridgêfûã∏ = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
disˇrd_bridge_˛assifõr
 & 0xffff));

350 
	`F¥ötf
("Disˇrd unknow¿MAC SA = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
disˇrd_unk_macß
 & 0xffff));

351 
	`F¥ötf
("Díy MAC SA = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
díy_mac_ß
 & 0xffff));

352 
	`F¥ötf
("Díy MAC DA = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
díy_mac_da
 & 0xffff));

353 
	`F¥ötf
("Disˇrd Rx BCÖackë† = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
rx_bc_vÆid_∑ckës
 & 0xffff));

354 
	`F¥ötf
("Disˇrd Rx MCÖackë† = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
rx_mc_vÆid_∑ckës
 & 0xffff));

355 
	`F¥ötf
("F‹w¨d UCÖackë† = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
f‹w¨ded_uc_∑ckës
 & 0xffff));

356 
	`F¥ötf
("F‹w¨d BCÖackë† = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
f‹w¨ded_bc_∑ckës
 & 0xffff));

357 
	`F¥ötf
("F‹w¨d MCÖackë† = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
f‹w¨ded_mc_∑ckës
 & 0xffff));

358 
	`F¥ötf
("PrŸocﬁÉº‹ = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
¥Ÿocﬁ_îr‹
 & 0xffff));

360 
	`F¥ötf
("disˇrd_dfc_fûãr[0] = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
disˇrd_dfc_fûãr
[0] & 0xffff));

361 
	`F¥ötf
("disˇrd_dfc_fûãr[1] = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
disˇrd_dfc_fûãr
[1] & 0xffff));

362 
	`F¥ötf
("disˇrd_dfc_fûãr[2] = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
disˇrd_dfc_fûãr
[2] & 0xffff));

363 
	`F¥ötf
("disˇrd_dfc_fûãr[3] = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
disˇrd_dfc_fûãr
[3] & 0xffff));

364 
	`F¥ötf
("disˇrd_dfc_fûãr[4] = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
disˇrd_dfc_fûãr
[4] & 0xffff));

365 
	`F¥ötf
("disˇrd_dfc_fûãr[5] = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
disˇrd_dfc_fûãr
[5] & 0xffff));

368 
	`F¥ötf
("Díy CFM føme† = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
díy_cfm_‰ames
 & 0xffff));

369 
	`F¥ötf
("N⁄ vÆid IP vîsi⁄ = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
bad_ù_vîsi⁄
 & 0xffff));

370 
	`F¥ötf
("ChecksumÉº‹ = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
checksum_îr‹
 & 0xffff));

371 
	`F¥ötf
("IPÖrŸocﬁÉº‹ = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
ù_¥Ÿocﬁ_îr‹
 & 0xffff));

373 
	`F¥ötf
("Ingªs†pﬁi˚∏n⁄ c⁄f‹mögÖackë† = %08x\n", (
WP_U32
)(
iw_p‹t_°©s
.
ögªss_pﬁi˚r_n⁄_c⁄f‹mög_∑ckës
 & 0xffff));

391 
	}
}

393 
SètIwFlowAggªg©i⁄
(
WP_h™dÀ
 
Êow_h™dÀ
)

395 
WP_iw_Êow_°©s
 
	gÊow_°©s
;

396 
WP_°©us
 
	g°©us
;

397 if(
	gÊow_h™dÀ
 == 0)

399 
F¥ötf
("flow_handle is 0\n");

402 
mem£t
 (&
Êow_°©s
, 0, (flow_stats));

403 
	g°©us
 = 
WP_IwFlowSèti°ics
(
Êow_h™dÀ
, 
WP_IW_FLOW_STAT
, &
Êow_°©s
);

405 i‡(
	g°©us
)

407 
F¥ötf
("Error Reading Flow Stats\n");

408 
exô
(1);

411 
F¥ötf
 ("Forwarded Packets: %08x%08x\n",

412 ((
WPE_SètFõld
)
Êow_°©s
.
f‹w¨d_∑ckë
).
∑π
.
high
,

413 ((
WPE_SètFõld
)
Êow_°©s
.
f‹w¨d_∑ckë
).
∑π
.
low
);

414 
F¥ötf
 ("FBP Drop Packets: %08x%08x\n",

415 ((
WPE_SètFõld
)
Êow_°©s
.
fbp_dr›_∑ckës
).
∑π
.
high
,

416 ((
WPE_SètFõld
)
Êow_°©s
.
fbp_dr›_∑ckës
).
∑π
.
low
);

417 
F¥ötf
 ("MTU Drop Packets: %08x%08x\n",

418 ((
WPE_SètFõld
)
Êow_°©s
.
mtu_dr›_∑ckës
).
∑π
.
high
,

419 ((
WPE_SètFõld
)
Êow_°©s
.
mtu_dr›_∑ckës
).
∑π
.
low
);

420 
F¥ötf
 ("TTL Drop Packets: %08x%08x\n",

421 ((
WPE_SètFõld
)
Êow_°©s
.
âl_dr›_∑ckës
).
∑π
.
high
,

422 ((
WPE_SètFõld
)
Êow_°©s
.
âl_dr›_∑ckës
).
∑π
.
low
);

423 
F¥ötf
 ("Tx Queue Drop Packets: %08x%08x\n",

424 ((
WPE_SètFõld
)
Êow_°©s
.
tx_queue_dr›_∑ckës
).
∑π
.
high
,

425 ((
WPE_SètFõld
)
Êow_°©s
.
tx_queue_dr›_∑ckës
).
∑π
.
low
);

426 
F¥ötf
 ("Denied Packets: %08x%08x\n",

427 ((
WPE_SètFõld
)
Êow_°©s
.
díõd_∑ckës
).
∑π
.
high
,

428 ((
WPE_SètFõld
)
Êow_°©s
.
díõd_∑ckës
).
∑π
.
low
);

429 
F¥ötf
 ("Group Filtered Packets: %08x%08x\n\n",

430 ((
WPE_SètFõld
)
Êow_°©s
.
group_fûãªd_∑ckës
).
∑π
.
high
,

431 ((
WPE_SètFõld
)
Êow_°©s
.
group_fûãªd_∑ckës
).
∑π
.
low
);

432 
F¥ötf
("----------------------------------------------------\n\n");

436 
≈u_upi_°©_˛ór
(
WP_U32
 
åunkid
,WP_U32 
groupid
)

438 
WP_h™dÀ
 
	gdevi˚_h™dÀ
;

439 
WP_°©s_pos_‰
 
	gpos_‰
;

440 
WP_°©us
 
	g°©us
;

441 
	gdevi˚_h™dÀ
 = 
u„_devi˚_h™dÀ
[
åunkid
][
groupid
];

442 if(
	gdevi˚_h™dÀ
!= 0)

444 
°©us
 = 
WP_Devi˚Sèti°icsRe£t
(
devi˚_h™dÀ
,&
pos_‰
);

445 i‡(
	g°©us
)

447 
F¥ötf
("ErrorÇpu_upi_stat_clear UPI Stat\n");

448  
	g°©us
;

453 
F¥ötf
("övÆidÖ¨amëî†≈u_upi_°©_˛ó∏UPI Sèàåunkid = %d groupid = %d\n",
åunkid
,
groupid
);

458 
≈u_‰_ch™√l_°©_˛ór
(
WP_h™dÀ
 
ch™√lH™dÀ
 ,
Rx‹Tx
)

460 
WP_°©us
 
	g°©us
;

461 
WP_°©s_‰_tx
 
	g‰_tx
;

462 
WP_°©s_‰_rx
 
	g‰_rx
;

463 if(
	gch™√lH™dÀ
 == 0) -1;

464 if(
	gRx‹Tx
)

466 
	g°©us
 = 
WP_Ch™√lSèti°icsRe£t
(
ch™√lH™dÀ
,(*)&
‰_rx
);

470 
	g°©us
 = 
WP_Ch™√lSèti°icsRe£t
(
ch™√lH™dÀ
,(*)&
‰_tx
);

474 
WP_U32
 
iw_rouã_p‹t_°©
(
WP_h™dÀ
 
iw_p‹t
)

476 
WP_rouã_p‹t_°©s
 
	gΩ‹t_°©s
 = {0};

477 
WP_°©us
 
	g°©us
 = 0;

478 if(
	giw_p‹t
 == 0)  -1;

479 
mem£t
(&
Ω‹t_°©s
, 0, (
WP_rouã_p‹t_°©s
));

480 
	g°©us
 = 
WP_IwP‹tSèti°ics
(
iw_p‹t
,&
Ω‹t_°©s
);

481 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwPortStatistics()");

482 
WPE_PrötIWP‹tSèts
(&
Ω‹t_°©s
);

483  
	gWP_OK
;

486 
WPE_PrötIWP‹tSèts
(
WP_rouã_p‹t_°©s
* 
iwp‹t_°©s
)

488 
F¥ötf
 ("\nIW Port Statistics ofÑoute Port \n");

489 
F¥ötf
 ("==========================================================\n");

491 
F¥ötf
("\n");

493 
F¥ötf
 ("rx_valid_packets : %08x%08x\n",

494 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_vÆid_∑ckës
).
∑π
.
high
,

495 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_vÆid_∑ckës
).
∑π
.
low
);

496 
F¥ötf
 ("rx_ipv4_option_packets : %08x%08x\n",

497 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_ùv4_›ti⁄_∑ckës
).
∑π
.
high
,

498 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_ùv4_›ti⁄_∑ckës
).
∑π
.
low
);

499 
F¥ötf
 ("rx_non_ip_packets : %08x%08x\n",

500 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_n⁄_ù_∑ckës
).
∑π
.
high
,

501 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_n⁄_ù_∑ckës
).
∑π
.
low
);

502 
F¥ötf
 ("rx_compressed_packets : %08x%08x\n",

503 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_com¥es£d_∑ckës
).
∑π
.
high
,

504 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_com¥es£d_∑ckës
).
∑π
.
low
);

505 
F¥ötf
 ("rx_valid_mpls_packets : %08x%08x\n",

506 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_vÆid_m∂s_∑ckës
).
∑π
.
high
,

507 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_vÆid_m∂s_∑ckës
).
∑π
.
low
);

508 
F¥ötf
 ("rx_protocol_error : %08x%08x\n",

509 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_¥Ÿocﬁ_îr‹
).
∑π
.
high
,

510 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_¥Ÿocﬁ_îr‹
).
∑π
.
low
);

511 
F¥ötf
 ("rx_checksum_error : %08x%08x\n",

512 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_checksum_îr‹
).
∑π
.
high
,

513 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_checksum_îr‹
).
∑π
.
low
);

514 
F¥ötf
 ("rx_discard_classifier : %08x%08x\n",

515 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_disˇrd_˛assifõr
).
∑π
.
high
,

516 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_disˇrd_˛assifõr
).
∑π
.
low
);

517 
F¥ötf
 ("rx_mpls_lookup_drop : %08x%08x\n",

518 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_m∂s_lookup_dr›
).
∑π
.
high
,

519 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_m∂s_lookup_dr›
).
∑π
.
low
);

520 
F¥ötf
 ("tx_forwarded_packets : %08x%08x\n",

521 ((
WPE_SètFõld
)
iwp‹t_°©s
->
tx_f‹w¨ded_∑ckës
).
∑π
.
high
,

522 ((
WPE_SètFõld
)
iwp‹t_°©s
->
tx_f‹w¨ded_∑ckës
).
∑π
.
low
);

523 
F¥ötf
 ("rx_ipv6_hop_by_hop_host_term : %08x%08x\n",

524 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_ùv6_h›_by_h›_ho°_ãrm
).
∑π
.
high
,

525 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_ùv6_h›_by_h›_ho°_ãrm
).
∑π
.
low
);

526 
F¥ötf
 ("rx_ipv6_link_local_host_term : %08x%08x\n",

527 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_ùv6_lök_loˇl_ho°_ãrm
).
∑π
.
high
,

528 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_ùv6_lök_loˇl_ho°_ãrm
).
∑π
.
low
);

529 
F¥ötf
 ("rx_discard_lpm : %08x%08x\n",

530 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_disˇrd_Õm
).
∑π
.
high
,

531 ((
WPE_SètFõld
)
iwp‹t_°©s
->
rx_disˇrd_Õm
).
∑π
.
low
);

532 
F¥ötf
 ("discard_dfc_filter[0] : %08x%08x\n",

533 ((
WPE_SètFõld
)
iwp‹t_°©s
->
disˇrd_dfc_fûãr
[0]).
∑π
.
high
,

534 ((
WPE_SètFõld
)
iwp‹t_°©s
->
disˇrd_dfc_fûãr
[0]).
∑π
.
low
);

535 
F¥ötf
 ("discard_dfc_filter[1] : %08x%08x\n",

536 ((
WPE_SètFõld
)
iwp‹t_°©s
->
disˇrd_dfc_fûãr
[1]).
∑π
.
high
,

537 ((
WPE_SètFõld
)
iwp‹t_°©s
->
disˇrd_dfc_fûãr
[1]).
∑π
.
low
);

538 
F¥ötf
 ("ingress_policer_non_conforming_packets : %08x%08x\n",

539 ((
WPE_SètFõld
)
iwp‹t_°©s
->
ögªss_pﬁi˚r_n⁄_c⁄f‹mög_∑ckës
).
∑π
.
high
,

540 ((
WPE_SètFõld
)
iwp‹t_°©s
->
ögªss_pﬁi˚r_n⁄_c⁄f‹mög_∑ckës
).
∑π
.
low
);

542 
F¥ötf
("\n");

547 
≈_bfd_Êow_°©i°ics
(
WP_h™dÀ
 
BfdAggH™dÀ
)

549 
WP_bfd_Êow_agg_°©i°ics
 
	gbfd_Êow_agg_°©i°ics
;

550 
WP_°©us
 
	g°©us
;

552 if(
	gBfdAggH™dÀ
 == 0)

554 
F¥ötf
("BfdAggHandle is NULL \n");

557 
mem£t
(&
bfd_Êow_agg_°©i°ics
,0,( bfd_flow_agg_statistics));

558 
	g°©us
 = 
WP_IwFlowSèti°ics
(
BfdAggH™dÀ
,
WP_IW_FLOW_STAT_BFD
,&
bfd_Êow_agg_°©i°ics
);

559 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwFlowStatistics()");

561 
F¥ötf
(" \n\n BFD flow statistics : \n\n ");

562 
F¥ötf
("Énqueued_packets = %08x%08x \n ",

563 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
íqueued_∑ckës
).
∑π
.
high
,

564 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
íqueued_∑ckës
).
∑π
.
low
);

566 
F¥ötf
("version_error = %08x%08x \n ",

567 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
vîsi⁄_îr‹
).
∑π
.
high
,

568 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
vîsi⁄_îr‹
).
∑π
.
low
);

569 
F¥ötf
("multi_point_error = %08x%08x \n",

570 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
mu…i_poöt_îr‹
).
∑π
.
high
,

571 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
mu…i_poöt_îr‹
).
∑π
.
low
);

573 
F¥ötf
(" fbp_drop_packets = %08x%08x \n",

574 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
fbp_dr›_∑ckës
).
∑π
.
high
,

575 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
fbp_dr›_∑ckës
).
∑π
.
low
);

577 
F¥ötf
("mtu_drop_packets = %08x%08x \n ",

578 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
mtu_dr›_∑ckës
).
∑π
.
high
,

579 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
mtu_dr›_∑ckës
).
∑π
.
low
);

581 
F¥ötf
("detection_multiplier_error = %08x%08x \n ",

582 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
dëe˘i⁄_mu…ùlõr_îr‹
).
∑π
.
high
,

583 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
dëe˘i⁄_mu…ùlõr_îr‹
).
∑π
.
low
);

585 
F¥ötf
("tx_queue_drop_packets = %08x%08x \n ",

586 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
tx_queue_dr›_∑ckës
).
∑π
.
high
,

587 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
tx_queue_dr›_∑ckës
).
∑π
.
low
);

589 
F¥ötf
("your_discriminator_and_state_error = %08x%08x \n ",

590 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
your_dis¸imö©‹_™d_°©e_îr‹
).
∑π
.
high
,

591 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
your_dis¸imö©‹_™d_°©e_îr‹
).
∑π
.
low
);

593 
F¥ötf
("my_discriminator_error = %08x%08x \n ",

594 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
my_dis¸imö©‹_îr‹
).
∑π
.
high
,

595 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
my_dis¸imö©‹_îr‹
).
∑π
.
low
);

597 
F¥ötf
("length_too_short_error = %08x%08x \n ",

598 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
Àngth_too_sh‹t_îr‹
).
∑π
.
high
,

599 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
Àngth_too_sh‹t_îr‹
).
∑π
.
low
);

601 
F¥ötf
("length_too_long_error = %08x%08x \n ",

602 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
Àngth_too_l⁄g_îr‹
).
∑π
.
high
,

603 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
Àngth_too_l⁄g_îr‹
).
∑π
.
low
);

605 
F¥ötf
("discriminator_not_in_use_error = %08x%08x \n",

606 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
dis¸imö©‹_nŸ_ö_u£_îr‹
).
∑π
.
high
,

607 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
dis¸imö©‹_nŸ_ö_u£_îr‹
).
∑π
.
low
);

609 
F¥ötf
("Üast_discarded_discriminator = %08x%08x \n",

610 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
œ°_disˇrded_dis¸imö©‹
).
∑π
.
high
,

611 ((
WPE_SètFõld
)
bfd_Êow_agg_°©i°ics
.
œ°_disˇrded_dis¸imö©‹
).
∑π
.
low
);

614 
≈_bfd_£s°i⁄_°©i°ics
(
WP_h™dÀ
 
rx_èbÀ_h™dÀ
)

616 
WP_°©us
 
	g°©us
;

617 
WP_bfd_£ssi⁄_°©i°ics
 
	g£ssi⁄_°©i°ics
 ;

618 if(
	grx_èbÀ_h™dÀ
 == 0);

619 
	g°©us
 = 
WP_IwBfdSessi⁄Sèti°ics
(
rx_èbÀ_h™dÀ
,&
£ssi⁄_°©i°ics
);

620 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwBfdSessionStatistics()");

621 
F¥ötf
(" \n\n session statistics:\n");

622 
F¥ötf
("Ñeceived_packets = %08x%08x \náuthentication_failures = %08x%08x \nÅimeout_expiries = %08x%08x \n",

623 ((
WPE_SètFõld
)
£ssi⁄_°©i°ics
.
ª˚ived_∑ckës
).
∑π
.
high
,

624 ((
WPE_SètFõld
)
£ssi⁄_°©i°ics
.
ª˚ived_∑ckës
).
∑π
.
low
,

625 ((
WPE_SètFõld
)
£ssi⁄_°©i°ics
.
authítiˇti⁄_Áûuªs
).
∑π
.
high
,

626 ((
WPE_SètFõld
)
£ssi⁄_°©i°ics
.
authítiˇti⁄_Áûuªs
).
∑π
.
low
,

627 ((
WPE_SètFõld
)
£ssi⁄_°©i°ics
.
timeout_expúõs
).
∑π
.
high
,

628 ((
WPE_SètFõld
)
£ssi⁄_°©i°ics
.
timeout_expúõs
).
∑π
.
low
);

	@np_stats.h

1 
	~"•p_≈u_lök.h
"

3 
WP_°©us
 
tx‰_°©_gë
(
WP_U32
 
Ch™√ o
, *
p
);

4 
WP_°©us
 
rx‰_°©_gë
(
WP_U32
 
Ch™√ o
, *
p
);

5 
WP_°©us
 
upi_°©_gë_by_åunk
(
WP_U32
 
åunkid
, 
STRU_UPI_STATICS
 *
p
);

6 
WP_°©us
 
upi_°m1_°©_gë
(
WP_U32
 
°m1id
,
STRU_UPI_STATICS
 *
p
);

7 
WP_°©us
 
íë_°©_gë
(
WP_U32
 
ëhno
, *
p
);

8 
iw_p‹t_°©
(
WP_h™dÀ
 
iw_p‹t
);

9 
SètIwFlowAggªg©i⁄
(
WP_h™dÀ
 
Êow_h™dÀ
);

10 
¥ötHsE√tSèts
(
WP_h™dÀ
);

	@np_ufe_fr.c

33 
	#WUFE_UFE4


	)

35 
	~"≈_comm⁄.h
"

36 
	~"•p_wddi_£rvî.h
"

37 
	~"wpu_utû.h
"

38 
	~"wpui_hw_utû.h
"

39 
	~"wti_Êexmux_utû.h
"

41 
	#WPI_MASK_BITS
(
n
Ë((1 << (n)Ë- 1)

	)

42 
	#WPI_INDEX_MASK
 
	`WPI_MASK_BITS
(18)

	)

43 
	#WPI_SHIFT_MASK
(
x
,
s
,
m
Ë((((
WP_U32
)(x)Ë>> (s)Ë& (m))

	)

44 
	#WPI_HANDLE_INDEX
(
x
Ë
	`WPI_SHIFT_MASK
(x, 0, 
WPI_INDEX_MASK
)

	)

46 
ãrmö©e_⁄_îr‹
(
WP_h™dÀ
 
h™dÀ
, 
WP_CHAR
 *
s
);

47 
WPU_C‹eWöGöeUtûGë
(
WPU_utû_öfo
* 
utûiz©i⁄
);

48 
WP_h™dÀ
 
íë_iw_Êow_de‰ag_aggªg©i⁄
;

49 
WP_h™dÀ
 
ùde‰ag_agg
;

50 
WT_Eöt3I¡îru±
(
WP_U32
 
wpid
, WP_U32 
sig«l_öfo
);

53 
WP_p‹t_upi_emphy_ext
 
	gemphy_c⁄fig
[1] =

57  
N_FR_MAX_SDU
,

58  
WP_EMPHY_FR
,

59  
N_UFE_MAX_PHYS
,

65 
WP_p‹t_pkt_limôs
 
	gpkt_limôs
[1] =

68  
N_UFE_MAX_PHYS
*2,

69  
N_UFE_MAX_PHYS
*2,

72  
N_UFE_MAX_PHYS


76 
WP_p‹t_upi_∑ckë_ext
 
	gupi_∑ckë_c⁄fig
[1] =

79  
WP_UPI_POS_CRC_ENABLE
,

81  
pkt_limôs


85 
WP_p‹t_upi_iw_ext
 
	gemphy_iw_c⁄fig
[1] =

94 
WP_p‹t_upi
 
	gp‹t_c⁄fig_u„
[1] =

98  
WP_UPI_UFE4
,

99  
WP_UPI_NORMAL
,

101 
WP_UPI_MASTER
 |

102 
WP_UPI_SINGLE
 |

103 
WP_UPI_PRT_EVEN
 |

104 
WP_UPI_FIXED
 |

105 
WP_UPI_PRTCHK_ON
 |

106 
WP_UPI_EMPHY2_13
 |

107 
WP_UPI_BUS_WIDTH_16
,

109 
WP_UPI_SINGLE
 |

110 
WP_UPI_MASTER
 |

111 
WP_UPI_PRT_EVEN
 |

112 
WP_UPI_ROBIN
 |

113 
WP_UPI_PRTCHK_OFF
 |

114 
WP_UPI_BUS_WIDTH_16
,

116  
upi_∑ckë_c⁄fig
,

117  
emphy_iw_c⁄fig
,

118  
emphy_c⁄fig


123 
WP_devi˚_emphy_‰
 
	g‰_devi˚_c⁄fig
[1] =

128  
WP_PKT_STAT_ENABLE
,

129  
N_FR_MAX_SDU
,

133  
WP_PKT_INTMODE_DISABLE
,

134  
WP_PKT_STAT_ENABLE
,

135  
WP_FRCH_OP_NORMAL
,

136  
WP_FRCH_HEADER_2BYTES
,

137  
WP_FR_HASH_LOOKUP_TABLE
,

140  
N_FR_MAX_SDU
,

143  
WP_HDLC_CRC16


147 
WP_h™dÀ
 
	gupi_u„_p‹t
;

149 
WP_h™dÀ
 
	g‰_buf„r_poﬁ
;

150 
WP_h™dÀ
 
	giw_‰_buf„r_poﬁ
;

152 
WP_h™dÀ
 
	gqnode_‰_ho°
;

153 
WP_h™dÀ
 
	gqnode_‰_iw
;

155 
WP_h™dÀ
 
	g‰_iw_ho°_p‹t
,
	g‰_iw_ho°_devi˚
;

158 
WP_h™dÀ
 
	gtx_‰_ho°_h™dÀ
[
N_FR_MAX_RX_HT_CHANNEL
];

160 
WUFE_h™dÀ
 
	gu„_löe_h™dÀ
[
N_UFE_MAX_LINES_T1
]={0};

162 
WUFE_h™dÀ
 
	gu„_phy_h™dÀ
[
N_UFE_MAX_LINES_T1
][32]={{0}};

164 
WUFE_h™dÀ
 
	gu„_devi˚_h™dÀ
[
N_UFE_MAX_LINES_T1
][32]={{0}};

165 
u32
 
	gE1M≠TabÀ
[
N_UFE_MAX_LINES_T1
]= {0};

167 
	#NUM_OF_FRAMES
 1

	)

169 
	#NUM_OF_BUFS
 1

	)

171 
WP_U8
 
	g∑âîn
 = 0x01;

172 
WP_U32
 
	g∑ylﬂd_size
=100;

173 
	#RECONFIG_TRUNK_MAX
 (
SPP_MAX_TRUNK_NUM
*2)

	)

174 
WP_U8
 
	gªc⁄figStm1_¸óãE1_Êag
[
RECONFIG_TRUNK_MAX
] = {0};

176 
WTUFE_c⁄fig_sy°em
–
WP_U32
 
u„_lb_mode
,WP_U32 
u„_p‹t
);

177 
WTUFE_c⁄fig_löes
(
WP_U32
 
löe_lb_mode
);

178 
WTUFE_c⁄fig_tmx336
(
WP_U32
 
u„_p‹t
);

179 
WTUFE_c⁄fig_phys
(
WP_U32
 
löe_ödex
,WP_U32 
groupId
,WP_U32 
¶Ÿ_£À˘i⁄
,WP_U32 
löe_ödex_ba£
 );

181 
WP_CHAR
 
	göput
[20];

182 
	#WT_UFE_HANDLE_INVALID
 0xffffffff;

	)

183 
STRU_STM1_ALARM_INFO
 
	g≈_u„4_¨¨m_öfo
={0};

185 
WT_U„Tîmö©eOnEº‹
(
WP_h™dÀ
 
h™dÀ
, 
WP_CHAR
 *
s
,
WP_U32
 
id
,WP_U32 
LöeNum
)

187 if(
	gh™dÀ
 !
WUFE_OK
)

189 
F¥ötf
("Te° Ab‹à%†%d %†0x%x Löe:%d\n", 
s
,
id
,

190 
WUFE_îr‹_«me
[(
h™dÀ
&0x03ffffff)], h™dÀ, 
LöeNum
);

192 
exô
(1);

195 #i‡
DBG_MODE
 > 0

198 
F¥ötf
("Te° infÿ%†%d 0x%x Löe:%d\n", 
s
,
id
, 
h™dÀ
, 
LöeNum
);

205 
≈_öôül_‰_qnode
(
WP_U32
 
u„_p‹t
)

207 
WP_h™dÀ
 
	g°©us
;

208 
WP_poﬁ_buf„r_d©a
 
	gbuf„r_poﬁ_c⁄fig
;

210 
	gbuf„r_poﬁ_c⁄fig
.
	gn_buf„rs
 = 5000;

211 
	gbuf„r_poﬁ_c⁄fig
.
	goff£t
 = 0;

212 
	gbuf„r_poﬁ_c⁄fig
.
	gsize
 = 
N_FR_MAX_SDU
;

213 
	gbuf„r_poﬁ_c⁄fig
.
	g∑d
 = 0;

214 
	gbuf„r_poﬁ_c⁄fig
.
	gbus
 = 
WP_BUS_PACKET
;

215 
	gbuf„r_poﬁ_c⁄fig
.
	gb™k
 = 
APP_BANK_PACKET
;

217 
	g‰_buf„r_poﬁ
 = 
WP_PoﬁCª©e
(
WP_WINPATH
(0),

218 
WP_poﬁ_‰buf„r
,

219 &
buf„r_poﬁ_c⁄fig
);

220 
ãrmö©e_⁄_îr‹
(
‰_buf„r_poﬁ
, "WP_PoolCreate() - WP_pool_frbuffer");

223 
WP_qnode_‰_ho°q
 
	gqn_‰_ho°
;

224 
	gqn_‰_ho°
.
	göãºu±queue
 = 
WP_IRQT1
;

225 
	gqn_‰_ho°
.
	gadjun˘_poﬁ
 = 
‰_buf„r_poﬁ
;

226 
	gqn_‰_ho°
.
	gnum_buf„rs
 = 20000;

227 
	gqnode_‰_ho°
 = 
WP_QNodeCª©e
(
WP_WINPATH
(0),

228 
WP_QNODE_FR_HOSTQ
,

229 &
qn_‰_ho°
);

234 
	gbuf„r_poﬁ_c⁄fig
.
	gn_buf„rs
 = 10000;

235 
	gbuf„r_poﬁ_c⁄fig
.
	goff£t
 = 0;

236 
	gbuf„r_poﬁ_c⁄fig
.
	gsize
 = 
N_FR_MAX_SDU
;

237 
	gbuf„r_poﬁ_c⁄fig
.
	g∑d
 = 0;

238 
	gbuf„r_poﬁ_c⁄fig
.
	gbus
 = 
WP_BUS_PACKET
,

239 
	gbuf„r_poﬁ_c⁄fig
.
	gb™k
 = 
APP_BANK_PACKET
;

241 
	giw_‰_buf„r_poﬁ
 = 
WP_PoﬁCª©e
(
WP_WINPATH
(0),

242 
WP_poﬁ_iwbuf„r
,

243 &
buf„r_poﬁ_c⁄fig
);

244 
ãrmö©e_⁄_îr‹
(
iw_‰_buf„r_poﬁ
, "WP_PoolCreate() - WP_pool_iwbuffer");

248 
WP_qnode_iwq
 
	gqnode_iw_c⁄fig
;

249 
	gqnode_iw_c⁄fig
.
	göãºu±queue
 = 
WP_IRQT1
;

250 
	gqnode_iw_c⁄fig
.
	gnum_buf„rs
 = 32000;

251 
	gqnode_iw_c⁄fig
.
	gadjun˘_poﬁ
 = 
iw_‰_buf„r_poﬁ
;

254 
	gqnode_‰_iw
 = 
WP_QNodeCª©e
(
WP_WINPATH
(0),

255 
WP_QNODE_IWQ
,

256 &
qnode_iw_c⁄fig
);

258 
ãrmö©e_⁄_îr‹
(
qnode_‰_iw
, "WP_QNodeCreate() - qnode_iw_config");

261 
	g‰_iw_ho°_p‹t
 = 
WP_P‹tCª©e
(
WP_WINPATH
(0),
WP_PORT_IW_HOST
,
NULL
);

262 
ãrmö©e_⁄_îr‹
(
‰_iw_ho°_p‹t
,"Host Port Create");

265 
	g‰_devi˚_c⁄fig
[0].
	grx_queue
 = 
qnode_‰_ho°
;

266 
	g‰_devi˚_c⁄fig
[0].
	gtx_tq_ty≥s
[0] = 
WP_PKT_SCHED_WRR
;

267 
	g‰_devi˚_c⁄fig
[0].
	gtx_tq_ty≥s
[1] = 
WP_PKT_SCHED_WRR
;

268 
	g‰_devi˚_c⁄fig
[0].
	gtx_tq_ty≥s
[2] = 
WP_PKT_SCHED_WRR
;

269 
	g‰_devi˚_c⁄fig
[0].
	gtx_tq_ty≥s
[3] = 
WP_PKT_SCHED_WRR
;

272 
	g‰_iw_ho°_devi˚
 = 
WP_Devi˚Cª©e
(
‰_iw_ho°_p‹t
,0,

273 
WP_DEVICE_FR
,

274 &
‰_devi˚_c⁄fig
[0]);

278 
	g‰_iw_ho°_devi˚
 = 
WP_Devi˚Cª©e
(
‰_iw_ho°_p‹t
, 0, 
WP_DEVICE_IW_HOST
, 
NULL
);

279 
ãrmö©e_⁄_îr‹
(
‰_iw_ho°_devi˚
, "WP_DeviceCreate() IW Host");

282 i‡(
	gu„_p‹t
 =
WTUFE_UPI_PORT_1
)

285 
upi_u„_p‹t
 = 
WP_P‹tCª©e
(
WP_WINPATH
(0), 
WP_PORT_UPI1
, &
p‹t_c⁄fig_u„
[0]);

286 
ãrmö©e_⁄_îr‹
(
upi_u„_p‹t
, "WP_PortCreate() UFE on UPI1");

288 i‡(
	gu„_p‹t
 =
WTUFE_UPI_PORT_2
)

291 
°©us
 = 
WP_SysClockCª©e
(
WP_WINPATH
(0), 
WP_BRG1
, 
WP_BRG_SRC_BRGIN2
, 2);

292 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_SysClockCreate() UPI2");

294 
	gupi_u„_p‹t
 = 
WP_P‹tCª©e
(
WP_WINPATH
(0), 
WP_PORT_UPI2
, &
p‹t_c⁄fig_u„
[0]);

295 
ãrmö©e_⁄_îr‹
(
upi_u„_p‹t
, "WP_PortCreate() UFE on UPI2");

299 
F¥ötf
("UPI Port Not Valid, UPI1 configured by default\n");

301 
F¥ötf
("npÇp_initial_fr_qnode completed \n");

304 
‰_sy°em_öô
(
WP_U32
 
u„_p‹t
)

307 
mem£t
(
ªc⁄figStm1_¸óãE1_Êag
, 0, 
RECONFIG_TRUNK_MAX
);

309 #i‡
UFE_LOOPBACK


310 
WTUFE_c⁄fig_sy°em
(
UFE_LB_SYSTEM
,
u„_p‹t
);

311 
F¥ötf
("UFE System Configured\n");

312 
WTUFE_c⁄fig_löes
(
UFE_LB_SYSTEM
);

314 
WTUFE_c⁄fig_sy°em
(
UFE_NO_LOOPBK
,
u„_p‹t
);

315 
F¥ötf
("UFE System Configured\n");

316 
WTUFE_c⁄fig_löes
(
UFE_NO_LOOPBK
);

318 
F¥ötf
("UFE Lines Created\n");

319 
WP_°©us
 
	g°©us
;

320 
WUFE_evíts
 
	gu„_evíts
;

321 
mem£t
(&
u„_evíts
, 0, (
WUFE_evíts
));

323 
	gu„_evíts
.
	gemphy_evíts
[0].
	gevít_ªg
 = 
WUFE_EVENT_EMPHY
;

324 
	gu„_evíts
.
	gemphy_evíts
[0].
	gphy_nŸ_vÆid_h™dÀ
 = 0;

326 
	gu„_evíts
.
	gtdm_evíts
.
	gevít_ªg
 = 
WUFE_EVENT_TDM
;

328 
	gu„_evíts
.
	gfm_evíts
.
	gevít_ªg
 = 
WUFE_EVENT_FM
&((~
WUFE_EVENT_FM_TX_DDR_UNDERRUN
)&(~
WUFE_EVENT_FM_TX_ECC_ONE_BIT
)&(~
WUFE_EVENT_FM_RX_ECC_ONE_BIT
));

330 
	gu„_evíts
.
	gmachöe_evíts
.
	grx_evít_ªg
 = 
WUFE_EVENT_MACHINE_RX
;

331 
	gu„_evíts
.
	gmachöe_evíts
.
	gtx_evít_ªg
 = 
WUFE_EVENT_MACHINE_TX
;

333 
	gu„_evíts
.
	gbs_evíts
.
	g∂l_lo°_lock_evít_ªg
 = 0x06ff;

334 
	gu„_evíts
.
	gbs_evíts
.
	gab£¡_evít_ªg
 = 0x000f;

335 
	gu„_evíts
.
	gbs_evíts
.
	glos_evít_ªg
 = 0x000f;

336 
	g°©us
 = 
WUFE_U„EvítE«bÀ
(0, &
u„_evíts
);

337 
ãrmö©e_⁄_îr‹
(
°©us
, "WUFE_UfeEventEnable");

340 
WP_U32
 
≈_‰addr_∑ck
(WP_U32 
ˇrd
, WP_U32 
åunk
, WP_U32 
tsgroup
, WP_U32 
dlci
)

342 
‰_addr_t
 
	ga
 = {0};

343 
as£π
((
‰_addr_t
) == 4);

344 
	ga
.
	gˇrd
 = 
ˇrd
-1;

345 
	ga
.
	gåunk
 = 
åunk
-1;

346 
	ga
.
	gtsgroup
 = 
tsgroup
;

347 
	ga
.
	gdlci
 = 
dlci
;

348  *(
	gWP_U32
*)&
	ga
;

350 
≈_‰addr_u≈ack
(
WP_U32
 
‰p‹t
, WP_U32* 
ˇrd
, WP_U32* 
åunk
, WP_U32* 
tsgroup
, WP_U32* 
dlci
)

352 
‰_addr_t
* 
	ga
;

353 
as£π
((
‰_addr_t
) == 4);

354 
	ga
 = (
‰_addr_t
*)&
‰p‹t
;

355 *
	gˇrd
 = (
WP_U32
)(
a
->
ˇrd
) + 1;

356 *
	gåunk
 = (
WP_U32
)(
a
->
åunk
) + 1;

357 *
	gtsgroup
 = 
a
->
tsgroup
;

358 *
	gdlci
 = 
a
->
dlci
;

361 
≈_¸ót_‰_vp‹t
(
WP_U32
 
vÂ‹t
)

363 
STRU_VPORT_INFO
 *
	gVp‹tInfo
;

364 
	gVp‹tInfo
 = 
≈u_gë_vp‹t_öfo
(
vÂ‹t
);

365 
STRU_SET_INITAIL_CONFIG
 *
	göôül_cfg
 = 
≈u_gë_öôül_cfg_öfo
();

366 if(
	gVp‹tInfo
 !
NULL
)

368 
WP_U32
 
åunk
;

369 
WP_U32
 
	ggroup
;

370 
WP_U32
 
	g°m1Id
;

372 
	g°m1Id
 = 
Vp‹tInfo
->
ch_öfo
.
ˇrd
 - 1;

373 if(
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1Id
].
	gE1T1ty≥
 =
NPU_MODE_E1
)

375 
åunk
 = 
Vp‹tInfo
->
ch_öfo
.åunk - 1 + 
°m1Id
*
N_UFE_MAX_LINES_E1
/2;

379 
	gåunk
 = 
Vp‹tInfo
->
ch_öfo
.
åunk
 - 1 + 
°m1Id
*
N_UFE_MAX_LINES_T1
/2;

382 
	ggroup
 = 
Vp‹tInfo
->
ch_öfo
.
group
;

385 if(
	gu„_devi˚_h™dÀ
[
åunk
][
group
] != 0)

387 
Vp‹tInfo
->
ch_öfo
.
phy_h™dÀ
 = 
u„_phy_h™dÀ
[
åunk
][
group
];

388 
	gVp‹tInfo
->
	gch_öfo
.
	gdevi˚_h™dÀ

u„_devi˚_h™dÀ
[
åunk
][
group
];

392 
WDDI_WARNING
("Eº‹:Çp_¸ót_‰_vp‹t::u„_devi˚_h™dÀ[%d][%d] i†nŸ cª©êyë! \n",
åunk
,
group
);

395 
WDDI_INFO
("Info:Çp_¸ót_‰_vp‹t, stm1Id:%d,Årunk:%d, group:%d\n", 
°m1Id
, 
åunk
, 
group
);

397 if((
	gVp‹tInfo
->
	gch_öfo
.
	grx_ho°_h™dÀ
 =0)&&(
Vp‹tInfo
->
ch_öfo
.
tx_ho°_h™dÀ
 == 0))

399 
≈_¸ót_‰_ho°_ch™√l
(&
Vp‹tInfo
->
ch_öfo
);

403 if(
	gUNUSED
 =
Vp‹tInfo
->
U£dFœg
)

405 
≈_íabÀ_‰_ho°_ch™√l
(&
Vp‹tInfo
->
ch_öfo
);

406 
WDDI_WARNING
("W¨n:Çp_¸ót_‰_vp‹t::≈_íabÀ_‰_ho°_ch™√l, vp‹t:%d\n",
vÂ‹t
);

411 if(
	gVp‹tInfo
->
	gch_öfo
.
	grx_iw_h™dÀ
 == 0)

413 
≈_¸ót_‰_iw_ch™√l
(&
Vp‹tInfo
->
ch_öfo
);

417 if(
	gUNUSED
 =
Vp‹tInfo
->
U£dFœg
)

420 
≈_íabÀ_‰_iw_ch™√l
(&
Vp‹tInfo
->
ch_öfo
);

423 if(
	gVp‹tInfo
->
	gch_öfo
.
	gagg_íë2_to_‰
 == 0)

425 
≈_dl_íë2_to_‰_ruÀ_add
(&
Vp‹tInfo
->
ch_öfo
);

430 
WDDI_WARNING
("Warn:Çp_creat_fr_vport::npu_get_initial_cfg_info fail!\n");

435 
≈_˛o£_‰_vp‹t
(
WP_U32
 
vÂ‹t
)

437 
STRU_VPORT_INFO
 *
	gVp‹tInfo
;

438 
	gVp‹tInfo
 = 
≈u_gë_vp‹t_öfo
(
vÂ‹t
);

439 
	gi
;

440 if(
	gVp‹tInfo
 !
NULL
)

442 if(
Vp‹tInfo
->
ch_öfo
.
devi˚_h™dÀ
 == 0)

444 
WDDI_WARNING
("W¨n:Çp_˛o£_‰_vp‹t, u„_devi˚_h™dÀ ha¢'à¸óãd ,vp‹à%d \n",
vÂ‹t
);

452 
WDDI_INFO
("Info:Çp_˛o£_‰_vp‹t, vÂ‹t:0x%x\n", 
vÂ‹t
);

453 if((
	gVp‹tInfo
->
	gch_öfo
.
	grx_iw_h™dÀ
 !0Ë&& (
Vp‹tInfo
->
ch_öfo
.
tx_iw_h™dÀ
 != 0))

455 
≈_dißbÀ_‰_iw_ch™√l
(&
Vp‹tInfo
->
ch_öfo
);

460 if((
	gVp‹tInfo
->
	gch_öfo
.
	grx_ho°_h™dÀ
 !0Ë&& (
Vp‹tInfo
->
ch_öfo
.
tx_ho°_h™dÀ
 != 0))

462 
≈_dißbÀ_‰_ho°_ch™√l
(&
Vp‹tInfo
->
ch_öfo
);

469 
WP_U32
 
	g°m1Id
;

470 
WP_U32
 
	gåunk
;

471 
WP_U32
 
	ggroup
;

472 
WP_°©us
 
	g°©us
;

473 
STRU_SET_INITAIL_CONFIG
 *
	göôül_cfg
 = 
≈u_gë_öôül_cfg_öfo
();

474 
	g°m1Id
 = 
Vp‹tInfo
->
ch_öfo
.
ˇrd
 - 1;

475 if(
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1Id
].
	gE1T1ty≥
 =
NPU_MODE_E1
)

477 
åunk
 = 
Vp‹tInfo
->
ch_öfo
.åunk - 1 + 
°m1Id
*
N_UFE_MAX_LINES_E1
/2;

481 
	gåunk
 = 
Vp‹tInfo
->
ch_öfo
.
åunk
 - 1 + 
°m1Id
*
N_UFE_MAX_LINES_T1
/2;

484 
	ggroup
 = 
Vp‹tInfo
->
ch_öfo
.
group
;

485 
	g°©us
 = 
≈_Ch™√l_is_N⁄e
(
°m1Id
, 
åunk
, 
group
);

486 if(
	gWP_OK
 =
°©us
)

488 
≈_Devi˚Dñëe
(
åunk
, 
group
);

489 
	g°©us
 = 
≈_U„_Phy_Dñëe
(
åunk
,
group
);

490 if(
	gWP_OK
 !
°©us
)

492 
F¥ötf
("≈_U„_Phy_DñëêÁûed! sètu†%d\n",
°©us
);

493  
	g°©us
;

495 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1Id
].
	gåunk_öfo
[
åunk
].
	ggroup_öfo
[
group
].
	ggroupVÆid
 = 
NPU_INVALID
;

501 
WDDI_WARNING
("W¨n:Çp_˛o£_‰_vp‹t::≈u_gë_vp‹t_öfÿÁû! vÂ‹t:0x%x\n", 
vÂ‹t
);

507 
WP_d©a_unô
 
	gd©a_unô
= {0};

508 
WP_d©a_£gmít
 
	gtx_buf
;

509 
WP_U8
 *
	gd©a_±r
;

511 
≈u_£nd_‰_∑ckë
(
WP_U8
 *
p
, 
WP_U32
 
Àn
,WP_U32 
vÂ‹t
)

513 
FR_CHANNEL_INFO
 * 
	gch_öfo
;

514 
STRU_VPORT_INFO
 *
	gVp‹tInfo
 = 
≈u_gë_vp‹t_öfo
(
vÂ‹t
);

515 if(
	gVp‹tInfo
 !
NULL
)

517 
ch_öfo
 = &
Vp‹tInfo
->ch_info;

518 
≈_‰_ho°_£nd
(
ch_öfo
->
tx_ho°_h™dÀ
,
Àn
,(
WP_CHAR
 *)
p
,ch_öfo->
dlci
,
vÂ‹t
);

523 
WDDI_WARNING
("W¨n:Çpu_£nd_‰_∑ckë::≈u_gë_vp‹t_öfÿÁû! vp‹à%d \¿",
vÂ‹t
);

527 
≈_‰_ho°_£nd
(
WP_h™dÀ
 
tx_ho°_h™dÀ
,
WP_S32
 
D©aLígth
, 
WP_CHAR
* 
pTxD©a
,
WP_U32
 
dlci
,WP_U32 
p‹t
)

529 
WP_°©us
 
	g°©us
;

530 
WP_d©a_£gmít
* 
	gcuº_buf
;

531 
	gd©a_unô
.
	gd©a_size
 = 
D©aLígth
 + 2;

532 
	gd©a_unô
.
	gn_a˘ive
 = 1;

534 
	gtx_buf
.
	gd©a_size
 = 
d©a_unô
.
d©a_size
;

535 
	gd©a_±r
 = 
WP_PoﬁAŒoc
(
‰_buf„r_poﬁ
);

536 
	gtx_buf
.
	gd©a
 = 
d©a_±r
;

537 
	gtx_buf
.
	gpoﬁ_h™dÀ
 = 
‰_buf„r_poﬁ
;

538 
	gtx_buf
.
	gdi•œ˚mít
 = 0;

539 
	gtx_buf
.
	gu£r_öfo
 = 0;

540 
	gtx_buf
.
	g√xt
 = 
NULL
;

541 
	gtx_buf
.
	gbuf„r_˛ass
 = 0;

545 
	gd©a_unô
.
	gc⁄åﬁ
 =

546 
WP_HT_IW_B_MODE_FIELD
(
WP_HT_IW_B_FAST_MODE
)|

547 
WP_HT_IW_B_VA_DEST_TYPE_FIELD
(
WP_HT_IW_B_VA_DESTINATION_FLOW_AGG
)|

548 
WP_HT_IW_FSP_FLOW_AGG_FIELD
(
agg_íë_1
) |

549 
WP_HT_IW_CRC_FIELD
(0);

551 
	gd©a_unô
.
	g£gmít
 = (&
tx_buf
);

552 
	gd©a_unô
.
	gn_£gmíts
 = 1;

553 
	gd©a_unô
.
	gn_a˘ive
 = 1;

554 
	gd©a_unô
.
	gty≥
 = 
WP_DATA_FRAME_RELAY
;

555 
	gd©a_unô
.
	gd©a_ªtu∫
 = 0;

556 
	gd©a_unô
.
	g°©us
 = 0;

559 
WP_FR_HEADER_2OCT_SET
(
d©a_±r
,
dlci
,0,0,0,0);

560 #i‡
NPU_HOST_OLP


561 
pcimem_c›y
(
d©a_±r
+2, 
pTxD©a
, 
D©aLígth
);

563 
WP_MEM_BYTES_SET
(
d©a_±r
+2, 
pTxD©a
, 
D©aLígth
);

567 
WDDI_INFO
("Info:Çp_‰_ho°_£nd, FR-∑ckë, dlci:%d, vp‹t:0x%0x\n",
dlci
, 
p‹t
);

568 
	gcuº_buf
 = 
d©a_unô
.
£gmít
;

570 
WDDI_STRING
(
cuº_buf
->
d©a
, cuº_buf->
d©a_size
);

571 
≈u_m⁄_ˇ±uª_∑ckë
((*)
d©a_±r
,
d©a_unô
.
d©a_size
,
p‹t
,1);

572 
	g°©us
 = 
WP_Ho°Síd
(
tx_ho°_h™dÀ
, &
d©a_unô
);

575 if(
WP_ERROR_P
(
°©us
))

577 i‡(
WP_ERROR
(
°©us
Ë=
WP_ERR_WMM_FIFO_PUT
)

579 
WDDI_WARNING
("≈_‰_ho°_£nd faû,°©us=%d,tx_ho°_h™dÀ=0x%x\n",
°©us
,
tx_ho°_h™dÀ
);

584 
WDDI_WARNING
("≈_‰_ho°_£nd faû,WP_PoﬁFªe,°©us=%d,tx_ho°_h™dÀ=0x%x\n",
°©us
,
tx_ho°_h™dÀ
);

585 
WP_PoﬁFªe
(
cuº_buf
->
poﬁ_h™dÀ
, cuº_buf->
d©a
);

591 
≈_‰_ho°_ª˚ive
(
WP_h™dÀ
 
rx_ho°_h™dÀ
,
WP_S32
 *
D©aLígth
, 
WP_CHAR
* 
pTxD©a
)

593 
WP_°©us
 
	g°©us
;

594 
WP_d©a_unô
 
	gdu
 = {0};

595 
WP_d©a_£gmít
 
	g£g
;

596 
WP_d©a_£gmít
* 
	gcuº_buf
;

597 
WP_U32
 
	gj
;

598 
	gdu
.
	g£gmít
 = &
£g
;

599 
	gdu
.
	gty≥
 = 
WP_DATA_IW
;

600 
	gdu
.
	gn_£gmíts
 = 1;

602 i‡(
	gWP_OK
 !(
°©us
 = 
WP_Ho°Re˚ive
(
rx_ho°_h™dÀ
, &
du
)))

604 i‡–
°rcmp
("WP_ERR_HST_NO_DATA_TO_GET", 
WP_îr‹_«me
[
WP_ERROR
(
°©us
)]) != 0)

609 
	gcuº_buf
 = 
du
.
£gmít
;

610 
	gj
 = 0; j < 
	gdu
.
	gn_a˘ive
; j++, 
	gcuº_buf
++)

613 
	gk
 = 0; k < 
	gcuº_buf
->
	gd©a_size
; k++)

615 
	gpTxD©a
[
k
]=
cuº_buf
->
d©a
[k];

618 #i‡
NPU_HOST_OLP


619 
pcimem_c›y
(
pTxD©a
,
cuº_buf
->
d©a
,cuº_buf->
d©a_size
);

621 
mem˝y
(
pTxD©a
,
cuº_buf
->
d©a
,cuº_buf->
d©a_size
);

624 
WDDI_STRING
(
pTxD©a
, (
cuº_buf
->
d©a_size
));

625 *
	gD©aLígth
 = 
cuº_buf
->
d©a_size
;

626 if(*
	gD©aLígth
 >
	gN_FR_MAX_SDU
)

628 
WDDI_WARNING
("np_fr_host_receiveá bigÖacket\n");

629 *
	gD©aLígth
 = 
N_FR_MAX_SDU
;

632 
WP_PoﬁFªe
(
cuº_buf
->
poﬁ_h™dÀ
, cuº_buf->
d©a
);

636  
	g°©us
;

640 
≈_dißbÀ_‰_ho°_ch™√l
(
FR_CHANNEL_INFO
 * 
ch_öfo
)

642 
WP_h™dÀ
 
	g°©us
;

643 
u32
 
	gˇrd
;

644 
u32
 
	gåunk
;

645 
u32
 
	ggroup
;

646 
u32
 
	gdlci
;

647 
≈_‰addr_u≈ack
(
ch_öfo
->
vÂ‹t
,&
ˇrd
,&
åunk
,&
group
,&
dlci
);

650 
WP_U32
 
	gi
 = 0;

651 
WP_boﬁón
 
	gch_dißbÀd_°©e
 = 
WP_FALSE
;

653 if(
	gch_öfo
->
	grx_ho°_h™dÀ
 == 0)  0;

654 ()
WP_Ch™√lSètus
(
ch_öfo
->
rx_ho°_h™dÀ
, 
WP_CH_STATUS_DISABLED
, &
ch_dißbÀd_°©e
);

655 if(
	gWP_FALSE
 =
ch_dißbÀd_°©e
)

657 
°©us
 = 
WP_Ch™√lDißbÀ
(
ch_öfo
->
rx_ho°_h™dÀ
);

658 i‡–
°rcmp
("WP_ERR_CH_ALREADY_DISABLED", 
WP_îr‹_«me
[
WP_ERROR
(
°©us
)]) != 0)

660 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelDisable()Ñx_fr_host_handle");

664 ()
WP_Ch™√lSètus
(
ch_öfo
->
rx_ho°_h™dÀ
, 
WP_CH_STATUS_DISABLED
, &
ch_dißbÀd_°©e
);

665 
WP_Dñay
(1000);

666 
	gi
 ++;

667 if(100 =
i
)

671 }
	gWP_FALSE
 =
ch_dißbÀd_°©e
);

674 
	gch_dißbÀd_°©e
 = 
WP_FALSE
;

675 if(
	gch_öfo
->
	gtx_ho°_h™dÀ
 == 0)

677 
WDDI_INFO
("Warn:Çp_disable_fr_host_channel, ch_info->tx_host_handle:0\n");

681 ()
WP_Ch™√lSètus
(
ch_öfo
->
tx_ho°_h™dÀ
, 
WP_CH_STATUS_DISABLED
, &
ch_dißbÀd_°©e
);

682 if(
	gWP_FALSE
 =
ch_dißbÀd_°©e
)

684 
WDDI_INFO
("≈_dißbÀ_‰_ho°_ch™√»vf‹à0x%x (%d): S%dP%dFR%dD%d \n",
ch_öfo
->
vÂ‹t
,
ht⁄l
(ch_öfo->vÂ‹t),
ˇrd
,
åunk
,
group
,
dlci
);

685 
	gi
 = 0;

688 
	g°©us
 = 
WP_Ch™√lDißbÀ
(
ch_öfo
->
tx_ho°_h™dÀ
);

689 i‡–
°rcmp
("WP_ERR_CH_ALREADY_DISABLED", 
WP_îr‹_«me
[
WP_ERROR
(
°©us
)]) != 0)

691 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelDisable()Åx_fr_host_handle");

694 ()
WP_Ch™√lSètus
(
ch_öfo
->
tx_ho°_h™dÀ
, 
WP_CH_STATUS_DISABLED
, &
ch_dißbÀd_°©e
);

695 
WP_Dñay
(100);

696 
	gi
 ++;

697 if(1000 =
i
)

701 }
	gWP_FALSE
 =
ch_dißbÀd_°©e
);

704 
≈_dñëe_‰_ho°_ch™√l
(
FR_CHANNEL_INFO
 * 
ch_öfo
)

706 
WP_h™dÀ
 
	g°©us
;

707 if(
	gch_öfo
->
	grx_ho°_h™dÀ
 == 0);

709 
	g°©us
 = 
WP_Ch™√lDñëe
(
ch_öfo
->
rx_ho°_h™dÀ
);

712 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelDelete()Ñx_fr_host_handle");

713 
	gch_öfo
->
	grx_ho°_h™dÀ
 = 0;

715 if(
	gch_öfo
->
	gtx_ho°_h™dÀ
 == 0);

716 
	g°©us
 = 
WP_Ch™√lDñëe
(
ch_öfo
->
tx_ho°_h™dÀ
);

719 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelDelete()Åx_fr_host_handle");

720 
	gch_öfo
->
	gtx_ho°_h™dÀ
 = 0;

724 
≈_íabÀ_‰_ho°_ch™√l
(
FR_CHANNEL_INFO
 * 
ch_öfo
)

726 
WP_h™dÀ
 
	g°©us
;

727 
u32
 
	gˇrd
;

728 
u32
 
	gåunk
;

729 
u32
 
	ggroup
;

730 
u32
 
	gdlci
;

731 
≈_‰addr_u≈ack
(
ch_öfo
->
vÂ‹t
,&
ˇrd
,&
åunk
,&
group
,&
dlci
);

733 
WDDI_INFO
("≈_íabÀ_‰_ho°_ch™√»vf‹à0x%x (%d): S%dP%dFR%dD%d \n",
ch_öfo
->
vÂ‹t
,
ht⁄l
(ch_öfo->vÂ‹t),
ˇrd
,
åunk
,
group
,
dlci
);

735 
WP_boﬁón
 
	gch_dißbÀd_°©e
 = 
WP_FALSE
;

736 if(
	gch_öfo
->
	grx_ho°_h™dÀ
 == 0);

737 ()
WP_Ch™√lSètus
(
ch_öfo
->
rx_ho°_h™dÀ
, 
WP_CH_STATUS_DISABLED
, &
ch_dißbÀd_°©e
);

738 if(
	gWP_TRUE
=
ch_dißbÀd_°©e
)

741 
°©us
 = 
WP_Ch™√lE«bÀ
(
ch_öfo
->
rx_ho°_h™dÀ
);

742 i‡–
°rcmp
("WP_ERR_CH_ALREADY_ENABLED", 
WP_îr‹_«me
[
WP_ERROR
(
°©us
)]) != 0)

744 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelEnable()Ñx_fr_host_handle");

747 if(
	gch_öfo
->
	gtx_ho°_h™dÀ
 == 0);

748 ()
WP_Ch™√lSètus
(
ch_öfo
->
tx_ho°_h™dÀ
, 
WP_CH_STATUS_DISABLED
, &
ch_dißbÀd_°©e
);

749 if(
	gWP_TRUE
=
ch_dißbÀd_°©e
)

751 
°©us
 = 
WP_Ch™√lE«bÀ
(
ch_öfo
->
tx_ho°_h™dÀ
);

752 i‡–
°rcmp
("WP_ERR_CH_ALREADY_ENABLED", 
WP_îr‹_«me
[
WP_ERROR
(
°©us
)]) != 0)

754 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelEnable()Åx_fr_host_handle");

760 
≈_dißbÀ_‰_iw_ch™√l
(
FR_CHANNEL_INFO
 * 
ch_öfo
)

762 
WP_h™dÀ
 
	g°©us
;

763 
WP_tx_bödög
 
	gtx_bödög
;

764 
WP_rx_bödög_‰_swôchög
 
	grx_bödög_c⁄fig
;

765 
NP_SYSTEM_INFO
 * 
	g≈_sy°em
;

766 
WP_U32
 
	gi
 = 0;

767 
u32
 
	gˇrd
;

768 
u32
 
	gåunk
;

769 
u32
 
	ggroup
;

770 
u32
 
	gdlci
;

771 
≈_‰addr_u≈ack
(
ch_öfo
->
vÂ‹t
,&
ˇrd
,&
åunk
,&
group
,&
dlci
);

773 
WP_boﬁón
 
	gch_dißbÀd_°©e
 = 
WP_FALSE
;

775 
	g≈_sy°em
 = 
≈_gë_sy°em_öfo
();

776 if(
	gch_öfo
->
	grx_iw_h™dÀ
 == 0)

778 
WDDI_INFO
("Warn:Çp_disable_fr_iw_channel::np_get_system_info fail!\n");

782 ()
WP_Ch™√lSètus
(
ch_öfo
->
rx_iw_h™dÀ
, 
WP_CH_STATUS_DISABLED
, &
ch_dißbÀd_°©e
);

783 if(
	gWP_FALSE
 =
ch_dißbÀd_°©e
)

785 
WDDI_INFO
("Info:Çp_dißbÀ_‰_iw_ch™√l, vf‹t:0x%x (%d): S%dP%dFR%dD%d\n",
ch_öfo
->
vÂ‹t
,
ht⁄l
(ch_öfo->vÂ‹t),
ˇrd
,
åunk
,
group
,
dlci
);

786 
mem£t
(&
rx_bödög_c⁄fig
, 0, (
WP_rx_bödög_‰_swôchög
));

787 
	grx_bödög_c⁄fig
.
	gdeÁu…_aggªg©i⁄
 = 
ch_öfo
->
agg_‰_rx_ho°_Êow
;

788 
	g°©us
 = 
WP_IwRxBödögModify
(
ch_öfo
->
rx_iw_h™dÀ
,

789 
≈_sy°em
->
sy°em_‰_h™dÀ
,

790 
qnode_‰_iw
,

791 
WP_IW_RX_BIND_MOD_DISABLE
,

792 &
rx_bödög_c⁄fig
);

793 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwRxBindingModify disable");

794 
WP_Dñay
(50);

796 
	g°©us
 = 
WP_Ch™√lDißbÀ
(
ch_öfo
->
rx_iw_h™dÀ
);

797 i‡–
°rcmp
("WP_ERR_CH_ALREADY_DISABLED", 
WP_îr‹_«me
[
WP_ERROR
(
°©us
)]) != 0)

799 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelDisable()Ñx_iw_handle");

804 
	g°©us
 = 
WP_Ch™√lDißbÀ
(
ch_öfo
->
rx_iw_h™dÀ
);

805 i‡–
°rcmp
("WP_ERR_CH_ALREADY_DISABLED", 
WP_îr‹_«me
[
WP_ERROR
(
°©us
)]) != 0)

807 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelDisable()Ñx_iw_handle");

810 ()
WP_Ch™√lSètus
(
ch_öfo
->
rx_iw_h™dÀ
, 
WP_CH_STATUS_DISABLED
, &
ch_dißbÀd_°©e
);

811 
WP_Dñay
(50);

812 
	gi
 ++;

813 if(1000 =
i
)

817 }
	gWP_FALSE
 =
ch_dißbÀd_°©e
);

820 
	gch_dißbÀd_°©e
 = 
WP_FALSE
;

821 if(
	gch_öfo
->
	gtx_iw_h™dÀ
 == 0);

822 ()
WP_Ch™√lSètus
(
ch_öfo
->
tx_iw_h™dÀ
, 
WP_CH_STATUS_DISABLED
, &
ch_dißbÀd_°©e
);

823 if(
	gWP_FALSE
 =
ch_dißbÀd_°©e
)

825 
mem£t
(&
tx_bödög
, 0, (
WP_tx_bödög
));

826 
	gtx_bödög
.
	gmaxt
 = 0;

827 
	gtx_bödög
.
	gdci_mode
 = 
WP_IW_DYN_CH_INSERT_DISABLE
;

828 
	g°©us
 = 
WP_IwTxBödögModify
(
ch_öfo
->
tx_iw_h™dÀ
,

829 
WP_IW_TX_BIND_MOD_MAXT
 | 
WP_IW_TX_BIND_MOD_DCI
,

830 
WP_IW_TX_BINDING
,

831 &
tx_bödög
);

832 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwTxBindingModify disable");

833 
WP_Dñay
(50);

835 
	gi
 = 0;

838 
	g°©us
 = 
WP_Ch™√lDißbÀ
(
ch_öfo
->
tx_iw_h™dÀ
);

839 i‡–
°rcmp
("WP_ERR_CH_ALREADY_DISABLED", 
WP_îr‹_«me
[
WP_ERROR
(
°©us
)]) != 0)

841 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelDisable()Åx_iw_handle");

844 ()
WP_Ch™√lSètus
(
ch_öfo
->
tx_iw_h™dÀ
, 
WP_CH_STATUS_DISABLED
, &
ch_dißbÀd_°©e
);

845 
WP_Dñay
(50);

846 
	gi
 ++;

847 if(1000 =
i
)

851 }
	gWP_FALSE
 =
ch_dißbÀd_°©e
);

858 
≈_dñëe_‰_iw_ch™√l
(
FR_CHANNEL_INFO
 * 
ch_öfo
)

860 
WP_h™dÀ
 
	g°©us
;

861 if(
	gch_öfo
->
	grx_iw_h™dÀ
 == 0);

863 
	g°©us
 = 
WP_Ch™√lDñëe
(
ch_öfo
->
rx_iw_h™dÀ
);

866 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelDelete()Ñx_iw_handle");

867 
	gch_öfo
->
	grx_iw_h™dÀ
 = 0;

869 if(
	gch_öfo
->
	gtx_iw_h™dÀ
 == 0);

870 
	g°©us
 = 
WP_Ch™√lDñëe
(
ch_öfo
->
tx_iw_h™dÀ
);

873 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelDelete()Åx_iw_handle");

874 
	gch_öfo
->
	gtx_iw_h™dÀ
 = 0;

878 
≈_íabÀ_‰_iw_ch™√l
(
FR_CHANNEL_INFO
 * 
ch_öfo
)

880 
WP_h™dÀ
 
	g°©us
;

881 
WP_tx_bödög
 
	gtx_bödög
;

882 
u32
 
	gˇrd
;

883 
u32
 
	gåunk
;

884 
u32
 
	ggroup
;

885 
u32
 
	gdlci
;

886 
≈_‰addr_u≈ack
(
ch_öfo
->
vÂ‹t
,&
ˇrd
,&
åunk
,&
group
,&
dlci
);

888 
WDDI_INFO
("≈_íabÀ_‰_iw_ch™√»vf‹à0x%x (%d): S%dP%dFR%dD%d \n",
ch_öfo
->
vÂ‹t
,
ht⁄l
(ch_öfo->vÂ‹t),
ˇrd
,
åunk
,
group
,
dlci
);

890 
WP_boﬁón
 
	gch_dißbÀd_°©e
 = 
WP_FALSE
;

891 
WP_rx_bödög_‰_swôchög
 
	grx_bödög_c⁄fig
;

892 
NP_SYSTEM_INFO
 * 
	g≈_sy°em
;

893 
	g≈_sy°em
 = 
≈_gë_sy°em_öfo
();

894 if(
	gch_öfo
->
	grx_iw_h™dÀ
 == 0);

895 ()
WP_Ch™√lSètus
(
ch_öfo
->
rx_iw_h™dÀ
, 
WP_CH_STATUS_DISABLED
, &
ch_dißbÀd_°©e
);

896 if(
	gWP_TRUE
=
ch_dißbÀd_°©e
)

899 
mem£t
(&
rx_bödög_c⁄fig
, 0, (
WP_rx_bödög_‰_swôchög
));

900 
	grx_bödög_c⁄fig
.
	gdeÁu…_aggªg©i⁄
 = 
ch_öfo
->
agg_‰_rx_ho°_Êow
;

901 
	grx_bödög_c⁄fig
.
	gmru
 = 
N_FR_MAX_SDU
 ;

902 
	g°©us
 = 
WP_IwRxBödögModify
(
ch_öfo
->
rx_iw_h™dÀ
,

903 
≈_sy°em
->
sy°em_‰_h™dÀ
,

904 
qnode_‰_iw
,

905 
WP_IW_RX_BIND_MOD_MRU
|
WP_IW_RX_BIND_MOD_DEFAULT_AGG
,

906 &
rx_bödög_c⁄fig
);

907 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwRxBindingModify disable");

908 
WP_Dñay
(50);

910 
	g°©us
 = 
WP_Ch™√lE«bÀ
(
ch_öfo
->
rx_iw_h™dÀ
);

911 i‡–
°rcmp
("WP_ERR_CH_ALREADY_ENABLED", 
WP_îr‹_«me
[
WP_ERROR
(
°©us
)]) != 0)

913 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelEnable()Çp_enable_fr_iw_rx channel");

918 if(
	gch_öfo
->
	gtx_iw_h™dÀ
 == 0);

919 ()
WP_Ch™√lSètus
(
ch_öfo
->
tx_iw_h™dÀ
, 
WP_CH_STATUS_DISABLED
, &
ch_dißbÀd_°©e
);

920 if(
	gWP_TRUE
=
ch_dißbÀd_°©e
)

922 
tx_bödög
.
maxt
 = 
NPU_FR_TX_MAXT
;

923 
	gtx_bödög
.
	gdci_mode
 = 
WP_IW_DYN_CH_INSERT_ENABLE
;

924 
	g°©us
 = 
WP_IwTxBödögModify
(
ch_öfo
->
tx_iw_h™dÀ
,

925 
WP_IW_TX_BIND_MOD_MAXT
 | 
WP_IW_TX_BIND_MOD_DCI
,

926 
WP_IW_TX_BINDING
,

927 &
tx_bödög
);

929 
	g°©us
 = 
WP_Ch™√lE«bÀ
(
ch_öfo
->
tx_iw_h™dÀ
);

930 i‡–
°rcmp
("WP_ERR_CH_ALREADY_ENABLED", 
WP_îr‹_«me
[
WP_ERROR
(
°©us
)]) != 0)

932 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelEnable()Çp_enable_fr_iw_tx channel");

938 
WP_iw_agg_dúe˘m≠
 
	gtx2brg_agg_cfg
[1] =

943  
WP_IW_RFCS_DISABLE
,

944  
WP_IW_L2H_INSERT_ENABLE
,

945  
WP_IW_IRQT1
,

946  
WP_IW_ERRPKT_DISCARD
,

947  
WP_IW_INT_DISABLE
,

948 #i‡
STATISTICS_ENABLE


949  
WP_IW_STAT_ENABLE
,

951  
WP_IW_STAT_DISABLE
,

953  
WP_IW_TIME_STAMP_DISABLE
,

965  
NULL
,

967  
NULL
,

968  
WP_IW_LENGTH_UPDATE_L3
,

973 
WP_h™dÀ
 
iw_sys_bridgög
;

974 
WP_h™dÀ
 
iw_íë_1
;

975 
WP_h™dÀ
 
deÁu…_ho°_aggªg©i⁄
;

976 
WP_h™dÀ
 
agg_íë_1
,
iw_rx_ho°_h™dÀ
;

977 
WP_iw_agg_dúe˘m≠
 
bridge_iw_agg_cfg
[];

979 
≈_¸ót_‰_iw_ch™√l
(
FR_CHANNEL_INFO
 * 
ch_öfo
)

981 
WP_U32
 
	gch™√…ag
 = 
ch_öfo
->
vÂ‹t
;

982 
NP_SYSTEM_INFO
 * 
	g≈_sy°em
;

983 
	g≈_sy°em
 = 
≈_gë_sy°em_öfo
();

985 
WP_h™dÀ
 
	g°©us
;

987 
WP_ch_‰
 
	g‰_ch_c⁄fig
;

988 
mem£t
((*)&
‰_ch_c⁄fig
,0,(fr_ch_config));

989 
	g‰_ch_c⁄fig
.
	götmode
 = 
WP_PKTCH_INT_DISABLE
;

990 
	g‰_ch_c⁄fig
.
	g°©mode
 = 
WP_PKTCH_STAT_ENABLE
;

991 
	g‰_ch_c⁄fig
.
	giwmode
 = 
WP_PKTCH_IWM_ENABLE
;

992 
	g‰_ch_c⁄fig
.
	grx_queue_thªshﬁd
 = 200;

993 
	g‰_ch_c⁄fig
.
	gtx_›mode
 = 
WP_FRCH_OP_NORMAL
;

994 
	g‰_ch_c⁄fig
.
	gtx_‰_hódî_ty≥
 = 
WP_FRCH_HEADER_2BYTES
;

995 
	g‰_ch_c⁄fig
.
	gtx_‰agmít_size
 = 0;

996 
	g‰_ch_c⁄fig
.
	gtx_pqblock
 = 0;

997 
	g‰_ch_c⁄fig
.
	gtx_pqÀvñ
 = 0;

998 
STRU_SET_INITAIL_CONFIG
 *
	göôül_cfg
 = 
≈u_gë_öôül_cfg_öfo
();

1001 #i‡
START_SCHEDULER


1003 
WP_pkt_sh≠ög_cú_eú
 
	g‰_sh≠ög_∑øm
;

1004 
	g‰_sh≠ög_∑øm
.
	gcú
 = 
öôül_cfg
->
°ru_°m1_cfg_öfo
[
ch_öfo
->
ˇrd
-1].
åunk_öfo
[ch_öfo->
åunk
-1].
group_öfo
[ch_öfo->
group
].
PVCQos
[ch_öfo->
dlci
].
cú
;

1005 if(
	gWT_MIN_CH_RATE
 > 
	g‰_sh≠ög_∑øm
.
	gcú
)

1008 
	g‰_sh≠ög_∑øm
.
	gcú
 = 
WT_MIN_CH_RATE
 ;

1011 if(
	gWT_MAX_CH_RATE
 < 
	g‰_sh≠ög_∑øm
.
	gcú
)

1014 
	g‰_sh≠ög_∑øm
.
	gcú
 = 
WT_MAX_CH_RATE
 ;

1017 
	g‰_sh≠ög_∑øm
.
	gcú_pﬁlög
 = 
‰_sh≠ög_∑øm
.
cú
;

1018 
	g‰_sh≠ög_∑øm
.
	gcbs
 = 
öôül_cfg
->
°ru_°m1_cfg_öfo
[
ch_öfo
->
ˇrd
-1].
åunk_öfo
[ch_öfo->
åunk
-1].
group_öfo
[ch_öfo->
group
].
PVCQos
[ch_öfo->
dlci
].
bc
;

1019 
	g‰_sh≠ög_∑øm
.
	gebs

öôül_cfg
->
°ru_°m1_cfg_öfo
[
ch_öfo
->
ˇrd
-1].
åunk_öfo
[ch_öfo->
åunk
-1].
group_öfo
[ch_öfo->
group
].
PVCQos
[ch_öfo->
dlci
].
be
;

1020 
	g‰_sh≠ög_∑øm
.
	geú_pﬁlög
 = 
WP_SHAPING_POLL_AUTOD
;

1021 
	g‰_sh≠ög_∑øm
.
	geú
 = 
‰_sh≠ög_∑øm
.
cú
;

1022 
	g‰_sh≠ög_∑øm
.
	geú_tq
 = 2;

1023 
	g‰_sh≠ög_∑øm
.
	geú_cwid
 = 
WP_CW_ID_A
;

1025 
	g‰_ch_c⁄fig
.
	gtx_sh≠ög_ty≥
 = 
WP_PKT_SHAPING_CIR_EIR
;

1026 
	g‰_ch_c⁄fig
.
	gtx_sh≠ög_∑øms
 = &
‰_sh≠ög_∑øm
;

1027 
	g‰_ch_c⁄fig
.
	gtx_tq
 = 1;

1033 
WP_pkt_sh≠ög_wfq
 
	g‰_sh≠ög_∑øm
;

1034 
	g‰_sh≠ög_∑øm
.
	gweight
 = 1;

1035 
	g‰_sh≠ög_∑øm
.
	gweight_‰a˘i⁄
 = 1;

1036 
	g‰_ch_c⁄fig
.
	gtx_sh≠ög_ty≥
 = 
WP_PKT_SHAPING_WFQ
;

1037 
	g‰_ch_c⁄fig
.
	gtx_sh≠ög_∑øms
 = &
‰_sh≠ög_∑øm
;

1038 
	g‰_ch_c⁄fig
.
	gtx_tq
 = 1;

1042 
	g‰_ch_c⁄fig
.
	gtx_cwid
 = 
WP_CW_ID_A
;

1043 
	g‰_ch_c⁄fig
.
	grx_fbp_dr›_thªshﬁd
 = 2;

1045 
	gch_öfo
->
	gtx_iw_h™dÀ

WP_Ch™√lCª©e
(0,
ch_öfo
->
devi˚_h™dÀ
,
qnode_‰_iw
, 
WP_CH_TX
, 
WP_FRAME_RELAY
 ,&
‰_ch_c⁄fig
);

1046 
ãrmö©e_⁄_îr‹
(
ch_öfo
->
tx_iw_h™dÀ
, "WP_ChannelCreate()Åx_iw_handle");

1048 
	g‰_ch_c⁄fig
.
	grx_dlci
 = 
ch_öfo
->
dlci
;

1049 
	gch_öfo
->
	grx_iw_h™dÀ
 = 
WP_Ch™√lCª©e
(0,
ch_öfo
->
devi˚_h™dÀ
,
qnode_‰_iw
,
WP_CH_RX
, 
WP_FRAME_RELAY
 ,&
‰_ch_c⁄fig
);

1050 
ãrmö©e_⁄_îr‹
(
ch_öfo
->
rx_iw_h™dÀ
, "WP_ChannelCreate()Ñx_iw_handle");

1056 
WP_iw_agg_‰_swôchög
 
	g‰_iw_tx_agg_c⁄fig
;

1057 
mem£t
(&
‰_iw_tx_agg_c⁄fig
,0,(
WP_iw_agg_‰_swôchög
));

1058 
	g‰_iw_tx_agg_c⁄fig
.
	gÊow_agg_ty≥
=
WP_IW_AGG_PRIMARY
;

1059 
	g‰_iw_tx_agg_c⁄fig
.
	gèg
 = 
ch™√…ag
;

1060 
	g‰_iw_tx_agg_c⁄fig
.
	gtxfunc
 = 0;

1061 
	g‰_iw_tx_agg_c⁄fig
.
	grfcs
 = 0;

1062 
	g‰_iw_tx_agg_c⁄fig
.
	göãºu±queue
 = 
WP_IW_IRQT0
;

1063 
	g‰_iw_tx_agg_c⁄fig
.
	gîr‹_pkt_mode
 = 
WP_IW_ERRPKT_DISCARD
;

1064 
	g‰_iw_tx_agg_c⁄fig
.
	götmode
 = 
WP_IW_INT_ENABLE
;

1065 
	g‰_iw_tx_agg_c⁄fig
.
	g°©mode
 = 
WP_IW_STAT_ENABLE
;

1066 
	g‰_iw_tx_agg_c⁄fig
.
	gtime°amp_mode
 = 
WP_IW_TIME_STAMP_DISABLE
;

1067 
	g‰_iw_tx_agg_c⁄fig
.
	gov_poﬁ_mode
 = 
WP_IW_OV_POOL_DISABLE
;

1068 
	g‰_iw_tx_agg_c⁄fig
.
	gfbp_dr›_thªshﬁd
 = 0;

1069 
	g‰_iw_tx_agg_c⁄fig
.
	gmtu
 = 2500;

1070 
mem£t
(
‰_iw_tx_agg_c⁄fig
.
¥efix_hódî
, 0, 32);

1071 
	g‰_iw_tx_agg_c⁄fig
.
	gl2_hódî_ö£π_mode
 = 
WP_IW_L2H_INSERT_DISABLE
;

1072 
	g‰_iw_tx_agg_c⁄fig
.
	gexåa˘i⁄_Àngth
 = 0;

1073 
	g‰_iw_tx_agg_c⁄fig
.
	g¥efix_Àngth
 = 0;

1074 
	g‰_iw_tx_agg_c⁄fig
.
	gauto_¥Ÿocﬁ_c⁄vîsi⁄_mode
 = 
WP_IW_PROTOCOL_CONV_DISABLE
;

1075 
	g‰_iw_tx_agg_c⁄fig
.
	g¥Ÿocﬁ_pdu_upd©e_mode
 = 
WP_IW_PDU_UPDATE_DISABLE
;

1082 
	g‰_iw_tx_agg_c⁄fig
.
	gtxfunc
 = 
ch_öfo
->
rx_ho°_h™dÀ
;

1084 if(
	gch_öfo
->
	gagg_‰_rx_ho°_Êow
 == 0)

1086 
ch_öfo
->
agg_‰_rx_ho°_Êow
 = 
WP_IwFlowAggªg©i⁄Cª©e
(0,

1087 
WP_IW_FR_SWITCHING_MODE
,

1088 &
‰_iw_tx_agg_c⁄fig
);

1089 
ãrmö©e_⁄_îr‹
(
ch_öfo
->
agg_‰_rx_ho°_Êow
, "WP_IwFlowAggregationCreate ch_info->agg_fr_rx_host_flow");

1090 
WDDI_INFO
("Info:Çp_¸ót_‰_iw_ch™√l, cª©edágg_‰_rx_ho°_Êow:0x%x\n", 
ch_öfo
->
agg_‰_rx_ho°_Êow
);

1092 
WP_rx_bödög_‰_swôchög
 
	grx_bödög_c⁄fig
;

1093 
mem£t
(&
rx_bödög_c⁄fig
, 0, (
WP_rx_bödög_‰_swôchög
));

1095 
	grx_bödög_c⁄fig
.
	gdeÁu…_aggªg©i⁄
 = 
ch_öfo
->
agg_‰_rx_ho°_Êow
;

1096 
	grx_bödög_c⁄fig
.
	gmru
 = 
N_FR_MAX_SDU
 ;

1097 
	g°©us
 = 
WP_IwRxBödögCª©e
(
ch_öfo
->
rx_iw_h™dÀ
,

1098 
≈_sy°em
->
sy°em_‰_h™dÀ
,

1099 
qnode_‰_iw
,

1100 &
rx_bödög_c⁄fig
);

1102 
ãrmö©e_⁄_îr‹
(
°©us
, "np_creat_fr_iw_channel WP_IwRxBindingCreate");

1105 
	g°©us
 = 
WP_IwSy°emBuûd
(
≈_sy°em
->
sy°em_‰_h™dÀ
);

1107 
	g‰_iw_tx_agg_c⁄fig
.
	gèg
 = 
RX_FR_INT_PRIO_MSG_TAG
;

1108 
	g‰_iw_tx_agg_c⁄fig
.
	gtxfunc
 = 
≈_sy°em
->
Ch™√l_FR_PrioRx0_ho°_h™dÀ
;

1110 if(
	g≈_sy°em
->
	gagg_FR_PrioRx0_ho°_h™dÀ
 == 0)

1112 
≈_sy°em
->
agg_FR_PrioRx0_ho°_h™dÀ
 = 
WP_IwFlowAggªg©i⁄Cª©e
(0,

1113 
WP_IW_FR_SWITCHING_MODE
,

1114 &
‰_iw_tx_agg_c⁄fig
);

1115 
ãrmö©e_⁄_îr‹
(
≈_sy°em
->
agg_FR_PrioRx0_ho°_h™dÀ
, "WP_IwFlowAggregationCreateágg_FR_PrioRx0_host_handle");

1118 
	g°©us
 = 
WP_Ch™√lE«bÀ
(
≈_sy°em
->
Ch™√l_FR_PrioRx0_ho°_h™dÀ
);

1119 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelEnable() Channel_FR_PrioRx0_host_handle");

1122 
u32
 
	gFlowIndex
 = 
WPI_HANDLE_INDEX
(
≈_sy°em
->
agg_FR_PrioRx0_ho°_h™dÀ
);

1123 
F¥ötf
("≈_sy°em->agg_FR_PrioRx0_ho°_h™dÀ FlowIndex = 0x%x \n",
FlowIndex
);

1124 
u32
 
	gèg
 = 0;

1125 
	g°©us
;

1126 
	g°©us
 = 
WP_WDDI_ResFôwGëTag
(
FlowIndex
,&
èg
);

1127 if(
	g°©us
)

1129 
F¥ötf
("≈_sy°em->agg_FR_PrioRx0_ho°_h™dÀ gë faû = 0x%x \n",
FlowIndex
);

1131 
F¥ötf
("≈_sy°em->agg_FR_PrioRx0_ho°_h™dÀÅag = 0x%x \n",
èg
);

1134 #i‡
NPU_PRIORITY_MSG


1135 
wp_¥i‹ôy_msg
 
	gÊowTabÀ
;

1136 
mem£t
(&
ÊowTabÀ
,0,(flowTable));

1137 
	gÊowTabÀ
.
	gÊow_num
[0] = 
≈_sy°em
->
agg_FR_PrioRx0_ho°_h™dÀ
;

1138 ()
WP_Pri‹ôyMsgFlowSë
(0,
WP_PRIORIYT_MSG_FR_TYPE
,&
ÊowTabÀ
);

1143 
WP_Êow_‰_sw
 
	gÊow_‰_sw
;

1144 
	gÊow_‰_sw
.
	gaggªg©i⁄
 = 
ch_öfo
->
agg_‰_rx_ho°_Êow
;

1145 
WP_h™dÀ
 
	gÊow_h™dÀ
;

1146 
	gÊow_h™dÀ
 = 
WP_IwFlowAdd
(
≈_sy°em
->
sy°em_‰_h™dÀ
,

1147 
WP_FLOW_FR_SWITCHING
,

1148 &
Êow_‰_sw
);

1152 
	g°©us
 = 
WP_Ch™√lE«bÀ
(
ch_öfo
->
rx_iw_h™dÀ
);

1153 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelEnable()Ñx_fr_iw_handle");

1156 
WP_tx_bödög
 
	gtx_bödög_c⁄fig
;

1157 
	gtx_bödög_c⁄fig
.
	gdci_mode
 = 
WP_IW_DYN_CH_INSERT_ENABLE
;

1158 
	gtx_bödög_c⁄fig
.
	gmaxt
 = 
NPU_FR_TX_MAXT
;

1159 
	g°©us
 = 
WP_IwTxBödögCª©e
(
ch_öfo
->
tx_iw_h™dÀ
, 
WP_IW_TX_BINDING
,&
tx_bödög_c⁄fig
);

1160 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwTxBindingCreate()Åx_fr_iw_handle");

1163 
	g°©us
 = 
WP_Ch™√lE«bÀ
(
ch_öfo
->
tx_iw_h™dÀ
);

1164 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelEnable()Åx_fr_iw_handle");

1167 
WP_tx_bödög
 
	gtx_‰_bödög
[1]=

1171  
WP_IW_DYN_CH_INSERT_ENABLE
,

1172  
NPU_FR_RX_MAXT
,

1177 
WP_ch_iw_rx
 
	gch_c⁄fig_iw_‰
[1]=

1182  
WP_IW_TX_BINDING
,

1183  
tx_‰_bödög


1187 
WP_ch_iw_tx
 
	gch_c⁄fig_iw_tx_‰
[1] =

1192  
WP_IW_CH_GROUP_ID_NULL
,

1197 
WP_h™dÀ
 
iw_sys_bridgög
;

1198 
WP_bridge_p‹t
 
bp‹t_c⁄f
[];

1199 
≈_¸ót_‰_ho°_ch™√l
(
FR_CHANNEL_INFO
 * 
ch_öfo
)

1201 
WP_h™dÀ
 
	g°©us
;

1203 
WP_ch_‰
 
	g‰_ch_c⁄fig
;

1206 
mem£t
((*)&
‰_ch_c⁄fig
,0,(fr_ch_config));

1207 
	g‰_ch_c⁄fig
.
	grx_fbp_dr›_thªshﬁd
 = 2;

1209 
	g‰_ch_c⁄fig
.
	götmode
 = 
WP_PKTCH_INT_DISABLE
;

1210 
	g‰_ch_c⁄fig
.
	g°©mode
 = 
WP_PKTCH_STAT_ENABLE
;

1211 
	g‰_ch_c⁄fig
.
	giwmode
 = 
WP_PKTCH_IWM_DISABLE
;

1212 
	g‰_ch_c⁄fig
.
	grx_queue_thªshﬁd
 = 200;

1213 
	g‰_ch_c⁄fig
.
	gtx_›mode
 = 
WP_FRCH_OP_NORMAL
;

1214 
	g‰_ch_c⁄fig
.
	gtx_‰_hódî_ty≥
 = 
WP_FRCH_HEADER_2BYTES
;

1215 
	g‰_ch_c⁄fig
.
	gtx_‰agmít_size
 = 0;

1216 
	g‰_ch_c⁄fig
.
	gtx_pqblock
 = 0;

1217 
	g‰_ch_c⁄fig
.
	gtx_pqÀvñ
 = 0;

1218 
STRU_SET_INITAIL_CONFIG
 *
	göôül_cfg
 = 
≈u_gë_öôül_cfg_öfo
();

1221 #i‡
START_SCHEDULER


1222 
WP_pkt_sh≠ög_cú
 
	g‰_sh≠ög_∑øm
;

1223 
	g‰_ch_c⁄fig
.
	gtx_sh≠ög_ty≥
 = 
WP_PKT_SHAPING_CIR
;

1225 
	g‰_ch_c⁄fig
.
	gtx_sh≠ög_∑øms
 = &
‰_sh≠ög_∑øm
;

1226 
	g‰_sh≠ög_∑øm
.
	gcú
 = 
öôül_cfg
->
°ru_°m1_cfg_öfo
[
ch_öfo
->
ˇrd
-1].
åunk_öfo
[ch_öfo->
åunk
-1].
group_öfo
[ch_öfo->
group
].
PVCQos
[ch_öfo->
dlci
].
cú
;

1227 if(
	gWT_MIN_CH_RATE
 > 
	g‰_sh≠ög_∑øm
.
	gcú
)

1230 
	g‰_sh≠ög_∑øm
.
	gcú
 = 
WT_MIN_CH_RATE
 ;

1233 if(
	gWT_MAX_CH_RATE
 < 
	g‰_sh≠ög_∑øm
.
	gcú
)

1236 
	g‰_sh≠ög_∑øm
.
	gcú
 = 
WT_MAX_CH_RATE
 ;

1239 
	g‰_sh≠ög_∑øm
.
	gcbs
 = 
‰_sh≠ög_∑øm
.
cú
/100;

1240 
	g‰_sh≠ög_∑øm
.
	gpﬁlög
 = 
WP_SHAPING_POLL_AUTOD
;

1242 
	g‰_ch_c⁄fig
.
	gtx_tq
 = 0;

1245 
WP_pkt_sh≠ög_wfq
 
	g‰_sh≠ög_∑øm
;

1246 
	g‰_sh≠ög_∑øm
.
	gweight
 = 1;

1247 
	g‰_sh≠ög_∑øm
.
	gweight_‰a˘i⁄
 = 1;

1248 
	g‰_ch_c⁄fig
.
	gtx_sh≠ög_ty≥
 = 
WP_PKT_SHAPING_WFQ
;

1249 
	g‰_ch_c⁄fig
.
	gtx_sh≠ög_∑øms
 = &
‰_sh≠ög_∑øm
;

1250 
	g‰_ch_c⁄fig
.
	gtx_tq
 = 0;

1253 
	g‰_ch_c⁄fig
.
	gtx_cwid
 = 
WP_CW_ID_A
;

1255 
NP_SYSTEM_INFO
 * 
	g≈_sy°em
;

1256 
	g≈_sy°em
 = 
≈_gë_sy°em_öfo
();

1259 
WP_h™dÀ
 
	gbridge_p‹t
;

1260 
	gbridge_p‹t
 = 
WP_IwP‹tCª©e
(
iw_sys_bridgög
,
bp‹t_c⁄f
);

1261 
ãrmö©e_⁄_îr‹
–
bridge_p‹t
,"IwHostTxChannel() WP_IwPortCreate");

1262 
	gch_c⁄fig_iw_tx_‰
->
	göput_p‹t
 = 
bridge_p‹t
;

1263 
	gch_c⁄fig_iw_tx_‰
->
	giw_sy°em
 = 
iw_sys_bridgög
;

1268 
	gch_öfo
->
	gtx_ho°_h™dÀ

WP_Ch™√lCª©e
(0,
ch_öfo
->
devi˚_h™dÀ
,
qnode_‰_ho°
, 
WP_CH_TX
, 
WP_FRAME_RELAY
 ,&
‰_ch_c⁄fig
);

1269 
ãrmö©e_⁄_îr‹
(
ch_öfo
->
tx_ho°_h™dÀ
, "WP_ChannelCreate()Åx_host_handle");

1273 
	gch_öfo
->
	grx_ho°_h™dÀ
 = 
WP_Ch™√lCª©e
(0,
‰_iw_ho°_devi˚
,
qnode_‰_iw
,
WP_CH_RX
, 
WP_IW_HOST
 ,&
ch_c⁄fig_iw_‰
[0]);

1275 
ãrmö©e_⁄_îr‹
(
ch_öfo
->
rx_ho°_h™dÀ
, "WP_ChannelCreate()Ñx_host_handle");

1278 
WP_tx_bödög
 
	gtx_‰_bödög_¥i‹ôy
[1]=

1282  
WP_IW_DYN_CH_INSERT_ENABLE
,

1283  
NPU_FR_RX_MAXT_PRI
,

1288 
WP_ch_iw_rx
 
	gch_c⁄fig_iw_‰_¥i‹ôy
[1]=

1293  
WP_IW_TX_BINDING
,

1294  
tx_‰_bödög_¥i‹ôy


1299 if(
	g≈_sy°em
->
	gCh™√l_FR_PrioRx0_ho°_h™dÀ
 == 0)

1301 
≈_sy°em
->
Ch™√l_FR_PrioRx0_ho°_h™dÀ
 = 
WP_Ch™√lCª©e
(0,
‰_iw_ho°_devi˚
,
qnode_‰_iw
,
WP_CH_RX
, 
WP_IW_HOST
 ,&
ch_c⁄fig_iw_‰_¥i‹ôy
[0]);

1302 
ãrmö©e_⁄_îr‹
(
≈_sy°em
->
Ch™√l_FR_PrioRx0_ho°_h™dÀ
, "WP_ChannelCreate() Channel_FR_PrioRx0_host_handle");

1309 
	g°©us
 = 
WP_Ch™√lE«bÀ
(
ch_öfo
->
rx_ho°_h™dÀ
);

1310 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelEnable()Ñx_fr_host_handle");

1312 
	g°©us
 = 
WP_Ch™√lE«bÀ
(
ch_öfo
->
tx_ho°_h™dÀ
);

1313 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelEnable()Åx_fr_host_handle");

1317 
WT_SîdesI¡îru±
(
WP_U32
 
wpid
, WP_U32 
sig«l_öfo
)

1319 
	gi
, 
	göt_ªg
, 
	g°a_ªg
, 
	gtmp
;

1321 
¥ötf
("£rdes\n"); 
fÊush
(
°dout
);

1324 
	gtmp
 = *(vﬁ©ûê*)()(0x1e0082e¯+ 
WPL_RIF_VIRTUAL
(0, 0));

1325 *(vﬁ©ûê*)()(0x1e0082e¯+ 
WPL_RIF_VIRTUAL
(0,0)Ë
tmp
;

1326 
	göt_ªg
 = 
¡ohl
(
tmp
);

1327 
	gtmp
 = *(vﬁ©ûê*)()(0x1e0082c¯+ 
WPL_RIF_VIRTUAL
(0, 0));

1328 
	g°a_ªg
 = 
¡ohl
(
tmp
);

1330 
	gi
=0; i<3; i++) {

1331 if(
	göt_ªg
 & (1 << (4*
	gi
))) {

1332 if(
	g°a_ªg
 & (4 << (12-(4*
	gi
)))) {

1333 
¥ötf
("P‹à%d: RPLL OK\n", 
i
);

1335 
¥ötf
("P‹à%d: RPLL KO\n", 
i
);

1338 if(
	göt_ªg
 & (2 << (4*
	gi
))) {

1339 if(
	g°a_ªg
 & (2 << (12-(4*
	gi
)))) {

1340 
¥ötf
("P‹à%d: Sig«»OK\n", 
i
);

1342 
¥ötf
("P‹à%d: Sig«»KO\n", 
i
);

1345 if(
	göt_ªg
 & (4 << (4*
	gi
))) {

1346 if(
	g°a_ªg
 & (1 << (12-(4*
	gi
)))) {

1347 
¥ötf
("P‹à%d: Rx Locked\n", 
i
);

1349 
¥ötf
("P‹à%d: Rx Lock faûed\n", 
i
);

1355 
WT_SgmiiAnI¡îru±
(
WP_U32
 
wpid
, WP_U32 
sig«l_öfo
)

1357 
	gèdú
, 
	gtmp
;

1359 
¥ötf
("™\n"); 
fÊush
(
°dout
);

1361 
	gtmp
 = *(vﬁ©ûê*)()(0x1e016234 + 
WPL_RIF_VIRTUAL
(0, 0));

1362 
	gèdú
 = 
¡ohl
(
tmp
);

1364 if(
	gèdú
 & 1) {

1365 
¥ötf
("Port 0: AN interrupt: AN failed\n");

1368 if(
	gèdú
 & 2) {

1369 
¥ötf
("Port 0: AN interrupt: AN complete\n");

1372 
	gtmp
 = *(vﬁ©ûê*)()(0x1e018234 + 
WPL_RIF_VIRTUAL
(0, 0));

1373 
	gèdú
 = 
¡ohl
(
tmp
);

1375 if(
	gèdú
 & 1) {

1376 
¥ötf
("Port 1: AN interrupt: AN failed\n");

1379 if(
	gèdú
 & 2) {

1380 
¥ötf
("Port 1: AN interrupt: AN complete\n");

1383 
	gtmp
 = *(vﬁ©ûê*)()(0x1e016274 + 
WPL_RIF_VIRTUAL
(0, 0));

1384 
	gèdú
 = 
¡ohl
(
tmp
);

1386 if(
	gèdú
 & 1) {

1387 
¥ötf
("Port 2: AN interrupt: AN failed\n");

1390 if(
	gèdú
 & 2) {

1391 
¥ötf
("Port 2: AN interrupt: AN complete\n");

1398 
WTUFE_c⁄fig_sy°em
–
WP_U32
 
u„_lb_mode
,WP_U32 
u„_p‹t
)

1400 
WUFE_öô_c⁄fig
 
	gwu„_c⁄fig
 = {0};

1401 
WUFE_sy°em
 
	gwu„_sy°em_c⁄fig
 = {0};

1402 
WUFE_°©us
 
	g°©us
;

1403 
WP_U32
 
	gi
, 
	gj
, 
	gk
, 
	g¥›îty
;

1406 
	gi
 = 0;i<1;i++)

1408 
	gwu„_c⁄fig
.
	gu„_id
 = 
UFE_ID
+
i
;

1409 if(
	gu„_p‹t
 =
WTUFE_UPI_PORT_1
)

1410 
wu„_c⁄fig
.
©åibuãs
 = 
WUFE_ATTRIB_CONNECT_OFFSET_F
(0);

1412 
	gwu„_c⁄fig
.
	g©åibuãs
 = 
WUFE_ATTRIB_CONNECT_OFFSET_F
(1);

1415 
	g°©us
 = 
WUFE_U„Inô
(&
wu„_c⁄fig
);

1417 
WT_U„Tîmö©eOnEº‹
(
°©us
,"WUFE_U„Inô",
i
,
__LINE__
);

1419 
	g°©us
 = 
WUFE_Devi˚Ty≥Së
(0, 
WUFE_DEVICE_TYPE_UFE412_M4
);

1420 
WT_U„Tîmö©eOnEº‹
(
°©us
, "WUFE_Devi˚Ty≥Së", 
i
, 
__LINE__
);

1424 
	gwu„_sy°em_c⁄fig
.
	gmax_löe_numbî
 = 
N_UFE_MAX_LINES_T1
;

1425 
	gwu„_sy°em_c⁄fig
.
	gmax_phy_numbî
 = 
N_UFE_MAX_PHYS
;

1426 
	gwu„_sy°em_c⁄fig
.
	glöe_öãrÁ˚
 = 
WUFE_INTERFACE_SDH
;

1427 
	gwu„_sy°em_c⁄fig
.
	gfifo_m™agî
.
	glo›back
 = 
WUFE_FM_LOOPBACK_DISABLE
;

1428 
	gwu„_sy°em_c⁄fig
.
	gfifo_m™agî
.
	grx_fbp_size
 = 
N_UFE_MAX_PHYS
 *4;

1429 
	gwu„_sy°em_c⁄fig
.
	gfifo_m™agî
.
	gtx_fbp_size
 = 
N_UFE_MAX_PHYS
 *4;

1430 
	gwu„_sy°em_c⁄fig
.
	gmax_buff_num
 = 
WUFE_MAX_BUF_SIZE_64
;

1432 
	gwu„_sy°em_c⁄fig
.
	gidÀ_∑âîn
.
	gtx_idÀ_byã_d©a_∑âîn
 = 0x81;

1433 
	gwu„_sy°em_c⁄fig
.
	gidÀ_∑âîn
.
	gtx_idÀ_nibbÀ_ˇs_∑âîn
 = 4;

1434 
	gwu„_sy°em_c⁄fig
.
	gemphy
.
	grx_∑rôy_mode
 = 
WUFE_RX_PARITY_EVEN
;

1435 
	gwu„_sy°em_c⁄fig
.
	gemphy
.
	gtx_∑rôy_mode
 = 
WUFE_RX_PARITY_EVEN
;

1436 
	gwu„_sy°em_c⁄fig
.
	gemphy
.
	gtx_∑rôy_check
 = 
WUFE_TX_PARITY_IGNORE
;

1438 
	gwu„_sy°em_c⁄fig
.
	gsy°em_˛ock_ªc_íabÀ
 = 
WUFE_SYSTEM_CLOCK_REC_DISABLE
;

1439 
	gwu„_sy°em_c⁄fig
.
	g˛k_ªc_sy°em_∑øms
 = 
NULL
;

1441 
	gwu„_sy°em_c⁄fig
.
	g˛ock_ªc_sys_∑øms
 = 
NULL
;

1443 
	g°©us
 = 
WUFE_Sy°emC⁄fig
(
UFE_ID
+
i
, &
wu„_sy°em_c⁄fig
);

1445 
WT_U„Tîmö©eOnEº‹
(
°©us
,"WUFE_Sy°emC⁄fig",
i
,
__LINE__
);

1447 
F¥ötf
("UFE Sy°em C⁄figuøti⁄ Com∂ëêu„Id = %d\n",
i
);

1450 
	g¥›îty
 = 
WUFE_SYS_EMPHY
;

1451 
	g°©us
 = 
WUFE_Sy°emE«bÀ
(
UFE_ID
+
i
, 
¥›îty
, 
WUFE_FULL_DUPLEX
);

1453 
WT_U„Tîmö©eOnEº‹
(
°©us
,"WUFE_Sy°emE«bÀ",
i
,
__LINE__
);

1457 
WPL_I¡C⁄√˘
(
WP_WINPATH
(0), 
WPL_Eöt3U„4
, 0, 
WT_Eöt3I¡îru±
);

1458 
WPL_I¡E«bÀ
 (
WP_WINPATH
(0), 
WPL_Eöt3U„4
);

1461 
WPL_I¡C⁄√˘
(
WP_WINPATH
(0), 
WPL_SîdesI¡îru±
, 0, 
WT_SîdesI¡îru±
);

1462 
WPL_I¡E«bÀ
 (
WP_WINPATH
(0), 
WPL_SîdesI¡îru±
);

1464 
WPL_I¡C⁄√˘
(
WP_WINPATH
(0), 
WPL_SgmiiAn
, 0, 
WT_SgmiiAnI¡îru±
);

1465 
WPL_I¡E«bÀ
 (
WP_WINPATH
(0), 
WPL_SgmiiAn
);

1469 *(vﬁ©ûê*)()(0x1e0082f0 + 
WPL_RIF_VIRTUAL
(0, 0)) = 0;

1470 *(vﬁ©ûê*)()(0x1e0082f4 + 
WPL_RIF_VIRTUAL
(0, 0)Ë
ht⁄l
(0x80000777);

1473 #i‡
ENEA_RELEASE


1474 *(vﬁ©ûê*)()(0x1e0082c0 + 
WPL_RIF_VIRTUAL
(0, 0)Ë
ht⁄l
(0x05618000);

1475 *(vﬁ©ûê*)()(0x1e0082c4 + 
WPL_RIF_VIRTUAL
(0, 0)Ë
ht⁄l
(0x05618000);

1476 *(vﬁ©ûê*)()(0x1e0082c8 + 
WPL_RIF_VIRTUAL
(0, 0)Ë
ht⁄l
(0x05618000);

1477 *(vﬁ©ûê*)()(0x1e0082b¯+ 
WPL_RIF_VIRTUAL
(0, 0)Ë
ht⁄l
(0x05618000);

1480 
	g°©us
 = 
WUFE_U„FømîHwI¡îru±E«bÀ
(0);

1481 
WT_U„Tîmö©eOnEº‹
(
°©us
, "WUFE_U„FømîHwI¡îru±E«bÀ",0,
__LINE__
);

1485 
WUFE_U„C‹eHwI¡îru±DißbÀ
(0);

1486 
WT_U„Tîmö©eOnEº‹
(
°©us
, "WUFE_U„C‹eHwI¡îru±DißbÀ",0,
__LINE__
);

1487 
	g°©us
 = 
WUFE_Sy°emI¡îru±DißbÀ
(0);

1488 
WT_U„Tîmö©eOnEº‹
(
°©us
, "WUFE_Sy°emI¡îru±DißbÀ ",0,
__LINE__
);

1492 
	g°©us
 = 
WUFE_U„C‹eHwI¡îru±DißbÀ
(0);

1493 
WT_U„Tîmö©eOnEº‹
(
°©us
, "WUFE_U„C‹eHwI¡îru±DißbÀ",0,
__LINE__
);

1497 
WP_U32
 
	g∂l_d©a
;

1498 
WUFEI_BﬂrdRódZ¨lökPŒReg
(0, 0x00, &
∂l_d©a
);

1499 
F¥ötf
("PLL REG 0: %02x\n", 
∂l_d©a
);

1500 
WUFEI_BﬂrdRódZ¨lökPŒReg
(0, 0x61, &
∂l_d©a
);

1501 
F¥ötf
("PLL REG 61: %02x\n", 
∂l_d©a
);

1504 
WPX_UFE_FRAMER_WUFE_löe_å™sf_ty≥
 
	gvc_3_4
;

1505 
WTI_Êexmux_physiˇl_c⁄f
 
	gphysiˇl_c⁄figuøti⁄
 ;

1506 
WTI_FÀxmux_globÆ_£tup
 
	gÊex_globÆ_∑øms
;

1507 
WP_U8
 
	gÊexmux_mode
=0;

1509 
	gphysiˇl_c⁄figuøti⁄
 = 
WT_FLEXMUX_UFE_412_4_PORTS_OC3
;

1511 
	gvc_3_4
 = 
WPX_UFE_FRAMER_WUFE_SDH_TYPE_VC4
;

1512 
	gÊexmux_mode
 = 
WPX_UFE_FRAMER_DEVICE_MODE_SDH
;

1514 
WTI_FÀxmuxInô
(
u„_p‹t
,

1516 
physiˇl_c⁄figuøti⁄
,

1517 
Êexmux_mode
,

1518 
vc_3_4
,

1519 &
Êex_globÆ_∑øms
);

1522 
	g°©us
 = 
WTI_FÀxmuxF‹˚B
(1);

1523 
ãrmö©e_⁄_îr‹
(
°©us
, "WPX_FRMR_SONET_SDH_PORT_ForceB");

1526 
WTUFE_c⁄fig_löes
(
WP_U32
 
löe_lb_mode
)

1528 
WP_U32
 
	glöe_ödex
;

1529 
WP_U32
 
	glöe_ödex_cou¡s
;

1530 
WP_U32
 
	gE1M≠Index
 = 0;

1531 
WP_U16
 
	g‰amög_mode
;

1532 
WP_U8
 
	gˇs_íabÀ
 = 
WUFE_CAS_ENABLE
;

1533 
WP_U8
 
	ge1_mode
 = 
NPU_MODE_E1
;

1534 
WP_U32
 
	g˛ock_mode
 = 
UFE_CLOCK_SLAVE_MODE
;

1535 
STRU_SET_INITAIL_CONFIG
 *
	göôül_cfg
 = 
≈u_gë_öôül_cfg_öfo
();

1536 if(
	göôül_cfg
->
	gO±î©eMode
 =
NPU_MODE_IP
)

1542 if(
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[0].
	g°m1VÆid
 =
NPU_VALID
 && 
öôül_cfg
->
°ru_°m1_cfg_öfo
[1].
°m1VÆid
 == NPU_VALID)

1545 if(
öôül_cfg
->
°ru_°m1_cfg_öfo
[0].
E1T1ty≥
 != initial_cfg->stru_stm1_cfg_info[1].E1T1type)

1547 
WDDI_ERR
("can't support STM1-1 STM-2 configuredÅo different mode \n");

1551 if(
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[0].
	gE1T1ty≥
 =
NPU_MODE_E1
)

1553 
e1_mode
 = 
NPU_MODE_E1
;

1557 
	ge1_mode
 = 
NPU_MODE_T1
;

1561 if(
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[0].
	g°m1VÆid
 =
NPU_VALID
)

1563 
e1_mode
 = 
öôül_cfg
->
°ru_°m1_cfg_öfo
[0].
E1T1ty≥
;

1565 if(
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[1].
	g°m1VÆid
 =
NPU_VALID
)

1567 
e1_mode
 = 
öôül_cfg
->
°ru_°m1_cfg_öfo
[1].
E1T1ty≥
;

1573 if(
	ge1_mode
 =
NPU_MODE_E1
)

1575 
F¥ötf
("NPU_MODE_E1\n");

1576 
	glöe_ödex_cou¡s
 = 
N_UFE_MAX_LINES_E1
;

1577 
	glöe_ödex
=0;Üöe_ödex < 
	glöe_ödex_cou¡s
;Üine_index++)

1579 if((
	glöe_ödex
%
	gN_UFE_MAX_LINES_SPE_T1
)>=
N_UFE_MAX_LINES_SPE_E1
)

1581 
löe_ödex_cou¡s
++;

1584 
	gE1M≠TabÀ
[
E1M≠Index
++] = 
löe_ödex
;

1586 
	glöe_ödex
=0;Üöe_ödex < 
	gN_UFE_MAX_LINES_E1
;Üine_index++)

1589 
u32
 
	g°m1Id
,
	gåunkId
;

1590 
	g°m1Id
 = 
löe_ödex
/(
N_UFE_MAX_LINES_E1
/2);

1591 
	gåunkId
 = 
löe_ödex
%(
N_UFE_MAX_LINES_E1
/2);

1592 if(
	gOPMODE_E1_FALSE
 =
öôül_cfg
->
°ru_°m1_cfg_öfo
[
°m1Id
].
åunk_öfo
[
åunkId
].
O±_Mode
)

1594 
‰amög_mode
 = 
WUFE_UNFRAMED
;

1595 
	gˇs_íabÀ
 = 
WUFE_CAS_DISABLE
;

1600 
	g‰amög_mode
 = 
WUFE_FRAMED
;

1601 
	gi
;

1602 if(
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1Id
].
	gåunk_öfo
[
åunkId
].
	gåunkVÆid
)

1604 
	gi
 = 0;i < 32;i++)

1606 if(
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1Id
].
	gåunk_öfo
[
åunkId
].
	ggroup_öfo
[
i
].
	ggroupVÆid
)

1608 if(
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1Id
].
	gåunk_öfo
[
åunkId
].
	ggroup_öfo
[
i
].
	g¶Ÿ_£À˘i⁄
&0x00010000)

1610 
	gˇs_íabÀ
 = 
WUFE_CAS_DISABLE
;

1618 if(
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1Id
].
	gåunk_öfo
[
åunkId
].
	gåunkVÆid
)

1620 if(
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1Id
].
	gåunk_öfo
[
åunkId
].
	g˛ock_mode
 =
NPU_E1T1_CLOCK_MASTER
)

1622 
˛ock_mode
 = 
UFE_CLOCK_MASTER_MODE
;

1626 
	g˛ock_mode
 = 
UFE_CLOCK_SLAVE_MODE
;

1628 
F¥ötf
("löe_ödex = %d fømög_modê%d cas_íabÀ = %d clock_modê%d \n",
löe_ödex
,
‰amög_mode
,
ˇs_íabÀ
,
˛ock_mode
);

1629 
WT_Np_U„LöeC⁄figuªAndCª©eE1
(
löe_ödex
, 
‰amög_mode
, 
ˇs_íabÀ
,
löe_lb_mode
,
˛ock_mode
);

1630 
	gªc⁄figStm1_¸óãE1_Êag
[
löe_ödex
] = 1;

1634 
F¥ötf
("Cª©êDeÁu… E1†f‹Åhe£ un-c⁄figuªd E1s:Üöe_ödex = %d fømög_modê%d cas_íabÀ = %d clock_modê%d \n",
löe_ödex
,
WUFE_FRAMED
,
ˇs_íabÀ
,
WUFE_CAS_DISABLE
);

1635 
WT_Np_U„LöeC⁄figuªAndCª©eE1
(
löe_ödex
, 
WUFE_FRAMED
, 
WUFE_CAS_DISABLE
,
löe_lb_mode
,
UFE_CLOCK_SLAVE_MODE
);

1636 
	gªc⁄figStm1_¸óãE1_Êag
[
löe_ödex
] = 1;

1643 
F¥ötf
("NPU_MODE_T1\n");

1644 
	glöe_ödex_cou¡s
 = 
N_UFE_MAX_LINES_T1
;

1646 
	glöe_ödex
=0;Üöe_ödex < 
	glöe_ödex_cou¡s
;Üine_index++)

1648 
u32
 
	g°m1Id
,
	gåunkId
;

1649 
	g°m1Id
 = 
löe_ödex
/(
N_UFE_MAX_LINES_T1
/2);

1650 
	gåunkId
 = 
löe_ödex
%(
N_UFE_MAX_LINES_T1
/2);

1652 if(
	gOPMODE_T1_D4
 =
öôül_cfg
->
°ru_°m1_cfg_öfo
[
°m1Id
].
åunk_öfo
[
åunkId
].
O±_Mode
)

1654 
‰amög_mode
 = 
WUFE_FRAMED
;

1655 
	gˇs_íabÀ
 = 
WUFE_CAS_DISABLE
;

1659 
	g‰amög_mode
 = 
WUFE_FRAMED
;

1660 
	gˇs_íabÀ
 = 
WUFE_CAS_ENABLE
;

1662 
	gE1M≠TabÀ
[
E1M≠Index
++] = 
löe_ödex
;

1663 if(
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1Id
].
	gåunk_öfo
[
åunkId
].
	gåunkVÆid
)

1666 if(
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1Id
].
	gåunk_öfo
[
åunkId
].
	g˛ock_mode
 =
NPU_E1T1_CLOCK_MASTER
)

1668 
˛ock_mode
 = 
UFE_CLOCK_MASTER_MODE
;

1672 
	g˛ock_mode
 = 
UFE_CLOCK_SLAVE_MODE
;

1674 
WT_Np_U„LöeC⁄figuªAndCª©eT1
(
löe_ödex
, 
‰amög_mode
, 
ˇs_íabÀ
,
löe_lb_mode
,
˛ock_mode
);

1675 
	gªc⁄figStm1_¸óãE1_Êag
[
löe_ödex
] = 1;

1682 
WTUFE_c⁄fig_phys
(
WP_U32
 
löe_ödex
,WP_U32 
groupId
,WP_U32 
¶Ÿ_£À˘i⁄
,WP_U32 
löe_ödex_ba£
 )

1684 
WUFE_phy
 
	gphy_cfg
;

1685 
WUFE_SlŸGroup
 
	g¶Ÿ_group
;

1686 
WP_U32
 
	gn¶Ÿs
, 
	g¶Ÿs
, 
	gj
;

1687 
WP_°©us
 
	g°©us
;

1688 
NP_TRUNK_INFO
* 
	g±runköfo
;

1689 
NP_TRUNK_INFO
 
	gåunköfo
;

1690 
STRU_SET_INITAIL_CONFIG
 *
	göôül_cfg
 = 
≈u_gë_öôül_cfg_öfo
();

1691 
mem£t
((*Ë&
phy_cfg
, 0, (
WUFE_phy
));

1692 
	gphy_cfg
.
	g°ru˘_id
 = 
WUFE_STRUCT_PHY_HDLC
;

1693 
	gphy_cfg
.
	grx_fifo_∑øm
.
	gå™smô_th
 = 0;

1694 
	gphy_cfg
.
	grx_fifo_∑øm
.
	gfifo_max_size
 = 4;

1695 
	gphy_cfg
.
	grx_fifo_∑øm
.
	g¥i‹ôy_èbÀ
 = 0;

1696 
	gphy_cfg
.
	gtx_fifo_∑øm
.
	gfifo_max_size
 = 4;

1697 
	gphy_cfg
.
	gtx_fifo_∑øm
.
	g¥i‹ôy_èbÀ
 = 0;

1698 
	gphy_cfg
.
	gtx_fifo_∑øm
.
	gÁ°_mode
 = 
WUFE_PHY_FIFO_MODE_SLOW
;

1699 
	gphy_cfg
.
	gtx_fifo_∑øm
.
	gå™smô_th
 = 0;

1700 
	gphy_cfg
.
	gtx_fifo_∑øm
.
	gwaô_ty≥
 = 
WUFE_PHY_TX_WAIT_TYPE_D
;

1704 
	g°m1Id
;

1705 if(
	glöe_ödex_ba£
 == 0)

1707 
°m1Id
 = 0;

1711 
	g°m1Id
 = 1;

1713 if(
	gNPU_E1T1_CRC32
 =
öôül_cfg
->
°ru_°m1_cfg_öfo
[
°m1Id
].
åunk_öfo
[
löe_ödex
 - 
löe_ödex_ba£
].
group_öfo
[
groupId
].
¸c_ty≥
)

1715 
phy_cfg
.
ty≥
.
hdlc
.
tx_‰ame_¸c_size
 = 
WUFE_PHY_HDLC_CRC_32
;

1716 
	gphy_cfg
.
	gty≥
.
	ghdlc
.
	grx_‰ame_¸c_size
 = 
WUFE_PHY_HDLC_CRC_32
;

1720 
	gphy_cfg
.
	gty≥
.
	ghdlc
.
	gtx_‰ame_¸c_size
 = 
WUFE_PHY_HDLC_CRC_16
;

1721 
	gphy_cfg
.
	gty≥
.
	ghdlc
.
	grx_‰ame_¸c_size
 = 
WUFE_PHY_HDLC_CRC_16
;

1723 
	gphy_cfg
.
	gty≥
.
	ghdlc
.
	gtx_no_Êag_bëwìn_‰ames
 =
WUFE_PHY_HDLC_TX_FLAGS_BETWEEN_FRAMES
;

1724 
	gphy_cfg
.
	gty≥
.
	ghdlc
.
	gtx_mö_Êag_num
 = 1;

1726 
mem£t
 (&
¶Ÿ_group
, 0, (
WUFE_SlŸGroup
));

1728 
	g¶Ÿs
 = 
¶Ÿ_£À˘i⁄
;

1730 
	gj
 = 0, 
	gn¶Ÿs
 = 0, 
	g¶Ÿs
 = 
¶Ÿ_£À˘i⁄
; slots > 0; ++j, slots >>= 1)

1732 i‡(
¶Ÿs
 & 1)

1734 
¶Ÿ_group
.
¶Ÿ_¨r
[
n¶Ÿs
] = 
j
;

1735 ++
	gn¶Ÿs
;

1738 
	g¶Ÿ_group
.
	gn_¶Ÿs
 = 
n¶Ÿs
;

1741 
mem˝y
(&
phy_cfg
.
rx_¶Ÿ_group
,&
¶Ÿ_group
,(slot_group));

1742 
mem˝y
(&
phy_cfg
.
tx_¶Ÿ_group
,&
¶Ÿ_group
,(slot_group));

1746 
	g°©us
 = 
WUFE_PhyCª©e
(&
u„_phy_h™dÀ
[
löe_ödex
][
groupId
],

1747 
u„_löe_h™dÀ
[
löe_ödex
],

1748 &
phy_cfg
,

1749 
WUFE_FULL_DUPLEX
);

1752 
WT_U„Tîmö©eOnEº‹
(
°©us
,"WUFE_PhyCª©e",
löe_ödex
,
__LINE__
);

1753 
	g°©us
 = 
WUFE_PhyE«bÀ
(
u„_phy_h™dÀ
[
löe_ödex
][
groupId
], 
WUFE_FULL_DUPLEX
);

1754 
ãrmö©e_⁄_îr‹
(
°©us
, "WUFE_PhyEnable()");

1757 
	g‰_devi˚_c⁄fig
[0].
	grx_queue
 = 
qnode_‰_iw
;

1758 #i‡
START_SCHEDULER


1759 
	g‰_devi˚_c⁄fig
[0].
	gtx_tq_ty≥s
[0] = 
WP_PKT_SCHED_SHAPING
;

1760 
	g‰_devi˚_c⁄fig
[0].
	gtx_tq_ty≥s
[1] = 
WP_PKT_SCHED_SHAPING
;

1761 
	g‰_devi˚_c⁄fig
[0].
	gtx_tq_ty≥s
[2] = 
WP_PKT_SCHED_SHAPING
;

1762 
	g‰_devi˚_c⁄fig
[0].
	gtx_tq_ty≥s
[3] = 
WP_PKT_SCHED_WFQ
;

1764 
	g‰_devi˚_c⁄fig
[0].
	gtx_tq_ty≥s
[0] = 
WP_PKT_SCHED_WFQ
;

1765 
	g‰_devi˚_c⁄fig
[0].
	gtx_tq_ty≥s
[1] = 
WP_PKT_SCHED_WFQ
;

1766 
	g‰_devi˚_c⁄fig
[0].
	gtx_tq_ty≥s
[2] = 
WP_PKT_SCHED_WFQ
;

1767 
	g‰_devi˚_c⁄fig
[0].
	gtx_tq_ty≥s
[3] = 
WP_PKT_SCHED_WFQ
;

1771 
	g‰_devi˚_c⁄fig
[0].
	gtx_maxsdu
 = 
öôül_cfg
->
°ru_°m1_cfg_öfo
[
°m1Id
].
åunk_öfo
[
löe_ödex
 - 
löe_ödex_ba£
].
group_öfo
[
groupId
].
max_‰ame_size
;

1772 
	g‰_devi˚_c⁄fig
[0].
	grx_maxsdu
 = 
öôül_cfg
->
°ru_°m1_cfg_öfo
[
°m1Id
].
åunk_öfo
[
löe_ödex
 - 
löe_ödex_ba£
].
group_öfo
[
groupId
].
max_‰ame_size
;

1773 
	gu„_devi˚_h™dÀ
[
löe_ödex
][
groupId
]
WP_Devi˚Cª©e
(
upi_u„_p‹t
,

1774 
WP_PHY
(
WUFE_PHY_INDEX_GET
(
u„_phy_h™dÀ
[
löe_ödex
][
groupId
])),

1775 
WP_DEVICE_FR
,

1776 &
‰_devi˚_c⁄fig
[0]);

1777 
ãrmö©e_⁄_îr‹
(
u„_devi˚_h™dÀ
[
löe_ödex
][
groupId
], "WP_DeviceCreate ufe device()");

1778 
	g°©us
 = 
WP_Devi˚E«bÀ
–
u„_devi˚_h™dÀ
[
löe_ödex
][
groupId
], 
WP_DIRECTION_DUPLEX
);

1779 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_DeviceEnable, EMPHY");

1782 
	g±runköfo
 = 
≈u_gë_åunk_öfo
(
löe_ödex
);

1783 if(
	gNULL
 !
±runköfo
)

1785 
j
 = 0; 
	gj
 < 32; j++)

1787 if(
	g±runköfo
->
	gGroupid
[
j
] =
groupId
)

1792 if(
	gj
>=32)

1794 
±runköfo
->
åunkid
 = 
löe_ödex
;

1795 
	g±runköfo
->
	gGroupid
[(
±runköfo
->
GroupNum
)] = 
groupId
;

1796 (
	g±runköfo
->
	gGroupNum
)++;

1798 ()
≈u_£t_åunk_öfo
(
löe_ödex
, 
±runköfo
);

1802 
	gåunköfo
.
	gåunkid
 = 
löe_ödex
;

1803 
	gåunköfo
.
	gGroupid
[0] = 
groupId
;

1804 
	gåunköfo
.
	gGroupNum
 = 1;

1805 ()
≈u_£t_åunk_öfo
(
löe_ödex
, &
åunköfo
);

1809 
WP_°©us
 
WTUFE_Rec⁄fig_phys
(
WP_U32
 
åunkid
,WP_U32 
groupid
,WP_U32 
¶Ÿ_£À˘i⁄
,WP_U32 
¸c_ty≥
)

1811 
WUFE_phy
 
	gu§_phy_cfg
;

1812 
WUFE_°©us
 
	g°©us
=
WUFE_OK
;

1813 vﬁ©ûê
WP_U32
 
	gtimeout
;

1814 
WP_U32
 
	g¶Ÿs
,
	gj
,
	gn¶Ÿs
,
	gi
;

1815 
WUFE_SlŸGroup
 
	g¶Ÿ_group
;

1817 
mem£t
(&
u§_phy_cfg
, 0xff, (
WUFE_phy
));

1819 
mem£t
 (&
¶Ÿ_group
, 0xff, (
WUFE_SlŸGroup
));

1820 
	gtimeout
 = 0;

1822 
	gj
 = 0, 
	gn¶Ÿs
 = 0, 
	g¶Ÿs
 = 
¶Ÿ_£À˘i⁄
; slots > 0; ++j, slots >>= 1)

1824 i‡(
¶Ÿs
 & 1)

1826 
¶Ÿ_group
.
¶Ÿ_¨r
[
n¶Ÿs
] = 
j
;

1827 ++
	gn¶Ÿs
;

1830 
	g¶Ÿ_group
.
	gn_¶Ÿs
 = 
n¶Ÿs
;

1832 
mem˝y
(&
u§_phy_cfg
.
rx_¶Ÿ_group
,&
¶Ÿ_group
,(slot_group));

1833 
mem˝y
(&
u§_phy_cfg
.
tx_¶Ÿ_group
,&
¶Ÿ_group
,(slot_group));

1834 
	gu§_phy_cfg
.
	grx_¶Ÿ_group
.
	ghmvù_id
 = 0;

1835 
	gu§_phy_cfg
.
	gtx_¶Ÿ_group
.
	ghmvù_id
 = 0;

1837 
F¥ötf
("¶Ÿ_group.hmvù_id%d,¶Ÿ_group.n_¶Ÿs%d\n",
u§_phy_cfg
.
rx_¶Ÿ_group
.
hmvù_id
,u§_phy_cfg.rx_¶Ÿ_group.
n_¶Ÿs
);

1838 
	gi
=0;i<32;i++)

1840 
F¥ötf
("¶Ÿ_group.¶Ÿ_¨r[%d]%d\n",
i
,
u§_phy_cfg
.
rx_¶Ÿ_group
.
¶Ÿ_¨r
[i]);

1846 
	gu§_phy_cfg
.
	gty≥
.
	ghdlc
.
	gtx_no_Êag_bëwìn_‰ames
 =
WUFE_PHY_HDLC_TX_FLAGS_BETWEEN_FRAMES
;

1847 
	gu§_phy_cfg
.
	gty≥
.
	ghdlc
.
	gtx_mö_Êag_num
 = 1;

1848 
	gu§_phy_cfg
.
	g°ru˘_id
 = 
WUFE_STRUCT_PHY_HDLC
;

1850 if(
	gNPU_E1T1_CRC32
 =
¸c_ty≥
)

1852 
u§_phy_cfg
.
ty≥
.
hdlc
.
tx_‰ame_¸c_size
 = 
WUFE_PHY_HDLC_CRC_32
;

1853 
	gu§_phy_cfg
.
	gty≥
.
	ghdlc
.
	grx_‰ame_¸c_size
 = 
WUFE_PHY_HDLC_CRC_32
;

1857 
	gu§_phy_cfg
.
	gty≥
.
	ghdlc
.
	gtx_‰ame_¸c_size
 = 
WUFE_PHY_HDLC_CRC_16
;

1858 
	gu§_phy_cfg
.
	gty≥
.
	ghdlc
.
	grx_‰ame_¸c_size
 = 
WUFE_PHY_HDLC_CRC_16
;

1863 
	g°©us
 = 
WUFE_PhyRec⁄figuª
(
u„_phy_h™dÀ
[
åunkid
][
groupid
],&
u§_phy_cfg
);

1864 i‡(
	g°©us
 !
WUFE_OK
 && 
°©us
 !
WUFE_ERR_PHY_FIFO_NOT_EMPTY
)

1867 i‡(++
	gtimeout
 > 100000)

1869 
F¥ötf
("---------------- Timeout -------------\n");

1873 
WP_Dñay
(10);

1875 
	g°©us
 !
WUFE_OK
);

1877  
	gWUFE_OK
;

1880 
WP_°©us
 
WTUFE_Rec⁄fig_Stm1
(
WP_U32
 
°m1id
, WP_U32 
löe_ödex_ba£
,
STRU_STM1_RECFG
 *
ªc⁄fig_öfo
,
STRU_SET_INITAIL_CONFIG
 *
p2
)

1882 
WP_U32
 
	gåunkid
,
	g¸c_ty≥
,
	gi
,
	gj
;

1883 
WP_U32
 
	ggroupid
,
	ggroupVÆid
,
	g¶Ÿ_£À˘i⁄
,
	gmax_‰ame_size
;

1884 
WUFE_°©us
 
	g°©us
;

1885 
STRU_SET_INITAIL_CONFIG
 *
	göôül_cfg
 = 
≈u_gë_öôül_cfg_öfo
();

1886 
WP_U16
 
	g‰amög_mode
;

1887 
WP_U8
 
	gˇs_íabÀ
 = 
WUFE_CAS_ENABLE
;

1888 
WP_U32
 
	g˛ock_mode
;

1889 
	gåunkid
 = 
ªc⁄fig_öfo
->
åunkId
;

1893 
	ggroupid
 = 0;groupid < 32; groupid ++)

1895 
	ggroupVÆid
 = 
ªc⁄fig_öfo
->
group_öfo
[
groupid
].
groupVÆid
;

1896 
	g¶Ÿ_£À˘i⁄
 = 
ªc⁄fig_öfo
->
group_öfo
[
groupid
].
¶Ÿ_£À˘i⁄
;

1897 
	g¸c_ty≥
 = 
ªc⁄fig_öfo
->
group_öfo
[
groupid
].
¸c_ty≥
;

1898 
	gmax_‰ame_size
 = 
ªc⁄fig_öfo
->
group_öfo
[
groupid
].
max_‰ame_size
;

1899 if(
	gNPU_VALID
 =
groupVÆid
)

1901 
öôül_cfg
->
°ru_°m1_cfg_öfo
[
°m1id
].
åunk_öfo
[
åunkid
-
löe_ödex_ba£
].
group_öfo
[
groupid
].
groupVÆid
 = 
NPU_VALID
;

1902 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	ggroup_öfo
[
groupid
].
	g¸c_ty≥
 = 
¸c_ty≥
;

1903 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	ggroup_öfo
[
groupid
].
	gmax_‰ame_size
 = 
max_‰ame_size
;

1904 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	ggroup_öfo
[
groupid
].
	g¶Ÿ_£À˘i⁄
 = 
¶Ÿ_£À˘i⁄
;

1906 if(
	gu„_devi˚_h™dÀ
[
åunkid
][
groupid
] != 0)

1908 if(
u„_phy_h™dÀ
[
åunkid
][
groupid
] != 0)

1911 
°©us
 = 
WUFE_PhyDißbÀ
(
u„_phy_h™dÀ
[
åunkid
][
groupid
], 
WUFE_FULL_DUPLEX
);

1912 if(
	gWUFE_OK
 !=
°©us
)

1914 
F¥ötf
("WUFE_PhyDißbÀÉº‹ %d",
°©us
);

1915  
	g°©us
;

1919 ()
WP_Devi˚DißbÀ
(
u„_devi˚_h™dÀ
[
åunkid
][
groupid
], 
WP_DIRECTION_DUPLEX
);

1920 if(
	gu„_phy_h™dÀ
[
åunkid
][
groupid
] != 0)

1922 
°©us
 = 
WTUFE_Rec⁄fig_phys
(
åunkid
,
groupid
,
¶Ÿ_£À˘i⁄
,
¸c_ty≥
);

1923 if(
	gWUFE_OK
 !=
°©us
)

1925  
°©us
;

1928 if(
	gN_FR_MAX_SDU
 < 
	gmax_‰ame_size
)

1930 
F¥ötf
("max_‰ame_sizêi†(%dÓ¨gîÅh™ ThêMAX_SDU\n",
max_‰ame_size
);

1933 
	g‰_devi˚_c⁄fig
[0].
	gtx_maxsdu
 = 
max_‰ame_size
;

1934 
	g‰_devi˚_c⁄fig
[0].
	grx_maxsdu
 = 
max_‰ame_size
;

1935 
	g°©us
 = 
WP_Devi˚Modify
(
u„_devi˚_h™dÀ
[
åunkid
][
groupid
],
WP_DEV_MOD_UPI_FR_TX_MAXSDU
 | 
WP_DEV_MOD_UPI_FR_RX_MAXSDU
,&
‰_devi˚_c⁄fig
[0]);

1936 if(
	gWUFE_OK
 !
°©us
)

1938  
°©us
;

1940 if(
	gu„_phy_h™dÀ
[
åunkid
][
groupid
] != 0)

1942 
°©us
 = 
WUFE_PhyE«bÀ
(
u„_phy_h™dÀ
[
åunkid
][
groupid
], 
WUFE_FULL_DUPLEX
);

1943 if(
	gWUFE_OK
 !=
°©us
)

1945 
F¥ötf
("WUFE_PhyE«bÀÉº‹ %d",
°©us
);

1946  
	g°©us
;

1950 ()
WP_Devi˚E«bÀ
(
u„_devi˚_h™dÀ
[
åunkid
][
groupid
], 
WP_DIRECTION_DUPLEX
);

1954 if(
	gåunkid
 >
RECONFIG_TRUNK_MAX
)

1956 
F¥ötf
("Error: WTUFE_Reconfig_Stm1,Årunk ID is invalid\n");

1959 if(
	gªc⁄figStm1_¸óãE1_Êag
[
åunkid
] == 0)

1962 if(
p2
->
°ru_°m1_cfg_öfo
[
°m1id
].
E1T1ty≥
 =
NPU_MODE_E1
)

1965 if((
åunkid
%
N_UFE_MAX_LINES_SPE_T1
)>=
N_UFE_MAX_LINES_SPE_E1
)

1969 
	gj
 = 
åunkid
%27;

1970 
	gi
 = 
åunkid
/21;

1971 
	gE1M≠TabÀ
[
i
*20+
j
] = 
åunkid
;

1973 if(
	gOPMODE_E1_FALSE
 =
p2
->
°ru_°m1_cfg_öfo
[
°m1id
].
åunk_öfo
[
åunkid
-
löe_ödex_ba£
].
O±_Mode
)

1975 
‰amög_mode
 = 
WUFE_UNFRAMED
;

1976 
	gˇs_íabÀ
 = 
WUFE_CAS_DISABLE
;

1980 
	g‰amög_mode
 = 
WUFE_FRAMED
;

1981 if(
	gp2
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	gåunkVÆid
)

1983 
	gi
 =0 ;i< 32;i++)

1985 if(
	gp2
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	ggroup_öfo
[
i
].
	ggroupVÆid
)

1987 if(
	gp2
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	ggroup_öfo
[
i
].
	g¶Ÿ_£À˘i⁄
&0x00010000)

1989 
	gˇs_íabÀ
 = 
WUFE_CAS_DISABLE
;

1998 if(
	gp2
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	g˛ock_mode
 =
NPU_E1T1_CLOCK_MASTER
)

2000 
˛ock_mode
 = 
UFE_CLOCK_MASTER_MODE
;

2004 
	g˛ock_mode
 = 
UFE_CLOCK_SLAVE_MODE
;

2006 
F¥ötf
("WTUFE_Rec⁄fig_Stm1::åunkid = %d fømög_modê%d cas_íabÀ = %d clock_modê%d\n",
åunkid
,
‰amög_mode
,
ˇs_íabÀ
,
˛ock_mode
);

2007 
WT_Np_U„LöeC⁄figuªAndCª©eE1
(
åunkid
, 
‰amög_mode
, 
ˇs_íabÀ
,
UFE_NO_LOOPBK
,
˛ock_mode
);

2011 if(
	gOPMODE_T1_D4
 =
p2
->
°ru_°m1_cfg_öfo
[
°m1id
].
åunk_öfo
[
åunkid
-
löe_ödex_ba£
].
O±_Mode
)

2013 
‰amög_mode
 = 
WUFE_FRAMED
;

2014 
	gˇs_íabÀ
 = 
WUFE_CAS_DISABLE
;

2018 
	g‰amög_mode
 = 
WUFE_FRAMED
;

2019 
	gˇs_íabÀ
 = 
WUFE_CAS_ENABLE
;

2021 if(
	gp2
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	g˛ock_mode
 =
NPU_E1T1_CLOCK_MASTER
)

2023 
˛ock_mode
 = 
UFE_CLOCK_MASTER_MODE
;

2027 
	g˛ock_mode
 = 
UFE_CLOCK_SLAVE_MODE
;

2029 
WT_Np_U„LöeC⁄figuªAndCª©eT1
(
åunkid
, 
‰amög_mode
, 
ˇs_íabÀ
,
UFE_NO_LOOPBK
,
˛ock_mode
);

2032 
	gªc⁄figStm1_¸óãE1_Êag
[
åunkid
] = 1;

2035 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	gO±_Mode
 = 
p2
->
°ru_°m1_cfg_öfo
[°m1id].
åunk_öfo
[åunkid-löe_ödex_ba£].
O±_Mode
;

2036 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	g˛ock_mode
 = 
p2
->
°ru_°m1_cfg_öfo
[°m1id].
åunk_öfo
[åunkid-löe_ödex_ba£].
˛ock_mode
;

2037 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gE1T1ty≥
 = 
p2
->
°ru_°m1_cfg_öfo
[°m1id].
E1T1ty≥
;

2040 
WTUFE_c⁄fig_phys
(
åunkid
,
groupid
,
¶Ÿ_£À˘i⁄
,
löe_ödex_ba£
);

2044  
	gWUFE_OK
;

2048 
WP_°©us
 
WTUFE_Rec⁄fig_Stm1_öLo›
(
WP_U32
 
°m1id
, WP_U32 
åunkid
, WP_U32 
groupid
, WP_U32 
löe_ödex_ba£
,
STRU_STM1_RECFG
 *
ªc⁄fig_öfo
,
STRU_SET_INITAIL_CONFIG
 *
p2
)

2050 
WP_U32
 
	g¸c_ty≥
,
	gi
,
	gj
;

2051 
WP_U32
 
	ggroupVÆid
,
	g¶Ÿ_£À˘i⁄
,
	gmax_‰ame_size
;

2052 
WUFE_°©us
 
	g°©us
;

2053 
STRU_SET_INITAIL_CONFIG
 *
	göôül_cfg
 = 
≈u_gë_öôül_cfg_öfo
();

2054 
WP_U16
 
	g‰amög_mode
;

2055 
WP_U8
 
	gˇs_íabÀ
 = 
WUFE_CAS_ENABLE
;

2056 
WP_U32
 
	g˛ock_mode
;

2059 
	ggroupVÆid
 = 
ªc⁄fig_öfo
->
group_öfo
[
groupid
].
groupVÆid
;

2060 
	g¶Ÿ_£À˘i⁄
 = 
ªc⁄fig_öfo
->
group_öfo
[
groupid
].
¶Ÿ_£À˘i⁄
;

2061 
	g¸c_ty≥
 = 
ªc⁄fig_öfo
->
group_öfo
[
groupid
].
¸c_ty≥
;

2062 
	gmax_‰ame_size
 = 
ªc⁄fig_öfo
->
group_öfo
[
groupid
].
max_‰ame_size
;

2063 if(
	gNPU_VALID
 =
groupVÆid
)

2065 
WDDI_INFO
("WTUFE_Rec⁄fig_Stm1_öLo›::groupid:%d\n", 
groupid
);

2066 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	ggroup_öfo
[
groupid
].
	ggroupVÆid
 = 
NPU_VALID
;

2067 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	ggroup_öfo
[
groupid
].
	g¸c_ty≥
 = 
¸c_ty≥
;

2068 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	ggroup_öfo
[
groupid
].
	gmax_‰ame_size
 = 
max_‰ame_size
;

2069 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	ggroup_öfo
[
groupid
].
	g¶Ÿ_£À˘i⁄
 = 
¶Ÿ_£À˘i⁄
;

2071 if(
	gu„_devi˚_h™dÀ
[
åunkid
][
groupid
] != 0)

2073 if(
u„_phy_h™dÀ
[
åunkid
][
groupid
] != 0)

2076 
°©us
 = 
WUFE_PhyDißbÀ
(
u„_phy_h™dÀ
[
åunkid
][
groupid
], 
WUFE_FULL_DUPLEX
);

2077 if(
	gWUFE_OK
 !=
°©us
)

2079 
F¥ötf
("WUFE_PhyDißbÀÉº‹ %d",
°©us
);

2080  
	g°©us
;

2084 ()
WP_Devi˚DißbÀ
(
u„_devi˚_h™dÀ
[
åunkid
][
groupid
], 
WP_DIRECTION_DUPLEX
);

2085 if(
	gu„_phy_h™dÀ
[
åunkid
][
groupid
] != 0)

2087 
°©us
 = 
WTUFE_Rec⁄fig_phys
(
åunkid
,
groupid
,
¶Ÿ_£À˘i⁄
,
¸c_ty≥
);

2088 if(
	gWUFE_OK
 !=
°©us
)

2090  
°©us
;

2093 if(
	gN_FR_MAX_SDU
 < 
	gmax_‰ame_size
)

2095 
F¥ötf
("max_‰ame_sizêi†(%dÓ¨gîÅh™ ThêMAX_SDU\n",
max_‰ame_size
);

2098 
	g‰_devi˚_c⁄fig
[0].
	gtx_maxsdu
 = 
max_‰ame_size
;

2099 
	g‰_devi˚_c⁄fig
[0].
	grx_maxsdu
 = 
max_‰ame_size
;

2100 
	g°©us
 = 
WP_Devi˚Modify
(
u„_devi˚_h™dÀ
[
åunkid
][
groupid
],
WP_DEV_MOD_UPI_FR_TX_MAXSDU
 | 
WP_DEV_MOD_UPI_FR_RX_MAXSDU
,&
‰_devi˚_c⁄fig
[0]);

2101 if(
	gWUFE_OK
 !
°©us
)

2103  
°©us
;

2105 if(
	gu„_phy_h™dÀ
[
åunkid
][
groupid
] != 0)

2107 
°©us
 = 
WUFE_PhyE«bÀ
(
u„_phy_h™dÀ
[
åunkid
][
groupid
], 
WUFE_FULL_DUPLEX
);

2108 if(
	gWUFE_OK
 !=
°©us
)

2110 
F¥ötf
("WUFE_PhyE«bÀÉº‹ %d",
°©us
);

2111  
	g°©us
;

2115 
WDDI_INFO
("WTUFE_Rec⁄fig_Stm1_öLo›, devi˚ modify u„_devi˚_h™dÀ[%d][%d] \n", 
åunkid
, 
groupid
);

2116 ()
WP_Devi˚E«bÀ
(
u„_devi˚_h™dÀ
[
åunkid
][
groupid
], 
WP_DIRECTION_DUPLEX
);

2120 if(
	gåunkid
 >
RECONFIG_TRUNK_MAX
)

2122 
F¥ötf
("Error: WTUFE_Reconfig_Stm1_inLoop,Årunk ID is invalid\n");

2125 if(
	gªc⁄figStm1_¸óãE1_Êag
[
åunkid
] == 0)

2128 if(
p2
->
°ru_°m1_cfg_öfo
[
°m1id
].
E1T1ty≥
 =
NPU_MODE_E1
)

2131 if((
åunkid
%
N_UFE_MAX_LINES_SPE_T1
)>=
N_UFE_MAX_LINES_SPE_E1
)

2135 
	gj
 = 
åunkid
%27;

2136 
	gi
 = 
åunkid
/21;

2137 
	gE1M≠TabÀ
[
i
*20+
j
] = 
åunkid
;

2139 if(
	gOPMODE_E1_FALSE
 =
p2
->
°ru_°m1_cfg_öfo
[
°m1id
].
åunk_öfo
[
åunkid
-
löe_ödex_ba£
].
O±_Mode
)

2141 
‰amög_mode
 = 
WUFE_UNFRAMED
;

2142 
	gˇs_íabÀ
 = 
WUFE_CAS_DISABLE
;

2146 
	g‰amög_mode
 = 
WUFE_FRAMED
;

2147 if(
	gp2
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	gåunkVÆid
)

2149 
	gi
 =0 ;i< 32;i++)

2151 if(
	gp2
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	ggroup_öfo
[
i
].
	ggroupVÆid
)

2153 if(
	gp2
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	ggroup_öfo
[
i
].
	g¶Ÿ_£À˘i⁄
&0x00010000)

2155 
	gˇs_íabÀ
 = 
WUFE_CAS_DISABLE
;

2164 if(
	gp2
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	g˛ock_mode
 =
NPU_E1T1_CLOCK_MASTER
)

2166 
˛ock_mode
 = 
UFE_CLOCK_MASTER_MODE
;

2170 
	g˛ock_mode
 = 
UFE_CLOCK_SLAVE_MODE
;

2172 
F¥ötf
("WTUFE_Rec⁄fig_Stm1_öLo›::åunkid = %d fømög_modê%d cas_íabÀ = %d clock_modê%d\n",
åunkid
,
‰amög_mode
,
ˇs_íabÀ
,
˛ock_mode
);

2173 
WT_Np_U„LöeC⁄figuªAndCª©eE1
(
åunkid
, 
‰amög_mode
, 
ˇs_íabÀ
,
UFE_NO_LOOPBK
,
˛ock_mode
);

2177 if(
	gOPMODE_T1_D4
 =
p2
->
°ru_°m1_cfg_öfo
[
°m1id
].
åunk_öfo
[
åunkid
-
löe_ödex_ba£
].
O±_Mode
)

2179 
‰amög_mode
 = 
WUFE_FRAMED
;

2180 
	gˇs_íabÀ
 = 
WUFE_CAS_DISABLE
;

2184 
	g‰amög_mode
 = 
WUFE_FRAMED
;

2185 
	gˇs_íabÀ
 = 
WUFE_CAS_ENABLE
;

2187 if(
	gp2
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	g˛ock_mode
 =
NPU_E1T1_CLOCK_MASTER
)

2189 
˛ock_mode
 = 
UFE_CLOCK_MASTER_MODE
;

2193 
	g˛ock_mode
 = 
UFE_CLOCK_SLAVE_MODE
;

2195 
WT_Np_U„LöeC⁄figuªAndCª©eT1
(
åunkid
, 
‰amög_mode
, 
ˇs_íabÀ
,
UFE_NO_LOOPBK
,
˛ock_mode
);

2198 
	gªc⁄figStm1_¸óãE1_Êag
[
åunkid
] = 1;

2201 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	gO±_Mode
 = 
p2
->
°ru_°m1_cfg_öfo
[°m1id].
åunk_öfo
[åunkid-löe_ödex_ba£].
O±_Mode
;

2202 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	g˛ock_mode
 = 
p2
->
°ru_°m1_cfg_öfo
[°m1id].
åunk_öfo
[åunkid-löe_ödex_ba£].
˛ock_mode
;

2203 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1id
].
	gE1T1ty≥
 = 
p2
->
°ru_°m1_cfg_öfo
[°m1id].
E1T1ty≥
;

2206 
WDDI_INFO
("WTUFE_Rec⁄fig_Stm1_öLo›::WTUFE_c⁄fig_phys,åunkid[%d], groupid[%d] \n", 
åunkid
, 
groupid
);

2207 
WTUFE_c⁄fig_phys
(
åunkid
,
groupid
,
¶Ÿ_£À˘i⁄
,
löe_ödex_ba£
);

2210  
	gWUFE_OK
;

2215 
WP_°©us
 
WTUFE_Rec⁄fig_Fr_Ch™√l
(
WP_U32
 
ˇrd
, WP_U32 
åunk
,WP_U32 
tsgroup
,WP_U32 
dlci
,
STRU_SET_INITAIL_CONFIG
 *
p2
)

2217 
STRU_VPORT_INFO
 *
	gVp‹tInfo
;

2218 
WP_U32
 
	gp‹t_§c
;

2219 
WP_ch_‰
 
	g‰_ch_c⁄fig
;

2220 
FR_CHANNEL_INFO
 *
	gch_öfo
;

2221 
WP_h™dÀ
 
	g°©us
;

2222 
WP_boﬁón
 
	gch_dißbÀd_°©e
 = 
WP_FALSE
;

2223 
WP_U32
 
	gi
 = 0;

2224 
WP_tx_bödög
 
	gtx_bödög
;

2225 
STRU_SET_INITAIL_CONFIG
 *
	göôül_cfg
 = 
≈u_gë_öôül_cfg_öfo
();

2226 
mem£t
((*)&
‰_ch_c⁄fig
,0,(fr_ch_config));

2227 
	gp‹t_§c
 = 
≈_‰addr_∑ck
(
ˇrd
,
åunk
,
tsgroup
,
dlci
);

2228 
	gVp‹tInfo
 = 
≈u_gë_vp‹t_öfo
(
p‹t_§c
);

2230 if(
	gNULL
 !
Vp‹tInfo
)

2232 if(
UNUSED
 =
Vp‹tInfo
->
U£dFœg
)

2234 
F¥ötf
("WTUFE_Rec⁄fig_Fr_Ch™√»vp‹ànŸ u£d! vp‹à0x%x\n",
p‹t_§c
);

2237 
	gch_öfo
 = &(
Vp‹tInfo
->
ch_öfo
);

2240 #i‡
START_SCHEDULER


2242 
WP_pkt_sh≠ög_cú_eú
 
	g‰_sh≠ög_∑øm
;

2243 
mem£t
((*)&
‰_sh≠ög_∑øm
,0,(fr_shaping_param));

2245 
	g‰_sh≠ög_∑øm
.
	gcú
 = 
p2
->
°ru_°m1_cfg_öfo
[
ch_öfo
->
ˇrd
-1].
åunk_öfo
[ch_öfo->
åunk
-1].
group_öfo
[ch_öfo->
group
].
PVCQos
[ch_öfo->
dlci
].
cú
;

2246 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
ch_öfo
->
ˇrd
-1].
	gåunk_öfo
[ch_öfo->
åunk
-1].
	ggroup_öfo
[ch_öfo->
group
].
	gPVCQos
[ch_öfo->
dlci
].
	gcú
 = 
‰_sh≠ög_∑øm
.
cú
;

2248 if(
	gWT_MIN_CH_RATE
 > 
	g‰_sh≠ög_∑øm
.
	gcú
)

2250 
F¥ötf
("Rec⁄fig fr_iw_ch™√»‰_sh≠ög_∑øm.cúÑ©ê%d i†lowÅh™ %d së i†tÿ",
‰_sh≠ög_∑øm
.
cú
,
WT_MIN_CH_RATE
);

2251 
	g‰_sh≠ög_∑øm
.
	gcú
 = 
WT_MIN_CH_RATE
 ;

2252 
F¥ötf
("%d\n",
‰_sh≠ög_∑øm
.
cú
);

2254 if(
	gWT_MAX_CH_RATE
 < 
	g‰_sh≠ög_∑øm
.
	gcú
)

2256 
F¥ötf
("Rec⁄fig fr_iw_ch™√»‰_sh≠ög_∑øm.cúÑ©ê%d i†bigÅh™ %d së iàtÿ",
‰_sh≠ög_∑øm
.
cú
,
WT_MAX_CH_RATE
);

2257 
	g‰_sh≠ög_∑øm
.
	gcú
 = 
WT_MAX_CH_RATE
 ;

2258 
F¥ötf
("%d\n",
‰_sh≠ög_∑øm
.
cú
);

2260 
	g‰_sh≠ög_∑øm
.
	gcú_pﬁlög
 = 
‰_sh≠ög_∑øm
.
cú
;

2261 
	g‰_sh≠ög_∑øm
.
	gcbs
 = 
p2
->
°ru_°m1_cfg_öfo
[
ch_öfo
->
ˇrd
-1].
åunk_öfo
[ch_öfo->
åunk
-1].
group_öfo
[ch_öfo->
group
].
PVCQos
[ch_öfo->
dlci
].
bc
;

2262 
	g‰_sh≠ög_∑øm
.
	gebs
 = 
p2
->
°ru_°m1_cfg_öfo
[
ch_öfo
->
ˇrd
-1].
åunk_öfo
[ch_öfo->
åunk
-1].
group_öfo
[ch_öfo->
group
].
PVCQos
[ch_öfo->
dlci
].
be
;

2264 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
ch_öfo
->
ˇrd
-1].
	gåunk_öfo
[ch_öfo->
åunk
-1].
	ggroup_öfo
[ch_öfo->
group
].
	gPVCQos
[ch_öfo->
dlci
].
	gbc
 = 
‰_sh≠ög_∑øm
.
cbs
;

2265 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
ch_öfo
->
ˇrd
-1].
	gåunk_öfo
[ch_öfo->
åunk
-1].
	ggroup_öfo
[ch_öfo->
group
].
	gPVCQos
[ch_öfo->
dlci
].
	gbe
 = 
‰_sh≠ög_∑øm
.
ebs
;

2266 
	g‰_sh≠ög_∑øm
.
	geú_pﬁlög
 = 
WP_SHAPING_POLL_AUTOD
;

2267 
	g‰_sh≠ög_∑øm
.
	geú
 = 
‰_sh≠ög_∑øm
.
cú
;

2268 
	g‰_sh≠ög_∑øm
.
	geú_tq
 = 2;

2269 
	g‰_sh≠ög_∑øm
.
	geú_cwid
 = 
WP_CW_ID_A
;

2271 
	g‰_ch_c⁄fig
.
	gtx_sh≠ög_ty≥
 = 
WP_PKT_SHAPING_CIR_EIR
;

2272 
	g‰_ch_c⁄fig
.
	gtx_sh≠ög_∑øms
 = &
‰_sh≠ög_∑øm
;

2273 
	g‰_ch_c⁄fig
.
	gtx_tq
 = 1;

2278 if(
	gch_öfo
->
	gtx_iw_h™dÀ
!= 0)

2282 
°©us
 = 
WP_Ch™√lDißbÀ
(
ch_öfo
->
tx_iw_h™dÀ
);

2283 i‡–
°rcmp
("WP_ERR_CH_ALREADY_DISABLED", 
WP_îr‹_«me
[
WP_ERROR
(
°©us
)]) != 0)

2285 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelDisable()Åx_iw_handle");

2289 ()
WP_Ch™√lSètus
(
ch_öfo
->
tx_iw_h™dÀ
, 
WP_CH_STATUS_DISABLED
, &
ch_dißbÀd_°©e
);

2290 
WP_Dñay
(1000);

2291 
	gi
 ++;

2292 if(100 =
i
)

2296 }
	gWP_FALSE
 =
ch_dißbÀd_°©e
);

2298 
	gch_dißbÀd_°©e
 = 
WP_FALSE
;

2299 ()
WP_Ch™√lSètus
(
ch_öfo
->
tx_iw_h™dÀ
, 
WP_CH_STATUS_DISABLED
, &
ch_dißbÀd_°©e
);

2300 if(
	gWP_FALSE
 =
ch_dißbÀd_°©e
)

2302 
mem£t
(&
tx_bödög
, 0, (
WP_tx_bödög
));

2303 
	gtx_bödög
.
	gmaxt
 = 0;

2304 
	gtx_bödög
.
	gdci_mode
 = 
WP_IW_DYN_CH_INSERT_DISABLE
;

2305 
	g°©us
 = 
WP_IwTxBödögModify
(
ch_öfo
->
tx_iw_h™dÀ
,

2306 
WP_IW_TX_BIND_MOD_MAXT
 | 
WP_IW_TX_BIND_MOD_DCI
,

2307 
WP_IW_TX_BINDING
,

2308 &
tx_bödög
);

2309 
ãrmö©e_⁄_îr‹
(
°©us
, "WTUFE_Reconfig_Fr_Channel WP_IwTxBindingModify disable");

2310 
WP_Dñay
(50);

2312 
	gi
 = 0;

2315 
	g°©us
 = 
WP_Ch™√lDißbÀ
(
ch_öfo
->
tx_iw_h™dÀ
);

2316 i‡–
°rcmp
("WP_ERR_CH_ALREADY_DISABLED", 
WP_îr‹_«me
[
WP_ERROR
(
°©us
)]) != 0)

2318 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelDisable()Åx_iw_handle");

2321 ()
WP_Ch™√lSètus
(
ch_öfo
->
tx_iw_h™dÀ
, 
WP_CH_STATUS_DISABLED
, &
ch_dißbÀd_°©e
);

2322 
WP_Dñay
(50);

2323 
	gi
 ++;

2324 if(1000 =
i
)

2328 }
	gWP_FALSE
 =
ch_dißbÀd_°©e
);

2330 if(
	gch_dißbÀd_°©e
 =
WP_FALSE
)

2332 
F¥ötf
("WTUFE_Reconfig_Fr_ChannelÇot Complete!\n");

2333  
	gWUFE_OK
;

2335 
	g°©us
 = 
WP_Ch™√lModify
(
ch_öfo
->
tx_iw_h™dÀ
,
WP_CH_MOD_FR_TX_TRAFFIC
,&
‰_ch_c⁄fig
);

2336 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelModify()Åx_iw_handle");

2339 
	g°©us
 = 
WP_Ch™√lE«bÀ
(
ch_öfo
->
tx_iw_h™dÀ
);

2340 i‡–
°rcmp
("WP_ERR_CH_ALREADY_ENABLED", 
WP_îr‹_«me
[
WP_ERROR
(
°©us
)]) != 0)

2342 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelEnable()Åx_iw_handle");

2345 
WP_Dñay
(500);

2348 
	gtx_bödög
.
	gmaxt
 = 
NPU_FR_TX_MAXT
;

2349 
	gtx_bödög
.
	gdci_mode
 = 
WP_IW_DYN_CH_INSERT_ENABLE
;

2350 
	g°©us
 = 
WP_IwTxBödögModify
(
ch_öfo
->
tx_iw_h™dÀ
,

2351 
WP_IW_TX_BIND_MOD_MAXT
 | 
WP_IW_TX_BIND_MOD_DCI
,

2352 
WP_IW_TX_BINDING
,

2353 &
tx_bödög
);

2355 
	g°©us
 = 
WP_Ch™√lE«bÀ
(
ch_öfo
->
tx_iw_h™dÀ
);

2356 i‡–
°rcmp
("WP_ERR_CH_ALREADY_ENABLED", 
WP_îr‹_«me
[
WP_ERROR
(
°©us
)]) != 0)

2358 
ãrmö©e_⁄_îr‹
(
°©us
, "WP_ChannelEnable()Çp_enable_fr_iw_tx channel");

2361 
F¥ötf
("WTUFE_Reconfig_Fr_Channel Complete!\n");

2363  
	gWUFE_OK
;

2366 
WP_°©us
 
WTUFE_Rec⁄fig_Stm1_AŒ
(
STRU_SET_INITAIL_CONFIG
 *
p1
, STRU_SET_INITAIL_CONFIG *
p2
)

2368 
WP_U32
 
	gåunkid
,
	ggroupid
,
	gi
,
	glöe_ödex_ba£
,
	glöe_ödex_cou¡s
,
	gj
,
	gk
;

2369 
STRU_STM1_RECFG
 
	gªc⁄fig_öfo
;

2370 
WUFE_°©us
 
	g°©us
;

2371 
STRU_SET_INITAIL_CONFIG
 *
	göôül_cfg
 = 
≈u_gë_öôül_cfg_öfo
();

2375 
	gi
 = 0; i < 
	gSPP_MAX_STM1_PORT_NUM
; i ++)

2377 if(
	gNPU_VALID
 =
p2
->
°ru_°m1_cfg_öfo
[
i
].
°m1VÆid
)

2379 if(
NPU_VALID
 !
öôül_cfg
->
°ru_°m1_cfg_öfo
[
i
].
°m1VÆid
)

2381 
öôül_cfg
->
°ru_°m1_cfg_öfo
[
i
].
°m1VÆid
 = 
NPU_VALID
;

2382 
	göôül_cfg
->
	g°m1_num
 ++;

2384 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
i
].
	gE1T1ty≥
 = 
p2
->
°ru_°m1_cfg_öfo
[i].
E1T1ty≥
;

2385 if(
	gp2
->
	g°ru_°m1_cfg_öfo
[
i
].
	gE1T1ty≥
 =
NPU_MODE_E1
)

2387 
löe_ödex_ba£
 = 
i
*
N_UFE_MAX_LINES_E1
/2;

2388 
	glöe_ödex_cou¡s
 = (1+
i
)*
N_UFE_MAX_LINES_E1
/2;

2392 
	glöe_ödex_ba£
 = 
i
*
N_UFE_MAX_LINES_T1
/2;

2393 
	glöe_ödex_cou¡s
 = (1+
i
)*
N_UFE_MAX_LINES_T1
/2;

2396 
	gåunkid
 = 
löe_ödex_ba£
;Årunkid < 
	glöe_ödex_cou¡s
;Årunkid ++)

2398 if(
	gNPU_VALID
 =
p2
->
°ru_°m1_cfg_öfo
[
i
].
åunk_öfo
[
åunkid
-
löe_ödex_ba£
].
åunkVÆid
)

2400 
öôül_cfg
->
°ru_°m1_cfg_öfo
[
i
].
åunk_öfo
[
åunkid
-
löe_ödex_ba£
].
åunkVÆid
 = 
NPU_VALID
;

2401 
mem£t
(&
ªc⁄fig_öfo
,0,(
STRU_STM1_RECFG
));

2402 
	gªc⁄fig_öfo
.
	gåunkId
 = 
åunkid
;

2404 
	ggroupid
 = 0; groupid < 32; groupid ++)

2406 if(
	gNPU_VALID
 =
p2
->
°ru_°m1_cfg_öfo
[
i
].
åunk_öfo
[
åunkid
-
löe_ödex_ba£
].
group_öfo
[
groupid
].
groupVÆid
)

2408 
k
 = 0; 
	gk
 < 1025; k++)

2410 if(0!=(
p2
->
°ru_°m1_cfg_öfo
[
i
].
åunk_öfo
[
åunkid
-
löe_ödex_ba£
].
group_öfo
[
groupid
].
PVCQos
[
k
].
cú
))

2413 if((
p1
->
°ru_°m1_cfg_öfo
[
i
].
åunk_öfo
[
åunkid
-
löe_ödex_ba£
].
group_öfo
[
groupid
].
PVCQos
[
k
].
cú
 =
p2
->stru_stm1_cfg_info[i].trunk_info[trunkid-line_index_base].group_info[groupid].PVCQos[k].cir)

2414 &&(
p1
->
°ru_°m1_cfg_öfo
[
i
].
åunk_öfo
[
åunkid
-
löe_ödex_ba£
].
group_öfo
[
groupid
].
PVCQos
[
k
].
bc
 =
p2
->stru_stm1_cfg_info[i].trunk_info[trunkid-line_index_base].group_info[groupid].PVCQos[k].bc)

2415 &&(
p1
->
°ru_°m1_cfg_öfo
[
i
].
åunk_öfo
[
åunkid
-
löe_ödex_ba£
].
group_öfo
[
groupid
].
PVCQos
[
k
].
be
 =
p2
->stru_stm1_cfg_info[i].trunk_info[trunkid-line_index_base].group_info[groupid].PVCQos[k].be)

2420 
	g°©us
 = 
WTUFE_Rec⁄fig_Fr_Ch™√l
(
i
+1,(
åunkid
-
löe_ödex_ba£
)+1,
groupid
,
k
,
p2
);

2421 if(
	gWUFE_OK
 !
°©us
)

2423  
°©us
;

2427 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
i
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	ggroup_öfo
[
groupid
].
	ggroupVÆid
 = 
NPU_VALID
;

2428 if(((
	gp1
->
	g°ru_°m1_cfg_öfo
[
i
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	ggroup_öfo
[
groupid
].
	g¸c_ty≥
Ë=(
p2
->
°ru_°m1_cfg_öfo
[i].
åunk_öfo
[åunkid-löe_ödex_ba£].
group_öfo
[groupid].
¸c_ty≥
))

2429 &&((
p1
->
°ru_°m1_cfg_öfo
[
i
].
åunk_öfo
[
åunkid
-
löe_ödex_ba£
].
group_öfo
[
groupid
].
max_‰ame_size
Ë=(
p2
->stru_stm1_cfg_info[i].trunk_info[trunkid-line_index_base].group_info[groupid].max_frame_size))

2430 &&((
p1
->
°ru_°m1_cfg_öfo
[
i
].
åunk_öfo
[
åunkid
-
löe_ödex_ba£
].
group_öfo
[
groupid
].
¶Ÿ_£À˘i⁄
Ë=(
p2
->stru_stm1_cfg_info[i].trunk_info[trunkid-line_index_base].group_info[groupid].slot_selection)))

2436 
	gªc⁄fig_öfo
.
	ggroup_öfo
[
groupid
].
	ggroupVÆid
 = 
NPU_VALID
;

2437 
	gªc⁄fig_öfo
.
	ggroup_öfo
[
groupid
].
	g¸c_ty≥
 = 
p2
->
°ru_°m1_cfg_öfo
[
i
].
åunk_öfo
[
åunkid
-
löe_ödex_ba£
].
group_öfo
[groupid].
¸c_ty≥
;

2438 
	gªc⁄fig_öfo
.
	ggroup_öfo
[
groupid
].
	gmax_‰ame_size
 = 
p2
->
°ru_°m1_cfg_öfo
[
i
].
åunk_öfo
[
åunkid
-
löe_ödex_ba£
].
group_öfo
[groupid].
max_‰ame_size
;

2439 
	gªc⁄fig_öfo
.
	ggroup_öfo
[
groupid
].
	g¶Ÿ_£À˘i⁄
 = 
p2
->
°ru_°m1_cfg_öfo
[
i
].
åunk_öfo
[
åunkid
-
löe_ödex_ba£
].
group_öfo
[groupid].
¶Ÿ_£À˘i⁄
;

2441 
F¥ötf
("###ªc⁄fig_öfÿ¶Ÿ_£À˘i⁄ i†0x%x\n",
ªc⁄fig_öfo
.
group_öfo
[
groupid
].
¶Ÿ_£À˘i⁄
);

2442 
F¥ötf
("°m1id = %d,åunkid = %d,löe_ödex_ba£ = %d,groupid = %d \n",
i
,
åunkid
,
löe_ödex_ba£
,
groupid
);

2444 
	g°©us
 = 
WTUFE_Rec⁄fig_Stm1_öLo›
(
i
, 
åunkid
, 
groupid
, 
löe_ödex_ba£
,&
ªc⁄fig_öfo
,
p2
);

2445 if(
	gWUFE_OK
 !
°©us
)

2447  
°©us
;

2454 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
i
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	ggroup_öfo
[
groupid
].
	ggroupVÆid
 = 
NPU_INVALID
;

2458 
	g°©us
 = 
WTUFE_Rec⁄fig_Stm1
(
i
,
löe_ödex_ba£
,&
ªc⁄fig_öfo
,
p2
);

2459 if(
	gWUFE_OK
 !
°©us
)

2461  
°©us
;

2466 if((
	gp1
->
	g°ru_°m1_cfg_öfo
[
i
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	g˛ock_mode
Ë!(
p2
->
°ru_°m1_cfg_öfo
[i].
åunk_öfo
[åunkid-löe_ödex_ba£].
˛ock_mode
))

2468 
WP_U32
 
˛ock_mode
;

2469 if(
	gp2
->
	g°ru_°m1_cfg_öfo
[
i
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	g˛ock_mode
 =
NPU_E1T1_CLOCK_MASTER
)

2471 
˛ock_mode
 = 
UFE_CLOCK_MASTER_MODE
;

2475 
	g˛ock_mode
 = 
UFE_CLOCK_SLAVE_MODE
;

2477 
≈u_u„_ªc⁄fig_˛ock_mode
(
åunkid
,
p2
->
°ru_°m1_cfg_öfo
[
i
].
E1T1ty≥
,
˛ock_mode
);

2482 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
i
].
	gåunk_öfo
[
åunkid
-
löe_ödex_ba£
].
	gåunkVÆid
 = 
NPU_INVALID
;

2489 if(0 !
öôül_cfg
->
°m1_num
 && 
NPU_VALID
 =öôül_cfg->
°ru_°m1_cfg_öfo
[
i
].
°m1VÆid
)

2491 (
öôül_cfg
->
°m1_num
)--;

2493 
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
i
].
	g°m1VÆid
 = 
NPU_INVALID
;

2494 
WPX_P‹tLedSë
(0, 
WPX_PORT_LED_OFF
, 
i
*3);

2496 
	gåunkid
 = 
löe_ödex_ba£
;Årunkid < 
	glöe_ödex_cou¡s
;Årunkid ++)

2498 
	ggroupid
 = 0;groupid < 32; groupid ++)

2500 if(
	gu„_phy_h™dÀ
[
åunkid
][
groupid
] != 0)

2503 ()
WUFE_PhyDißbÀ
(
u„_phy_h™dÀ
[
åunkid
][
groupid
], 
WUFE_FULL_DUPLEX
);

2504 
	gj
=0; j<100000;j++)

2506 
	g°©us
 = 
WUFE_PhyDñëe
(
u„_phy_h™dÀ
[
åunkid
][
groupid
]);

2507 if(
	g°©us
 =
WUFE_OK
)

2509 i‡(
	g°©us
 !
WUFE_ERR_PHY_FIFO_NOT_EMPTY
)

2510  
°©us
;

2511 
WP_Dñay
(10);

2515 if(
	gu„_devi˚_h™dÀ
[
åunkid
][
groupid
] != 0)

2518 ()
WP_Devi˚DißbÀ
(
u„_devi˚_h™dÀ
[
åunkid
][
groupid
], 
WP_DIRECTION_DUPLEX
);

2519 ()
WP_Devi˚Dñëe
(
u„_devi˚_h™dÀ
[
åunkid
][
groupid
]);

2527  
	gWUFE_OK
;

2530 
≈_di•œy_u„_sy°em
()

2532 
WP_h™dÀ
 
	g°©us
;

2533 
	g°©us
 = 
WUFE_Sy°emDi•œy
(0);

2534 i‡(
	g°©us
 !
WUFE_OK
)

2536 
F¥ötf
("UFE system displayÉrror\n");

2537 
F¥ötf
("Eº‹Åy≥ - %s\n", 
WP_îr‹_«me
[
WP_ERROR
(
°©us
)]);

2539 
WP_CHAR
 
	gpH¨dw¨eInf‹m©i⁄
[100];

2541 
WPX_FRMR_STATUS_DEV_VERSION_GëH¨dw¨eInfo
(0,&
pH¨dw¨eInf‹m©i⁄
);

2543 
¥ötf
("UFE vîsi⁄ %†\n",
pH¨dw¨eInf‹m©i⁄
);

2545 
	glo›bkÊag
[
N_UFE_MAX_LINES_T1
] ={0};

2546 
≈_di•œy_u„_löe
(
WP_U32
 
löeIndex
)

2548 
WP_h™dÀ
 
	g°©us
;

2549 if(
	glöeIndex
 > 
	gN_UFE_MAX_LINES_T1
 -1);

2551 if(
	gu„_löe_h™dÀ
[
löeIndex
]!=0)

2553 
WP_U16
 
°m1
;

2554 
WP_U16
 
	g˛õ¡_p‹t
;

2555 
STRU_SET_INITAIL_CONFIG
 *
	göôül_cfg
 = 
≈u_gë_öôül_cfg_öfo
();

2556 
	g°m1
 = 
löeIndex
/
SPP_MAX_TRUNK_NUM
;

2557 
WPX_UFE_FRAMER_COMMON_SDH_SONET_ENDPOINT_TYPE
 
	glöe_∑øms
;

2558 if(
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1
].
	gE1T1ty≥
 =
NPU_MODE_E1
)

2560 
˛õ¡_p‹t
 = 
WTI_FÀxmuxClõ¡P‹tIndexGë
(
E1M≠TabÀ
[
löeIndex
], 
WUFE_SDH_TYPE_E1
);

2561 
	glöe_∑øms
.
	gu
.
	gSDH
.
	g°m4
 = 
löeIndex
 / 252;

2562 
	glöe_∑øms
.
	gu
.
	gSDH
.
	g°m1
 = (
löeIndex
 % 252) / 63;

2563 
	glöe_∑øms
.
	gu
.
	gSDH
.
	g°m0
 = (
löeIndex
 % 63) / 21;

2564 
	glöe_∑øms
.
	gu
.
	gSDH
.
	gtug2
 = (
löeIndex
 % 21) / 3;

2565 
	glöe_∑øms
.
	gu
.
	gSDH
.
	gtu
 = ((
löeIndex
 % 21) % 3);

2569 
	g˛õ¡_p‹t
 = 
WTI_FÀxmuxClõ¡P‹tIndexGë
(
E1M≠TabÀ
[
löeIndex
], 
WUFE_SDH_TYPE_T1
);

2570 
	glöe_∑øms
.
	gu
.
	gSDH
.
	g°m4
 = 
löeIndex
 / 336;

2571 
	glöe_∑øms
.
	gu
.
	gSDH
.
	g°m1
 = (
löeIndex
 % 336) / 84;

2572 
	glöe_∑øms
.
	gu
.
	gSDH
.
	g°m0
 = (
löeIndex
 % 84) / 28;

2573 
	glöe_∑øms
.
	gu
.
	gSDH
.
	gtug2
 = (
löeIndex
 % 28) / 4;

2574 
	glöe_∑øms
.
	gu
.
	gSDH
.
	gtu
 = (
löeIndex
 % 4);

2576 if(
	glo›bkÊag
[
löeIndex
] == 0)

2578 
°©us
 = 
WPX_FRMR_SONET_SDH_DIAG_LpbkDißbÀ
(0,0,&
löe_∑øms
);

2579 
ãrmö©e_⁄_îr‹
(
°©us
, "WPX_FRMR_SONET_SDH_DIAG_LpbkDisable ");

2581 
	g°©us
 = 
WPX_FRMR_SONET_SDH_PORT_DIAG_LpbkE«bÀShÆlowLöe
(0,0,
˛õ¡_p‹t
);

2583 
ãrmö©e_⁄_îr‹
(
°©us
, "WPX_FRMR_SONET_SDH_PORT_DIAG_LpbkEnableShallowLine ");

2586 
	g°©us
 = 
WPX_FRMR_SOCKET_PDH_DIAG_LpbkDißbÀDìpLöe
(0,0,
˛õ¡_p‹t
);

2587 
ãrmö©e_⁄_îr‹
(
°©us
, "WPX_FRMR_SOCKET_PDH_DIAG_LpbkDisableDeepLine ");

2589 
	glo›bkÊag
[
löeIndex
]++;

2590 
F¥ötf
("löê%d WPX_FRMR_SONET_SDH_PORT_DIAG_LpbkE«bÀShÆlowLöê!\n",
löeIndex
);

2592 if(
	glo›bkÊag
[
löeIndex
] == 1)

2594 
°©us
 = 
WPX_FRMR_SONET_SDH_DIAG_LpbkE«bÀ
(0,0,&
löe_∑øms
);

2595 
ãrmö©e_⁄_îr‹
(
°©us
, "WPX_FRMR_SONET_SDH_DIAG_LpbkEnable ");

2597 
	g°©us
 = 
WPX_FRMR_SONET_SDH_PORT_DIAG_LpbkDißbÀShÆlowLöe
(0,0,
˛õ¡_p‹t
);

2598 
ãrmö©e_⁄_îr‹
(
°©us
, "WPX_FRMR_SONET_SDH_PORT_DIAG_LpbkDisableShallowLine ");

2600 
	g°©us
 = 
WPX_FRMR_SOCKET_PDH_DIAG_LpbkDißbÀDìpLöe
(0,0,
˛õ¡_p‹t
);

2601 
ãrmö©e_⁄_îr‹
(
°©us
, "WPX_FRMR_SOCKET_PDH_DIAG_LpbkDisableDeepLine ");

2602 
	glo›bkÊag
[
löeIndex
]++;

2603 
F¥ötf
("löê%d WPX_FRMR_SONET_SDH_DIAG_LpbkE«bÀ !\n",
löeIndex
);

2605 if(
	glo›bkÊag
[
löeIndex
] == 2)

2607 
°©us
 = 
WPX_FRMR_SONET_SDH_DIAG_LpbkDißbÀ
(0,0,&
löe_∑øms
);

2608 
ãrmö©e_⁄_îr‹
(
°©us
, "WPX_FRMR_SONET_SDH_DIAG_LpbkDisable ");

2610 
	g°©us
 = 
WPX_FRMR_SONET_SDH_PORT_DIAG_LpbkDißbÀShÆlowLöe
(0,0,
˛õ¡_p‹t
);

2611 
ãrmö©e_⁄_îr‹
(
°©us
, "WPX_FRMR_SONET_SDH_PORT_DIAG_LpbkDisableShallowLine ");

2613 
	g°©us
 = 
WPX_FRMR_SOCKET_PDH_DIAG_LpbkE«bÀDìpLöe
(0,0,
˛õ¡_p‹t
);

2614 
ãrmö©e_⁄_îr‹
(
°©us
, "WPX_FRMR_SOCKET_PDH_DIAG_LpbkEnableDeepLine ");

2615 
	glo›bkÊag
[
löeIndex
]++;

2616 
F¥ötf
("löê%d WPX_FRMR_SOCKET_PDH_DIAG_LpbkE«bÀDìpLöê!\n",
löeIndex
);

2620 
WPX_FRMR_SONET_SDH_PORT_DIAG_LpbkDißbÀShÆlowLöe
(0,0,
˛õ¡_p‹t
);

2621 
ãrmö©e_⁄_îr‹
(
°©us
, "WPX_FRMR_SONET_SDH_PORT_DIAG_LpbkDisableShallowLine");

2623 
	g°©us
 = 
WPX_FRMR_SONET_SDH_DIAG_LpbkDißbÀ
(0,0,&
löe_∑øms
);

2624 
ãrmö©e_⁄_îr‹
(
°©us
, "WPX_FRMR_SONET_SDH_DIAG_LpbkDisable ");

2626 
	g°©us
 = 
WPX_FRMR_SOCKET_PDH_DIAG_LpbkDißbÀDìpLöe
(0,0,
˛õ¡_p‹t
);

2627 
ãrmö©e_⁄_îr‹
(
°©us
, "WPX_FRMR_SOCKET_PDH_DIAG_LpbkDisableDeepLine ");

2629 
	glo›bkÊag
[
löeIndex
] = 0;

2630 
F¥ötf
("löê%d c™˚»lo›back !\n",
löeIndex
);

2632 
	g°©us
 = 
WUFE_LöeDi•œy
(
u„_löe_h™dÀ
[
löeIndex
]);

2636 
F¥ötf
("≈_di•œy_u„_löêövÆidÜöeIndex %d\n",
löeIndex
);

2638 i‡(
	g°©us
 !
WUFE_OK
)

2640 
F¥ötf
("UFEÜine displayÉrror\n");

2641 
F¥ötf
("Eº‹Åy≥ - %s\n", 
WP_îr‹_«me
[
WP_ERROR
(
°©us
)]);

2644 
≈_di•Æy_sy°em_Êow_agg
()

2646 
NP_SYSTEM_INFO
 * 
	gthe_sy°em
 = 
≈_gë_sy°em_öfo
();

2647 
F¥ötf
("\nágg_enet_default_host_handle info\n");

2648 
SètIwFlowAggªg©i⁄
(
the_sy°em
->
agg_íë_deÁu…_ho°_h™dÀ
);

2649 
F¥ötf
("\nágg_host_arp_agg info\n");

2650 
SètIwFlowAggªg©i⁄
(
the_sy°em
->
agg_ho°_¨p_agg
);

2651 
F¥ötf
("\nágg_enet_PrioRx0_host_handle info\n");

2652 
SètIwFlowAggªg©i⁄
(
the_sy°em
->
agg_íë_PrioRx0_ho°_h™dÀ
);

2653 
F¥ötf
("\nágg_FR_PrioRx0_host_handle info\n");

2654 
SètIwFlowAggªg©i⁄
(
the_sy°em
->
agg_FR_PrioRx0_ho°_h™dÀ
);

2655 
F¥ötf
("###\nÉnet_iw_flow_defrag_aggregation info###\n");

2656 
SètIwFlowAggªg©i⁄
(
íë_iw_Êow_de‰ag_aggªg©i⁄
);

2657 
F¥ötf
("####\n ipdefrag_aggÑouteÅypeágg info####\n");

2658 
SètIwFlowAggªg©i⁄
(
ùde‰ag_agg
);

2659 
F¥ötf
("\nágg_enet_1ÅxÅoÉnet1 channel info\n");

2660 
SètIwFlowAggªg©i⁄
(
agg_íë_1
);

2662 
F¥ötf
("\nÅhe_system->agg_enet2_to_enet1 info\n");

2663 
SètIwFlowAggªg©i⁄
(
the_sy°em
->
agg_íë2_to_íë1
);

2665 
F¥ötf
("\nÅhe_system->agg_dl_ip_to_enet2_handle info\n");

2666 
SètIwFlowAggªg©i⁄
(
the_sy°em
->
agg_dl_ù_to_íë2_h™dÀ
);

2667 #i‡
BFD_OVERETH


2668 
F¥ötf
("\nÅhe_system->agg_bfd_tx_handle info\n");

2669 
SètIwFlowAggªg©i⁄
(
the_sy°em
->
agg_bfd_tx_h™dÀ
);

2671 
F¥ötf
("\nÅhe_system->agg_mac_filter_handle info\n");

2672 
SètIwFlowAggªg©i⁄
(
the_sy°em
->
agg_mac_fûãr_h™dÀ
);

2673 
F¥ötf
("\nÅhe_system->agg_mac_filter_from_eth2_handle info\n");

2674 
SètIwFlowAggªg©i⁄
(
the_sy°em
->
agg_mac_fûãr_‰om_ëh2_h™dÀ
);

2677 
≈_di•œy_Êow_agg
(
WP_U32
 
vp‹t
)

2679 
FR_CHANNEL_INFO
 * 
	gch_öfo
;

2680 
STRU_VPORT_INFO
 *
	gVp‹tInfo
 = 
≈u_gë_vp‹t_öfo
(
vp‹t
);

2681 if(
	gVp‹tInfo
 =
NULL
);

2682 
STRU_SET_INITAIL_CONFIG
 *
	göôül_cfg
 = 
≈u_gë_öôül_cfg_öfo
();

2683 if(
	göôül_cfg
->
	gO±î©eMode
 =
NPU_MODE_FR
)

2685 
ch_öfo
 = &
Vp‹tInfo
->ch_info;

2686 
F¥ötf
("\n ch_info->agg_fr_rx_host_flow\n");

2687 
SètIwFlowAggªg©i⁄
(
ch_öfo
->
agg_‰_rx_ho°_Êow
);

2688 
F¥ötf
("\n ch_info->agg_downlink_tx2fr_device\n");

2689 
SètIwFlowAggªg©i⁄
(
ch_öfo
->
agg_dow∆ök_tx2‰_devi˚
);

2690 
F¥ötf
("\n ch_info->agg_tx2Enet1\n");

2691 
SètIwFlowAggªg©i⁄
(
ch_öfo
->
agg_tx2E√t1
);

2693 
F¥ötf
("\n ch_info->agg_fr_to_enet2\n");

2694 
SètIwFlowAggªg©i⁄
(
ch_öfo
->
agg_‰_to_íë2
);

2695 
F¥ötf
("\n ch_info->agg_enet2_to_fr\n");

2696 
SètIwFlowAggªg©i⁄
(
ch_öfo
->
agg_íë2_to_‰
);

2701 
F¥ötf
("####\n VportInfo->agg_ip2iptx2host info####\n");

2702 
SètIwFlowAggªg©i⁄
(
Vp‹tInfo
->
agg_ù2ùtx2ho°
);

2704 
F¥ötf
("####\n VportInfo->agg_ul_ip2iptx2Enet1 info####\n");

2705 
SètIwFlowAggªg©i⁄
(
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1
);

2707 
F¥ötf
("####\n VportInfo->agg_dl_ip2iptx2Enet1 info####\n");

2708 
SètIwFlowAggªg©i⁄
(
Vp‹tInfo
->
agg_dl_ù2ùtx2E√t1
);

2710 
F¥ötf
("####\n VportInfo->agg_ul_ip_to_enet2_handle info####\n");

2711 
SètIwFlowAggªg©i⁄
(
Vp‹tInfo
->
agg_ul_ù_to_íë2_h™dÀ
);

2717 
≈_di•œy_u„_phy
(
WP_U32
 
vp‹t
)

2719 
WP_h™dÀ
 
	g°©us
;

2720 
FR_CHANNEL_INFO
 * 
	gch_öfo
;

2721 
STRU_VPORT_INFO
 *
	gVp‹tInfo
 = 
≈u_gë_vp‹t_öfo
(
vp‹t
);

2722 if(
	gVp‹tInfo
 =
NULL
);

2723 
	gch_öfo
 = &
Vp‹tInfo
->
ch_öfo
;

2725 
	g°©us
 = 
WUFE_PhyDi•œy
(
ch_öfo
->
phy_h™dÀ
);

2726 i‡(
	g°©us
 !
WUFE_OK
)

2728 
F¥ötf
("UFEÖhy displayÉrror\n");

2729 
F¥ötf
("Eº‹Åy≥ - %s\n", 
WP_îr‹_«me
[
WP_ERROR
(
°©us
)]);

2735 
≈_‰IwSy°emCª©e
(
NP_SYSTEM_INFO
 *
≈_sy°em
)

2738 
WP_iw_sys_‰_swôchög
 
	g‰_sw_sy°em_cfg
;

2739 
	g‰_sw_sy°em_cfg
.
	gmax_Êows
 = 
N_FR_MAX_IW_RX_CHANNEL
;

2740 
	g‰_sw_sy°em_cfg
.
	gbuf„r_g≠
 = 64;

2741 
	g≈_sy°em
->
	gsy°em_‰_h™dÀ
 = 
WP_IwSy°emCª©e
(
WP_WINPATH
(0),

2742 
WP_IW_FR_SWITCHING_MODE
,

2743 &
‰_sw_sy°em_cfg
);

2744 
ãrmö©e_⁄_îr‹
(
≈_sy°em
->
sy°em_‰_h™dÀ
, "WP_IwSystemCreate - WP_IW_FR_SWITCHING_MODE");

2750 
di•œyU„Evíts
()

2752 
WUFE_evíts
 
	gevíts
;

2753 
WP_°©us
 
	g°©us
;

2754 
WP_U16
 
	gevít
;

2755 
WP_U32
 
	gi
;

2757 
WUFE_U„RódEvíts
(0, &
evíts
);

2758 
ãrmö©e_⁄_îr‹
(
°©us
, "WUFE_UfeReadEvents()");

2760 
F¥ötf
("\nUFE Events:\n");

2761 
F¥ötf
("-----------\n");

2764 
	gevít
 = 
evíts
.
emphy_evíts
[0].
evít_ªg
;

2765 if(
	gevít
 & 
	gWUFE_EVENT_EMPHY
) {

2766 i‡(
	gevít
 & 
	gWUFE_EVENT_EMPHY_INGRESS_BUS
)

2767 
F¥ötf
("\tEMPHY: WUFE_EVENT_EMPHY_INGRESS_BUS\n");

2768 i‡(
	gevít
 & 
	gWUFE_EVENT_EMPHY_INGRESS_MAX_BUFF_SIZE
)

2769 
F¥ötf
("\tEMPHY: WUFE_EVENT_EMPHY_INGRESS_MAX_BUFF_SIZE\n");

2770 i‡(
	gevít
 & 
	gWUFE_EVENT_EMPHY_INGRESS_IF
)

2771 
F¥ötf
("\tEMPHY: WUFE_EVENT_EMPHY_INGRESS_IF\n");

2772 i‡(
	gevít
 & 
	gWUFE_EVENT_EMPHY_EGRESS_PHY_NOT_VALID
)

2773 
F¥ötf
("\tEMPHY: WUFE_EVENT_EMPHY_EGRESS_PHY_NOT_VALID (%0x%x)\n", 
evíts
.
emphy_evíts
[0].
phy_nŸ_vÆid_h™dÀ
);

2774 i‡(
	gevít
 & 
	gWUFE_EVENT_EMPHY_EGRESS_BUS
)

2775 
F¥ötf
("\tEMPHY: WUFE_EVENT_EMPHY_EGRESS_BUS\n");

2776 i‡(
	gevít
 & 
	gWUFE_EVENT_EMPHY_EGRESS_IF
 )

2777 
F¥ötf
("\tEMPHY: WUFE_EVENT_EMPHY_EGRESS_IF\n");

2778 i‡(
	gevít
 &
	gWUFE_EVENT_EMPHY_EGRESS_PARITY
 )

2779 
F¥ötf
("\tEMPHY: WUFE_EVENT_EMPHY_EGRESS_PARITY\n");

2782 
F¥ötf
("\tEMPHY: NoÉvents\n");

2786 
	gevít
 = 
evíts
.
tdm_evíts
.
evít_ªg
;

2787 i‡(
	gevít
 & 
	gWUFE_EVENT_TDM
) {

2788 i‡(
	gevít
 & 
	gWUFE_EVENT_TDM_RX_PARITY
)

2789 
F¥ötf
("\tTDM : WUFE_EVENT_TDM_RX_PARITY\n");

2790 i‡(
	gevít
 & 
	gWUFE_EVENT_TDM_TX_PARITY
)

2791 
F¥ötf
("\tTDM : WUFE_EVENT_TDM_TX_PARITY\n");

2793 
F¥ötf
("\tTDM : NoÉvents\n");

2797 
	gevít
 = 
evíts
.
fm_evíts
.
evít_ªg
;

2798 i‡(
	gevít
 & 
	gWUFE_EVENT_FM
) {

2799 i‡(
	gevít
 & 
	gWUFE_EVENT_FM_RX_DDR_OVERRUN
)

2800 
F¥ötf
("\tFM : WUFE_EVENT_FM_RX_DDR_OVERRUN\n");

2801 i‡(
	gevít
 & 
	gWUFE_EVENT_FM_RX_BURST_OVERRUN
)

2802 
F¥ötf
("\tFM : WUFE_EVENT_FM_RX_BURST_OVERRUN\n");

2803 i‡(
	gevít
 & 
	gWUFE_EVENT_FM_TX_DDR_UNDERRUN
)

2804 
F¥ötf
("\tFM : WUFE_EVENT_FM_TX_DDR_UNDERRUN\n");

2805 i‡(
	gevít
 & 
	gWUFE_EVENT_FM_TX_BURST_UNDERRUN
)

2806 
F¥ötf
("\tFM : WUFE_EVENT_FM_TX_BURST_UNDERRUN\n");

2807 i‡(
	gevít
 & 
	gWUFE_EVENT_FM_RX_ECC_ONE_BIT
)

2808 
F¥ötf
("\tFM : WUFE_EVENT_FM_RX_ECC_ONE_BIT\n");

2809 i‡(
	gevít
 & 
	gWUFE_EVENT_FM_TX_ECC_ONE_BIT
)

2810 
F¥ötf
("\tFM : WUFE_EVENT_FM_TX_ECC_ONE_BIT\n");

2811 i‡(
	gevít
 & 
	gWUFE_EVENT_FM_TX_READ_FIFO_OVERRUN
)

2812 
F¥ötf
("\tFM : WUFE_EVENT_FM_TX_READ_FIFO_OVERRUN\n");

2814 
F¥ötf
("\tFM : NoÉvents\n");

2818 
	gevít
 = 
evíts
.
machöe_evíts
.
rx_evít_ªg
;

2819 i‡(
	gevít
 & 
	gWUFE_EVENT_MACHINE_RX
) {

2820 i‡(
	gevít
 & 
	gWUFE_EVENT_MACHINE_CES_RX_LOSS
)

2821 
F¥ötf
("\tRX MACHINE : WUFE_EVENT_MACHINE_CES_RX_LOSS\n");

2822 i‡(
	gevít
 & 
	gWUFE_EVENT_MACHINE_CES_RX_MF_LOSS
)

2823 
F¥ötf
("\tRX MACHINE : WUFE_EVENT_MACHINE_CES_RX_MF_LOSS\n");

2824 i‡(
	gevít
 & 
	gWUFE_EVENT_MACHINE_ATM_RX_LCD
)

2825 
F¥ötf
("\tRX MACHINE : WUFE_EVENT_MACHINE_ATM_RX_LCD\n");

2826 i‡(
	gevít
 & 
	gWUFE_EVENT_MACHINE_HDLC_RX_ABORT
)

2827 
F¥ötf
("\tRX MACHINE : WUFE_EVENT_MACHINE_HDLC_RX_ABORT\n");

2828 i‡(
	gevít
 & 
	gWUFE_EVENT_MACHINE_HDLC_RX_CRC_ERR
)

2829 
F¥ötf
("\tRX MACHINE : WUFE_EVENT_MACHINE_HDLC_RX_CRC_ERR\n");

2830 i‡(
	gevít
 & 
	gWUFE_EVENT_MACHINE_HDLC_RX_NON_OCTET
)

2831 
F¥ötf
("\tRX MACHINE : WUFE_EVENT_MACHINE_HDLC_RX_NON_OCTET\n");

2832 i‡(
	gevít
 & 
	gWUFE_EVENT_MACHINE_POS_RX_ABORT
)

2833 
F¥ötf
("\tRX MACHINE : WUFE_EVENT_MACHINE_POS_RX_ABORT\n");

2834 i‡(
	gevít
 & 
	gWUFE_EVENT_MACHINE_POS_CRC_ERR
)

2835 
F¥ötf
("\tRX MACHINE : WUFE_EVENT_MACHINE_POS_CRC_ERR\n");

2836 i‡(
	gevít
 & 
	gWUFE_EVENT_MACHINE_RX_OVERRUN_BURST
)

2837 
F¥ötf
("\tRX MACHINE : WUFE_EVENT_MACHINE_RX_OVERRUN_BURST\n");

2838 i‡(
	gevít
 & 
	gWUFE_EVENT_MACHINE_RX_OVERRUN_DDR
)

2839 
F¥ötf
("\tRX MACHINE : WUFE_EVENT_MACHINE_RX_OVERRUN_DDR\n");

2841 
F¥ötf
("\tRX MACHINE : NoÉvents\n");

2844 
	gevít
 = 
evíts
.
machöe_evíts
.
tx_evít_ªg
;

2846 i‡(
	gevít
 & 
	gWUFE_EVENT_MACHINE_TX
) {

2847 i‡(
	gevít
 & 
	gWUFE_EVENT_MACHINE_CES_TX_LOSS
)

2848 
F¥ötf
("\tTX MACHINE : WUFE_EVENT_MACHINE_CES_TX_LOSS\n");

2849 i‡(
	gevít
 & 
	gWUFE_EVENT_MACHINE_TX_UNDERRUN_BURST
)

2850 
F¥ötf
("\tTX MACHINE : WUFE_EVENT_MACHINE_TX_UNDERRUN_BURST\n");

2851 i‡(
	gevít
 & 
	gWUFE_EVENT_MACHINE_TX_UNDERRUN_DDR
)

2852 
F¥ötf
("\tTX MACHINE : WUFE_EVENT_MACHINE_TX_UNDERRUN_DDR\n");

2854 
F¥ötf
("\tTX MACHINE : NoÉvents\n");

2858 
	gevít
 = 
evíts
.
bs_evíts
.
∂l_lo°_lock_evít_ªg
;

2859 if(
	gevít
 & 0x400Ë
F¥ötf
("\tBS LOCK : TX EMPHY PLL LOST CLOCK\n");

2860 if(
	gevít
 & 0x200Ë
F¥ötf
("\tBS LOCK : RX EMPHY PLL LOST CLOCK\n");

2861 if(
	gevít
 & 0x080Ë
F¥ötf
("\tBS LOCK : DDR1 PLL LOST CLOCK\n");

2862 if(
	gevít
 & 0x040Ë
F¥ötf
("\tBS LOCK : DDR0 PLL LOST CLOCK\n");

2863 if(
	gevít
 & 0x020Ë
F¥ötf
("\tBS LOCK : DIFF PLL LOST CLOCK\n");

2864 if(
	gevít
 & 0x010Ë
F¥ötf
("\tBS LOCK : ADAPT PLL LOST CLOCK\n");

2865 if(
	gevít
 & 0x008Ë
F¥ötf
("\tBS LOCK : EXT PLL LOST CLOCK\n");

2866 if(
	gevít
 & 0x004Ë
F¥ötf
("\tBS LOCK : FRMR PLL LOST CLOCK\n");

2867 if(
	gevít
 & 0x003Ë
F¥ötf
("\tBS LOCK : DDR PLL LOST CLOCK\n");

2868 if(
	gevít
 & 0x002Ë
F¥ötf
("\tBS LOCK : SYSCLK PLL LOST CLOCK\n");

2870 
	gevít
 = 
evíts
.
bs_evíts
.
ab£¡_evít_ªg
;

2871 
	gi
=0; i<4; i++) {

2872 if(
	gevít
 & (1 << 
	gi
)) {

2873 
F¥ötf
("\tBS SFP : SFPábsent\n");

2875 
F¥ötf
("\tBS SFP : SFP OK\n");

2879 
	gevít
 = 
evíts
.
bs_evíts
.
los_evít_ªg
;

2880 
	gi
=0; i<4; i++) {

2881 if(
	gevít
 & (1 << 
	gi
)) {

2882 
F¥ötf
("\tBS LOS : Loss of signal\n");

2884 
F¥ötf
("\tBS LOS : Signal OK\n");

2894 
NP_Vt100Cr§Down
(
WP_U32
 
down
)

2896 
F¥ötf
("\033[%dB",
down
);

2900 
NP_Vt100Cr§Up
(
WP_U32
 
up
)

2902 
F¥ötf
("\033[%dA",
up
);

2905 
NP_Di•œyWögöeUtûiz©i⁄
 ( 
WP_U32
 *
wg_utû
, WP_U32 
tŸÆ_utû
)

2907 
WP_U32
 
	gfú°_¥öt_s¸ìn
;

2909 i‡(!
	gfú°_¥öt_s¸ìn
)

2911 
F¥ötf
(" *****************************************\n");

2912 
F¥ötf
(" Average utilization : \n");

2913 
F¥ötf
(" --------------------- \n");

2914 
F¥ötf
(" WG1:%02d%% WG2:%02d%% WG3:%02d%% WG4:%02d%% \n",

2915 
wg_utû
[
WP_WINGINE1
],

2916 
wg_utû
[
WP_WINGINE2
],

2917 
wg_utû
[
WP_WINGINE3
],

2918 
wg_utû
[
WP_WINGINE4
]);

2919 
F¥ötf
(" \n");

2920 
F¥ötf
(" TŸÆ Utûiz©i⁄ : %d%% \n", 
tŸÆ_utû
);

2921 
F¥ötf
(" \n");

2922 
F¥ötf
(" ****************************************\n");

2923 
F¥ötf
("\n");

2925 
	gfú°_¥öt_s¸ìn
 = 
WP_TRUE
;

2929 
NP_Vt100Cr§Up
(4);

2930 
F¥ötf
(" TŸÆ Utûiz©i⁄ : %d%% \n", 
tŸÆ_utû
);

2931 
NP_Vt100Cr§Up
(3);

2932 
F¥ötf
(" WG1:%02d%% WG2:%02d%% WG3:%02d%% WG4:%02d%% \n",

2933 
wg_utû
[
WP_WINGINE1
],

2934 
wg_utû
[
WP_WINGINE2
],

2935 
wg_utû
[
WP_WINGINE3
],

2936 
wg_utû
[
WP_WINGINE4
]);

2937 
NP_Vt100Cr§Down
(6);

2942 
NP_HwWöGöeUtû
(
WPU_utû_öfo
* 
utûiz©i⁄
, 
WP_U32
 *
wcom_av
 )

2944 
WP_U8
 
	gwö∑th_wögöes
;

2945 ()
WPUI_WöP©hGëWögöesO±i⁄
(0,&
wö∑th_wögöes
);

2947 
WP_U32
 
	gii
, 
	gjj
 = 0;

2952 
	gii
 = 0; iò< 
	gMAX_NUM_OF_WINGINES
 / 2; ii++)

2954 if(
	gwö∑th_wögöes
 & (1 << 
	gii
))

2956 
	gjj
++;

2957 *
	gwcom_av
 +
utûiz©i⁄
->
wg
[
ii
];

2961 
	gii
 = 
MAX_NUM_OF_WINGINES
 / 2; iò< 
	gMAX_NUM_OF_WINGINES
; ii++)

2963 if(
	gwö∑th_wögöes
 & (1 << 
	gii
))

2965 
	gjj
++;

2966 *
	gwcom_av
 +
utûiz©i⁄
->
wg
[
ii
];

2970 *
	gwcom_av
 = *
wcom_av
 / 
jj
;

2973 
Np_Gë_Utûiz©i⁄
(
STRU_CPU_STATICS
 *
gë_˝u_°©ics
)

2975 
WP_U32
 
	gwcom_av
=0;

2976 
WPU_utû_öfo
 
	gutûiz©i⁄
;

2977 
	gi
;

2978 
WPU_WöGöeUtûGë
(0,&
utûiz©i⁄
);

2979 
NP_HwWöGöeUtû
(&
utûiz©i⁄
, &
wcom_av
);

2980 
	gi
 = 0;i < 12;i ++)

2982 
	ggë_˝u_°©ics
->
	gWöGöUtûi
[
i
] = 
utûiz©i⁄
.
wg
[i];

2985 
	ggë_˝u_°©ics
->
	gtŸÆUtûi
 = 
wcom_av
;

2989 
Np_ShowMem‹yAvaûabÀ
(
STRU_MEMORY_STATICS
 *
gë_mem‹y_°©ics
)

2991 
WP_°©us
 
	g°©us
;

2992 
WP_U32
 
	gbyãs
;

2994 
STRU_SET_INITAIL_CONFIG
 *
	göôül_cfg
 = 
≈u_gë_öôül_cfg_öfo
();

2996 
	ggë_mem‹y_°©ics
->
	gI¡îMemTŸÆByã
 = 
öôül_cfg
->
I¡îMemTŸÆByã
;

2997 
	ggë_mem‹y_°©ics
->
	gPackëMemTŸÆByã
 = 
öôül_cfg
->
PackëMemTŸÆByã
;

2998 
	ggë_mem‹y_°©ics
->
	gP¨amMemTŸÆByã
 = 
öôül_cfg
->
P¨amMemTŸÆByã
;

3000 
	g°©us
 = 
WP_Mem‹yAvaûabÀ
(
WP_WINPATH
(0), (
u32
)
WP_BUS_PACKET
, 
APP_BANK_PACKET
, &
byãs
);

3001 
	ggë_mem‹y_°©ics
->
	gPackëMemLe·Byã
 = 
byãs
;

3003 
ãrmö©e_⁄_îr‹
(
°©us
, "np_mem_available:packet \n");

3007 
	g°©us
 = 
WP_Mem‹yAvaûabÀ
(
WP_WINPATH
(0), (
u32
)
WP_BUS_PARAM
, 
APP_BANK_PARAM
, &
byãs
);

3008 
	ggë_mem‹y_°©ics
->
	gP¨amMemLe·Byã
 = 
byãs
;

3010 
ãrmö©e_⁄_îr‹
(
°©us
, "np_mem_available:parameter \n");

3014 
	g°©us
 = 
WP_Mem‹yAvaûabÀ
(
WP_WINPATH
(0), (
u32
)
WP_BUS_INTERNAL
, 
APP_BANK_INTERNAL
,&
byãs
);

3015 
	ggë_mem‹y_°©ics
->
	gI¡îMemLe·Byã
 = 
byãs
;

3017 
ãrmö©e_⁄_îr‹
(
°©us
, "np_mem_available:internal \n");

3022 
WT_Np_U„LöeSdhC⁄fig
(
WT_u„_löe_sdh_∑øms
 *
löe_sdh_∑øms
,

3023 
WUFE_löe_sdh
 *
löe_cfg
)

3025 
mem£t
(
löe_cfg
, 0, (
WUFE_löe_sdh
));

3027 
	glöe_cfg
->
	g°ru˘_id
 = 
WUFE_STRUCT_LINE_SDH
;

3028 i‡(
	glöe_sdh_∑øms
->
	g°m4
 > 3)

3030 
F¥ötf
("Invalid stm4Öarameter, use 0-3 only \n");

3031 
exô
(1);

3033 
	glöe_cfg
->
	g°m4
 = 
löe_sdh_∑øms
->
°m4
;

3035 i‡(
	glöe_sdh_∑øms
->
	g°m1
 > 3)

3037 
F¥ötf
("Invalid stm1Öarameter, use 0-3 only \n");

3038 
exô
(1);

3040 
	glöe_cfg
->
	g°m1
 = 
löe_sdh_∑øms
->
°m1
;

3042 i‡(
	glöe_sdh_∑øms
->
	g°m0
 > 2)

3044 
F¥ötf
("Invalid stm0Öarameter, use 0-2 only \n");

3045 
exô
(1);

3047 
	glöe_cfg
->
	g°m0
 = 
löe_sdh_∑øms
->
°m0
;

3049 i‡(
	glöe_sdh_∑øms
->
	gtug2
 > 6)

3051 
F¥ötf
("InvalidÅug2Öarameter,use 0-6 only \n");

3052 
exô
(1);

3054 
	glöe_cfg
->
	gtug2
 = 
löe_sdh_∑øms
->
tug2
;

3056 i‡(
	glöe_sdh_∑øms
->
	gtu
 > 3)

3058 
F¥ötf
("InvalidÅuÖarameter,use 0-6 only \n");

3059 
exô
(1);

3061 i‡((
	glöe_sdh_∑øms
->
	gtu
 == 3)&&

3062 ((
löe_sdh_∑øms
->
å™s„r_ty≥
 =
WUFE_SDH_TYPE_E1
) ||

3063 (
löe_sdh_∑øms
->
å™s„r_ty≥
 =
WUFE_SDH_TYPE_VC12
)))

3065 
F¥ötf
("InvalidÅuÖarameter, slot 3Çot valid for E1 or VC12\n");

3066 
exô
(1);

3068 
	glöe_cfg
->
	gtu
 = 
löe_sdh_∑øms
->
tu
;

3070 
	glöe_cfg
->
	gå™s„r_ty≥
 = 
löe_sdh_∑øms
->
å™s„r_ty≥
;

3071 
	glöe_cfg
->
	g‰amed
 = 
löe_sdh_∑øms
->
‰amed
;

3073 
	glöe_cfg
->
	gˇs_íabÀ
 = 
WUFE_CAS_DISABLE
;

3075 i‡(
	glöe_sdh_∑øms
->
	g˛ock_ªc_löe_∑øms
 !
NULL
)

3077 
WUFE_löe_˛ock_ªc_∑øms
 *
löe_¸_∑øms
 = 
löe_sdh_∑øms
->
˛ock_ªc_löe_∑øms
;

3078 i‡(
	glöe_¸_∑øms
->
	gtx_˛k_ªc_íabÀ
 !=0 && 
löe_¸_∑øms
->
tx_˛k_ªc_íabÀ
 != 1)

3080 
F¥ötf
("Invalid TX Clock Recovery mode\n");

3081 
exô
(1);

3083 i‡(
	glöe_¸_∑øms
->
	g˛k_ªc_physiˇl_˛ock_íabÀ
 !0 && 
löe_¸_∑øms
->
˛k_ªc_physiˇl_˛ock_íabÀ
 != 1)

3085 
F¥ötf
("Invalid Physical clock mode\n");

3086 
exô
(1);

3088 i‡(
	glöe_¸_∑øms
->
	g˛k_ªc_physiˇl_˛ock_id
 < 0 ||Üine_cr_params->clk_rec_physical_clock_id > 1)

3090 
F¥ötf
("Invalid Physical clock ID, must be '0' or '1'\n");

3091 
exô
(1);

3093 
	glöe_cfg
->
	g˛ock_ªc_löe_∑øms
 = 
löe_¸_∑øms
;

3096 
	#HWno


	)

3097 
WT_Np_U„LöeC⁄figuªAndCª©eE1
(
WP_U32
 
löe_ödex
, 
WP_U16
 
‰amög_mode
, 
WP_U8
 
ˇs_íabÀ
,WP_U32 
löe_lb_mode
,WP_U32 
˛ock_mode
)

3099 
WT_u„_löe_sdh_∑øms
 
	glöe_∑øms
;

3100 
WUFE_löe_sdh
 
	glöe_cfg
;

3102 
mem£t
(&
löe_∑øms
, 0, (
WT_u„_löe_sdh_∑øms
));

3104 
	glöe_∑øms
.
	g°m4
 = 
löe_ödex
 / 336;

3105 
	glöe_∑øms
.
	g°m1
 = (
löe_ödex
 % 336) / 84;

3106 
	glöe_∑øms
.
	g°m0
 = (
löe_ödex
 % 84) / 28;

3107 
	glöe_∑øms
.
	gtug2
 = (
löe_ödex
 % 28) / 3;

3108 
	glöe_∑øms
.
	gtu
 = ((
löe_ödex
 % 28) % 3);

3111 #ifde‡
HW


3112 
	glöe_∑øms
.
	g°m4
 = 
löe_ödex
 / 252;

3113 
	glöe_∑øms
.
	g°m1
 = (
löe_ödex
 % 252) / 63;

3114 
	glöe_∑øms
.
	gtu
 = (
löe_ödex
 % 63) / 21;

3115 
	glöe_∑øms
.
	gtug2
 = (
löe_ödex
 % 21) / 3;

3116 
	glöe_∑øms
.
	g°m0
 = ((
löe_ödex
 % 21) % 3);

3120 
	glöe_∑øms
.
	g°m4
 = 
löe_ödex
 / 252;

3121 
	glöe_∑øms
.
	g°m1
 = (
löe_ödex
 % 252) / 63;

3122 
	glöe_∑øms
.
	g°m0
 = (
löe_ödex
 % 63) / 21;

3123 
	glöe_∑øms
.
	gtug2
 = (
löe_ödex
 % 21) / 3;

3124 
	glöe_∑øms
.
	gtu
 = ((
löe_ödex
 % 21) % 3);

3128 
	glöe_∑øms
.
	gå™s„r_ty≥
 = 
WUFE_SDH_TYPE_E1
;

3129 
	glöe_∑øms
.
	g‰amed
 = 
‰amög_mode
;

3130 
	glöe_∑øms
.
	gˇs_íabÀ
 = 
ˇs_íabÀ
;

3131 
	glöe_∑øms
.
	g˛ock_ªc_löe_∑øms
 = 
NULL
;

3132 
	glöe_∑øms
.
	g˛ock_mode
 = 
˛ock_mode
;

3133 
WT_Np_U„LöeSdhC⁄fig
(&
löe_∑øms
,&
löe_cfg
);

3134 
WT_Np_U„LöeCª©e
(
löe_ödex
,&
löe_cfg
,&
löe_∑øms
,
löe_lb_mode
);

3137 
WT_Np_U„LöeC⁄figuªAndCª©eT1
(
WP_U32
 
löe_ödex
, 
WP_U16
 
‰amög_mode
, 
WP_U8
 
ˇs_íabÀ
,WP_U32 
löe_lb_mode
,WP_U32 
˛ock_mode
)

3139 
WT_u„_löe_sdh_∑øms
 
	glöe_∑øms
;

3140 
WUFE_löe_sdh
 
	glöe_cfg
;

3141 
mem£t
(&
löe_∑øms
, 0, (
WT_u„_löe_sdh_∑øms
));

3142 
	glöe_∑øms
.
	g°m4
 = 
löe_ödex
 / 336;

3143 
	glöe_∑øms
.
	g°m1
 = (
löe_ödex
 % 336) / 84;

3144 
	glöe_∑øms
.
	g°m0
 = (
löe_ödex
 % 84) / 28;

3145 
	glöe_∑øms
.
	gtug2
 = (
löe_ödex
 % 28) / 4;

3146 
	glöe_∑øms
.
	gtu
 = (
löe_ödex
 % 4);

3147 
	glöe_∑øms
.
	gå™s„r_ty≥
 = 
WUFE_SDH_TYPE_T1
;

3148 
	glöe_∑øms
.
	g‰amed
 = 
‰amög_mode
;

3149 
	glöe_∑øms
.
	gˇs_íabÀ
 = 
ˇs_íabÀ
;

3150 
	glöe_∑øms
.
	g˛ock_ªc_löe_∑øms
 = 
NULL
;

3151 
	glöe_∑øms
.
	g˛ock_mode
 = 
˛ock_mode
;

3152 
WT_Np_U„LöeSdhC⁄fig
(&
löe_∑øms
,&
löe_cfg
);

3153 
WT_Np_U„LöeCª©e
(
löe_ödex
,&
löe_cfg
,&
löe_∑øms
,
löe_lb_mode
);

3156 
WP_S32
 
WTI_Np_FÀxmuxClõ¡P‹tIndexGë
(
WP_U32
 
u„_löe_ödex
, 
WUFE_löe_å™sf_ty≥
 
å™s„r_ty≥
)

3158 
	gå™s„r_ty≥
)

3160 (
	gWUFE_SONET_TYPE_E1
):

3161 (
WUFE_SDH_TYPE_E1
):

3163 
WP_U32
 
•e_num
 = (
u„_löe_ödex
 / 28);

3164 
WP_U32
 
	gtug2_num
 = ((
u„_löe_ödex
 % 28) / 3);

3165 
WP_U32
 
	goff£t_wôhö_tug2
 = ((
u„_löe_ödex
 % 28) % 3);

3168  ((
	g•e_num
*28Ë+ (
	gtug2_num
*4Ë+ 
	goff£t_wôhö_tug2
);

3170 (
	gWUFE_SONET_TYPE_T1
):

3171 (
WUFE_SDH_TYPE_T1
):

3173  
u„_löe_ödex
;

3176 
F¥ötf
("Unsuµ‹ãdÅøns„r_ty≥ %d\n", 
å™s„r_ty≥
);

3177 
exô
(-1);

3182 
WP_S32
 
WTI_Np_FÀxmuxLöeP‹tIndexGë
(
WP_U32
 
u„_löe_ödex
, WP_U32 
Êexmux_id
)

3184 
WP_U32
 
	gªsu…
 = -1;

3185 i‡(
	gÊexmux_ªg
[
Êexmux_id
].
	gÊexmux_buûd_≥rs⁄Æôy
 !
WPX_UFE_FRAMER_BUILD_PERSONALITY_4_PLUS_4_OC3_OC12
 &&

3186 
Êexmux_ªg
[
Êexmux_id
].
Êexmux_buûd_≥rs⁄Æôy
 !
WPX_UFE_FRAMER_BUILD_PERSONALITY_1_PLUS_1_OC3_OC12
 &&

3187 
Êexmux_ªg
[
Êexmux_id
].
Êexmux_buûd_≥rs⁄Æôy
 !
WPX_UFE_FRAMER_BUILD_PERSONALITY_2_PLUS_2_OC3
 &&

3188 
Êexmux_ªg
[
Êexmux_id
].
Êexmux_buûd_≥rs⁄Æôy
 !
WPX_UFE_FRAMER_BUILD_PERSONALITY_4_PLUS_4_OC3
)

3189 
WTI_FÀxmuxTîmö©eOnEº‹
("Invalid flexmux_build_personality !", 0);

3193 i‡(
	gÊexmux_ªg
[
Êexmux_id
].
	gÊexmux_buûd_≥rs⁄Æôy
 =
WPX_UFE_FRAMER_BUILD_PERSONALITY_4_PLUS_4_OC3_OC12
)

3195 
ªsu…
 = (
u„_löe_ödex
 / 336);

3197 i‡(
	gªsu…
 > 3)

3199 
	gªsu…
 = -1;

3203 
	gªsu…
 = 
ªsu…
 * 2;

3207 i‡((
	gÊexmux_ªg
[
Êexmux_id
].
	gÊexmux_buûd_≥rs⁄Æôy
 =
WPX_UFE_FRAMER_BUILD_PERSONALITY_1_PLUS_1_OC3_OC12
) ||

3208 (
Êexmux_ªg
[
Êexmux_id
].
Êexmux_buûd_≥rs⁄Æôy
 =
WPX_UFE_FRAMER_BUILD_PERSONALITY_2_PLUS_2_OC3
) ||

3209 (
Êexmux_ªg
[
Êexmux_id
].
Êexmux_buûd_≥rs⁄Æôy
 =
WPX_UFE_FRAMER_BUILD_PERSONALITY_4_PLUS_4_OC3
))

3212 i‡(
Êexmux_ªg
[
Êexmux_id
].
Êexmux_hw_c⁄fig
 =
WT_FLEXMUX_UFE_412_1_PORT_OC12
)

3214 
ªsu…
 = 0;

3217 i‡((
	gÊexmux_ªg
[
Êexmux_id
].
	gÊexmux_hw_c⁄fig
 =
WT_FLEXMUX_UFE_412_4_PORTS_OC3
) ||

3218 (
Êexmux_ªg
[
Êexmux_id
].
Êexmux_hw_c⁄fig
 =
WT_FLEXMUX_UFE_412_2_PORTS_OC3
))

3220 
ªsu…
 = (
u„_löe_ödex
 / 84);

3221 i‡(
	gªsu…
 > 3)

3223 
	gªsu…
 = -1;

3228  
	gªsu…
;

3231 
WT_Np_U„LöeCª©e
(
WP_U32
 
löe_ödex
,
WUFE_löe_sdh
 *
löe_cfg
,
WT_u„_löe_sdh_∑øms
 *
löe_sdh_∑øms
,WP_U32 
löe_lb_mode
)

3234 
WUFE_°©us
 
	g°©us
;

3235 
	g°©us
 = 
WUFE_LöeCª©e
(&
u„_löe_h™dÀ
[
löe_ödex
],0,
WUFE_STRUCT_LINE_SDH
,
löe_cfg
);

3236 
ãrmö©e_⁄_îr‹
(
°©us
, "SDH WUFE_LineCreate");

3237 
	g°©us
 = 
WUFE_LöeE«bÀ
(
u„_löe_h™dÀ
[
löe_ödex
], 
WUFE_FULL_DUPLEX
);

3238 
ãrmö©e_⁄_îr‹
(
°©us
, "SDH WUFE_LineEnable");

3240 
	g˛õ¡_p‹t
, 
	glöe_p‹t
;

3241 
WTI_Êexmux_c⁄√˘i⁄_ty≥
 
	gc⁄_ty≥
 =0;

3242 
	g˛õ¡_p‹t
 = 
WTI_FÀxmuxClõ¡P‹tIndexGë
(
E1M≠TabÀ
[
löe_ödex
], 
löe_sdh_∑øms
->
å™s„r_ty≥
);

3243 
	glöe_p‹t
 = 
WTI_FÀxmuxLöeP‹tIndexGë
(
E1M≠TabÀ
[
löe_ödex
], 0);

3244 i‡(
	glöe_p‹t
 == -1)

3246 
F¥ötf
("IŒegÆÜöêp‹àödex %d\n",
löe_ödex
);

3247 
exô
(1);

3249 
	glöe_sdh_∑øms
->
	gå™s„r_ty≥
)

3251 (
	gWUFE_SDH_TYPE_E1
):

3253 if(
löe_sdh_∑øms
->
‰amed
 =
WUFE_FRAMED
 &&Üöe_sdh_∑øms->
ˇs_íabÀ
 =
WUFE_CAS_ENABLE
)

3256 
c⁄_ty≥
 = 
WT_FLEXMUX_CONNECTION_TYPE_E1_FRAMED
;

3258 if(
	glöe_sdh_∑øms
->
	g‰amed
 =
WUFE_FRAMED
 && 
löe_sdh_∑øms
->
ˇs_íabÀ
 =
WUFE_CAS_DISABLE
)

3260 
c⁄_ty≥
 = 
WT_FLEXMUX_CONNECTION_TYPE_E1_FRAMED
;

3264 
	gc⁄_ty≥
 = 
WT_FLEXMUX_CONNECTION_TYPE_E1_UNFRAMED
;

3268 (
	gWUFE_SDH_TYPE_T1
):

3270 if(
löe_sdh_∑øms
->
ˇs_íabÀ
 =
WUFE_CAS_DISABLE
)

3272 
c⁄_ty≥
 = 
WT_FLEXMUX_CONNECTION_TYPE_T1_FRAMED
;

3276 
	gc⁄_ty≥
 = 
WT_FLEXMUX_CONNECTION_TYPE_T1_FRAMED_CAS
;

3281 
F¥ötf
("Unsuµ‹ãdÅøns„r_ty≥ %d\n", 
löe_sdh_∑øms
->
å™s„r_ty≥
);

3282 
exô
(1);

3284 
F¥ötf
("löeIndex = %dÜöe_p‹à%d clõ¡_p‹à%d \n",
löe_ödex
,
löe_p‹t
,
˛õ¡_p‹t
);

3285 ()
WTI_FÀxmuxC⁄√˘i⁄Cª©e
(0,

3286 
löe_p‹t
,

3287 
˛õ¡_p‹t
,

3288 
c⁄_ty≥
,

3289 (*)
löe_sdh_∑øms
);

3290 if(
	glöe_lb_mode
 =
UFE_LB_SYSTEM
)

3292 
°©us
 = 
WUFE_LöeLo›backC⁄figuª
(
u„_löe_h™dÀ
[
löe_ödex
], 
WUFE_LINE_LOOPBACK_TYPE_SYSTEM
);

3293 
ãrmö©e_⁄_îr‹
(
°©us
, "WUFE_LineLoopbackConfigure SYSTEM");

3295 if(
	glöe_lb_mode
 =
UFE_LB_LINE
)

3297 
°©us
 = 
WUFE_LöeLo›backC⁄figuª
(
u„_löe_h™dÀ
[
löe_ödex
], 
WUFE_LINE_LOOPBACK_TYPE_LINE
);

3298 
ãrmö©e_⁄_îr‹
(
°©us
, "WUFE_LineLoopbackConfigure SYSTEM");

3306 
≈_di•œy_u„4_shd_°©us
()

3308 
STRU_STM1_ALARM_INFO
 *
	gÆamInfo
 = 
≈_gë_u„4_¨Æm_öfo
();

3309 
STRU_STM1_SDH_ALARM
 * 
	gAœrmSDH
;

3310 
	g°m1
;

3311 
	g°m1
 = 0; stm1< 
	gSPP_MAX_STM1_PORT_NUM
;stm1++)

3313 
	gAœrmSDH
 = &
ÆamInfo
->
SDH_Æ¨m
[
°m1
];

3314 
F¥ötf
("STM1 %d STATUS:\n",
°m1
);

3315 
F¥ötf
("SDH_LOS = %d\n",
AœrmSDH
->
SDH_LOS
);

3316 
F¥ötf
("SDH_LOF = %d\n",
AœrmSDH
->
SDH_LOF
);

3317 
F¥ötf
("SDH_RS_TIM = %d\n",
AœrmSDH
->
SDH_RS_TIM
);

3318 
F¥ötf
("SDH_MS_AIS = %d\n",
AœrmSDH
->
SDH_MS_AIS
);

3319 
F¥ötf
("SDH_MS_RDI = %d\n",
AœrmSDH
->
SDH_MS_RDI
);

3320 
F¥ötf
("SDH_OOF = %d\n",
AœrmSDH
->
SDH_OOF
);

3321 
F¥ötf
("SDH_MS_EXC = %d\n",
AœrmSDH
->
SDH_MS_EXC
);

3322 
F¥ötf
("SDH_MS_DEG = %d\n",
AœrmSDH
->
SDH_MS_DEG
);

3323 
F¥ötf
("SDH_AU_AIS = %d\n",
AœrmSDH
->
SDH_AU_AIS
);

3324 
F¥ötf
("SDH_AU_LOP = %d\n",
AœrmSDH
->
SDH_AU_LOP
);

3325 
F¥ötf
("SDH_HP_LOM = %d\n",
AœrmSDH
->
SDH_HP_LOM
);

3326 
F¥ötf
("SDH_HP_TIM = %d\n",
AœrmSDH
->
SDH_HP_TIM
);

3327 
F¥ötf
("SDH_HP_PLM = %d\n",
AœrmSDH
->
SDH_HP_PLM
);

3328 
F¥ötf
("SDH_HP_UNEQ = %d\n",
AœrmSDH
->
SDH_HP_UNEQ
);

3329 
F¥ötf
("SDH_HP_RDI = %d\n",
AœrmSDH
->
SDH_HP_RDI
);

3330 
F¥ötf
("SDH_HP_EXC = %d\n",
AœrmSDH
->
SDH_HP_EXC
);

3331 
F¥ötf
("SDH_HP_DEG = %d\n",
AœrmSDH
->
SDH_HP_DEG
);

3332 
F¥ötf
("SDH_LP_TIM = %d\n",
AœrmSDH
->
SDH_LP_TIM
);

3333 
F¥ötf
("SDH_LP_PLM = %d\n",
AœrmSDH
->
SDH_LP_PLM
);

3334 
F¥ötf
("SDH_LP_UNEQ = %d\n",
AœrmSDH
->
SDH_LP_UNEQ
);

3335 
F¥ötf
("SDH_LP_RDI = %d\n",
AœrmSDH
->
SDH_LP_RDI
);

3336 
F¥ötf
("SDH_LP_EXC = %d\n",
AœrmSDH
->
SDH_LP_EXC
);

3337 
F¥ötf
("SDH_LP_DEG = %d\n",
AœrmSDH
->
SDH_LP_DEG
);

3338 
F¥ötf
("SDH_TU_AIS = %d\n",
AœrmSDH
->
SDH_TU_AIS
);

3339 
F¥ötf
("SDH_TU_LOP = %d\n",
AœrmSDH
->
SDH_TU_LOP
);

3340 
F¥ötf
("\n");

3345 
≈_di•œy_Æl_u„4_e1t1_°©us
()

3347 
WP_U16
 
	gi
;

3348 
WP_U16
 
	g°m1
;

3350 
STRU_SET_INITAIL_CONFIG
 *
	göôül_cfg
 = 
≈u_gë_öôül_cfg_öfo
();

3351 
	g°m1
 = 0; stm1 < 
	gSPP_MAX_STM1_PORT_NUM
; stm1++)

3353 if(
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1
].
	g°m1VÆid
 =
NPU_VALID
)

3355 
i
 = 0; 
	gi
 < 
	gSPP_MAX_TRUNK_NUM
; i++)

3357 if(
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1
].
	gåunk_öfo
[
i
].
	gåunkVÆid
 =
NPU_VALID
)

3359 
≈_di•œy_u„4_e1t1_°©us
(
°m1
, 
i
);

3366 
≈_di•œy_u„4_e1t1_°©us
(
WP_U32
 
LöeP‹t
 ,WP_U32 
löeIndex
)

3368 if(
	glöeIndex
 > 
	gSPP_MAX_TRUNK_NUM
)

3370 if(
	gLöeP‹t
 > 
	gSPP_MAX_STM1_PORT_NUM
)

3372 
STRU_STM1_ALARM_INFO
 *
	gÆamInfo
 = 
≈_gë_u„4_¨Æm_öfo
();

3373 
STRU_STM1_E1T1_ALARM_INFO
 * 
	gAœrmE1T1
 = &
ÆamInfo
->
E1T1_Æ¨m
[
LöeP‹t
][
löeIndex
];

3375 i‡(
	gAœrmE1T1
->
	gLOS
 || AœrmE1T1->
	gLOF
 ||

3376 
	gAœrmE1T1
->
	gAIS
 || AœrmE1T1->
	gAIS_CI
 ||

3377 
	gAœrmE1T1
->
	gRAI
 || AœrmE1T1->
	gRAI_CI
)

3379 
F¥ötf
("STM1 %d Löê%d STATUS:\n", 
LöeP‹t
+1, 
löeIndex
+1);

3380 
F¥ötf
("LOS = %d\n",
AœrmE1T1
->
LOS
);

3381 
F¥ötf
("LOF = %d\n",
AœrmE1T1
->
LOF
);

3382 
F¥ötf
("AIS = %d\n",
AœrmE1T1
->
AIS
);

3383 
F¥ötf
("AIS_CI = %d\n",
AœrmE1T1
->
AIS_CI
);

3384 
F¥ötf
("RAI = %d\n",
AœrmE1T1
->
RAI
);

3385 
F¥ötf
("RAI = %d\n",
AœrmE1T1
->
RAI_CI
);

3386 
F¥ötf
("\n");

3391 
STRU_STM1_ALARM_INFO
* 
≈_gë_u„4_¨Æm_öfo
()

3393  &
	g≈_u„4_¨¨m_öfo
;

3396 
≈_£t_u„4_¨Æm_öfo
(
WP_U32
 
LöeP‹t
, WP_U32 
AœrmC©eg‹y
, WP_U32 
IsAs£πed
)

3398 if(
	gLöeP‹t
 > 
	gSPP_MAX_STM1_PORT_NUM
) ;

3399 if(
	gAœrmC©eg‹y
 > 
	gWPX_UFE_FRAMER_SDH_TU_LOP
);

3400 
STRU_STM1_ALARM_INFO
 *
	gÆamInfo
 = 
≈_gë_u„4_¨Æm_öfo
();

3401 
STRU_STM1_SDH_ALARM
 * 
	gAœrmSDH
 = &
ÆamInfo
->
SDH_Æ¨m
[
LöeP‹t
];

3402 *(&
	gAœrmSDH
->
	gSDH_LOS
 + 
	gAœrmC©eg‹y
Ë
IsAs£πed
;

3405 
≈_£t_u„4_E1T1_¨Æm_öfo
(
WPX_UFE_FRAMER_COMMON_SDH_SONET_ENDPOINT_TYPE
 * 
pLöeEndpoöt
, 
WP_U32
 
AœrmC©eg‹y
, WP_U32 
IsAs£πed
)

3407 
WP_U8
 
	g°m1
 = 
pLöeEndpoöt
->
u
.
SDH
.
°m1
;

3408 
WP_U8
 
	gtug3
 = 
pLöeEndpoöt
->
u
.
SDH
.
°m0
;

3409 
WP_U8
 
	gtug2
 = 
pLöeEndpoöt
->
u
.
SDH
.
tug2
;

3410 
WP_U8
 
	gtug12
 = 
pLöeEndpoöt
->
u
.
SDH
.
tu
;

3411 
WP_U16
 
	glöeIndex
;

3412 
STRU_SET_INITAIL_CONFIG
 *
	göôül_cfg
 = 
≈u_gë_öôül_cfg_öfo
();

3416 if(
	g°m1
!= 0)

3418 
°m1
 = 1;

3421 if(
	g°m1
 > (
	gSPP_MAX_STM1_PORT_NUM
-1))

3426 if(
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1
].
	gE1T1ty≥
 =
NPU_MODE_E1
)

3428 if(
tug3
 > 3);

3429 if(
	gtug2
 > 7);

3430 if(
	gtug12
 > 3);

3431 
	glöeIndex
 = 
tug12
 + 3*
tug2
 + 21 *
tug3
;

3437 if(
	gtug3
 > 3);

3438 if(
	gtug2
 > 7);

3439 if(
	gtug12
 > 4);

3440 
	glöeIndex
 = 
tug12
 + 4*
tug2
 + 28 *
tug3
;

3444 
STRU_STM1_ALARM_INFO
 *
	gÆamInfo
 = 
≈_gë_u„4_¨Æm_öfo
();

3445 
STRU_STM1_E1T1_ALARM_INFO
 * 
	gAœrmE1T1
 = &
ÆamInfo
->
E1T1_Æ¨m
[
°m1
][
löeIndex
];

3446 if(
	gAœrmC©eg‹y
 =
WPX_UFE_FRAMER_SDH_LP_PLM
)

3448 *(&
AœrmE1T1
->
AIS
Ë
IsAs£πed
;

3453 
≈_£t_u„4_E1T1_¨Æm_öfo_‰omClõ¡P‹t
–
WP_U32
 
Clõ¡P‹t
, WP_U32 
AœrmC©eg‹y
, WP_U32 
IsAs£πed
)

3456 
WP_U16
 
	glöeIndex
;

3457 
WP_U16
 
	g°m1
;

3458 
WP_U16
 
	g˛õ¡_p‹t
;

3459 
STRU_SET_INITAIL_CONFIG
 *
	göôül_cfg
 = 
≈u_gë_öôül_cfg_öfo
();

3460 
	glöeIndex
 = 0;löeIndex < 
	gN_UFE_MAX_LINES_T1
;lineIndex++)

3462 
	g°m1
 = 
löeIndex
/
SPP_MAX_TRUNK_NUM
;

3463 if(
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1
].
	gE1T1ty≥
 =
NPU_MODE_E1
)

3465 
˛õ¡_p‹t
 = 
WTI_FÀxmuxClõ¡P‹tIndexGë
(
E1M≠TabÀ
[
löeIndex
], 
WUFE_SDH_TYPE_E1
);

3469 
	g˛õ¡_p‹t
 = 
WTI_FÀxmuxClõ¡P‹tIndexGë
(
E1M≠TabÀ
[
löeIndex
], 
WUFE_SDH_TYPE_T1
);

3471 if(
	g˛õ¡_p‹t
 =
Clõ¡P‹t
)

3476 if(
	glöeIndex
 =
N_UFE_MAX_LINES_T1
)

3481 if(
	göôül_cfg
->
	g°ru_°m1_cfg_öfo
[
°m1
].
	gE1T1ty≥
 =
NPU_MODE_E1
)

3483 
°m1
 = 
löeIndex
/(
N_UFE_MAX_LINES_E1
/2);

3484 
	glöeIndex
 = 
löeIndex
%(
N_UFE_MAX_LINES_E1
/2);

3488 
	g°m1
 = 
löeIndex
/(
N_UFE_MAX_LINES_T1
/2);

3489 
	glöeIndex
 = 
löeIndex
%(
N_UFE_MAX_LINES_T1
/2);

3491 
STRU_STM1_ALARM_INFO
 *
	gÆamInfo
 = 
≈_gë_u„4_¨Æm_öfo
();

3492 
STRU_STM1_E1T1_ALARM_INFO
 * 
	gAœrmE1T1
 = &
ÆamInfo
->
E1T1_Æ¨m
[
°m1
][
löeIndex
];

3493 *(&
	gAœrmE1T1
->
	gLOS
 + 
	gAœrmC©eg‹y
Ë
IsAs£πed
;

3497 
≈_check_u„4_°m1_°©us
(
WP_U32
 
LöeP‹t
)

3499 
STRU_STM1_ALARM_INFO
 *
	gÆamInfo
 = 
≈_gë_u„4_¨Æm_öfo
();

3500 
STRU_STM1_SDH_ALARM
 * 
	gAœrmSDH
 = &
ÆamInfo
->
SDH_Æ¨m
[
LöeP‹t
];

3501 if(
	gAœrmSDH
->
	gSDH_OOF
)

3503  
	gLINK_STATUS_DOWN
;

3507  
	gLINK_STATUS_UP
;

3512 
≈_check_u„4_e1t1_°©us
(
WP_U32
 
LöeP‹t
 ,WP_U32 
löeIndex
)

3514 if(
	glöeIndex
 > 
	gSPP_MAX_TRUNK_NUM
)  -1;

3515 if(
	gLöeP‹t
 > 
	gSPP_MAX_STM1_PORT_NUM
)  -1;

3516 
STRU_STM1_ALARM_INFO
 *
	gÆamInfo
 = 
≈_gë_u„4_¨Æm_öfo
();

3517 
STRU_STM1_E1T1_ALARM_INFO
 * 
	gAœrmE1T1
 = &
ÆamInfo
->
E1T1_Æ¨m
[
LöeP‹t
][
löeIndex
];

3518 if(
	gAœrmE1T1
->
	gAIS_CI
 ||AœrmE1T1->
	gAIS
)

3520  
	gLINK_STATUS_DOWN
;

3524  
	gLINK_STATUS_UP
;

3528 
≈_c⁄fig_Æl_phys
()

3530 
	gi
,
	gj
,
	gk
;

3531 
WP_U32
 
	g¶Ÿ_£À˘i⁄
;

3532 
WP_U32
 
	glöe_ödex_ba£
,
	glöe_ödex_cou¡s
,
	gphy_cou¡s
;

3533 
STRU_SET_INITAIL_CONFIG
 *
	göôül_cfg
 = 
≈u_gë_öôül_cfg_öfo
();

3535 
	gi
 = 0; i < 
	gSPP_MAX_STM1_PORT_NUM
; i ++)

3537 if(
	gNPU_VALID
 =
öôül_cfg
->
°ru_°m1_cfg_öfo
[
i
].
°m1VÆid
)

3539 if(
öôül_cfg
->
°ru_°m1_cfg_öfo
[
i
].
E1T1ty≥
 =
NPU_MODE_E1
)

3541 
löe_ödex_ba£
 = 
i
*
N_UFE_MAX_LINES_E1
/2;

3542 
	glöe_ödex_cou¡s
 = (1+
i
)*
N_UFE_MAX_LINES_E1
/2;

3543 
	gphy_cou¡s
 = 32;

3547 
	glöe_ödex_ba£
 = 
i
*
N_UFE_MAX_LINES_T1
/2;

3548 
	glöe_ödex_cou¡s
 = (1+
i
)*
N_UFE_MAX_LINES_T1
/2;

3549 
	gphy_cou¡s
 = 24;

3551 
	gj
 = 
löe_ödex_ba£
; j < 
	glöe_ödex_cou¡s
; j ++)

3553 if(
	gNPU_VALID
 =
öôül_cfg
->
°ru_°m1_cfg_öfo
[
i
].
åunk_öfo
[
j
 - 
löe_ödex_ba£
].
åunkVÆid
)

3555 
k
 = 0; 
	gk
 < 
	gphy_cou¡s
; k ++)

3557 if(
	gNPU_VALID
 =
öôül_cfg
->
°ru_°m1_cfg_öfo
[
i
].
åunk_öfo
[
j
 - 
löe_ödex_ba£
].
group_öfo
[
k
].
groupVÆid
)

3559 if(
u„_devi˚_h™dÀ
[
j
][
k
] == 0)

3561 
¶Ÿ_£À˘i⁄
 = 
öôül_cfg
->
°ru_°m1_cfg_öfo
[
i
].
åunk_öfo
[
j
 - 
löe_ödex_ba£
].
group_öfo
[
k
].slot_selection;

3562 
WTUFE_c⁄fig_phys
(
j
,
k
,
¶Ÿ_£À˘i⁄
,
löe_ödex_ba£
);

3563 
F¥ötf
("UFEÖhy o¿°m1 %dÅrunk %d ,grou∞%d i†Cª©ed slŸ_£À˘i⁄ = 0x%x \n",
i
,
j
+1,
k
,
¶Ÿ_£À˘i⁄
);

3571 
WTUFE_c⁄fig_phys
(
j
,1,0xffffff„,
löe_ödex_ba£
);

3572 
F¥ötf
("Cª©êUFEÖhy f‹ un-c⁄figuªd E1: UFEÖhy o¿°m1 %dÅrunk %d ,grou∞%d i†Cª©ed slŸ_£À˘i⁄ = 0x%x \n",
i
,
j
+1,1,0xfffffffe);

3578 
≈_Devi˚Dñëe
(
WP_U32
 
åunkid
,WP_U32 
groupid
)

3580 
WP_°©us
 
	g°©us
;

3581 if(0 !
u„_devi˚_h™dÀ
[
åunkid
][
groupid
])

3583 
°©us
 = 
WP_Devi˚DißbÀ
(
u„_devi˚_h™dÀ
[
åunkid
][
groupid
], 
WP_DIRECTION_DUPLEX
);

3584 if(
	gWP_OK
 !
°©us
)

3586 
F¥ötf
("≈_Devi˚DñëêWP_Devi˚DißbÀ faûed! sètu†%d\n",
°©us
);

3588 
	g°©us
 = 
WP_Devi˚Dñëe
(
u„_devi˚_h™dÀ
[
åunkid
][
groupid
]);

3589 if(
	gWP_OK
 !
°©us
)

3591 
F¥ötf
("≈_Devi˚DñëêWP_Devi˚DñëêÁûed! sètu†%d\n",
°©us
);

3595 
	gu„_devi˚_h™dÀ
[
åunkid
][
groupid
] = 0;

3600 
WP_°©us
 
≈_U„_Phy_Dñëe
(
WP_U32
 
åunkid
,WP_U32 
groupid
)

3602 
WP_°©us
 
	g°©us
;

3603 
WP_U32
 
	gj
;

3605 if(0 !
u„_phy_h™dÀ
[
åunkid
][
groupid
])

3607 
°©us
 = 
WUFE_PhyDißbÀ
(
u„_phy_h™dÀ
[
åunkid
][
groupid
], 
WUFE_FULL_DUPLEX
);

3608 if(
	g°©us
 !
WUFE_OK
)

3610 
F¥ötf
("≈_U„_Phy_DñëêWUFE_PhyDißbÀ faûed! sètu†%d\n",
°©us
);

3613 
	gj
=0; j<100000;j++)

3615 
	g°©us
 = 
WUFE_PhyDñëe
(
u„_phy_h™dÀ
[
åunkid
][
groupid
]);

3616 if(
	g°©us
 =
WUFE_OK
)

3618 
u„_phy_h™dÀ
[
åunkid
][
groupid
] = 0;

3621 i‡(
	g°©us
 !
WUFE_ERR_PHY_FIFO_NOT_EMPTY
)

3622  
°©us
;

3623 
WP_Dñay
(10);

3628 
WP_°©us
 
≈_Ch™√l_is_N⁄e
(
WP_U32
 
°m1Id
, WP_U32 
åunkid
, WP_U32 
groupid
)

3630 
WP_U32
 
	gvÂ‹t
,
	gdlci
;

3631 
STRU_VPORT_INFO
 *
	gVp‹tInfo
;

3633 
	gdlci
 = 0; dlci < 1025; dlci ++)

3635 
	gvÂ‹t
 = 
≈_‰addr_∑ck
(
°m1Id
+1, 
åunkid
+1, 
groupid
, 
dlci
);

3636 
	gVp‹tInfo
 = 
≈u_gë_vp‹t_öfo
(
vÂ‹t
);

3637 if(
	gVp‹tInfo
 !
NULL
)

3639 if((
Vp‹tInfo
->
ch_öfo
.
rx_ho°_h™dÀ
 !0Ë||(Vp‹tInfo->ch_öfo.
rx_iw_h™dÀ
 !0)||(Vp‹tInfo->ch_öfo.
tx_iw_h™dÀ
 != 0))

3645  
	gWP_OK
;

3650 #i‚de‡
SERIAL_1_CPLD_INTERRUPT_MASK


3651 
	#SERIAL_1_CPLD_INTERRUPT_MASK
 0x6f

	)

3654 
WP_U8
 
	gœ°_öãºu±_mask
 = 
SERIAL_1_CPLD_INTERRUPT_MASK
;

3656 
WT_Reö°©eI¡îru±Mask
(
WP_U32
 
wpid
)

3660 
WPX_U„412C∂dI¡îru±MaskSë
(
wpid
, 
œ°_öãºu±_mask
);

3663 
WT_Eöt3I¡îru±
(
WP_U32
 
wpid
, WP_U32 
sig«l_öfo
)

3665 
WP_boﬁón
 
	gis_‰amî_öt
, 
	gis_c‹e_öt
;

3666 
WUFE_evíts
 
	ga˘ive_evíts
;

3667 
WPX_UFE_FRAMER_ISR
(
WP_U8
 
iDevi˚
);

3671 
mem£t
(&
a˘ive_evíts
, 0, (
WUFE_evíts
));

3673 
	gis_‰amî_öt
 = 
WUFE_U„FømîHwI¡îru±Gë
(0);

3674 
	gis_c‹e_öt
 = 
WUFE_U„C‹eHwI¡îru±Gë
(0);

3676 i‡(
	gis_‰amî_öt
) {

3681 
WPX_UFE_FRAMER_ISR
(0);

3684 i‡(
	gis_c‹e_öt
) {

3689 #i‡!
deföed
(
WPL_MAILBOX_LOCK_KEY
)

3690 
	#WPL_MAILBOX_LOCK_KEY
 
	`WPL_LOCK_KEY_CREATE
(
WPL_HW_LOCK
, 
WPL_PRIVATE_LOCK
, 6, 0)

	)

3693 
WPL_U∆ock
(
WPL_MAILBOX_LOCK_KEY
, 0);

3700 
≈_u„_ªÀa£
()

3702 
WPL_I¡DißbÀ
 (
WP_WINPATH
(0), 
WPL_Eöt3U„4
);

3703 
¶ìp
(1);

3704 
WPL_U∆ock
(
WPL_MAILBOX_LOCK_KEY
, 0);

3705 
WPX_FRMR_LowLevñCommsDißbÀAc˚ss
(0);

3709 
≈u_u„_ªc⁄fig_˛ock_mode
–
WP_U32
 
löe_ödex
 ,WP_U32 
å™s_ty≥
 ,WP_U32 
˛ock_mode
)

3711 
WP_S32
 
	g˛õ¡_p‹t
;

3712 
WP_S32
 
	g°©us
;

3713 if(
	gå™s_ty≥
 =
NPU_MODE_E1
)

3715 
˛õ¡_p‹t
 = 
WTI_FÀxmuxClõ¡P‹tIndexGë
(
E1M≠TabÀ
[
löe_ödex
], 
WUFE_SDH_TYPE_E1
);

3719 
	g˛õ¡_p‹t
 = 
WTI_FÀxmuxClõ¡P‹tIndexGë
(
E1M≠TabÀ
[
löe_ödex
], 
WUFE_SDH_TYPE_T1
);

3721 
F¥ötf
("≈u_u„_ªc⁄fig_˛ock_modê˛ock_mode=%d\n",
˛ock_mode
);

3723 
	g°©us
 = 
WPX_FRMR_SOCKET_PDH_SëClkRec
(0, 0, 
˛õ¡_p‹t
, 
˛ock_mode
);

3724 
WTI_FÀxmuxCheckSètus
("≈u_u„_ªc⁄fig_˛ock_modêWPX_FRMR_SOCKET_PDH_SëClkRec", 
°©us
, 
__LINE__
);

3728 
≈u_íabÀ_u„_£rdes_öãºu±
()

3731 
WPL_I¡C⁄√˘
(
WP_WINPATH
(0), 
WPL_SîdesI¡îru±
, 0, 
WT_SîdesI¡îru±
);

3732 
WPL_I¡E«bÀ
 (
WP_WINPATH
(0), 
WPL_SîdesI¡îru±
);

3734 
WPL_I¡C⁄√˘
(
WP_WINPATH
(0), 
WPL_SgmiiAn
, 0, 
WT_SgmiiAnI¡îru±
);

3735 
WPL_I¡E«bÀ
 (
WP_WINPATH
(0), 
WPL_SgmiiAn
);

3738 *(vﬁ©ûê*)()(0x1e0082f0 + 
WPL_RIF_VIRTUAL
(0, 0)) = 0;

3739 *(vﬁ©ûê*)()(0x1e0082f4 + 
WPL_RIF_VIRTUAL
(0, 0)Ë
ht⁄l
(0x80000777);

	@npu_main.c

19 
	~<°dlib.h
>

20 
	~<°dio.h
>

21 
	~<°rög.h
>

22 
	~<£m≠h‹e.h
>

23 
	~<sys/£À˘.h
>

24 
	~<î∫o.h
>

25 
	~<sig«l.h
>

26 
	~<uni°d.h
>

27 
	~<f˙é.h
>

28 
	~<√töë/ö.h
>

29 
	~"•p_wddi_£rvî.h
"

30 
	~"tun_dev.h
"

31 
	~"wddi_log.h
"

32 
	~<as£π.h
>

33 
	~"≠i/wp_wddi.h
"

34 
	~"≈_comm⁄.h
"

35 
	~"wpu_bu£s.h
"

36 
	~"xs_io˘l.h
"

37 
	~<limôs.h
>

38 
	~<±hªad.h
>

39 
	~<libgí.h
>

40 
	~<sys/sysˇŒ.h
>

41 
	~<glob.h
>

42 
	#gëtid
(Ë
	`sysˇŒ
(
__NR_gëtid
)

	)

43 
add_dl_ruÀ_™d_buûd
();

44 
dl_ruÀ_node_cou¡
;

45 
	gdl_ruÀ_buûd_waôtime
 = 0;

48 
	gg_≈öôülFœg
=
NPU_UNINITALIZED
;

49 
	gg_≈n⁄poﬁFœg
=
NPU_POOL
;

50 
	gg_≈N£AggFœg
=
NPU_NSE_AGG_OFF
;

51 
STRU_SET_INITAIL_CONFIG
 
g_≈öôül
;

52 
WP_U32
 
ƒi_bô_Àngth
;

53 
WP_h™dÀ
 
iw_rx_ho°_h™dÀ
;

54 
	#__LITTLE_ENDIAN_BITFIELD


	)

55 
	#FRAME_MAX_LENGTH
 4096

	)

56 
	#ETH_P_8021Q
 0x8100

	)

57 
	sùhdr
 {

58 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

59 
__u8
 
	mihl
:4,

60 
	mvîsi⁄
:4;

61 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

62 
__u8
 
	mvîsi⁄
:4,

63 
	mihl
:4;

67 
__u8
 
	mtos
;

68 
__be16
 
	mtŸ_Àn
;

69 
__be16
 
	mid
;

70 
__be16
 
	m‰ag_off
;

71 
__u8
 
	mâl
;

72 
__u8
 
	m¥Ÿocﬁ
;

73 
__sum16
 
	mcheck
;

74 
__be32
 
	mßddr
;

75 
__be32
 
	mdaddr
;

80 
	#ETH_ALEN
 6

	)

85 
	sëhhdr
 {

86 
	mh_de°
[
ETH_ALEN
];

87 
	mh_sour˚
[
ETH_ALEN
];

88 
__be16
 
	mh_¥Ÿo
;

91 
	svœn_ëhhdr
 {

92 
	mh_de°
[
ETH_ALEN
];

93 
	mh_sour˚
[
ETH_ALEN
];

94 
__be16
 
	mh_vœn_¥Ÿo
;

95 
__be16
 
	mh_vœn_TCI
;

96 
__be16
 
	mh_vœn_íˇpsuœãd_¥Ÿo
;

100 
	sudphdr
 {

101 
__be16
 
	msour˚
;

102 
__be16
 
	mde°
;

103 
__be16
 
	mÀn
;

104 
__sum16
 
	mcheck
;

107 
	sEth_Regs
 {

108 
u32
 
	mSERDES_MUX_CTRL_0
;

109 
u32
 
	mSERDES3_IO_CTRL_0
;

110 
u32
 
	mSERDES3_IO_CTRL_1
;

111 
u32
 
	mSERDES3_IO_CTRL_2
;

112 
u32
 
	mSERDES3_IO_CTRL_3
;

113 
u32
 
	mSERDES3_IO_CTRL_4
;

114 
u32
 
	mSERDES3_IO_STAT
;

115 
u32
 
	mSERDES_INTERRUPT_1
;

116 
u32
 
	mSERDES_INTERRUPT_1_MASK
;

117 
u32
 
	mSERDES_RX_MUX_CONTROL_0
;

118 
u32
 
	mSERDES_RX_MUX_CONTROL_1
;

119 
u32
 
	mWN2_WNC1
;

120 
u32
 
	mWN2_WNC2
;

121 
u32
 
	mWN3_WNC1
;

122 
u32
 
	mWN3_WNC2
;

123 
u32
 
	mWN2_TCNTR_0
;

124 
u32
 
	mWN2_TCNTR_1
;

125 
u32
 
	mWN2_TSTAT_0
;

126 
u32
 
	mWN2_TSTAT_1
;

127 
u32
 
	mWN3_TCNTR_0
;

128 
u32
 
	mWN3_TCNTR_1
;

129 
u32
 
	mWN3_TSTAT_0
;

130 
u32
 
	mWN3_TSTAT_1
;

131 
u32
 
	mWN2_TADIR_0
;

132 
u32
 
	mWN2_TADIR_1
;

133 
u32
 
	mWN2_TANDBG_0
;

134 
u32
 
	mWN2_TANDBG_1
;

135 
u32
 
	mWN3_TANDBG_0
;

136 
u32
 
	mWN3_TANDBG_1
;

137 
u32
 
	mWN2_IFC_0
;

138 
u32
 
	mWN3_IFC_0
;

141 
u32
 
	$ªad_ªg
(
u32
 
addr
)

143 
u32
 
ªt
;

144 
ªt
 = *((vﬁ©ûê*)()(
addr
 + 
	`WPL_RIF_VIRTUAL
(0, 0)));

145 
ªt
 = 
	`ht⁄l
(ret);

146  
ªt
;

147 
	}
}

149 
	$di•œy_ëh_ªgs
(
Eth_Regs
* 
¥egs
)

151 
	`WDDI_INFO
("SERDES_MUX_CTRL_0:0x%08x\n",
¥egs
->
SERDES_MUX_CTRL_0
);

152 
	`WDDI_INFO
("SERDES3_IO_CTRL_0:0x%08x\n",
¥egs
->
SERDES3_IO_CTRL_0
);

153 
	`WDDI_INFO
("SERDES3_IO_CTRL_1:0x%08x\n",
¥egs
->
SERDES3_IO_CTRL_1
);

154 
	`WDDI_INFO
("SERDES3_IO_CTRL_2:0x%08x\n",
¥egs
->
SERDES3_IO_CTRL_2
);

155 
	`WDDI_INFO
("SERDES3_IO_CTRL_3:0x%08x\n",
¥egs
->
SERDES3_IO_CTRL_3
);

156 
	`WDDI_INFO
("SERDES3_IO_CTRL_4:0x%08x\n",
¥egs
->
SERDES3_IO_CTRL_4
);

157 
	`WDDI_INFO
("SERDES3_IO_STAT:0x%08x\n",
¥egs
->
SERDES3_IO_STAT
);

158 
	`WDDI_INFO
("SERDES_INTERRUPT_1:0x%08x\n",
¥egs
->
SERDES_INTERRUPT_1
);

159 
	`WDDI_INFO
("SERDES_INTERRUPT_1_MASK:0x%08x\n",
¥egs
->
SERDES_INTERRUPT_1_MASK
);

160 
	`WDDI_INFO
("SERDES_RX_MUX_CONTROL_0:0x%08x\n",
¥egs
->
SERDES_RX_MUX_CONTROL_0
);

161 
	`WDDI_INFO
("SERDES_RX_MUX_CONTROL_1:0x%08x\n",
¥egs
->
SERDES_RX_MUX_CONTROL_1
);

162 
	`WDDI_INFO
("WN2_WNC1:0x%08x\n",
¥egs
->
WN2_WNC1
);

163 
	`WDDI_INFO
("WN2_WNC2:0x%08x\n",
¥egs
->
WN2_WNC2
);

164 
	`WDDI_INFO
("WN3_WNC1:0x%08x\n",
¥egs
->
WN3_WNC1
);

165 
	`WDDI_INFO
("WN3_WNC2:0x%08x\n",
¥egs
->
WN3_WNC2
);

166 
	`WDDI_INFO
("WN2_TCNTR_0:0x%08x\n",
¥egs
->
WN2_TCNTR_0
);

167 
	`WDDI_INFO
("WN2_TCNTR_1:0x%08x\n",
¥egs
->
WN2_TCNTR_1
);

168 
	`WDDI_INFO
("WN2_TSTAT_0:0x%08x\n",
¥egs
->
WN2_TSTAT_0
);

169 
	`WDDI_INFO
("WN2_TSTAT_1:0x%08x\n",
¥egs
->
WN2_TSTAT_1
);

170 
	`WDDI_INFO
("WN3_TCNTR_0:0x%08x\n",
¥egs
->
WN3_TCNTR_0
);

171 
	`WDDI_INFO
("WN3_TCNTR_1:0x%08x\n",
¥egs
->
WN3_TCNTR_1
);

172 
	`WDDI_INFO
("WN3_TSTAT_0:0x%08x\n",
¥egs
->
WN3_TSTAT_0
);

173 
	`WDDI_INFO
("WN3_TSTAT_1:0x%08x\n",
¥egs
->
WN3_TSTAT_1
);

174 
	`WDDI_INFO
("WN2_TADIR_0:0x%08x\n",
¥egs
->
WN2_TADIR_0
);

175 
	`WDDI_INFO
("WN2_TADIR_1:0x%08x\n",
¥egs
->
WN2_TADIR_1
);

176 
	`WDDI_INFO
("WN2_TANDBG_0:0x%08x\n",
¥egs
->
WN2_TANDBG_0
);

177 
	`WDDI_INFO
("WN2_TANDBG_1:0x%08x\n",
¥egs
->
WN2_TANDBG_1
);

178 
	`WDDI_INFO
("WN3_TANDBG_0:0x%08x\n",
¥egs
->
WN3_TANDBG_0
);

179 
	`WDDI_INFO
("WN3_TANDBG_1:0x%08x\n",
¥egs
->
WN3_TANDBG_1
);

180 
	`WDDI_INFO
("WN2_IFC_0:0x%08x\n",
¥egs
->
WN2_IFC_0
);

181 
	`WDDI_INFO
("WN3_IFC_0:0x%08x\n",
¥egs
->
WN3_IFC_0
);

182 
	}
}

184 
	$dump_ëh_ªgs
(
Eth_Regs
* 
¥egs
)

186 
¥egs
->
SERDES_MUX_CTRL_0
 = 
	`ªad_ªg
(0x1e008280);

187 
¥egs
->
SERDES3_IO_CTRL_0
 = 
	`ªad_ªg
(0x1e0082b8);

188 
¥egs
->
SERDES3_IO_CTRL_1
 = 
	`ªad_ªg
(0x1e0082bc);

189 
¥egs
->
SERDES3_IO_CTRL_2
 = 
	`ªad_ªg
(0x1e0082c0);

190 
¥egs
->
SERDES3_IO_CTRL_3
 = 
	`ªad_ªg
(0x1e0082c4);

191 
¥egs
->
SERDES3_IO_CTRL_4
 = 
	`ªad_ªg
(0x1e0082c8);

192 
¥egs
->
SERDES3_IO_STAT
 = 
	`ªad_ªg
(0x1e0082cc);

193 
¥egs
->
SERDES_INTERRUPT_1
 = 
	`ªad_ªg
(0x1e0082ec);

194 
¥egs
->
SERDES_INTERRUPT_1_MASK
 = 
	`ªad_ªg
(0x1e0082f4);

195 
¥egs
->
SERDES_RX_MUX_CONTROL_0
 = 
	`ªad_ªg
(0x1e008300);

196 
¥egs
->
SERDES_RX_MUX_CONTROL_1
 = 
	`ªad_ªg
(0x1e008304);

197 
¥egs
->
WN2_WNC1
 = 
	`ªad_ªg
(0x1e016000);

198 
¥egs
->
WN2_WNC2
 = 
	`ªad_ªg
(0x1e016004);

199 
¥egs
->
WN3_WNC1
 = 
	`ªad_ªg
(0x1e018000);

200 
¥egs
->
WN3_WNC2
 = 
	`ªad_ªg
(0x1e018004);

201 
¥egs
->
WN2_TCNTR_0
 = 
	`ªad_ªg
(0x1e016200);

202 
¥egs
->
WN2_TCNTR_1
 = 
	`ªad_ªg
(0x1e016240);

203 
¥egs
->
WN2_TSTAT_0
 = 
	`ªad_ªg
(0x1e016204);

204 
¥egs
->
WN2_TSTAT_1
 = 
	`ªad_ªg
(0x1e016244);

205 
¥egs
->
WN3_TCNTR_0
 = 
	`ªad_ªg
(0x1e018200);

206 
¥egs
->
WN3_TCNTR_1
 = 
	`ªad_ªg
(0x1e018240);

207 
¥egs
->
WN3_TSTAT_0
 = 
	`ªad_ªg
(0x1e018204);

208 
¥egs
->
WN3_TSTAT_1
 = 
	`ªad_ªg
(0x1e018244);

209 
¥egs
->
WN2_TADIR_0
 = 
	`ªad_ªg
(0x1e016234);

210 
¥egs
->
WN2_TADIR_1
 = 
	`ªad_ªg
(0x1e016274);

211 
¥egs
->
WN2_TANDBG_0
 = 
	`ªad_ªg
(0x1e01623c);

212 
¥egs
->
WN2_TANDBG_1
 = 
	`ªad_ªg
(0x1e01627c);

213 
¥egs
->
WN3_TANDBG_0
 = 
	`ªad_ªg
(0x1e01823c);

214 
¥egs
->
WN3_TANDBG_1
 = 
	`ªad_ªg
(0x1e01827c);

215 
¥egs
->
WN2_IFC_0
 = 
	`ªad_ªg
(0x1e0160e0);

216 
¥egs
->
WN3_IFC_0
 = 
	`ªad_ªg
(0x1e0180e0);

217 
	}
}

219 
Eth_Regs
 
	gg_ëh_ªgs_up
,
	gg_ëh_ªgs_down
,
	gg_ëh_ªgs_œ°
,
	gg_ëh_ªgs_tmp
;

221 
	gpùefd
[2]={0};

222 
	gpùefd_RxFrH¥io
[2]={0};

223 
	gpùefdRxEth
[2]={0};

224 
	gpùefdRxEthH¥io
[2]={0};

225 
	gpùeAœrm
[2]={0};

226 
x§e£t
();

227 
gëmoduÀby«me
(c⁄° *
«me
);

230 
	$≈u_h™dÀ_hóπ_bót
(
hóπfd
)

232 
rxch¨
;

234 
	`ªad
(
hóπfd
,&
rxch¨
, 1);

235 if(
g_logLevñ
 ==0 )

237 
	`F¥ötf
("chûdÑe˚ivêkì∞Æivêsig«»%c\n", 
rxch¨
);

239 
	`wrôe
(
hóπfd
, &
rxch¨
, 1);

240 
	}
}

242 
timevÆ
 
	gtv
;

243 
	gmax
 = 0, 
	gmö
 = 
LONG_MAX
;

244 
	g˛k
;

245 
	gnumrsv
=0;

246 
	gack
 = 0;

248 
	$gë_time
(
timevÆ
 *
tv
)

252 
sDiff
 = -
tv
->
tv_£c
;

253 
uDiff
 = -
tv
->
tv_u£c
;

255 i‡(
	`gëtimeofday
(
tv
, 0))

256 
	`F¥ötf
("gettimeofday() failed.");

258 
sDiff
 +
tv
->
tv_£c
;

259 
uDiff
 +
tv
->
tv_u£c
;

261  
sDiff
 * 1000000 + 
uDiff
;

262 
	}
}

265 
	$ª°¨t_hóπbót
()

267 
hb_cmd
[255];

269 
	`•rötf
(
hb_cmd
,"bash -c \". /opt/spp/active/functions.sh >> /dev/null; _heart_beat_restart_ > /dev/null 2>&1\"");

270 
	`sy°em
(
hb_cmd
);

271 
	}
}

273 
	$≈_h™dÀ_ëhî√t_‰ame
(* 
buf„r
, 
À¡h
, 
èpfd
)

275 
size
;

276 
ëhhdr
 * 
ëhhódî
;

277 
vœn_ëhhdr
 * 
vœn_ëhhódî
;

278 
ùhdr
 *
ùhódî
;

279 
udphdr
 *
udphódî
;

282 
vœn_ëhhódî
 = (
vœn_ëhhdr
 *)
buf„r
;

283 
ëhhódî
 = (
ëhhdr
 *)
buf„r
;

285 
size
 = 
À¡h
;

287 if(!(((
	`¡ohs
(
vœn_ëhhódî
->
h_vœn_¥Ÿo
Ë=
ETH_P_8021Q
Ë&& (¡ohs(vœn_ëhhódî->
h_vœn_íˇpsuœãd_¥Ÿo
) == 0x0800))

289 (
	`¡ohs
(
ëhhódî
->
h_¥Ÿo
) == 0x0800)))

291 
size
 = 
	`èp_wrôe
(
èpfd
, 
buf„r
, size);

292 if(
size
 < 0)

294 
	`WDDI_WARNING
("wrôêtun0 %s", 
	`°ªº‹
(
î∫o
));

297 
	`WDDI_PRINT
("wrôên⁄êIPV4Öackë %d byãs\n", 
size
);

301 if((
	`¡ohs
(
vœn_ëhhódî
->
h_vœn_¥Ÿo
Ë=
ETH_P_8021Q
Ë&& (¡ohs(vœn_ëhhódî->
h_vœn_íˇpsuœãd_¥Ÿo
) == 0x0800))

304 
ùhódî
 = ( 
ùhdr
 * )(
vœn_ëhhódî
+1);

305 
size
 -= 18;

307 if(
	`¡ohs
(
ëhhódî
->
h_¥Ÿo
) == 0x0800)

310 
ùhódî
 = ( 
ùhdr
 * )(
ëhhódî
+1);

311 
size
 -=14;

315 
	`WDDI_WARNING
("neverÑeach here.\n");

318 
	`WDDI_PRINT
("ª˚ivêIPV4Öackë %d byãs\n", 
À¡h
);

319 if(0 !
	`≈u_udp_ˇl_chksum
((*)
ùhódî
, (ùhódî->
ihl
 <<2)))

321 
	`WDDI_WARNING
("receive IPV4Öacket with wrong checksum \n");

329 
udphódî
 = (
udphdr
 *Ë((*)
ùhódî
 + (ùhódî->
ihl
 <<2));

331 if((
ùhódî
->
¥Ÿocﬁ
 =
IPPROTO_UDP
Ë&& ( 
NULL
 !
	`≈u_gë_vp‹t_öfo
(
udphódî
->
de°
)) )

334 
NPU_HOST_RSV_PACKET_INFO
 
°_∑ckë_öfo
;

338 
°_∑ckë_öfo
.
Àngth
 = 
	`¡ohs
(
udphódî
->
Àn
) -8 ;

339 
°_∑ckë_öfo
.
p‹t
 = 
udphódî
->
de°
;

340 
°_∑ckë_öfo
.
ùaddr_d°
 = 
ùhódî
->
daddr
;

341 
°_∑ckë_öfo
.
ùaddr_§c
 = 
ùhódî
->
ßddr
;

342 
°_∑ckë_öfo
.
p‹t_§c
 = 
udphódî
->
sour˚
;

343 
°_∑ckë_öfo
.
pd©a
 = (
u8
 *)(
udphódî
+1);

344 
°_∑ckë_öfo
.
vp_ty≥
 = 
VP_TYPE_UDP
;

345 
	`WDDI_PRINT
("di•ach ud∞∑ckëÅÿ˛õ¡Ö‹à%dÖ‹t_§¯%d i∑ddr_d° =0x%x i∑ddr_§¯0x%xÜígth = %d \n",
	`ht⁄s
(
°_∑ckë_öfo
.
p‹t
),ht⁄s(°_∑ckë_öfo.
p‹t_§c
),°_∑ckë_öfo.
ùaddr_d°
,°_∑ckë_öfo.
ùaddr_§c
,°_∑ckë_öfo.
Àngth
);

346 
	`≈u_di•©ch_∑ckë_to_˛õ¡
(&
°_∑ckë_öfo
);

348 
	`≈u_m⁄_ˇ±uª_∑ckë
(
buf„r
,
À¡h
,
udphódî
->
de°
,0);

352 
size
 = 
	`èp_wrôe
(
èpfd
, 
buf„r
, 
À¡h
);

353 if(
size
 < 0)

355 
	`WDDI_WARNING
("wrôêtun0 %s", 
	`°ªº‹
(
î∫o
));

358 
	`WDDI_INFO
("Info:Çp_h™dÀ_ëhî√t_‰ame, wrôên⁄êud∞IPV4Öackë %d byãs\n", 
size
);

362 
	}
}

363 
	$≈_h™dÀ_‰_‰ame
(* 
buf„r
, 
À¡h
, 
u32
 
vÂ‹t
)

365 
NPU_HOST_RSV_PACKET_INFO
 
°_∑ckë_öfo
;

366 
°_∑ckë_öfo
.
ùaddr_§c
 = 0;

367 
°_∑ckë_öfo
.
Àngth
 = 
À¡h
-2;

369 
°_∑ckë_öfo
.
p‹t
 = 
vÂ‹t
;

370 
°_∑ckë_öfo
.
ùaddr_§c
 = 0;

371 
°_∑ckë_öfo
.
p‹t_§c
 = 0;

372 
°_∑ckë_öfo
.
pd©a
 = (
u8
 *)
buf„r
 + 2;

373 
°_∑ckë_öfo
.
vp_ty≥
 = 
VP_TYPE_FR
;

375 
u32
 
ˇrd
;

376 
u32
 
åunk
;

377 
u32
 
group
;

378 
u32
 
dlci
;

379 
	`≈_‰addr_u≈ack
(
°_∑ckë_öfo
.
p‹t
,&
ˇrd
,&
åunk
,&
group
,&
dlci
);

380 
	`WDDI_PRINT
("di•ach FRÖackëÅÿ˛õ¡Ö‹à%d : S%dP%dFR%dD%d \n",
	`ht⁄l
(
°_∑ckë_öfo
.
p‹t
),
ˇrd
,
åunk
,
group
,
dlci
);

381 
	`≈u_di•©ch_∑ckë_to_˛õ¡
(&
°_∑ckë_öfo
);

383 
	`WP_FR_HEADER_2OCT_SET
(
buf„r
,
dlci
,0,0,0,0);

384 
	`≈u_m⁄_ˇ±uª_∑ckë
(
buf„r
,
À¡h
,
vÂ‹t
,0);

385 
	}
}

387 
	$≈_h™dÀ_‰_¥i‹ôy_‰ame
(* 
buf„r
, 
À¡h
)

389 
u32
 
vÂ‹t
;

390 
°©us
;

391 
u16
 
ÊowIndex
 = 
	`ht⁄s
(*(u16 *)
buf„r
);

393 
°©us
 = 
	`WP_WDDI_ResFôwGëTag
(
ÊowIndex
,&
vÂ‹t
);

394 if(
°©us
)

396 
	`F¥ötf
("≈_h™dÀ_‰_¥i‹ôy_‰amêˇn'àgëÅag, flowIndex = 0x%x\n",
ÊowIndex
);

399 
STRU_VPORT_INFO
 *
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
vÂ‹t
);

400 
NPU_HOST_RSV_PACKET_INFO
 
°_∑ckë_öfo
;

401 if(
Vp‹tInfo
 !
NULL
)

403 
°_∑ckë_öfo
.
ùaddr_§c
 = 0;

404 
°_∑ckë_öfo
.
Àngth
 = 
À¡h
-2;

406 
°_∑ckë_öfo
.
p‹t
 = 
vÂ‹t
;

407 
°_∑ckë_öfo
.
ùaddr_§c
 = 0;

408 
°_∑ckë_öfo
.
p‹t_§c
 = 0;

409 
°_∑ckë_öfo
.
pd©a
 = (
u8
 *)
buf„r
 + 2;

410 
°_∑ckë_öfo
.
vp_ty≥
 = 
VP_TYPE_FR
;

412 
u32
 
ˇrd
;

413 
u32
 
åunk
;

414 
u32
 
group
;

415 
u32
 
dlci
;

416 
	`≈_‰addr_u≈ack
(
°_∑ckë_öfo
.
p‹t
,&
ˇrd
,&
åunk
,&
group
,&
dlci
);

417 
	`WDDI_PRINT
("di•ach FRÖackëÅÿ˛õ¡Ö‹à%d : S%dP%dFR%dD%d \n",
	`ht⁄l
(
°_∑ckë_öfo
.
p‹t
),
ˇrd
,
åunk
,
group
,
dlci
);

418 
	`≈u_di•©ch_∑ckë_to_˛õ¡
(&
°_∑ckë_öfo
);

420 
	`≈u_m⁄_ˇ±uª_∑ckë
(
buf„r
,
À¡h
,
vÂ‹t
,0);

423 
	}
}

426 
	$sig_ªÀa£_wddi_drivî
(
signo
)

428 i‡(
signo
 !
SIGINT
 && signÿ!
SIGTERM
 )

429 
	`WDDI_INFO
("unexpected signal");

430 
	`F¥ötf
("release_wddi_driver \n");

431 
	`èp_sockë_˛o£
();

432 if(
g_≈öôülFœg
 =
NPU_INITALIZED
)

436 
	`ªmove_èpcfg
();

440 
	`WPX_P‹tLedSë
(0, 
WPX_PORT_LED_OFF
, 0);

441 
	`WPX_P‹tLedSë
(0, 
WPX_PORT_LED_OFF
, 1);

442 
	`WPX_P‹tLedSë
(0, 
WPX_PORT_LED_OFF
, 2);

443 
	`WPX_P‹tLedSë
(0, 
WPX_PORT_LED_OFF
, 3);

444 
	`exô
(0);

445 
	}
}

449 
	$sig_Æ¨m_wddi_evít
(
signo
)

451 
ªt
;

452 i‡(
signo
 !
SIGALRM
)

454 
	`WDDI_INFO
("unexpected signal");

459 
ªt
 =
	`wrôe
(
pùeAœrm
[1], (*)&
signo
, 4);

460 if(
ªt
 < 0)

462 
	`WDDI_INFO
("writeÖipeÉrror");

465 
	`Æ¨m
(1);

467 
	}
}

469 
	#MAP_WN1_TSTAT_0
 0xbe016204

	)

470 
	#MAP_WN1_TSTAT_1
 0xbe016244

	)

471 
	#MAP_WN2_TSTAT_0
 0xbe018204

	)

472 
	#MAP_WN1_TANDBG1
 0xbe01627C

	)

473 
	#MAP_WN2_TANDBG0
 0xbe01823c

	)

477 
	$ëh_lök_°©us
(
p‹t
)

479 
t°©
, 
tmp
, 
ªg_vÆ
;

480 
°©us
;

481 
t°©
 = 0;

483 
p‹t
) {

485 
t°©
 = 
MAP_WN1_TSTAT_0
;

488 
t°©
 = 
MAP_WN2_TSTAT_0
;

491 
t°©
 = 
MAP_WN1_TSTAT_1
;

494 
t°©
 = 
MAP_WN1_TSTAT_0
;

497 
t°©
 &= 0x1fffffff;

499 
tmp
 = *(vﬁ©ûê*)()(
t°©
 + 
	`WPL_RIF_VIRTUAL
(0, 0));

500 
°©us
 = 
	`¡ohl
(
tmp
);

501 if(
°©us
 & 0x4)

503 
°©us
 = 
LINK_STATUS_UP
;

506 
°©us
 = 
LINK_STATUS_DOWN
;

508  
°©us
;

509 
	}
}

510 
	gxmlFûeLoˇti⁄
[100];

511 
	gw‹kögLökName
[100];

512 *
	gw‹kögDú
 = 
NULL
;

514 
NP_SYSTEM_INFO
 
≈_sy°em
;

516 
	$gë∑th
(*
buf
)

518 
size
;

519 *
±r
;

520 
ªt
;

521 
size
 = 
	`∑thc⁄f
(".", 
_PC_PATH_MAX
);

522 if((
±r
 = (*)
	`mÆloc
((
size_t
)
size
)Ë!
NULL
)

524 
	`mem£t
(
±r
,0,
size
);

525 
	`•rötf
(
±r
,"/¥oc/%d/exe",
	`gëpid
());

527 
ªt
=
	`ªadlök
(
±r
,
buf
,
size
);

528 
	`‰ì
(
±r
);

529  
ªt
;

530 
	}
}

531 
	$gëAµ«meByPID
(*
buf
,
pid_t
 
pid
)

533 
size
;

534 *
±r
;

535 
ªt
;

536 
w‹kögLök
[100]={"\0"};

537 *
≠≤ame
 = 
NULL
;

538 
size
 = 
	`∑thc⁄f
(".", 
_PC_PATH_MAX
);

539 if((
±r
 = (*)
	`mÆloc
((
size_t
)
size
)Ë!
NULL
)

541 
	`mem£t
(
±r
,0,
size
);

542 
	`•rötf
(
±r
,"/¥oc/%d/exe",
pid
);

544 
ªt
=
	`ªadlök
(
±r
,
w‹kögLök
,
size
);

545 
	`‰ì
(
±r
);

546 
≠≤ame
 = 
	`ba£«me
(
w‹kögLök
);

547 if(
≠≤ame
 !
NULL
)

549 
	`°r˝y
(
buf
,
≠≤ame
);

553 
	`F¥ötf
("övÆidáµliˇti⁄Çamê%†\n",
w‹kögLök
);

555  
ªt
;

556 
	}
}

558 
	$gëSy°emResu…Bycmd
(c⁄° *
cmd
)

560 
buf
[256];

561 
FILE
 *
Â
 = 
	`tmpfûe
();

563 
	`as£π
(
cmd
);

567 
	`•rötf
(
buf
, "%s >&%d",

568 
cmd
, 
	`fûío
(
Â
));

570 i‡(-1 =
	`sy°em
(
buf
))

572 
	`≥º‹
("system ERROR");

574 
	`f˛o£
(
Â
);

579 
	`f£ek
(
Â
, 0, 
SEEK_SET
);

580 i‡(
NULL
 =
	`fgës
(
buf
,  buf, 
Â
))

583 
	`F¥ötf
("getSystemResultBycmd fgets is NULL \n");

584 
	`f˛o£
(
Â
);

587 
	`f˛o£
(
Â
);

588 
	`F¥ötf
("gëSy°emResu…BycmdÑesu… i†%†\n",
buf
);

589  
	`©oi
(
buf
);

590 
	}
}

593 
±hªad_t
 
	grx_pid
;

594 
	g≈_waôtime
 = 
NPU_WAIT_TIME
;

596 
	$c⁄figuøti⁄_fûes_exi°
(* 
dúe˘‹y
)

598 
glob_t
 
globs
;

599 
ªt
=-1;

600 
Êags
 = 0;

601 
tmp_fûe
[
FILENAME_MAX
];

602 i‡–
dúe˘‹y
 !
NULL
 )

604 
	`•rötf
(
tmp_fûe
,"%s/*.xml",
dúe˘‹y
);

605 
ªt
 = 
	`glob
(
tmp_fûe
,
Êags
,
NULL
,&
globs
);

606 
	`glob‰ì
(&
globs
);

607 if(
ªt
==0)  1;

610 
	}
}

612 
	~<sys/°©.h
>

613 
	#LOCKFILE
 "/v¨/run/myd´m⁄.pid"

	)

614 
	#LOCKMODE
 (
S_IRUSR
 | 
S_IWUSR
 | 
S_IRGRP
 | 
S_IROTH
)

	)

617 
	$lockfûe
(
fd
)

619 
Êock
 
Ê
;

620 
Ê
.
l_ty≥
 = 
F_WRLCK
;

621 
Ê
.
l_°¨t
 = 0;

622 
Ê
.
l_whí˚
 = 
SEEK_SET
;

623 
Ê
.
l_Àn
 = 0;

624 (
	`f˙é
(
fd
, 
F_SETLK
, &
Ê
));

625 
	}
}

627 
	$Æªady_ru¬ög
(c⁄° *
fûíame
)

629 
fd
;

630 
buf
[256];

632 
fd
 = 
	`›í
(
fûíame
, 
O_RDWR
 | 
O_CREAT
, 
LOCKMODE
);

633 i‡(
fd
 < 0) {

634 
	`F¥ötf
("-----------ˇn'à›í %s\n", 
fûíame
);

638 i‡(
	`lockfûe
(
fd
) == -1) {

640 i‡(
î∫o
 =
EACCES
 ||Éºnÿ=
EAGAIN
) {

641 
	`F¥ötf
("-----------fûe: %†ÆªadyÜocked\n", 
fûíame
);

642 
	`˛o£
(
fd
);

645 
	`F¥ötf
("-----------ˇn'àlock %s\n", 
fûíame
);

649 
	`·runˇã
(
fd
, 0);

650 
	`mem£t
(
buf
,0,(buf));

651 
	`•rötf
(
buf
, "%ld", ()
	`gëpid
());

652 
	`wrôe
(
fd
, 
buf
, 
	`°æí
(buf) + 1);

653 
	`F¥ötf
("----------firstÅimeÅoÜockÅhe file\n");

655 
	}
}

657 
	$maö
(
¨gc
, **
¨gv
)

659 
nfds
;

660 
size
=0;

661 
À¡h
;

662 
ªt
;

663 
Êag
;

664 
›t
;

665 *
buf„r
;

666 
èpfd
=0;

667 
löxfd
=0;

668 
°©us
 = 0;

669 
hóπfd
 =0;

670 
fd_£t
 
rd£t
;

671 
logÀvî
[16];

672 
öçoﬁ„©uª
 = 1;

673 
WP_èg
 
èg
 = 0;

674 
£rvîfd
;

675 
FILE
 * 
Â
;

676 
siga˘i⁄
 
sigöfo
;

678 if(
	`Æªady_ru¬ög
(
LOCKFILE
))  1;

680 #i‡
ENEA_RELEASE


681 
	`wddi_log_›í
("spp_npu");

684 
	`°r˝y
(
logÀvî
, "LOG_WARNING");

685 
	`°r˝y
(
xmlFûeLoˇti⁄
, "/etc/spp/active");

686 (
›t
 = 
	`gë›t
(
¨gc
, 
¨gv
, "n:p:l:"))!= -1) {

688 
›t
){

690 
hóπfd
 = 
	`©oi
(
›èrg
);

691 
	`F¥ötf
("Thêhóπ bóàfd: %d\n",
hóπfd
);

694 
	`°r˝y
(
logÀvî
, 
›èrg
);

695 if(
	`°rcmp
(
logÀvî
,"LOG_DEBUG")== 0)

697 
g_logLevñ
 = 0;

699 
	`F¥ötf
("Thêwddò£rvîÜogÜevî: %s\n",
logÀvî
);

702 
	`°r˝y
(
xmlFûeLoˇti⁄
, 
›èrg
);

703 
	`F¥ötf
("Thêwddò£rvî c⁄figuª fûêloˇti⁄: %s\n",
xmlFûeLoˇti⁄
);

706 
	`F¥ötf
("Unknow¿›ti⁄ m©ãr: %s\n",
¨gv
[1]);

712 if(!
	`c⁄figuøti⁄_fûes_exi°
(
xmlFûeLoˇti⁄
))

714 
	`F¥ötf
("Eº‹:Åhîêi†nÿ*.xm»fûêundî %s,Éxô!\n",
xmlFûeLoˇti⁄
);

719 
	`mem£t
(&
g_≈öôül
,0,(
STRU_SET_INITAIL_CONFIG
));

720 
	`mem£t
(&
≈_sy°em
,0,(
NP_SYSTEM_INFO
));

721 
	`≈u_£t_öôül_cfg_öfo
(
xmlFûeLoˇti⁄
,&
g_≈öôül
);

724 if(
	`gë∑th
(
w‹kögLökName
) == -1)

726 
	`F¥ötf
("can't get current working dir\n");

730 
	`F¥ötf
("w‹kög dú i†%†\n",
w‹kögLökName
);

732 
w‹kögDú
 = 
	`dú«me
(
w‹kögLökName
);

733 
	`chdú
(
w‹kögDú
);

735 if((
£rvîfd
 = 
	`ac˚ss
 ("wp_mm≠_drv.ko",
F_OK
)) != 0)

737 
	`F¥ötf
("wp_mmap_drv.ko doesn'tÉxist or hasÇoÉxecuteÖrivilige.\n");

738  (
î∫o
);

741 if((
£rvîfd
 = 
	`ac˚ss
 ("löx.ko",
F_OK
)) != 0)

743 
	`F¥ötf
("linx.ko doesn'tÉxist or hasÇoÉxecuteÖrivilige.\n");

744  (
î∫o
);

747 
ªt
 = 
	`gëmoduÀby«me
("wp_mmap_drv");

748 if(
ªt
==0)

750 
	`F¥ötf
("wp_mmap_drv.koÉxists, will be unloadedÇow!\n");

751 
ªt
 = 
	`sy°em
("rmmod wp_mmap_drv.ko");

752 if(
ªt
 <0)

754 
	`≥º‹
("rmmod wp_mmap_drv.ko");

755 
	`exô
(1);

761 
	`F¥ötf
("wp_mmap_drv.ko doesÇotÉxist!\n");

763 
	`F¥ötf
("now startÅoÜoad wp_mmap_drv.ko!\n");

764 
ªt
 = 
	`sy°em
("./load.sh");

765 if(
ªt
 <0 )

767 
	`≥º‹
("insmod wp_mmap_drv.ko");

768 
	`exô
(1);

771 
ªt
 = 
	`gëmoduÀby«me
("linx");

772 if(
ªt
!=0)

774 
	`F¥ötf
("linx.ko isÇotÉxisted,will beÜoadedÇow!\n");

775 
ªt
 = 
	`sy°em
("sudo insmodÜinx.koÜinx_max_sockets_per_link=4096Üinx_max_spids=4096Üinx_max_attrefs=4096Üinx_max_tmorefs=4096");

776 if(
ªt
 <0 )

778 
	`≥º‹
("insmodÜinx.ko ");

779 
	`exô
(1);

785 
	`F¥ötf
("°¨tög x§e£à,∂ó£ waô ...,pid=%d\n",
	`gëpid
());

786 if((
ªt
=
	`x§e£t
())!= 0)

788 
	`F¥ötf
("x§e£àªt=%d\n",
ªt
);

789 
	`exô
(1);

791 
	`F¥ötf
("xsreset success \n");

792 
	`èp_hwadd_ªad
(
g_≈öôül
.
ifMAC§c
);

793 
	`≈u_öô_vp‹t_öfo
();

794 
	`≈u_öô_u∂ök_öfo
();

795 
	`≈u_öô_dow∆ök_öfo
();

796 
	`≈u_öô_¨p_öfo
();

797 
	`≈u_öô_upd©e_bvci_öfo
();

798 
	`≈u_öô_åunk_öfo
();

799 
	`≈u_öô_‰_ul_lök_èbÀ_öfo
();

800 
	`≈u_öô_‰_dl_lök_èbÀ_öfo
();

801 
	`≈u_öô_≥î_vp‹t_öfo
();

802 if(
	`pùe
(
pùefd
) < 0)

804 
	`WDDI_ERR
("createÖipe");

806 
°©us
 = 
	`f˙é
(
pùefd
[0], 
F_SETFL
, 
O_NONBLOCK
);

807 i‡(
°©us
 < 0)

809 
	`WDDI_ERR
("pipe0 fcntl fail");

813 
°©us
 = 
	`f˙é
(
pùefd
[1], 
F_SETFL
, 
O_NONBLOCK
);

814 i‡(
°©us
 < 0)

816 
	`WDDI_ERR
("pipe1 fcntl fail");

820 if(
	`pùe
(
pùefd_RxFrH¥io
) < 0)

822 
	`WDDI_ERR
("createÖipe failed");

824 
°©us
 = 
	`f˙é
(
pùefd_RxFrH¥io
[0], 
F_SETFL
, 
O_NONBLOCK
);

825 i‡(
°©us
 < 0)

827 
	`WDDI_ERR
("pipe0 fcntl fail");

831 
°©us
 = 
	`f˙é
(
pùefd_RxFrH¥io
[1], 
F_SETFL
, 
O_NONBLOCK
);

832 i‡(
°©us
 < 0)

834 
	`WDDI_ERR
("pipe1 fcntl fail");

839 if(
	`pùe
(
pùefdRxEth
) < 0)

841 
	`WDDI_ERR
("createÖipe");

843 
°©us
 = 
	`f˙é
(
pùefdRxEth
[0], 
F_SETFL
, 
O_NONBLOCK
);

844 i‡(
°©us
 < 0)

846 
	`WDDI_ERR
("pipefdRxEth0 fcntl fail");

849 
°©us
 = 
	`f˙é
(
pùefdRxEth
[1], 
F_SETFL
, 
O_NONBLOCK
);

850 i‡(
°©us
 < 0)

852 
	`WDDI_ERR
("pipefdRxEth1 fcntl fail");

856 if(
	`pùe
(
pùefdRxEthH¥io
) < 0)

858 
	`WDDI_ERR
("create highÖipe");

860 
°©us
 = 
	`f˙é
(
pùefdRxEthH¥io
[0], 
F_SETFL
, 
O_NONBLOCK
);

861 i‡(
°©us
 < 0)

863 
	`WDDI_ERR
("pipefdRxEth high fcntl fail");

866 
°©us
 = 
	`f˙é
(
pùefdRxEthH¥io
[1], 
F_SETFL
, 
O_NONBLOCK
);

867 i‡(
°©us
 < 0)

869 
	`WDDI_ERR
("pipefdRxEth high fcntl fail");

872 if(
	`pùe
(
pùeAœrm
) < 0)

874 
	`WDDI_ERR
("createÖipe");

876 
°©us
 = 
	`f˙é
(
pùeAœrm
[0], 
F_SETFL
, 
O_NONBLOCK
);

877 i‡(
°©us
 < 0)

879 
	`WDDI_ERR
("pipeAlarm0 fcntl fail");

882 
°©us
 = 
	`f˙é
(
pùeAœrm
[1], 
F_SETFL
, 
O_NONBLOCK
);

883 i‡(
°©us
 < 0)

885 
	`WDDI_ERR
("pipeAlarm0 fcntl fail");

888 
	`F¥ötf
("NPU vîsi⁄ : %s\n",
NPU_VERSION_NUM
 );

889 
	`WDDI_INFO
("waitting forÇp initial...");

893 if(
g_≈öôül
.
NRI_bôLí
 >0 && g_npinitial.NRI_bitLen<= 8)

895 
ƒi_bô_Àngth
 = 
g_≈öôül
.
NRI_bôLí
;

897 
	`≈_c⁄åﬁ_öãºu±
(0,0);

898 
	`≈_c⁄åﬁ_öãºu±
(0,1);

899 if(
g_≈öôülFœg
 =
NPU_UNINITALIZED
)

901 
	`≈_öô
();

904 
lo›num
 = 100000;

905 *
vÆbuf
;

907 
vÆbuf
 = 
	`mÆloc
(
lo›num
);

909 
	`gë_time
(&
tv
);

911 
	`mem˝y
(
vÆbuf
, 0xe8baf000, 
lo›num
);

912 
˛k
 = 
	`gë_time
(&
tv
);

914 
	`F¥ötf
("mem‹yÑódÅimê%dus\n",
˛k
);

918 
	`WDDI_INFO
("np initialized");

920 
	`èp_sockë_›í
();

921 
	`WDDI_INFO
("openÅap socket");

923 
èpfd
 = 
	`èp_öô
();

924 
	`WDDI_INFO
("initializeÅap driver");

927 
°©us
 = 
	`f˙é
(
èpfd
, 
F_SETFL
, 
O_NONBLOCK
);

928 i‡(
°©us
 < 0)

930 
	`WDDI_ERR
("tap_init fcntl fail");

932 #i‡
ENEA_RELEASE


933 
	`ª°¨t_hóπbót
();

936 
löxfd
 = 
	`löx_öô
();

937 
	`F¥ötf
("initializeÜinx ok\n");

939 
nfds
 = 
èpfd
;

940 
nfds
 = 
pùeAœrm
[0] >Çfds ?ÖipeAlarm[0]:Çfds;

944 
nfds
 = 
löxfd
 >Çfds ?Üinxfd:Çfds;

945 if(
hóπfd
 !=0 )

947 
nfds
 = 
hóπfd
 >Çfds ? heartfd:Çfds;

950 
	`FD_ZERO
(&
rd£t
);

951 
buf„r
 = 
	`mÆloc
(
FRAME_MAX_LENGTH
);

952 if(
buf„r
 == 0)

954 
	`WDDI_ERR
("malloc buffer");

957 
	#WPL_SIGNAL_RT_SER
 35

	)

958 
	#WPL_SIGNAL_RT_OV
 (
WPL_SIGNAL_RT_SER
 + 1)

	)

959 
	#WPL_SIGNAL_RT_BUSERR
 (
WPL_SIGNAL_RT_SER
 + 2)

	)

960 
sig£t_t
 
sigmask
;

961 
	`sigem±y£t
(&
sigmask
);

962 
	`sigadd£t
(&
sigmask
,
WPL_SIGNAL_RT_OV
);

963 
	`sig¥ocmask
(
SIG_BLOCK
, &
sigmask
, 
NULL
);

965 
	`siga˘i⁄
(
SIGINT
, 
NULL
, &
sigöfo
);

966 
sigöfo
.
ß_siga˘i⁄
 = (*Ë
sig_ªÀa£_wddi_drivî
;

967 
	`sigem±y£t
(&
sigöfo
.
ß_mask
);

968 
sigöfo
.
ß_Êags
 = 
SA_SIGINFO
 | 
SA_RESTART
;

970 i‡(
	`siga˘i⁄
(
SIGINT
, &
sigöfo
, 
NULL
) == -1){

971 
	`WDDI_ERR
("can't catch SIGINT");

974 
	`siga˘i⁄
(
SIGTERM
, 
NULL
, &
sigöfo
);

975 
sigöfo
.
ß_siga˘i⁄
 = (*Ë
sig_ªÀa£_wddi_drivî
;

976 
	`sigem±y£t
(&
sigöfo
.
ß_mask
);

977 
sigöfo
.
ß_Êags
 = 
SA_SIGINFO
 | 
SA_RESTART
;

979 i‡(
	`siga˘i⁄
(
SIGTERM
, &
sigöfo
, 
NULL
) == -1){

980 
	`WDDI_ERR
("can't catch SIGINT");

984 
	`siga˘i⁄
(
SIGALRM
, 
NULL
, &
sigöfo
);

985 
sigöfo
.
ß_siga˘i⁄
 = (*Ë
sig_Æ¨m_wddi_evít
;

986 
	`sigem±y£t
(&
sigöfo
.
ß_mask
);

987 
sigöfo
.
ß_Êags
 = 
SA_SIGINFO
 | 
SA_RESTART
;

989 i‡(
	`siga˘i⁄
(
SIGALRM
, &
sigöfo
, 
NULL
) == -1){

990 
	`WDDI_ERR
("can't catch SIGALRM");

992 
	`Æ¨m
(1);

994 
îr
;

995 
P¨amFr
[3]={
pùefd
[0], 
pùefd_RxFrH¥io
[0], 
èpfd
};

996 
îr
 = 
	`±hªad_¸óã
(&
rx_pid
,
NULL
,(*)
h™dÀ_rx_‰_∑ckë
,
P¨amFr
);

997 if(
îr
!= 0)

999 
	`WDDI_ERR
("pthread_create handle_rx_fr_packetÉrror");

1002 
P¨amEth
[3]={
pùefdRxEth
[0],
pùefdRxEthH¥io
[0],
èpfd
};

1003 
îr
 = 
	`±hªad_¸óã
(&
rx_pid
,
NULL
,(*)
h™dÀ_rx_ëh_∑ckë
,
P¨amEth
);

1004 if(
îr
!= 0)

1006 
	`WDDI_ERR
("pthread_create handle_rx_eth_packetÉrror");

1013 
Â
=
	`p›í
("/usr/local/bin/spp feature show_valueÇame SGSN_Pool_Proxy_GSM","r");

1017 
rdªt
 = 0;

1018 if(
Â
 =
NULL
)

1020 
	`WDDI_WARNING
("readÇame SGSN_Pool_Proxy_GSM fail fp is NULL \n");

1024 
rdªt
 = 
	`fsˇnf
(
Â
,"%d",&
öçoﬁ„©uª
);

1025 if(
rdªt
 <= 0)

1027 
	`WDDI_WARNING
("ªadÇamêSGSN_Poﬁ_Proxy_GSM faûÑdªà%d \n",
rdªt
);

1029 
	`p˛o£
(
Â
);

1031 
	`F¥ötf
("öçoﬁ„©uª = %d \n",
öçoﬁ„©uª
);

1033 
rdªt
 = 0;

1057 
rdªt
 = 
	`gëSy°emResu…Bycmd
("/usr/local/bin/spp feature show_valueÇame NSE_Aggregation");

1058 if(
rdªt
 == -1)

1060 
	`WDDI_WARNING
("gëSy°emResu…BycmdÑódÇamêNSE_Aggªg©i⁄ faûÑdªà%d \n",
rdªt
);

1064 
	`F¥ötf
("gëSy°emResu…Bycmd NSE_Aggªg©i⁄ = %d \n",
rdªt
);

1065 
g_≈N£AggFœg
 = 
rdªt
;

1066 
	`WP_N£Agg_£t
(
g_≈N£AggFœg
);

1070 
	`FD_ZERO
(&
rd£t
);

1072 
	`FD_SET
(
pùeAœrm
[0], &
rd£t
);

1073 
	`FD_SET
(
èpfd
, &
rd£t
);

1074 
	`FD_SET
(
löxfd
, &
rd£t
);

1075 if(
hóπfd
 !=0 )

1076 
	`FD_SET
(
hóπfd
, &
rd£t
);

1078 
agaö
:

1079 
ªt
 = 
	`£À˘
(
nfds
+1, &
rd£t
, 
NULL
, NULL, NULL);

1080 if(
ªt
 < 0)

1083 
agaö
;

1085 if(
	`FD_ISSET
(
èpfd
, &
rd£t
))

1086 { 
lo›Num
 = 20;

1087 
lo›Num
--)

1089 
size
 = 
	`èp_ªad
(
èpfd
, 
buf„r
, 
FRAME_MAX_LENGTH
);

1090 if(
size
 < 0);

1091 
	`WDDI_PRINT
("ªad %d byãs\n", 
size
);

1092 if(
≈_waôtime
 =
NPU_WAIT_FINISHED
)

1094 
	`≈_ëh_ho°_£nd
(
size
,
buf„r
);

1100 if(
	`FD_ISSET
(
löxfd
, &
rd£t
))

1102 
	`≈u_h™dÀ_löx_msg
();

1105 if(
	`FD_ISSET
(
pùeAœrm
[0], &
rd£t
))

1107 
ªt
 =
	`ªad
(
pùeAœrm
[0], &
èg
, 4);

1108 if(
ªt
 < 0)

1109 
	`WDDI_WARNING
("ªadÖùê%s", 
	`°ªº‹
(
î∫o
));

1111 
	`≈_pﬁl_ªp‹t_Æ¨m
();

1112 
i
;

1113 
WPU_bu£s_öfo
 
bu£s
;

1114 
	`WPU_BUSES
(0, 0, 
WPU_BUSES_CMD_ERROR_REPORT
, &
bu£s
);

1115 
i
 = 0; i < 
WPU_SIU_TYPE_LAST
; i++)

1116 if((
bu£s
.
bus_îr‹_ªp‹t
[
i
].
is_îr‹
) &&

1117 (
bu£s
.
bus_îr‹_ªp‹t
[
i
].
bus_îr‹_sour˚
 =
WPU_BUS_ERR_SOURCE_WMM
))

1124 
	`fÊush
(
°dout
);

1125 
°rc⁄fig
[200];

1127 
	`•rötf
(
°rc⁄fig
,"%s/wöutû wf¯li° 0 14",
w‹kögDú
);

1129 
	`F¥ötf
("%s\n",
°rc⁄fig
);

1130 i‡((
°©us
 = 
	`sy°em
(
°rc⁄fig
)) < 0)

1131 
	`WDDI_ERR
("systemwinutilÅb init");

1132 
	`u¶ìp
(1000);

1133 
	`fÊush
(
°dout
);

1135 
	`≈u_¥ötf_debugReg
();

1138 
	`¶ìp
(5);

1139 
	`WDDI_WARNING
("NPU busÉrror ,suspending.....");

1142 
	`WDDI_ERR
("NPU busÉrror, wddi server will beÑeboot");

1145 
	`fÊush
(
°dout
);

1146 if(
≈_waôtime
 !
NPU_WAIT_FINISHED
)

1148 if(
≈_waôtime
 != 0)

1150 
≈_waôtime
--;

1154 
	`≈_c⁄åﬁ_öãºu±
(1,0);

1155 
	`≈_c⁄åﬁ_öãºu±
(1,1);

1156 
≈_waôtime
 = 
NPU_WAIT_FINISHED
;

1161 i‡(
dl_ruÀ_node_cou¡
 > 0)

1163 
dl_ruÀ_buûd_waôtime
++;

1164 i‡(
dl_ruÀ_buûd_waôtime
 > 1)

1166 
	`add_dl_ruÀ_™d_buûd
();

1167 
dl_ruÀ_buûd_waôtime
 = 0;

1172 if(
hóπfd
 != 0)

1174 if(
	`FD_ISSET
(
hóπfd
, &
rd£t
))

1176 
	`≈u_h™dÀ_hóπ_bót
(
hóπfd
);

1186 
	`ªmove_èpcfg
();

1187 
	`èp_sockë_˛o£
();

1188 
	`WP_DrivîRñó£
();

1192 
	}
}

1194 
u8
 
	gE1_°©us
[
SPP_MAX_STM1_PORT_NUM
][
SPP_MAX_TRUNK_NUM
] = {{
LINK_STATUS_DOWN
},};

1195 
u8
 
	gE1_°©us_ﬁd
[
SPP_MAX_STM1_PORT_NUM
][
SPP_MAX_TRUNK_NUM
] = {{
LINK_STATUS_DOWN
},};

1196 
u8
 
	gSTM1_°©us
[
SPP_MAX_STM1_PORT_NUM
] = {
LINK_STATUS_DOWN
,};

1197 
u8
 
	gSTM1_°©us_ﬁd
[
SPP_MAX_STM1_PORT_NUM
] = {
LINK_STATUS_DOWN
,};

1198 
u8
 
	gETH_°©us
[2] = {
LINK_STATUS_DOWN
,};

1199 
u8
 
	gETH_°©us_ﬁd
[2] = {
LINK_STATUS_DOWN
,};

1201 
u8
 
	gSTM1_°©us_fú°time
[
SPP_MAX_STM1_PORT_NUM
] = {0,};

1203 
u8
 
	gSTM1_°©us_Êag
[
SPP_MAX_STM1_PORT_NUM
] = {
LINK_STATUS_DOWN
,};

1205 
u8
 
	gE1_°©us_fú°time
[
SPP_MAX_STM1_PORT_NUM
][
SPP_MAX_TRUNK_NUM
] = {{0},};

1206 
u8
 
	gETH_°©us_fú°time
[2] = {0,};

1207 
STRU_STM1_ALARM_INFO
 
≈_u„4_¨¨m_öfo
;

1209 
	$≈_pﬁl_ªp‹t_Æ¨m
()

1211 
u32
 
i
,
j
;

1212 
u16
 
°©usBôs
;

1213 
ªt
;

1214 
°rAœrm
[240]= {0};

1215 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

1216 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

1218 
i
 = 0; i < 
SPP_MAX_STM1_PORT_NUM
; i ++)

1220 if(
öôül_cfg
->
°ru_°m1_cfg_öfo
[
i
].
°m1VÆid
)

1222 
j
 = 0; j < 
SPP_MAX_TRUNK_NUM
; j ++)

1224 if(
öôül_cfg
->
°ru_°m1_cfg_öfo
[
i
].
åunk_öfo
[
j
].
åunkVÆid
)

1226 
E1_°©us
[
i
][
j
] = 
	`≈_check_u„4_e1t1_°©us
(i,j);

1227 if(
E1_°©us
[
i
][
j
] !
E1_°©us_ﬁd
[i][j] ||(
E1_°©us_fú°time
[i][j]==0))

1229 
E1_°©us_fú°time
[
i
][
j
] =1;

1230 if(
E1_°©us
[
i
][
j
] =
LINK_STATUS_UP
)

1232 
STM1_°©us_Êag
[
i
] = 
LINK_STATUS_UP
;

1234 
E1_°©us_ﬁd
[
i
][
j
]=
E1_°©us
[i][j];

1235 
	`F¥ötf
("Thê°©u†o‡°m1 %d E1/T1 %d i†%†\n",
i
+1,
j
+1,(
E1_°©us
[i][j] =
LINK_STATUS_UP
)?"UP":"DOWN");

1237 #i‡
ENEA_RELEASE


1238 
	`•rötf
(
°rAœrm
,"O&MÉvít=%†°m1=%dÉ1t1=%d",(
E1_°©us
[
i
][
j
] =
LINK_STATUS_UP
)? "E1T1_LOS_ON":"E1T1_LOS_OFF",i+1,j+1);

1239 
	`WDDI_WARNING
(
°rAœrm
);

1244 
STM1_°©us
[
i
] = 
	`≈_check_u„4_°m1_°©us
(i);

1245 if(
STM1_°©us
[
i
] !
STM1_°©us_ﬁd
[i] || 
STM1_°©us_fú°time
[i]==0)

1247 if(
STM1_°©us_fú°time
[
i
] == 0)

1249 
STM1_°©us_fú°time
[
i
]=1;

1251 if(
STM1_°©us
[
i
]==
LINK_STATUS_DOWN
)

1253 
≈_u„4_¨¨m_öfo
.
SDH_Æ¨m
[
i
].
SDH_OOF
= 1;

1256 
STM1_°©us_ﬁd
[
i
]=
STM1_°©us
[i];

1257 
	`F¥ötf
("Thê°©u†o‡°m1 %d i†%†\n",
i
+1,(
STM1_°©us_ﬁd
[i] =
LINK_STATUS_UP
)?"UP":"DOWN");

1259 #i‡
ENEA_RELEASE


1260 
	`•rötf
(
°rAœrm
,"O&MÉvít=%†°m1=%d",(
STM1_°©us
[
i
] =
LINK_STATUS_UP
)? "STM1_LOS_ON":"STM1_LOS_OFF",i+1);

1261 
	`WDDI_WARNING
(
°rAœrm
);

1273 if(
STM1_°©us
[
i
] =
LINK_STATUS_UP
)

1275 
	`WPX_P‹tLedSë
(0, 
WPX_PORT_LED_ON
, 
i
*3);

1279 
	`WPX_P‹tLedSë
(0, 
WPX_PORT_LED_OFF
, 
i
*3);

1288 
i
 = 0; i< 2; i ++)

1290 
	`dump_ëh_ªgs
(&
g_ëh_ªgs_tmp
);

1291 
ETH_°©us
[
i
] = 
	`ëh_lök_°©us
(2-i);

1292 if(
ETH_°©us_ﬁd
[
i
] !
ETH_°©us
[i] || 
ETH_°©us_fú°time
[i]==0)

1294 
ETH_°©us_fú°time
[
i
] = 1;

1295 
ETH_°©us_ﬁd
[
i
] = 
ETH_°©us
[i];

1296 
	`F¥ötf
("Thê°©u†o‡ëhÖ‹à%d i†%†\n",
i
,(
ETH_°©us
[i] =
LINK_STATUS_UP
)?"UP":"DOWN");

1298 #i‡
ENEA_RELEASE


1299 
	`•rötf
(
°rAœrm
,"O&MÉvít=%†ëhp‹t=%d",(
ETH_°©us
[
i
] =
LINK_STATUS_UP
)? "ETH_LINK_UP":"ETH_LINK_DOWN",i);

1300 
	`WDDI_WARNING
(
°rAœrm
);

1313 if(
ETH_°©us
[
i
] =
LINK_STATUS_UP
)

1315 
	`WPX_P‹tLedSë
(0, 
WPX_PORT_LED_ON
, 
i
+1);

1317 
	`dump_ëh_ªgs
(&
g_ëh_ªgs_up
);

1318 
	`mem˝y
(&
g_ëh_ªgs_œ°
,&
g_ëh_ªgs_up
,(g_eth_regs_up));

1322 
	`WPX_P‹tLedSë
(0, 
WPX_PORT_LED_OFF
, 
i
+1);

1324 
	`dump_ëh_ªgs
(&
g_ëh_ªgs_down
);

1325 
	`WDDI_INFO
("-------------------------WPL_RIF_VIRTUAL(0, 0)=0x%x\n",
	`WPL_RIF_VIRTUAL
(0, 0));

1326 
	`WDDI_INFO
("-------------------------theÜast upÉthÑegs:\n");

1327 
	`di•œy_ëh_ªgs
(&
g_ëh_ªgs_up
);

1328 
	`WDDI_INFO
("-------------------------theÖreviousÉthÑegs:\n");

1329 
	`di•œy_ëh_ªgs
(&
g_ëh_ªgs_œ°
);

1330 
	`WDDI_INFO
("-----------i=%d--------------thêdow¿ëhÑegs:\n",
i
);

1331 
	`di•œy_ëh_ªgs
(&
g_ëh_ªgs_down
);

1333 
tmp
;

1334 
˘æ_ªg
;

1335 if(
i
 == 0)

1337 
tmp
 = *(vﬁ©ûê*)()(0x1e01627C + 
	`WPL_RIF_VIRTUAL
(0, 0));

1338 
tmp
 = 
	`¡ohl
(tmp);

1339 
˘æ_ªg
 = *(vﬁ©ûê*)()(0x1e0082c4 + 
	`WPL_RIF_VIRTUAL
(0, 0));

1340 
˘æ_ªg
 = 
	`¡ohl
(ctrl_reg);

1341 *(vﬁ©ûê*)()(0x1e0082c4 + 
	`WPL_RIF_VIRTUAL
(0, 0)Ë
	`ht⁄l
(0x01618000);

1342 
	`u¶ìp
(10);

1343 *(vﬁ©ûê*)()(0x1e0082c4 + 
	`WPL_RIF_VIRTUAL
(0, 0)Ë
	`ht⁄l
(0x05618000);

1348 
	`mem˝y
(&
g_ëh_ªgs_œ°
,&
g_ëh_ªgs_tmp
,(g_eth_regs_tmp));

1350 
tmp
 = *(vﬁ©ûê*)()(0x1e01823¯+ 
	`WPL_RIF_VIRTUAL
(0, 0));

1351 
tmp
 = 
	`¡ohl
(tmp);

1352 
˘æ_ªg
 = *(vﬁ©ûê*)()(0x1e0082c0 + 
	`WPL_RIF_VIRTUAL
(0, 0));

1353 
˘æ_ªg
 = 
	`¡ohl
(ctrl_reg);

1354 *(vﬁ©ûê*)()(0x1e0082c0 + 
	`WPL_RIF_VIRTUAL
(0, 0)Ë
	`ht⁄l
(0x01618000);

1355 
	`u¶ìp
(10);

1356 *(vﬁ©ûê*)()(0x1e0082c0 + 
	`WPL_RIF_VIRTUAL
(0, 0)Ë
	`ht⁄l
(0x05618000);

1359 
	`F¥ötf
("ëhÖ‹à%d ha†bì¿ª£t! TANDBG=0x%x IO_CTRL1=0x%x\n",
i
,
tmp
,
˘æ_ªg
);

1364 
	}
}

1365 #i‚de‡
O_NOFOLLOW


1366 
	#O_NOFOLLOW
 00400000

	)

1369 
	$my_exô
(
°©us
, *
¨g
)

1371 
	`F¥ötf
("bef‹êexô(), clo£ fd=%d\n",()
¨g
);

1372 
	`˛o£
(()
¨g
);

1373 
	}
}

1375 
	$x§e£t
()

1377 
fd
;

1379 
fd
 = 
	`›í
("/dev/wp_b™k24", 
O_RDWR
 | 
O_NOFOLLOW
, 0644);

1380 if(
fd
 == -1) {

1381 
	`≥º‹
("open");

1386 
	`F¥ötf
("›í fd=%d\n",
fd
);

1387 
	`⁄_exô
(
my_exô
, (*)
fd
);

1389 if(
	`io˘l
(
fd
, 
XS_IOCTL_RESET
, 
NULL
) != 0) {

1391 
	`F¥ötf
("xsreset failed\n");

1396 
	`F¥ötf
("xsreset is ok\n");

1398 
	}
}

1400 
	$gëmoduÀby«me
(c⁄° *
«me
)

1402 
buf
[128];

1403 
FILE
 *
Â
 = 
	`tmpfûe
();

1405 
	`as£π
(
«me
);

1408 
	`•rötf
(
buf
, "lsmod |áwk '/.*%s.*/{print $1}' >&%d",

1409 
«me
, 
	`fûío
(
Â
));

1411 i‡(-1 =
	`sy°em
(
buf
))

1413 
	`≥º‹
("system ERROR");

1414 
	`exô
(1);

1419 
	`f£ek
(
Â
, 0, 
SEEK_SET
);

1420 i‡(
NULL
 =
	`fgës
(
buf
,  buf, 
Â
))

1425 
	`f˛o£
(
Â
);

1427 
	}
}

1429 
	$h™dÀ_rx_‰_∑ckë
(*
P¨am
)

1431 
fd_£t
 
rd£t
;

1432 
nfds
;

1433 
rxpùefd
 = 
P¨am
[0];

1434 
rxpùefd_h¥io
 = 
P¨am
[1];

1435 
èpfd
 = 
P¨am
[2];

1436 
nfds
 = 
rxpùefd
;

1437 
ªt
;

1438 
°©us
 = 0;

1439 
WP_èg
 
èg
 = 0;

1440 
À¡h
;

1441 *
buf„r
;

1442 
rsvNumbî
 = 0;

1443 
buf„r
 = 
	`mÆloc
(
FRAME_MAX_LENGTH
);

1444 
NP_SYSTEM_INFO
 * 
the_sy°em
 = 
	`≈_gë_sy°em_öfo
();

1446 
tmp
;

1447 
tmp
 = ()
buf„r
 + 128;

1448 
tmp
 = ()
buf„r
 & ~127;

1449 
buf„r
 = (*)
tmp
;

1451 if(
buf„r
 == 0)

1453 
	`WDDI_ERR
("malloc buffer");

1456 i‡(
nfds
 < 
rxpùefd_h¥io
)

1458 
nfds
 = 
rxpùefd_h¥io
;

1461 
löx_fd
 = 
	`löx_öô_thªad_rx_‰
();

1462 
°©us
 = 
	`f˙é
(
löx_fd
, 
F_SETFL
, 
O_NONBLOCK
);

1463 i‡(
°©us
 < 0)

1465 
	`WDDI_ERR
("linxfd fcntl fail");

1468 
	`F¥ötf
("rx_‰_∑ckëÅhªadId i†%u \n",
	`gëtid
());

1471 
	`FD_ZERO
(&
rd£t
);

1472 
	`FD_SET
(
rxpùefd
, &
rd£t
);

1473 
	`FD_SET
(
rxpùefd_h¥io
, &
rd£t
);

1474 
agaö
:

1475 
ªt
 = 
	`£À˘
(
nfds
+1, &
rd£t
, 
NULL
, NULL, NULL);

1476 if(
ªt
 < 0)

1478 
	`WDDI_PRINT
("h™dÀ_rx_‰_∑ckë sñe˘Ñë = %dÉºnÿ%†\n",
ªt
,
	`°ªº‹
(
î∫o
));

1479 
agaö
;

1482 if(
	`FD_ISSET
(
rxpùefd_h¥io
, &
rd£t
))

1484 
rsvNumbî
=0;

1485 
rsvNumbî
 < 
WP_FR_MAX_RSV_HIPRIO_NUMBER
)

1487 
ªt
 = 
	`ªad
(
rxpùefd_h¥io
, &
èg
, 4);

1488 i‡(
ªt
 < 0)

1492 if(
the_sy°em
->
Ch™√l_FR_PrioRx0_ho°_h™dÀ
!= 0)

1494 
	`WDDI_INFO
("np_fr_host_priority_receive");

1495 
°©us
 = 
	`≈_‰_ho°_ª˚ive
(
the_sy°em
->
Ch™√l_FR_PrioRx0_ho°_h™dÀ
,&
À¡h
,
buf„r
);

1496 if(
°©us
 == 0)

1498 
	`≈_h™dÀ_‰_¥i‹ôy_‰ame
(
buf„r
,
À¡h
);

1499 
rsvNumbî
++;

1508 
	`WDDI_WARNING
("rx ch™√»i†nŸ vÆid ch™√lödex = %d\¿",
èg
);

1512 if(
	`FD_ISSET
(
rxpùefd
, &
rd£t
))

1514 
rsvNumbî
 = 0;

1515 
rsvNumbî
 < 
WP_FR_MAX_RSV_LOWPRIO_NUMBER
)

1517 
ªt
 = 
	`ªad
(
rxpùefd
, &
èg
, 4);

1518 i‡(
ªt
 < 0)

1522 
FR_CHANNEL_INFO
 * 
ch_öfo
;

1523 
u32
 
vÂ‹t
 = 0;

1524 
STRU_VPORT_INFO
 *
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
èg
);

1525 if(
Vp‹tInfo
 !
NULL
)

1527 
ch_öfo
 = &
Vp‹tInfo
->ch_info;

1528 if(
ch_öfo
->
rx_ho°_h™dÀ
 != 0)

1530 
vÂ‹t
 = 
ch_öfo
->vfport;

1531 
	`WDDI_INFO
("Info: h™dÀ_rx_‰_∑ckë::≈_‰_ho°_ª˚ivê⁄ vÂ‹t:0x%x\n", 
vÂ‹t
);

1532 
°©us
 = 
	`≈_‰_ho°_ª˚ive
(
ch_öfo
->
rx_ho°_h™dÀ
,&
À¡h
,
buf„r
);

1533 if(
°©us
 == 0)

1535 
	`≈_h™dÀ_‰_‰ame
(
buf„r
,
À¡h
,
vÂ‹t
);

1536 
rsvNumbî
++;

1545 
	`WDDI_WARNING
("rx ch™√»i†nŸ vÆid ch™√lödex = %d\¿",
èg
);

1550 
	`WDDI_WARNING
(" c™'àgë f∏vp‹àöfÿvp‹à%d \¿",
èg
);

1556 
	}
}

1557 
	gpùeRódEvítNum
 =0;

1558 
pùeWrôeEvítNum
;

1559 
	$h™dÀ_rx_ëh_∑ckë
(*
P¨am
)

1561 
fd_£t
 
rd£t
;

1562 
nfds
;

1563 
rxpùefd
 = 
P¨am
[0];

1564 
rxpùefd_h¥io
 = 
P¨am
[1];

1565 
èpfd
 = 
P¨am
[2];

1566 
nfds
 = 
rxpùefd
;

1567 
ªt
;

1568 
°©us
 = 0;

1569 
WP_èg
 
èg
 = 0;

1570 
À¡h
;

1571 *
buf„r
;

1572 
rsvNumbî
 = 0;

1573 
buf„r
 = 
	`mÆloc
(
FRAME_MAX_LENGTH
);

1574 
NP_SYSTEM_INFO
 * 
the_sy°em
 = 
	`≈_gë_sy°em_öfo
();

1576 
tmp
;

1577 
tmp
 = ()
buf„r
 + 128;

1578 
tmp
 = ()
buf„r
 & ~127;

1579 
buf„r
 = (*)
tmp
;

1581 if(
buf„r
 == 0)

1583 
	`WDDI_ERR
("malloc buffer");

1585 i‡(
nfds
 < 
rxpùefd_h¥io
)

1587 
nfds
 = 
rxpùefd_h¥io
;

1589 
löx_fd
 = 
	`löx_öô_thªad_rx_ëh
();

1590 
°©us
 = 
	`f˙é
(
löx_fd
, 
F_SETFL
, 
O_NONBLOCK
);

1591 i‡(
°©us
 < 0)

1593 
	`WDDI_ERR
("linxfd fcntl fail");

1596 
	`F¥ötf
("rx_ëh_∑ckëÅhªadId i†%u ,maöÖid = %d\n",
	`gëtid
(),
	`gëpid
());

1599 
	`FD_ZERO
(&
rd£t
);

1600 
	`FD_SET
(
rxpùefd
, &
rd£t
);

1601 
	`FD_SET
(
rxpùefd_h¥io
, &
rd£t
);

1602 
agaö
:

1603 
ªt
 = 
	`£À˘
(
nfds
+1, &
rd£t
, 
NULL
, NULL, NULL);

1604 if(
ªt
 < 0)

1606 
	`WDDI_PRINT
("h™dÀ_rx_ëh_∑ckë sñe˘Ñë = %dÉºnÿ%†\n",
ªt
,
	`°ªº‹
(
î∫o
));

1607 
agaö
;

1609 if(
	`FD_ISSET
(
rxpùefd_h¥io
, &
rd£t
))

1611 
rsvNumbî
 = 0;

1612 
rsvNumbî
 <
WP_ETH_MAX_RSV_HIPRIO_NUMBER
)

1614 
ªt
 =
	`ªad
(
rxpùefd_h¥io
, &
èg
, 4);

1615 if(
ªt
 < 0)

1619 
pùeRódEvítNum
++;

1620 
°©us
 = 
	`≈_ëh_ho°_ª˚ive
(
the_sy°em
->
Ch™√l_IP_PrioRx0_ho°_h™dÀ
,&
À¡h
,
buf„r
);

1621 if(
°©us
 == 0)

1623 
	`WDDI_PRINT
("≈_ëh_ho°_¥i‹ôy_ª˚ivêÀngth = %d\n",
À¡h
);

1624 
	`≈_h™dÀ_ëhî√t_‰ame
(
buf„r
, 
À¡h
, 
èpfd
);

1625 
rsvNumbî
++;

1634 if(
	`FD_ISSET
(
rxpùefd
, &
rd£t
))

1636 
rsvNumbî
 = 0;

1637 
rsvNumbî
 < 
WP_ETH_MAX_RSV_LOWPRIO_NUMBER
)

1639 
ªt
 =
	`ªad
(
rxpùefd
, &
èg
, 4);

1640 if(
ªt
 < 0 )

1644 
pùeRódEvítNum
++;

1646 
°©us
 = 
	`≈_ëh_ho°_ª˚ive
(
iw_rx_ho°_h™dÀ
,&
À¡h
,
buf„r
);

1647 if(
°©us
 == 0)

1649 
	`WDDI_PRINT
("≈_ëh_ho°_ª˚ivêÀngth = %d\n",
À¡h
);

1650 
	`≈_h™dÀ_ëhî√t_‰ame
(
buf„r
, 
À¡h
, 
èpfd
);

1651 
rsvNumbî
++;

1660 
	}
}

	@spp_npu_link.h

1 #i‚de‡
__SPP_NPU_LINK_H


2 
	#__SPP_NPU_LINK_H


	)

4 #i‚de‡
ENEA_DEBUG


5 
	~"°döcs.h
"

8 #ifde‡
ENEA_DEBUG


10 #i‚de‡
TYPE_DEF


11 
	#TYPE_DEF


	)

12 
	tu8
;

13 
	tu16
;

14 
	tu32
;

15 
	tu64
;

21 #ifde‡ 
ENEA_DEBUG


22 
	#L
(
fmt
, ...Ë\

	)

23 
¥ötf
–
fmt
,## 
__VA_ARGS__
)

26 
	#VP_TYPE_UDP
 1

	)

27 
	#VP_TYPE_FR
 2

	)

28 
	#VP_TYPE_LINX
 3

	)

30 
	#STATUS_OK
 0

	)

31 
	#NPU_VERSION_NUM
 "PMCV1.1.90"

	)

41 
≈u_vp‹t_›í
(
u8
 
vp_ty≥
,
u32
 
ùaddr_§c
,u32 
p‹t_§c
);

50 
≈u_vp‹t_˛o£
(
Sockëfd
,
u8
 
vp_ty≥
,
u32
 
p‹t_§c
);

66 
≈u_vp‹t_£nd
(
Sockëfd
,
u8
 
vp_ty≥
,u8* 
p
, 
u32
 
Àn
,u32 
ùaddr_§c
,u32 
p‹t_§c
,u32 
ùaddr_d°
, u32 
p‹t_d°
);

83 
≈u_vp‹t_ªcv
(
Sockëfd
,
u8
* 
buf
, 
u32
 
maxÀn
,u8* 
vp_ty≥
, u32* 
ùaddr_d°
,u32* 
p‹t
,u32* 
ùaddr_§c
, 
u16
* 
udp_p‹t_§c
);

92 
u32
 
≈u_¸ót_löx
(*
Sockëfd
, 
u8
 
BlockFœg
);

101 
≈u_io˘æ
(
u32
 
cmd
 ,*
¨g
);

103 
≈u_io˘æ2
(
u32
 
cmd
 ,*
¨g
);

104 #¥agm®
∑ck
 (4)

107 
	gSTRU_ETH_STATICS_TAG


110 
u64
 
	gtxrx_‰ames_64
;

111 
u64
 
	gtxrx_‰ames_127
;

112 
u64
 
	gtxrx_‰ames_255
;

113 
u64
 
	gtxrx_‰ames_511
;

114 
u64
 
	gtxrx_‰ames_1023
;

115 
u64
 
	gtxrx_‰ames_1518
;

116 
u64
 
	gtxrx_‰ames_1522
;

117 
u64
 
	grx_byãs
;

118 
u64
 
	grx_∑ckës
;

119 
u64
 
	grx_îr_fcs
;

120 
u64
 
	grx_mu…iˇ°
;

121 
u64
 
	grx_brﬂdˇ°
;

122 
u64
 
	grx_mac_c⁄åﬁ
;

123 
u64
 
	grx_mac_∑u£
;

124 
u64
 
	grx_mac_unknown
;

125 
u64
 
	grx_îr_Æignmít
;

126 
u64
 
	grx_îr_Àngth
;

127 
u64
 
	grx_îr_code
;

128 
u64
 
	grx_Ál£_ˇºõr
;

129 
u64
 
	grx_undîsize
;

130 
u64
 
	grx_ovîsize
;

131 
u64
 
	grx_‰agmíts
;

132 
u64
 
	grx_jabbî
;

133 
u64
 
	grx_dr›≥d
;

134 
u64
 
	gtx_byãs
;

135 
u64
 
	gtx_∑ckës
;

136 
u64
 
	gtx_mu…iˇ°
;

137 
u64
 
	gtx_brﬂdˇ°
;

138 
u64
 
	gtx_mac_∑u£
;

139 
u64
 
	gtx_de„r
;

140 
u64
 
	gtx_ex˚ss_de„r
;

141 
u64
 
	gtx_sögÀ_cﬁlisi⁄
;

142 
u64
 
	gtx_mu…i_cﬁlisi⁄
;

143 
u64
 
	gtx_œã_cﬁlisi⁄
;

144 
u64
 
	gtx_ex˚ss_cﬁlisi⁄
;

145 
u64
 
	gtx_no_cﬁlisi⁄
;

146 
u64
 
	gtx_mac_∑u£_h⁄‹ed
;

147 
u64
 
	gtx_dr›≥d
;

148 
u64
 
	gtx_jabbî
;

149 
u64
 
	gtx_îr_fcs
;

150 
u64
 
	gtx_c⁄åﬁ
;

151 
u64
 
	gtx_ovîsize
;

152 
u64
 
	gtx_undîsize
;

153 
u64
 
	gtx_‰agmíts
;

156 
u64
 
	grx_ho°_‰ames
;

157 
u64
 
	grx_iw_‰ames
;

158 
u64
 
	grx_îr_ho°_fuŒ
;

159 
u64
 
	grx_îr_fbp_undîrun
;

160 
u64
 
	grx_îr_n⁄vÆid_mac
;

161 
u64
 
	grx_îr_mru
;

162 
u64
 
	grx_îr_sdu
;

163 
u64
 
	gtx_îr_undîrun
;

164 
u64
 
	grx_îr_ovîrun
;

165 
u64
 
	gtx_‰ames
;

168 
u64
 
	gdps_tx_‰ames
;

169 
u64
 
	gdps_tx_byãs
;

170 
u64
 
	gdps_rx_‰ames
;

171 
u64
 
	gdps_rx_byãs
;

172 
u64
 
	gdps_rx_dr›≥d_‰ames
;

173 
u64
 
	gdps_rx_p˚_díõd_‰ames
;

174 } 
	tSTRU_ETH_STATICS
;

177 
	gSTRU_BPORT_STATICS_TAG


179 
u64
 
	grx_vÆid_∑ckës
;

180 
u64
 
	gdisˇrd_vœn_ac˚±abÀ_fûãr
;

181 
u64
 
	gdisˇrd_ögªss_fûãr
;

182 
u64
 
	gdisˇrd_bridge_˛assifõr
;

183 
u64
 
	gdisˇrd_unk_macß
;

184 
u64
 
	gdíy_mac_ß
;

185 
u64
 
	gdíy_mac_da
;

186 
u64
 
	grx_bc_vÆid_∑ckës
;

187 
u64
 
	grx_mc_vÆid_∑ckës
;

188 
u64
 
	gf‹w¨ded_uc_∑ckës
;

189 
u64
 
	gf‹w¨ded_bc_∑ckës
;

190 
u64
 
	gf‹w¨ded_mc_∑ckës
;

191 
u64
 
	g¥Ÿocﬁ_îr‹
;

192 
u64
 
	gªs_mc_mac_díy
;

193 
u64
 
	gdisˇrd_dfc_fûãr
[32];

194 
u32
 
	gdíy_cfm_‰ames
;

195 
u64
 
	gbad_ù_vîsi⁄
;

196 
u64
 
	gchecksum_îr‹
;

197 
u64
 
	gù_¥Ÿocﬁ_îr‹
;

198 
u64
 
	gdisˇrd_p˚_fûãr
[256];

199 
u64
 
	gögªss_pﬁi˚r_n⁄_c⁄f‹mög_∑ckës
;

201 
	tSTRU_BPORT_STATICS
;

203 
	gSTRU_UPI_STATICS_TAG


205 
u64
 
	grx_‰ames
;

206 
u64
 
	grx_byãs
;

207 
u64
 
	grx_‰ames_de_£t
;

208 
u64
 
	grx_byãs_de_£t
;

209 
u64
 
	grx_‰ames_„˙_£t
;

210 
u64
 
	grx_‰ames_be˙_£t
;

211 
u64
 
	grx_disˇrded_îr_¸c
;

212 
u64
 
	grx_disˇrded_îr_Æignmít
;

213 
u64
 
	grx_disˇrded_Àngth_viﬁ©i⁄
;

214 
u64
 
	grx_disˇrded_ûÀgÆ_hódî
;

215 
u64
 
	grx_disˇrded_ab‹t
;

216 
u64
 
	grx_disˇrded_unsuµ‹ãd_dlci
;

217 
u32
 
	grx_œ°_unsuµ‹ãd_dlci
;

218 
u64
 
	grx_disˇrded_fbp_em±y
;

219 
u64
 
	grx_disˇrded_ho°q_fuŒ
;

220 
u64
 
	grx_disˇrded_îr_∑rôy
;

221 
u64
 
	grx_disˇrded_îr_s›_e›
;

222 
u64
 
	grx_tŸÆ_îr_byãs
;

223 
u64
 
	gtx_‰ames
;

224 
u64
 
	gtx_byãs
;

225 
u64
 
	gtx_‰ames_de_£t
;

226 
u64
 
	gtx_byãs_de_£t
;

227 
u64
 
	gtx_‰ames_„˙_£t
;

228 
u64
 
	gtx_‰ames_be˙_£t
;

229 
u64
 
	gtx_undîrun
;

230 
u64
 
	gtx_ab‹ãd_‰ames
;

231 
u64
 
	g£rül_dps_if_tx_‰ames
;

232 
u64
 
	g£rül_dps_if_tx_byãs
;

233 
u64
 
	g£rül_dps_if_rx_‰ames
;

234 
u64
 
	g£rül_dps_if_rx_byãs
;

235 
u64
 
	g£rül_dps_if_rx_dr›≥d_‰ames
;

236 
u64
 
	g£rül_dps_if_rx_p˚_díõd_‰ames
;

238 
	tSTRU_UPI_STATICS
;

241 
	gSTRU_RXFR_STATICS_TAG


243 
u64
 
	grx_‰ames
;

244 
u64
 
	grx_byãs
;

245 
u64
 
	grx_‰ames_de_£t
;

246 
u64
 
	grx_byãs_de_£t
;

247 
u64
 
	grx_‰ames_„˙_£t
;

248 
u64
 
	grx_‰ames_be˙_£t
;

249 
u64
 
	grx_disˇrded_îr_¸c
;

250 
u64
 
	grx_disˇrded_îr_Æignmít
;

251 
u64
 
	grx_disˇrded_Àngth_viﬁ©i⁄
;

252 
u64
 
	grx_disˇrded_ab‹t
;

253 
u64
 
	grx_disˇrded_fbp_em±y
;

254 
u64
 
	grx_disˇrded_ho°q_fuŒ
;

256 
	tSTRU_RXFR_STATICS
;

258 
	gSTRU_TXFR_STATICS_TAG


260 
u64
 
	gtx_‰ames
;

261 
u64
 
	gtx_byãs
;

262 
u64
 
	gtx_‰ames_de_£t
;

263 
u64
 
	gtx_byãs_de_£t
;

264 
u64
 
	gtx_‰ames_„˙_£t
;

265 
u64
 
	gtx_‰ames_be˙_£t
;

266 
u64
 
	gtx_ab‹ãd_‰ames
;

268 
	tSTRU_TXFR_STATICS
;

271 
	gSTRU_CPU_STATICS_TAG


273 
u32
 
	gtŸÆUtûi
;

274 
u32
 
	gWöGöUtûi
[12];

275 }
	tSTRU_CPU_STATICS
;

277 
	gSTRU_MEMORY_STATICS_TAG


279 
u32
 
	gPackëMemLe·Byã
;

280 
u32
 
	gP¨amMemLe·Byã
;

281 
u32
 
	gI¡îMemLe·Byã
;

283 
u32
 
	gPackëMemTŸÆByã
;

284 
u32
 
	gP¨amMemTŸÆByã
;

285 
u32
 
	gI¡îMemTŸÆByã
;

286 }
	tSTRU_MEMORY_STATICS
;

289 
	gSTRU_NS_BSSGP_STATICS_TAG


291 
u64
 
	gbssgp_ö_o˘ës
;

292 
u64
 
	gbssgp_ö_∑ckës
;

293 
u64
 
	gbssgp_ö_∑ckës_sig«Œög
;

294 
u64
 
	gbssgp_out_o˘ës
;

295 
u64
 
	gbssgp_out_∑ckës
;

296 
u64
 
	gbssgp_out_∑ckës_sig«Œög
;

297 
u64
 
	gns_ö_o˘ës
;

298 
u64
 
	gns_ö_∑ckës
;

299 
u64
 
	gns_ö_∑ckës_sig«Œög
;

300 
u64
 
	gns_out_o˘ës
;

301 
u64
 
	gns_out_∑ckës
;

302 
u64
 
	gns_out_∑ckës_sig«Œög
;

303 }
	tSTRU_NS_BSSGP_STATICS
;

307 
	gNPU_VLAN_ENABLE
 = 0,

308 
	gNPU_VLAN_DISABLE


309 }
	tVœn_Fœge
;

313 
	gNPU_MODE_FR
 = 0,

314 
	gNPU_MODE_IP


315 }
	tO≥øã_mode
;

319 
	gNPU_INVALID
 = 0,

320 
	gNPU_VALID


321 }
	tVÆid_Êag
;

325 
	gNPU_MODE_E1
 = 0,

326 
	gNPU_MODE_T1
,

327 
	gNPU_E1T1_CLOCK_MASTER
,

328 
	gNPU_E1T1_CLOCK_SLAVE
,

329 
	gNPU_E1T1_CRC16
,

330 
	gNPU_E1T1_CRC32


331 }
	tE1T1ty≥
;

335 
	gNPU_NPUMON_CAPTURE_ENABLE
 = 1,

336 
	gNPU_NPUMON_CAPTURE_DISABLE
 = 0

337 }
	t≈um⁄_ˇ±uª
;

341 
	gSET_RULE_TABLE
 = 0,

342 
	gMODIFY_RULE_TABLE
,

343 
	gDEL_UL_RULE_TALBE_BASED_ON_PORT
,

344 
	gDEL_UL_RULE_TALBE_BASED_ON_PORT_NRI
,

345 
	gDEL_DL_RULE_TALBE_BASED_ON_DPORT
,

346 
	gDEL_DL_RULE_TALBE_BASED_ON_BVCI
,

347 
	gDEL_DL_RULE_TALBE_BASED_ON_DPORT_BVCI
,

348 
	gDEL_UL_UPDATE_BVCI_TALBE_BASED_ON_PORT_BVCI
,

349 
	gDEL_UL_UPDATE_BVCI_TALBE_BASED_ON_PORT


350 }
	tTabÀ_O±mode
;

354 
	gLOCAL_FLAG
 =0,

355 
	gPEER_FLAG
 = 16

357 }
	tloˇl_ªmŸe_Êag
;

362 
	gSET_PVC_ENABLE
 =0,

363 
	gSET_PVC_DISABLE


364 }
	tVp‹t_°©us
;

368 
	gLINK_STATUS_DOWN
 = 0,

369 
	gLINK_STATUS_UP
,

370 
	gLINK_STATUS_DISABLED


371 }
	tlök_°©us
;

376 
	gNPU_LOG_DEBUG
 = 0,

377 
	gNPU_LOG_INFO
,

378 
	gNPU_LOG_NOTICE
,

379 
	gNPU_LOG_WARNING
,

380 
	gNPU_LOG_ERR
,

381 
	gNPU_LOG_CRIT
,

382 
	gNPU_LOG_ALERT
,

383 
	gNPU_LOG_EMERG


384 }
	tlog_debug_Àvñ
;

388 
	gNPU_BLOCK
 = 0,

389 
	gNPU_UNBLOCK


390 }
	tbﬁck_mode_Êag
;

394 
	gNPU_POOL
 = 0,

395 
	gNPU_NONPOOL


396 }
	tNP_Poﬁ_Fœg
;

401 
	gNPU_NSE_AGG_OFF
 = 0,

402 
	gNPU_NSE_AGG_ON


403 }
	tNP_NSEAGG_FLAG
;

406 
	#NPU_GET_CMD_BASE
 0x00

	)

407 
	#NPU_SET_CMD_BASE
 0x64

	)

409 
	#SPP_MAX_STM1_PORT_NUM
 2

	)

410 
	#SPP_MAX_TRUNK_NUM
 84

	)

411 
	#SPP_MAX_GROUP_NUM
 32

	)

413 
	#SPP_MAX_ROUTE_NUM
 64

	)

415 
	#NPU_SET_INITIAL_CONFIG_ERR
 -1

	)

416 
	#NPU_SET_FR_UPLINK_PATH_RULE_ERR
 -2

	)

417 
	#NPU_MODIFY_FR_UPLINK_PATH_RULE_ERROR
 -3

	)

418 
	#NPU_DELETE_FR_UPLINK_PATH_RULE_ERROR
 -4

	)

419 
	#NPU_SET_FR_DOWNLINK_PATH_RULE_ERROR
 -5

	)

420 
	#NPU_MODIFY_FR_DOWNLINK_PATH_RULE_ERROR
 -6

	)

421 
	#NPU_DELETE_FR_DOWNLINK_PATH_RULE_ERROR
 -7

	)

422 
	#NPU_GET_ETH_STATICS_ERROR
 -8

	)

423 
	#NPU_GET_UPI_STATICS_ERROR
 -9

	)

424 
	#NPU_GET_RXFR_STATICS_ERROR
 -10

	)

425 
	#NPU_GET_TXFR_STATICS_ERROR
 -11

	)

426 
	#NPU_SET_NPUMON_CMD_PORT_ERROR
 -12

	)

427 
	#NPU_SET_NPUMON_CMD_ALREAD_START_ERROR
 -13

	)

429 
	#NPU_SET_LMI_PVC_STATUS_FAIL
 -14

	)

432 
	#ERR_LINX_OPEN
 -1

	)

433 
	#ERR_LINX_CLOSE
 -2

	)

434 
	#ERR_LINX_HUNT
 -3

	)

435 
	#ERR_LINX_RCV_TMOUT
 -4

	)

436 
	#ERR_LINX_HUNT_TMOUT
 -5

	)

437 
	#ERR_LINX_GET_SENDER
 -6

	)

438 
	#ERR_LINX_FREE_SIG
 -7

	)

439 
	#ERR_LINX_FIND_SERVER
 -8

	)

440 
	#ERR_LINX_ALLOC
 -9

	)

441 
	#ERR_LINX_SEND
 -10

	)

442 
	#ERR_GET_LINX_INFO
 -11

	)

443 
	#ERR_GET_VPORT_INFO
 -12

	)

445 
	#ERR_LINX_RSV_FAIL
 -13

	)

446 
	#ERR_LINX_RSV_TMOUT
 -14

	)

448 
	#ERR_LINX_RSV_OVER_SIZE
 -15

	)

449 
	#ERR_UNKNOWN_ARG
 -16

	)

450 
	#ERR_LINX_DISCONNECTED
 -17

	)

456 
	gNPU_MON_CMD_XM
=0,

457 
	gNPU_MON_CMD_XL
,

458 
	gNPU_MON_CMD_XRU
,

459 
	gNPU_MON_CMD_TI
,

460 
	gNPU_MON_CMD_TI4
,

461 
	gNPU_MON_CMD_TR
,

462 
	gNPU_MON_CMD_DD
,

463 
	gNPU_MON_CMD_DC
,

464 
	gNPU_MON_CMD_CD
,

465 
	gNPU_MON_CMD_CC


466 }
	tNPU_MON_CMD
;

469 
	#NPUMON_NO_ARGS
 0xffff

	)

472 
	#NPU_SET_RECONFIG
 (
NPU_SET_CMD_BASE
 + 0)

	)

474 
	gSTRU_IP_EP_TAG


476 
u32
 
	gIpD°
;

477 
u16
 
	gFœg
;

478 
u16
 
	gP‹tD°
;

479 }
	tSTRU_IP_EP
;

480 
	gSTRU_NSVC_TABLE_TAG


482 
u16
 
	gFœg
;

483 
u32
 
	gvf‹t
;

485 }
	tSTRU_NSVC_TABLE
;

491 
	#NPU_SET_UPLINK_PATH_RULE
 (
NPU_SET_CMD_BASE
 + 1)

	)

492 
	gSTRU_SET_UPLINKPATH_RULE_TAG


494 
u32
 
	gO±Mode
;

498 
u32
 
	gvÂ‹t
;

499 
u32
 
	gp‹tD°
;

500 }
	gu_p‹t
;

501 
u32
 
	gNRIVÆue
;

502 
u32
 
	gP‹tSrc
;

503 }
	tSTRU_SET_UPLINK_PATH_RULE
;

505 
	#NPU_DELETE_UPLINK_PATH_RULE
 (
NPU_SET_CMD_BASE
 + 2)

	)

506 
	gSTRU_DELETE_UPLINKPATH_RULE_TAG


508 
u32
 
	gDñëeMode
;

512 
u32
 
	gvÂ‹t
;

513 
u32
 
	gp‹tD°
;

514 }
	gu_p‹t
;

516 
u32
 
	gNRIVÆue
;

517 }
	tSTRU_DELETE_UPLINK_PATH_RULE
;

523 
	#NPU_SET_UPLINK_PATH_LINK_TABLE
 (
NPU_SET_CMD_BASE
 + 3)

	)

524 
	#NPU_SET_DOWNLINK_PATH_LINK_TABLE
 
NPU_SET_UPLINK_PATH_LINK_TABLE


	)

525 
	gSTRU_SET_UPLINKPATH_LINK_TABLE_TAG


527 
u32
 
	gP‹tSrc
;

528 
u32
 
	gIpEpAcôveNum
;

529 
STRU_IP_EP
 
	gIpEp
[64];

530 }
	tSTRU_SET_UPLINK_PATH_LINK_TABLE
;

531 
STRU_SET_UPLINK_PATH_LINK_TABLE
 
	tSTRU_SET_DOWNLINK_PATH_LINK_TABLE
;

535 
	#NPU_SET_UPDATE_BVCI_PATH_RULE
 (
NPU_SET_CMD_BASE
 + 4)

	)

536 
	gSTRU_SET_UPDATE_BVCI_PATH_RULE_TAG


538 
u32
 
	gO±Mode
;

541 
u32
 
	gvÂ‹t
;

542 
u32
 
	gp‹tD°
;

543 }
	gu_p‹t
;

544 
u16
 
	gNS_BVCI_ﬁd
;

545 
u16
 
	gNS_BVCI
;

546 }
	tSTRU_SET_UPDATE_BVCI_PATH_RULE
;

548 
	#NPU_DELETE_UPDATE_BVCI_PATH_RULE
 (
NPU_SET_CMD_BASE
 + 5)

	)

549 
	gSTRU_DELETE_UPDATE_BVCI_PATH_RULE_TAG


551 
u32
 
	gO±Mode
;

555 
u32
 
	gvÂ‹t
;

556 
u32
 
	gp‹tD°
;

557 }
	gu_p‹t
;

558 
u16
 
	gNS_BVCI_ﬁd
;

559 }
	tSTRU_DELETE_UPDATE_BVCI_PATH_RULE
;

564 
	#NPU_SET_DOWNLINK_PATH_RULE
 (
NPU_SET_CMD_BASE
 + 6)

	)

565 
	gSTRU_SET_DOWNLINK_PATH_RULE_TAG


567 
u32
 
	gO±Mode
;

569 
u16
 
	gDp‹tSèπVÆue
;

570 
u16
 
	gBVCI
;

571 
u16
 
	gBVCI√w
;

574 
u16
 
	gNSEI
;

575 
u16
 
	gp‹tSrc
;

576 }
	gn£i_p‹tSrc
;

577 
u16
 
	gP‹tSize
;

578 }
	tSTRU_SET_DOWNLINK_PATH_RULE
;

580 
	#NPU_DELETE_DOWNLINK_PATH_RULE
 (
NPU_SET_CMD_BASE
 + 7)

	)

581 
	gSTRU_DELETE_DOWNLINK_PATH_RULE_TAG


583 
u32
 
	gO±Mode
;

586 
u16
 
	gDp‹tSèπVÆue
;

587 
u16
 
	gBVCI
;

588 }
	tSTRU_DELETE_DOWNLINK_PATH_RULE
;

593 
	#NPU_SET_FR_DOWNLINK_PATH_LINK_TABLE
 (
NPU_SET_CMD_BASE
 + 8)

	)

594 
	gSTRU_SET_FR_DOWNLINKPATH_LINK_TABLE_TAG


596 
u16
 
	gNSEI
;

598 
u32
 
	gFrVp‹tAcôveNum
;

599 
STRU_NSVC_TABLE
 
	gNsvcGΩ
[16];

600 }
	tSTRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
;

604 
	#NPU_MON_SET_CAPTURE_START
 (
NPU_SET_CMD_BASE
 + 9)

	)

606 
	#NPU_MON_SET_CAPTURE_STOP
 (
NPU_SET_CMD_BASE
 + 10)

	)

610 
	#NPU_SET_LMI_PVC_STATUS
 (
NPU_SET_CMD_BASE
 + 11)

	)

611 
	gSTRU_NPU_SET_LMI_PVC_STATUS_TAG


613 
u32
 
	gvÂ‹t
;

614 
u32
 
	g°©us
;

615 }
	tSTRU_NPU_SET_LMI_PVC_STATUS
;

618 
	#NPU_SET_LOG_DEBUG_LEVEL
 (
NPU_SET_CMD_BASE
 + 12)

	)

619 
	gSTRU_NPU_SET_LOG_DEBUG_LEVEL_TAG


621 
u32
 
	gÀvñ
;

632 }
	tSTRU_NPU_SET_LOG_DEBUG_LEVEL
;

635 
	#NPU_SET_NS_BSSGP_STATICS_ZERO
 (
NPU_SET_CMD_BASE
 + 13)

	)

636 
	gSTRU_SET_NS_BSSGP_STATICS_ZERO_TAG


638 
u32
 
	gvÂ‹t
;

639 }
	tSTRU_SET_NS_BSSGP_STATICS_ZERO
;

641 
	#NPU_SET_NONPOOL_STATE
 (
NPU_SET_CMD_BASE
 + 14)

	)

642 
	gSTRU_SET_NPU_NONPOOL_STATE_TAG


644 
u32
 
	gn⁄poﬁÊag
;

645 }
	tSTRU_SET_NPU_NONPOOL_STATE
;

647 
	#NPU_SET_NSEAGG_FLAG
 (
NPU_SET_CMD_BASE
 + 15)

	)

648 
	gSTRU_SET_NPU_NSEAGG_FLAG_TAG


650 
u32
 
	gn£AggFœg
;

651 }
	tSTRU_SET_NPU_NSEAGG_FLAG
;

653 
	#PCAPFILENAMELEN
 256

	)

655 
	gSTRU_NPUMON_INFO_TAG


657 
	gcmd
;

658 
	gifTy≥
;

659 
	gTrunkNumbî
;

660 
	gp‹tSrc
;

661 
	gdlci
;

662 
	ggroup
;

663 
	g°m1
;

664 
	gùaddr
;

665 
	gÀn
;

666 
	gPˇpFûeName
[
PCAPFILENAMELEN
];

667 }
	tSTRU_NPUMON_INFO
;

670 
	#NPU_GET_ETH_STATICS
 (
NPU_GET_CMD_BASE
 + 0)

	)

671 
	gSTRU_GET_ETH_STATICS_TAG


673 
u32
 
	gEthNumbî
;

674 
u32
 
	gª£rved
;

675 
STRU_ETH_STATICS
 
	g°ru_ëh_°©ics
;

677 }
	tSTRU_GET_ETH_STATICS
;

679 
	#NPU_GET_UPI_GROUP_STATICS
 (
NPU_GET_CMD_BASE
 + 1)

	)

681 
	gSTRU_GET_UPI_GROUP_STATICS_TAG


683 
u32
 
	g°m1Id
;

684 
u32
 
	gåunkid
;

685 
u32
 
	ggroupid
;

686 
STRU_UPI_STATICS
 
	g°ru_upi_°©ics
;

687 }
	tSTRU_GET_UPI_GROUP_STATICS
;

689 
	#NPU_GET_UPI_TRUNK_STATICS
 (
NPU_GET_CMD_BASE
 + 2)

	)

690 
	gSTRU_GET_UPI_TRUNK_STATICS_TAG


692 
u32
 
	g°m1Id
;

693 
u32
 
	gåunkid
;

694 
STRU_UPI_STATICS
 
	g°ru_upi_°©ics
;

696 }
	tSTRU_GET_UPI_TRUNK_STATICS
;

698 
	#NPU_GET_RXFR_STATICS
 (
NPU_GET_CMD_BASE
 + 3)

	)

699 
	gSTRU_GET_RXFR_STATICS_TAG


701 
u32
 
	gvÂ‹t
;

702 
STRU_RXFR_STATICS
 
	g°ru_rx‰_°©ics
;

704 }
	tSTRU_GET_RXFR_STATICS
;

706 
	#NPU_GET_TXFR_STATICS
 (
NPU_GET_CMD_BASE
 + 4)

	)

707 
	gSTRU_GET_TXFR_STATICS_TAG


709 
u32
 
	gvÂ‹t
;

710 
STRU_TXFR_STATICS
 
	g°ru_tx‰_°©ics
;

712 }
	tSTRU_GET_TXFR_STATICS
;

714 
	#NPU_GET_CPU_STATICS
 (
NPU_GET_CMD_BASE
 + 5)

	)

715 
	gSTRU_GET_CPU_STATICS_TAG


717 
STRU_CPU_STATICS
 
	g°ru_˝u_°©ics
;

718 }
	tSTRU_GET_CPU_STATICS
;

720 
	#NPU_GET_MEMORY_STATICS
 (
NPU_GET_CMD_BASE
 + 6)

	)

721 
	gSTRU_GET_MEMORY_STATICS_TAG


723 
STRU_MEMORY_STATICS
 
	g°ru_mem_°©ics
;

724 }
	tSTRU_GET_MEMORY_STATICS
;

726 
	#NPU_GET_NS_BSSGP_STATICS_STATICS
 (
NPU_GET_CMD_BASE
 + 7)

	)

727 
	gSTRU_GET_NS_BSSGP_STATICS_TAG


729 
u32
 
	gvÂ‹t
;

730 
STRU_NS_BSSGP_STATICS
 
	gns_bssgp_°©ics
;

731 }
	tSTRU_GET_NS_BSSGP_STATICS
;

734 
	#NPU_MON_GET_CAPTURE_FILE
 (
NPU_GET_CMD_BASE
 + 8)

	)

736 
	#NPU_GET_UPI_STM1_STATICS
 (
NPU_GET_CMD_BASE
 + 9)

	)

737 
	gSTRU_GET_UPI_STM1_STATICS_TAG


739 
u32
 
	g°m1id
;

740 
u32
 
	gª£rved
;

741 
STRU_UPI_STATICS
 
	g°ru_upi_°©ics
;

743 }
	tSTRU_GET_UPI_STM1_STATICS
;

747 
	gSTRU_STM1_E1T1_STATUS_TAG


749 
u8
 
	g°m1_°©us
;

750 
u8
 
	ge1t1_°©us
[
SPP_MAX_TRUNK_NUM
];

751 }
	tSTRU_STM1_E1T1_STATUS
;

753 
	#NPU_GET_STM1_E1T1_STATUS
 (
NPU_GET_CMD_BASE
 + 10)

	)

755 
	gSTRU_NPU_GET_STM1_E1T1_STATUS_TAG


757 
u32
 
	g°m1id
;

758 
STRU_STM1_E1T1_STATUS
 
	g°©us
;

760 }
	tSTRU_NPU_GET_STM1_E1T1_STATUS
;

764 
	#NPU_GET_UFE_SYS
 (
NPU_GET_CMD_BASE
 + 20)

	)

765 
	#NPU_GET_UFE_LINE
 (
NPU_GET_CMD_BASE
 + 21)

	)

766 
	#NPU_GET_UFE_PHY
 (
NPU_GET_CMD_BASE
 + 22)

	)

767 
	#NPU_GET_FLOW_STATICS
 (
NPU_GET_CMD_BASE
 + 23)

	)

768 
	#NPU_DISPLAY_CONFIG_INFO
 (
NPU_GET_CMD_BASE
 + 24)

	)

769 
	#NPU_GET_TRUNK_INFO
 (
NPU_GET_CMD_BASE
 + 25)

	)

770 
	#NPU_GET_DPORT_STATISTIC_INFO
 (
NPU_GET_CMD_BASE
 + 26)

	)

771 
	#NPU_GET_TABLE_ITEM
 (
NPU_GET_CMD_BASE
 + 27)

	)

773 
	#NPU_DEBUG_CHANNEL
 (
NPU_GET_CMD_BASE
 + 37)

	)

774 
	gSTRU_DEBUG_CHANNEL_TAG


776 
u32
 
	gvÂ‹t
;

777 
u32
 
	gDebugTy≥
;

778 }
	tSTRU_DEBUG_CHANNEL
;

780 
	gSTRU_GET_UFE_LINE_TAG


782 
u32
 
	gLöeödex
;

783 }
	tSTRU_GET_UFE_LINE
;

785 
	gSTRU_GET_UFE_TAG


787 
u32
 
	gP‹tNumbî
;

788 }
	tSTRU_GET_UFE
;

790 
	gSTRU_GET_TRUNKINFO_TAG


792 
u32
 
	gåunkID
;

793 }
	tSTRU_GET_TRUNKINFO
;

795 
	gSTRU_GET_DPORT_TAG


797 
u16
 
	gdp‹tID
;

798 }
	tSTRU_GET_DPORT_STATISTICS
;

800 
	#SPPMAXPARA
 10

	)

802 
	gSTRU_GET_TBLITEM_TAG


804 
u16
 
	gèbÀLoc
[
SPPMAXPARA
];

805 }
	tSTRU_GET_TABLE_ITEM
;

808 
	gUL_ROUTE
 = 0,

809 
	gUL_LINK
,

810 
	gDL_ROUTE
,

811 
	gDL_LINK
,

812 
	gBVCI


813 }
	tGET_TBL_ITEM
;

815 #¥agm®
∑ck
 ()

	@spp_wddi_common.h

1 #i‚de‡
__WDDI_COMMON_H


2 
	#__WDDI_COMMON_H


	)

3 
	~<löx.h
>

5 #i‚de‡
FULSE


6 
	#FULSE
 0

	)

9 #i‚de‡
TRUE


10 
	#TRUE
 1

	)

15 
	#SERVER_NAME
 "wddi_£rvî"

	)

16 
	#CLIENT_NAME
 "wddi_˛õ¡_"

	)

17 
	#DEBUG_NAME
 "wddi_debug_"

	)

18 
	#NPUMON_NAME
 "≈um⁄_"

	)

20 
	#NPU_RECEIVE_TIMEOUT
 1000

	)

21 
	#NPU_SERVER_TIMEOUT
 100

	)

22 
	#NPU_RECEIVE_IOCTL_TIMEOUT
 600

	)

23 
	#NPU_RECEIVE_IOCTL_RECONFIG_TIMEOUT
 3000

	)

26 #¥agm®
∑ck
 (4)

28 
	#NPU_SET_REQUEST_TYPE
 0

	)

29 
	#NPU_GET_REQUEST_TYPE
 1

	)

32 
	#LINX_SIG_BASE
 0x8400

	)

34 
	#NPU_ECHO_SIG
 (
LINX_SIG_BASE
 + 1)

	)

35 
	s°ru_≈u_echo_sig
 {

36 
LINX_SIGSELECT
 
	msig_no
;

39 
	#NPU_ACK_SIG
 (
LINX_SIG_BASE
 + 2)

	)

40 
	s°ru_≈u_ack_sig
 {

41 
LINX_SIGSELECT
 
	msig_no
;

42 
	mªsu…
;

45 
	#NPU_CFG_SIG
 (
LINX_SIG_BASE
 + 3)

	)

46 
	s°ru_≈u_cfg_sig
 {

47 
LINX_SIGSELECT
 
	msig_no
;

50 
	#SPP_SEND_SIG
 (
LINX_SIG_BASE
 + 4)

	)

51 
	s°ru_•p_£nd_sig
 {

52 
LINX_SIGSELECT
 
	msig_no
;

53 
u8
 
	mvp_ty≥
;

54 
u32
 
	mÀngth
;

55 
u32
 
	mùaddr_§c
;

56 
u32
 
	mùaddr_d°
;

57 
u32
 
	mp‹t_§c
;

58 
u32
 
	mp‹t_d°
;

59 
u8
 
	mpd©a
[1];

63 
	#SPP_RECEIVE_SIG
 (
LINX_SIG_BASE
 + 5)

	)

64 
	s°ru_•p_ª˚ive_sig
 {

65 
LINX_SIGSELECT
 
	msig_no
;

66 
u8
 
	mvp_ty≥
;

67 
u32
 
	mÀngth
;

68 
u32
 
	mp‹t
;

69 
u32
 
	mùaddr_d°
;

70 
u32
 
	mùaddr_§c
;

71 
u16
 
	mp‹t_§c
;

72 
u8
 
	mpd©a
[1];

77 
	#VPORT_PORT_OPEN_SIG
 (
LINX_SIG_BASE
 + 8)

	)

78 
	s°ru_vp‹t_›í_sig
 {

79 
LINX_SIGSELECT
 
	msig_no
;

80 
u8
 
	mvp_ty≥
;

81 
u32
 
	mùaddr_§c
;

82 
u32
 
	mp‹t_§c
;

85 
	#VPORT_PORT_CLOSE_SIG
 (
LINX_SIG_BASE
 + 9)

	)

86 
	s°ru_vp‹t_˛o£_sig
 {

87 
LINX_SIGSELECT
 
	msig_no
;

88 
u8
 
	mvp_ty≥
;

89 
u32
 
	mp‹t_§c
;

92 
	#ATTACH_SERVER_SIG
 (
LINX_SIG_BASE
 + 10)

	)

93 
	#ATTACH_CLIENT_SIG
 (
LINX_SIG_BASE
 + 11)

	)

96 
	#NPU_REQUEST_SIG
 (
LINX_SIG_BASE
 + 12)

	)

97 
	s°ru_≈u_ªque°_sig
 {

98 
LINX_SIGSELECT
 
	msig_no
;

99 
u32
 
	mcmd
;

100 
u32
 
	mcmdTy≥
;

101 
u8
 
	m∑rgv
[1];

103 
	#NPU_SET_REQUEST_ACK_SIG
 (
LINX_SIG_BASE
 + 13)

	)

104 
	s°ru_≈u_£t_ªque°_ack_sig
 {

105 
LINX_SIGSELECT
 
	msig_no
;

106 
	mªsu…
;

110 
	#NPU_GET_REQUEST_ACK_SIG
 (
LINX_SIG_BASE
 + 14)

	)

111 
	s°ru_≈u_gë_ªque°_ack_sig
 {

112 
LINX_SIGSELECT
 
	msig_no
;

113 
u32
 
	mcmd
;

114 
	mªsu…
;

115 
u8
 
	mpd©a
[1];

118 
	#ATTACH_NPUMON_SIG
 (
LINX_SIG_BASE
 + 15)

	)

120 
	gLINX_SIGNAL


122 
LINX_SIGSELECT
 
	gsig_no
;

123 
°ru_≈u_ack_sig
 
	g≈u_ack
;

124 
°ru_≈u_cfg_sig
 
	g≈u_cfg
;

125 
°ru_•p_£nd_sig
 
	g•p_£nd
;

126 
°ru_•p_ª˚ive_sig
 
	g•p_ª˚ive
;

128 
°ru_vp‹t_›í_sig
 
	gvp‹t_›í
;

129 
°ru_vp‹t_˛o£_sig
 
	gvp‹t_˛o£
;

130 
°ru_≈u_ªque°_sig
 
	g≈u_ªque°
;

131 
°ru_≈u_£t_ªque°_ack_sig
 
	g≈u_£t_ªque°_ack
;

132 
°ru_≈u_gë_ªque°_ack_sig
 
	g≈u_gë_ªque°_ack
;

135 #¥agm®
∑ck
 ()

140 
	#ERR_LINX_OPEN
 -1

	)

141 
	#ERR_LINX_CLOSE
 -2

	)

142 
	#ERR_LINX_HUNT
 -3

	)

143 
	#ERR_LINX_RCV_TMOUT
 -4

	)

144 
	#ERR_LINX_HUNT_TMOUT
 -5

	)

145 
	#ERR_LINX_GET_SENDER
 -6

	)

146 
	#ERR_LINX_FREE_SIG
 -7

	)

147 
	#ERR_LINX_FIND_SERVER
 -8

	)

148 
	#ERR_LINX_ALLOC
 -9

	)

149 
	#ERR_LINX_SEND
 -10

	)

150 
	#ERR_GET_LINX_INFO
 -11

	)

151 
	#ERR_GET_VPORT_INFO
 -12

	)

153 
	#ERR_LINX_RSV_FAIL
 -13

	)

154 
	#ERR_LINX_RSV_TMOUT
 -14

	)

156 
	#ERR_LINX_RSV_OVER_SIZE
 -15

	)

157 
	#ERR_UNKNOWN_ARG
 -16

	)

158 
	#ERR_LINX_DISCONNECTED
 -17

	)

164 
löx_öô
();

165 
≈_gë_¶Ÿs_£À˘i⁄
(
u32
 
ˇrd
,u32 
åunk
,u32 
group
);

	@spp_wddi_server.c

32 
	#_GNU_SOURCE


	)

34 
	~<°dio.h
>

35 
	~<î∫o.h
>

36 
	~<√töë/ö.h
>

37 
	~<¨∑/öë.h
>

38 
	~<löx.h
>

39 
	~<sys/time.h
>

40 
	~<time.h
>

42 
	~"•p_wddi_£rvî.h
"

43 
	~"•p_wddi_comm⁄.h
"

44 
	~<£¨ch.h
>

45 
	~"wddi_log.h
"

46 
	~"≈_comm⁄.h
"

48 
	~<¨∑/öë.h
>

50 
	#MAX_PORTS
 3600*2

	)

51 
	#MAX_FLOWS
 65535*2

	)

52 
	#MAX_ARPS
 400

	)

53 
	#MAX_BVCIS
 65535*2

	)

54 
	#MAX_TRUNKS
 336*2

	)

56 
	#LINX_CLIENT_PRINT
(
a
, 
b
, 
fmt
, 
¨g
...) do { \

57 *
˛õ¡Name
=
NULL
; \

58 if(0 =
	`löx_gë_«me
(
a
,
b
,&
˛õ¡Name
)) \

60 
pid_t
 
˛õ¡Pid
 = 0; \

61 
˛õ¡Aµ«me
[100]; \

62 if(
	`ssˇnf
(
˛õ¡Name
,"%*[a-zA-Z_]%d",&
˛õ¡Pid
) == 0) \

64 
	`WDDI_WARNING
("˛õ¡: %†˛õ¡ =0x%x",
˛õ¡Name
,
b
); \

68 if(-1 =
	`gëAµ«meByPID
(
˛õ¡Aµ«me
,
˛õ¡Pid
)) \

70 
	`WDDI_WARNING
("gëAµ«meByPID faûed ,˛õ¡Pid = %d",
˛õ¡Pid
); \

72 
	`WDDI_WARNING
("˛õ¡: %†˛õ¡ =0x%x clõ¡Aµ«mê%s",
˛õ¡Name
,
b
,
˛õ¡Aµ«me
); \

74 
	`WDDI_WARNING
(
fmt
,##
¨g
); \

75 
	`löx_‰ì_«me
(
a
,&
˛õ¡Name
); \

78 

	)

79 
FILE
 *
	gdebug_log_fûe
 = 
NULL
;

80 
	sdl_ruÀ_node


82 
STRU_SET_DOWNLINK_PATH_RULE
 
	mruÀ
;

83 
dl_ruÀ_node
 * 
	m√xt
;

86 
dl_ruÀ_node
 * 
	gdl_ruÀ_li°
 = 
NULL
;

87 
	gdl_ruÀ_node_cou¡
 = 0;

89 
	gp‹t_±r
[
MAX_PORTS
];

90 
u16
 
	gg_Vp‹t_no
;

92 
STRU_LINX_SERVER_INFO
 
	gg_LöxSevîInfo
={
NULL
,
UNUSED
};

93 
STRU_LINX_SERVER_INFO
 
	gg_LöxSevîRxFπhªadInfo
={
NULL
,
UNUSED
};

94 
STRU_LINX_SERVER_INFO
 
	gg_LöxSevîRxEththªadInfo
={
NULL
,
UNUSED
};

96 
STRU_SET_INITAIL_CONFIG
 
	gg_≈öôül
 = {0};

97 
STRU_SET_INITAIL_CONFIG
 
	gg_≈_ªc⁄fig
 = {0};

98 
WP_U32
 
ƒi_bô_Àngth
;

100 
h£¨ch_d©a
 *
	ght
;

101 
h£¨ch_d©a
 *
	gu∂ök_ht
;

102 
h£¨ch_d©a
 *
	gdow∆ök_ht
;

103 
h£¨ch_d©a
 *
	g¨p_ht
;

104 
h£¨ch_d©a
 *
	gupd©e_bvci_ht
;

105 
h£¨ch_d©a
 *
	gåunk_ht
;

106 
h£¨ch_d©a
 *
	g‰_ul_lök_èbÀ_ht
;

107 
h£¨ch_d©a
 *
	g‰_dl_lök_èbÀ_ht
;

108 
h£¨ch_d©a
 *
	g≥î_vp‹t_ht
;

111 
NODE
* 
	gvp‹t_nodehód
=
NULL
;

112 
NODE
* 
	gu∂ök_nodehód
=
NULL
;

113 
NODE
* 
	gdow∆ök_nodehód
=
NULL
;

114 
NODE
* 
	g¨p_nodehód
=
NULL
;

115 
NODE
* 
	gupd©e_bvci_nodehód
=
NULL
;

116 
NODE
* 
	gåunk_nodehód
=
NULL
;

117 
NODE
* 
	g‰_ul_lök_èbÀ_nodehód
=
NULL
;

118 
NODE
* 
	g‰_dl_lök_èbÀ_nodehód
=
NULL
;

120 
NODE
* 
	g‰_dl_bvci_nodehód
[
MAX_FLOWS
]={
NULL
};

121 
NODE
* 
	g‰_dl_dp‹t_nodehód
[
MAX_FLOWS
]={
NULL
};

122 
u32
 
≈u_£t_öôül_cfg_öfo
(*
fûíame
, 
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
);

123 
xmlFûeLoˇti⁄
[100];

124 
≈_waôtime
;

125 
	gg_logLevñ
 =2;

127 
WP_h™dÀ
 
iw_sys_bridgög
;

128 
	gtŸÆ_cou¡
 = 0;

129 
	$add_dl_ruÀ_™d_buûd
()

131 
WP_S32
 
°©us
;

132 
Êag
 = 0;

133 
ªt
;

134 
dl_ruÀ_node
 * 
p
;

135 
dl_ruÀ_node
 * 
ãmp
;

136 
cou¡
 = 0;

137 
p
 = 
dl_ruÀ_li°
;

138 
p
 !
NULL
)

140 
cou¡
++;

141 
ªt
 = 
	`≈_dl_rouã_èbÀ_add
(&(
p
->
ruÀ
));

142 i‡(
ªt
 > 0)

145 
Êag
 = 1;

147 
tŸÆ_cou¡
++;

148 
ãmp
 = 
p
;

149 
p
 =Ö->
√xt
;

150 
	`‰ì
(
ãmp
);

153 
	`WDDI_WARNING
("add dow∆ökÑuÀánd buûd cou¡, cou¡ %d, dl_ruÀ_node_cou¡ %d,ÅŸÆ =%d\n", 
cou¡
, 
dl_ruÀ_node_cou¡
, 
tŸÆ_cou¡
);

155 
dl_ruÀ_node_cou¡
 = 0;

156 
dl_ruÀ_li°
 = 
NULL
;

159 i‡(
Êag
)

161 
°©us
 = 
	`WP_IwSy°emBuûd
(
iw_sys_bridgög
);

162 
	`ãrmö©e_⁄_îr‹
(
°©us
, "WP_IwSystemBuild - downÜinkÑule");

165 
	}
}

167 
time_t
 
	gsysInôTime
, 
	gsysRólTime
;

170 
	$löx_öô
()

172 
LINX
 *
löx
;

175 
löx
 = 
	`löx_›í
(
SERVER_NAME
, 0, 
NULL
);

176 i‡(
löx
 =
NULL
)

178 
	`WDDI_ERR
("löx_›í(Ë%s", 
	`°ªº‹
(
î∫o
));

181 
	`≈u_£t_£rvî_löx_öfo
(
löx
);

183 
	`WDDI_INFO
("SPP WDDI Server started.\n");

185 
sysInôTime
 = 
	`time
(
NULL
);

186  
	`löx_gë_des¸ùt‹
(
löx
);

187 
	}
}

189 
	$≈u_h™dÀ_löx_msg
()

191 
LINX_SIGSELECT
 
sig£l_™y
[] = { 0 };

192 
LINX_SPID
 
˛õ¡
 = (LINX_SPID)
NULL
;

193 
LINX_SIGNAL
 *
sig
;

194 
LINX_SIGNAL
 *
ª∂y_sig
;

195 
STRU_LINX_SERVER_INFO
 * 
löx_öfo
;

196 
°©us
;

197 
ªt
;

198 
löx_öfo
 = 
	`≈u_gë_£rvî_löx_öfo
();

199 
rsvnum
 = 50;

200 
rsvnum
--)

203 i‡(
	`löx_ª˚ive_w_tmo
(
löx_öfo
->
löx
, &
sig
, 0,

204 
sig£l_™y
) == -1)

206 
	`WDDI_WARNING
("löx_ª˚ive(Ë%s\n", 
	`°ªº‹
(
î∫o
));

209 if(
sig
 =
LINX_NIL
)

213 i‡(
	`löx_˛o£
(
löx_öfo
->
löx
) == -1)

215 
	`WDDI_WARNING
("löx_˛o£(Ë%s", 
	`°ªº‹
(
î∫o
));

222 
˛õ¡
 = 
	`löx_£ndî
(
löx_öfo
->
löx
, &
sig
);

223 i‡(
˛õ¡
 =
LINX_ILLEGAL_SPID
)

225 
	`WDDI_WARNING
("löx_£ndî(Ë%s\n", 
	`°ªº‹
(
î∫o
));

227 if(
g_≈öôülFœg
 =
NPU_UNINITALIZED
)

229 i‡(
	`löx_‰ì_buf
(
löx_öfo
->
löx
, &
sig
) == -1)

231 
	`WDDI_WARNING
("löx_‰ì_buf(Ë%s\n", 
	`°ªº‹
(
î∫o
));

235 
sig
->
sig_no
)

237 
NPU_ECHO_SIG
:

239 
	`WDDI_PRINT
("Server: NPU_ECHO_SIGÑeceived.\n");

240 if(
	`löx_£nd
(
löx_öfo
->
löx
, &
sig
, 
˛õ¡
) == -1)

242 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x\n", 
	`°ªº‹
(
î∫o
),client);

247 
LINX_OSATTREF
 
©t_ªf_˛õ¡
;

248 
sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
LINX_SIGNAL
), 
ATTACH_CLIENT_SIG
);

249 
©t_ªf_˛õ¡
 = 
	`löx_©èch
(
löx_öfo
->
löx
,&
sig
,
˛õ¡
);

250 if(
©t_ªf_˛õ¡
 =
LINX_ILLEGAL_ATTREF
)

252 
	`WDDI_WARNING
("≈u_h™dÀ_löx_msg::NPU_ECHO_SIG::löx_©èch(ËÁûed %s\n",
	`°ªº‹
(
î∫o
));

256 *
˛õ¡Name
=
NULL
;

257 if(0 =
	`löx_gë_«me
(
löx_öfo
->
löx
,
˛õ¡
,&
˛õ¡Name
))

260 
pid_t
 
˛õ¡Pid
 = 0;

261 
˛õ¡Aµ«me
[100];

262 if(
	`ssˇnf
(
˛õ¡Name
,"%*[a-zA-Z_]%d",&
˛õ¡Pid
) == 0)

264 
	`WDDI_WARNING
("˛õ¡: %†˛õ¡ =0x%x c⁄√˘edÅÿ£rvî \n",
˛õ¡Name
,
˛õ¡
);

268 if(-1 =
	`gëAµ«meByPID
(
˛õ¡Aµ«me
,
˛õ¡Pid
))

270 
	`WDDI_WARNING
("gëAµ«meByPID faûed ,˛õ¡Pid = %d \n",
˛õ¡Pid
);

272 
	`WDDI_WARNING
("˛õ¡: %†˛õ¡ =0x%x c⁄√˘edÅÿ£rvî clõ¡Aµ«mê%s\n",
˛õ¡Name
,
˛õ¡
,
˛õ¡Aµ«me
);

274 
	`löx_‰ì_«me
(
löx_öfo
->
löx
,&
˛õ¡Name
);

278 
NPU_CFG_SIG
:

280 if(
	`löx_‰ì_buf
(
löx_öfo
->
löx
,&
sig
) == -1)

282 
	`WDDI_WARNING
("löx_‰ì_buf(Ë%s\n", 
	`°ªº‹
(
î∫o
));

284 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
,(
°ru_≈u_ack_sig
),
NPU_ACK_SIG
);

285 if–
ª∂y_sig
=
NULL
)

287 
	`WDDI_WARNING
("löx_Æloc(Ë%s\n", 
	`°ªº‹
(
î∫o
));

293 
ª∂y_sig
->
≈u_ack
.
ªsu…
 = 
STATUS_OK
;

294 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

296 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x\n", 
	`°ªº‹
(
î∫o
),client);

300 
VPORT_PORT_OPEN_SIG
:

302 
u32
 
ùaddr_§c
,
p‹t_§c
;

303 
u8
 
vp_ty≥
;

304 
vp_ty≥
 = 
sig
->
vp‹t_›í
.vp_type;

305 
ùaddr_§c
 = 
sig
->
vp‹t_›í
.ipaddr_src;

306 
p‹t_§c
 = 
sig
->
vp‹t_›í
.port_src;

308 
°©us
 = 
	`≈u_£t_vp‹t_öfo
(
˛õ¡
,
vp_ty≥
,
ùaddr_§c
,
p‹t_§c
);

309 if(
°©us
 !
STATUS_OK
)

311 
	`WDDI_WARNING
("npu_set_vport_info() status fail\n");

314 if(
vp_ty≥
 =
VP_TYPE_FR
)

316 
u32
 
ˇrd
;

317 
u32
 
åunk
;

318 
u32
 
group
;

319 
u32
 
dlci
;

320 
	`≈_‰addr_u≈ack
(
p‹t_§c
,&
ˇrd
,&
åunk
,&
group
,&
dlci
);

321 
	`WDDI_INFO
("Info: VPORT_PORT_OPEN_SIGÑe˚ived. vp_ty≥:%s,Ö‹t_§c:0x%x, c¨d:åunk:group:dlcò:: S%dP%dFR%dD%d\n","VP_TYPE_FR",
p‹t_§c
,
ˇrd
,
åunk
,
group
,
dlci
);

325 
	`WDDI_INFO
("Info: VPORT_PORT_OPEN_SIGÑe˚ived. vp_ty≥:%s, i∑ddr_§c:0x%x,Ö‹t_§c:%d\n","VP_TYPE_UDP",
ùaddr_§c
,
	`ht⁄s
(
p‹t_§c
));

332 if(
	`löx_‰ì_buf
(
löx_öfo
->
löx
,&
sig
) == -1)

334 
	`WDDI_WARNING
("löx_‰ì_buf(Ë%s\n", 
	`°ªº‹
(
î∫o
));

336 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
,(
°ru_≈u_ack_sig
),
NPU_ACK_SIG
);

337 if–
ª∂y_sig
=
NULL
)

339 
	`WDDI_WARNING
("löx_Æloc(Ë%s\n", 
	`°ªº‹
(
î∫o
));

341 if(
vp_ty≥
 =
VP_TYPE_UDP
)

345 if(
vp_ty≥
 =
VP_TYPE_FR
)

347 
°©us
 = 
	`≈_¸ót_‰_vp‹t
(
p‹t_§c
);

351 
	`WDDI_INFO
("Info: cª©êvp‹àwôh invÆid vp_ty≥: %d \n",
vp_ty≥
);

354 
STRU_VPORT_INFO
 * 
p_Vp‹tInfo

	`≈u_gë_vp‹t_öfo
(
p‹t_§c
);

355 if((
STATUS_OK
 !
°©us
)&&(
vp_ty≥
 =
VP_TYPE_FR
))

357 
p_Vp‹tInfo
->
U£dFœg
 = 
UNUSED
;

361 
p_Vp‹tInfo
->
U£dFœg
 = 
USED
;

368 
ª∂y_sig
->
≈u_ack
.
ªsu…
 = 
°©us
;

369 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

371 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x\n", 
	`°ªº‹
(
î∫o
),client);

375 
VPORT_PORT_CLOSE_SIG
:

377 
u32
 
p‹t_§c
;

378 
u8
 
vp_ty≥
;

379 
p‹t_§c
 = 
sig
->
vp‹t_˛o£
.port_src;

380 
vp_ty≥
 = 
sig
->
vp‹t_˛o£
.vp_type;

384 
	`WDDI_INFO
("Info: VPORT_PORT_CLOSE_SIGÑe˚ived.Ö‹t_§c:0x%x, vp_ty≥:%d\n",
p‹t_§c
, 
vp_ty≥
);

385 if(
vp_ty≥
 =
VP_TYPE_FR
)

387 
ªt
 = 
	`≈_˛o£_‰_vp‹t
(
p‹t_§c
);

392 
ªt
 = 
STATUS_OK
;

395 
°©us
 = 
	`≈u_˛ór_vp‹t_öfo
(
p‹t_§c
,
vp_ty≥
);

396 if(
°©us
 !
STATUS_OK
)

398 
	`WDDI_WARNING
("Warn:Çpu_clear_vport_info() statusÉrror\n");

401 if(
	`löx_‰ì_buf
(
löx_öfo
->
löx
,&
sig
) == -1)

403 
	`WDDI_WARNING
("löx_‰ì_buf(Ë%s\n", 
	`°ªº‹
(
î∫o
));

405 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
,(
°ru_≈u_ack_sig
),
NPU_ACK_SIG
);

406 if–
ª∂y_sig
=
NULL
)

408 
	`WDDI_WARNING
("löx_Æloc(Ë%s\n", 
	`°ªº‹
(
î∫o
));

413 
ª∂y_sig
->
≈u_ack
.
ªsu…
 = 
°©us
;

414 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

416 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x\n", 
	`°ªº‹
(
î∫o
),client);

421 
SPP_SEND_SIG
:

423 
u8
 
vp_ty≥
;

424 
u32
 
Àngth
;

425 
u8
 *
pd©a
;

426 
u32
 
p‹t_§c
;

427 
u32
 
p‹t_d°
;

428 
u32
 
ùaddr_d°
;

429 
u32
 
ùaddr_§c
;

430 
u32
 
i
;

431 
vp_ty≥
 = 
sig
->
•p_£nd
.vp_type;

432 
Àngth
 = 
sig
->
•p_£nd
.length;

433 
p‹t_§c
 = 
sig
->
•p_£nd
.port_src;

434 
p‹t_d°
 = 
sig
->
•p_£nd
.port_dst;

435 
ùaddr_d°
 = 
sig
->
•p_£nd
.ipaddr_dst;

436 
ùaddr_§c
 = 
sig
->
•p_£nd
.ipaddr_src;

437 
pd©a
 = 
sig
->
•p_£nd
.pdata;

438 if(
vp_ty≥
 =
VP_TYPE_FR
)

440 
u32
 
ˇrd
;

441 
u32
 
åunk
;

442 
u32
 
group
;

443 
u32
 
dlci
;

444 
	`≈_‰addr_u≈ack
(
p‹t_§c
,&
ˇrd
,&
åunk
,&
group
,&
dlci
);

445 
	`WDDI_INFO
("Info: SPP_SEND_SIGÑe˚ived. vp_ty≥:%s,Üígth:0x%x,Ö‹t_§c:%d ::S%dP%dFR%dD%d\n","VP_TYPE_FR",
Àngth
,(
p‹t_§c
),
ˇrd
,
åunk
,
group
,
dlci
);

450 
	`WDDI_INFO
("Info: SPP_SEND_SIGÑe˚ived. vp_ty≥:%s,Üígth:0x%x,Ö‹t_§c:%dÖ‹t_d°:%d, i∑ddr_§c:0x%x, i∑ddr_d°:0x%x\n","VP_TYPE_UDP",
Àngth
,
	`ht⁄s
(
p‹t_§c
),ht⁄s(
p‹t_d°
),
ùaddr_§c
,
ùaddr_d°
);

456 
u32
 
k
;

457 
k
 = 0; k < 
Àngth
; k++)

459 
	`F¥ötf
("%2.2x ", 
pd©a
[
k
]);

461 
	`F¥ötf
("\n");

464 if(
≈_waôtime
 =
NPU_WAIT_FINISHED
)

466 if(
vp_ty≥
 =
VP_TYPE_UDP
)

468 
STRU_VPORT_INFO
 * 
Vp‹tInfo
;

469 
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
p‹t_§c
);

470 if(
Vp‹tInfo
 !
NULL
)

472 if(
Vp‹tInfo
->
U£dFœg
 =
USED
)

474 #i‡
ENEA_RELEASE


475 if(
Vp‹tInfo
->
˛õ¡
 != client)

477 *
˛õ¡Name
=
NULL
;

478 if(0 =
	`löx_gë_«me
(
löx_öfo
->
löx
,
˛õ¡
,&
˛õ¡Name
))

480 
	`WDDI_WARNING
("£nd UDP SPP_SEND_SIG clõ¡ ha†bì¿ch™ged! clõ¡: %†˛õ¡ =0x%x old clõ¡=0x%x \n",
˛õ¡Name
,
˛õ¡
,
Vp‹tInfo
->client);

481 
	`löx_‰ì_«me
(
löx_öfo
->
löx
,&
˛õ¡Name
);

485 
Vp‹tInfo
->
˛õ¡
 = client;

488 if(
p‹t_§c
 =0 || 
p‹t_d°
 =0 ||Ö‹t_§¯> 65535 ||Ö‹t_d° > 65535 || 
ùaddr_d°
 =0 || 
ùaddr_§c
 =0 || 
Àngth
 > 1490)

490 
	`WDDI_WARNING
("UDPÖacket is dropped for invalidÖarameters!Çpu_handle_linx_msg::SPP_SEND_SIG::length:%d,port_src =0x%x,port_dst=0x%x,ipaddr_dst=0x%x,ipaddr_src=0x%x,pdata=0x%x\n",

491 
Àngth
,
p‹t_§c
,
p‹t_d°
,
ùaddr_d°
,
ùaddr_§c
,
pd©a
);

492 i‡(
Àngth
 > 1490)

494 
	`WDDI_WARNING
("UDP dr›≥d invÆidÜígth:%d,p‹t_§¯=0x%x,p‹t_d°=0x%x,ùaddr_d°=0x%x,ùaddr_§c=0x%x, \n", 
Àngth
,
p‹t_§c
,
p‹t_d°
,
ùaddr_d°
,
ùaddr_§c
);

495 
i
 = 0; i < 100; i++)

497 
	`WDDI_WARNING
("%02x", 
pd©a
[
i
]);

498 i‡((
i
+1) % 4 == 0)

500 
	`WDDI_WARNING
(" ");

503 
	`WDDI_WARNING
("\n");

508 
	`≈u_£nd_udp_∑ckë
(
pd©a
,
Àngth
,
ùaddr_§c
,
ùaddr_d°
,
p‹t_§c
,
p‹t_d°
);

510 
	`≈_ho°_£t_ns_bssgp_°©ics
(
pd©a
,
Àngth
,&
Vp‹tInfo
->
ns_bssgp_°©ics
);

516 
	`WDDI_WARNING
("W¨n: SPP_SEND_SIG::VP_TYPE_UDP, vp‹t:%d unu£d!\n",(
u16
)
	`ht⁄s
(
p‹t_§c
));

521 if(
vp_ty≥
 =
VP_TYPE_FR
)

524 
STRU_VPORT_INFO
 * 
Vp‹tInfo
;

525 
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
p‹t_§c
);

526 if(
Vp‹tInfo
 !
NULL
)

528 if(
Vp‹tInfo
->
U£dFœg
 =
USED
)

530 #i‡
ENEA_RELEASE


531 if(
Vp‹tInfo
->
˛õ¡
 != client)

533 *
˛õ¡Name
=
NULL
;

534 if(0 =
	`löx_gë_«me
(
löx_öfo
->
löx
,
˛õ¡
,&
˛õ¡Name
))

536 
	`WDDI_WARNING
("£nd FR SPP_SEND_SIG clõ¡ ha†bì¿ch™ged! clõ¡: %†˛õ¡ =0x%x old clõ¡=0x%x \n",
˛õ¡Name
,
˛õ¡
,
Vp‹tInfo
->client);

537 
	`löx_‰ì_«me
(
löx_öfo
->
löx
,&
˛õ¡Name
);

541 
Vp‹tInfo
->
˛õ¡
 = client;

543 
	`WDDI_INFO
("Info: SPP_SEND_SIG::VP_TYPE_FR->≈u_£nd_‰_∑ckë,Ö‹t_§c:%d\n",(
u16
)(
p‹t_§c
));

544 
	`≈u_£nd_‰_∑ckë
(
pd©a
,
Àngth
,
Vp‹tInfo
->
p‹t_§c
);

546 
	`≈_ho°_£t_ns_bssgp_°©ics
(
pd©a
,
Àngth
,&
Vp‹tInfo
->
ns_bssgp_°©ics
);

551 
u32
 
ˇrd
;

552 
u32
 
åunk
;

553 
u32
 
group
;

554 
u32
 
dlci
;

555 
	`≈_‰addr_u≈ack
(
p‹t_§c
,&
ˇrd
,&
åunk
,&
group
,&
dlci
);

556 
	`WDDI_WARNING
("W¨n: SPP_SEND_SIG::VP_TYPE_FR, vp‹t:%d:S%dP%dFR%dD%d unu£d!\n",(
u16
)(
p‹t_§c
),
ˇrd
,
åunk
,
group
,
dlci
);

563 
	`WDDI_WARNING
("W¨n: SPP_SEND_SIG, vp_ty≥:%d invÆid!\n",
vp_ty≥
);

568 if(
	`löx_‰ì_buf
(
löx_öfo
->
löx
,&
sig
) == -1)

570 
	`WDDI_WARNING
("löx_‰ì_buf(Ë%s", 
	`°ªº‹
(
î∫o
));

574 
NPU_REQUEST_SIG
:

576 if(
NPU_SET_REQUEST_TYPE
 =
sig
->
≈u_ªque°
.
cmdTy≥
)

578 
sig
->
≈u_ªque°
.
cmd
)

580 
NPU_SET_RECONFIG
:

582 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

583 
STRU_SET_INITAIL_CONFIG
 *
≈_ªc⁄fig
 = 
	`≈u_gë_≈_ªc⁄fig
();

584 
	`mem£t
(
≈_ªc⁄fig
,0,(
STRU_SET_INITAIL_CONFIG
));

585 
	`≈u_£t_öôül_cfg_öfo
(
xmlFûeLoˇti⁄
,
≈_ªc⁄fig
);

586 
	`mem˝y
(
g_≈_ªc⁄fig
.
ifMAC§c
,
g_≈öôül
.ifMACsrc,6);

589 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_£t_ªque°_ack_sig
), 
NPU_SET_REQUEST_ACK_SIG
);

590 i‡(
ª∂y_sig
 =
NULL
)

592 
	`WDDI_WARNING
("linx_alloc() failed\n");

593  
ERR_LINX_ALLOC
;

595 if(
NPU_MODE_FR
 =
≈_ªc⁄fig
->
O±î©eMode
)

597 
	`WDDI_WARNING
("Warn: NPU_REQUEST_SIG::NPU_SET_RECONFIG,Ñeconfig mode is FR!\n");

600 
ªt
 = 
	`WTUFE_Rec⁄fig_Stm1_AŒ
(
öôül_cfg
,
≈_ªc⁄fig
);

604 
	`WDDI_WARNING
("Warn: NPU_REQUEST_SIG::NPU_SET_RECONFIG,Ñeconfig mode is IP!\n");

606 
u32
 
i
;

607 
u32
 
rouãFœg
 = 0;

608 
i
 = 0;i< 
SPP_MAX_ROUTE_NUM
;i++)

610 if(
öôül_cfg
->
rouãInfo
[
i
].
G©ewayIP
 !
≈_ªc⁄fig
->routeInfo[i].GatewayIP)

612 
rouãFœg
 =1 ;

614 if(
öôül_cfg
->
rouãInfo
[
i
].
IpD°
 !
≈_ªc⁄fig
->routeInfo[i].IpDst)

616 
rouãFœg
 =1 ;

619 if(
öôül_cfg
->
VœnTag
 !
≈_ªc⁄fig
->VœnTag || 
rouãFœg
 || inôül_cfg->
ifI∑ddr
 !=Çp_reconfig->ifIpaddr)

621 
	`≈_ªc⁄fig_vœn_ö_rouãSy°em
();

622 
	`≈_ªc⁄fig_vœn_ö_iwP‹t
();

623 
	`èp_öãrÁ˚_ªc⁄fig
();

624 
ªt
 = 0;

629 
ªt
 = 0;

630 
	`WDDI_WARNING
("Warn: NPU_REQUEST_SIG::NPU_SET_RECONFIG, ReconfigÖarametersáreÅhe same!!");

634 
	`mem˝y
(
öôül_cfg
, 
≈_ªc⁄fig
,(
STRU_SET_INITAIL_CONFIG
));

636 if(
g_≈öôül
.
NRI_bôLí
 >0 && g_npinitial.NRI_bitLen<= 8)

638 
ƒi_bô_Àngth
 = 
g_≈öôül
.
NRI_bôLí
;

641 
	`WP_LookupUpd©e
();

645 
ª∂y_sig
->
≈u_£t_ªque°_ack
.
ªsu…
 = 
ªt
;

646 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

648 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

649  
ERR_LINX_SEND
;

654 
NPU_SET_UPLINK_PATH_RULE
:

656 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_£t_ªque°_ack_sig
), 
NPU_SET_REQUEST_ACK_SIG
);

657 i‡(
ª∂y_sig
 =
NULL
)

659 
	`WDDI_WARNING
("linx_alloc() failed\n");

660  
ERR_LINX_ALLOC
;

662 
STRU_SET_UPLINK_PATH_RULE
 
ul_ruÀ
={0};

663 
	`mem˝y
(&
ul_ruÀ
,
sig
->
≈u_ªque°
.
∑rgv
,(
STRU_SET_UPLINK_PATH_RULE
));

664 
	`WDDI_INFO
("öfo: NPU_REQUEST_SIG::NPU_SET_UPLINK_PATH_RULE, o±Mode:%d, NRIVÆue:%d, P‹tSrc:%d, vÂ‹t:%d\n", 
ul_ruÀ
.
O±Mode
, ul_ruÀ.
NRIVÆue
, ul_ruÀ.
P‹tSrc
, ul_ruÀ.
u_p‹t
.
vÂ‹t
);

665 
ªt
 = 
	`≈_ul_rouã_èbÀ_add
(&
ul_ruÀ
);

666 
ª∂y_sig
->
≈u_£t_ªque°_ack
.
ªsu…
 = 
ªt
 ;

667 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

669 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

670  
ERR_LINX_SEND
;

674 
NPU_DELETE_UPLINK_PATH_RULE
:

676 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_£t_ªque°_ack_sig
), 
NPU_SET_REQUEST_ACK_SIG
);

677 i‡(
ª∂y_sig
 =
NULL
)

679 
	`WDDI_WARNING
("linx_alloc() failed\n");

680  
ERR_LINX_ALLOC
;

682 
STRU_DELETE_UPLINK_PATH_RULE
 
ul_ruÀ
={0};

683 
	`mem˝y
(&
ul_ruÀ
,
sig
->
≈u_ªque°
.
∑rgv
,(
STRU_DELETE_UPLINK_PATH_RULE
));

684 
	`WDDI_INFO
("öfo: NPU_REQUEST_SIG::NPU_DELETE_UPLINK_PATH_RULE, DñëeMode:%d, NRIVÆue:%d, vÂ‹t:%d\n", 
ul_ruÀ
.
DñëeMode
, ul_ruÀ.
NRIVÆue
, ul_ruÀ.
u_p‹t
.
vÂ‹t
);

685 if(
ul_ruÀ
.
DñëeMode
 =
DEL_UL_RULE_TALBE_BASED_ON_PORT_NRI
)

687 
ªt
 = 
	`≈_ul_rouã_èbÀ_dñëe
(
ul_ruÀ
.
u_p‹t
.
vÂ‹t
,ul_ruÀ.
NRIVÆue
);

689 if(
ul_ruÀ
.
DñëeMode
 =
DEL_UL_RULE_TALBE_BASED_ON_PORT
)

691 
u32
 
ƒi
;

693 
ƒi
 = 0;nri < 257 ;nri++)

695 ()
	`≈_ul_rouã_èbÀ_dñëe
(
ul_ruÀ
.
u_p‹t
.
vÂ‹t
,
ƒi
);

696 
ªt
 = 
STATUS_OK
;

701 
	`WDDI_WARNING
("W¨n: NPU_DELETE_UPLINK_PATH_RULE DñëeModêERROR %d",
ul_ruÀ
.
DñëeMode
);

702 
ªt
 = 
NPU_DELETE_FR_UPLINK_PATH_RULE_ERROR
;

705 
ª∂y_sig
->
≈u_£t_ªque°_ack
.
ªsu…
 = 
ªt
 ;

706 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

708 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

709  
ERR_LINX_SEND
;

714 
NPU_SET_UPLINK_PATH_LINK_TABLE
:

716 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_£t_ªque°_ack_sig
), 
NPU_SET_REQUEST_ACK_SIG
);

717 i‡(
ª∂y_sig
 =
NULL
)

719 
	`WDDI_WARNING
("linx_alloc() failed\n");

720  
ERR_LINX_ALLOC
;

722 
STRU_SET_UPLINK_PATH_LINK_TABLE
 
ul_lök_èbÀ
={0};

723 
	`mem˝y
(&
ul_lök_èbÀ
,
sig
->
≈u_ªque°
.
∑rgv
,(
STRU_SET_UPLINK_PATH_LINK_TABLE
));

724 
	`WDDI_INFO
("öfo: NPU_REQUEST_SIG::NPU_SET_UPLINK_PATH_LINK_TABLE, P‹tSrc:0x%x, IpEpAcôveNum:%d\n", 
ul_lök_èbÀ
.
P‹tSrc
, ul_lök_èbÀ.
IpEpAcôveNum
);

725 if(
ul_lök_èbÀ
.
IpEpAcôveNum
 > 64)

727 
	`WDDI_WARNING
("NPU_SET_UPLINK_PATH_LINK_TABLE IpEpAcôveNum %d invÆid \n",
ul_lök_èbÀ
.
IpEpAcôveNum
);

728 
ª∂y_sig
->
≈u_£t_ªque°_ack
.
ªsu…
 = -1 ;

732 
ªt
 = 
	`≈_ul_lök_èbÀ_£t
(&
ul_lök_èbÀ
);

733 
ª∂y_sig
->
≈u_£t_ªque°_ack
.
ªsu…
 = 
ªt
 ;

735 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

737 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

738  
ERR_LINX_SEND
;

742 
NPU_SET_DOWNLINK_PATH_RULE
:

744 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_£t_ªque°_ack_sig
), 
NPU_SET_REQUEST_ACK_SIG
);

745 i‡(
ª∂y_sig
 =
NULL
)

747 
	`WDDI_WARNING
("linx_alloc() failed\n");

748  
ERR_LINX_ALLOC
;

752 
dl_ruÀ_node
 * 
node_p
 = (dl_ruÀ_nodê*)
	`mÆloc
((dl_rule_node));

753 
	`mem˝y
(&(
node_p
->
ruÀ
), 
sig
->
≈u_ªque°
.
∑rgv
, (
STRU_SET_DOWNLINK_PATH_RULE
));

754 
node_p
->
√xt
 = 
dl_ruÀ_li°
;

755 
dl_ruÀ_li°
 = 
node_p
;

756 
dl_ruÀ_node_cou¡
++;

757 
	`WDDI_INFO
("öfo: NPU_REQUEST_SIG::NPU_SET_DOWNLINK_PATH_RULE, Dp‹tSèπVÆue:%d, O±Mode:%d, BVCI:%d, BVCI√w:%d, NSEI|p‹tSrc:%d\n", 
node_p
->
ruÀ
.
Dp‹tSèπVÆue
,Çode_p->ruÀ.
O±Mode
,Çode_p->ruÀ.
BVCI
,Çode_p->ruÀ.
BVCI√w
,Çode_p->ruÀ.
n£i_p‹tSrc
.
NSEI
);

759 
ª∂y_sig
->
≈u_£t_ªque°_ack
.
ªsu…
 = 0;

760 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

762 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

763  
ERR_LINX_SEND
;

768 
NPU_DELETE_DOWNLINK_PATH_RULE
:

770 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_£t_ªque°_ack_sig
), 
NPU_SET_REQUEST_ACK_SIG
);

771 i‡(
ª∂y_sig
 =
NULL
)

773 
	`WDDI_WARNING
("linx_alloc() failed\n");

774  
ERR_LINX_ALLOC
;

776 
STRU_DELETE_DOWNLINK_PATH_RULE
 
dl_ruÀ
={0};

777 
	`mem˝y
(&
dl_ruÀ
,
sig
->
≈u_ªque°
.
∑rgv
,(
STRU_DELETE_DOWNLINK_PATH_RULE
));

778 
	`WDDI_INFO
("öfo: NPU_REQUEST_SIG::NPU_DELETE_DOWNLINK_PATH_RULE, Dp‹tSèπVÆue:%d, BVCI:%d, O±Mode:%d\n", 
dl_ruÀ
.
Dp‹tSèπVÆue
, dl_ruÀ.
BVCI
, dl_ruÀ.
O±Mode
);

779 
ªt
 = 
	`≈_dl_rouã_èbÀ_dñëe
(
dl_ruÀ
.
Dp‹tSèπVÆue
,dl_ruÀ.
BVCI
,dl_ruÀ.
O±Mode
);

781 
ª∂y_sig
->
≈u_£t_ªque°_ack
.
ªsu…
 = 
ªt
;

782 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

784 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

785  
ERR_LINX_SEND
;

790 
NPU_SET_UPDATE_BVCI_PATH_RULE
:

792 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_£t_ªque°_ack_sig
), 
NPU_SET_REQUEST_ACK_SIG
);

793 i‡(
ª∂y_sig
 =
NULL
)

795 
	`WDDI_WARNING
("linx_alloc() failed\n");

796  
ERR_LINX_ALLOC
;

798 
STRU_SET_UPDATE_BVCI_PATH_RULE
 
bvci_ruÀ
={0};

799 
	`mem˝y
(&
bvci_ruÀ
,
sig
->
≈u_ªque°
.
∑rgv
,(
STRU_SET_UPDATE_BVCI_PATH_RULE
));

800 
	`WDDI_INFO
("öfo: NPU_REQUEST_SIG::NPU_SET_UPDATE_BVCI_PATH_RULE, O±Mode:%d, NS_BVCI:%d, NS_BVCI_ﬁd:%d, vÂ‹t:%d\n", 
bvci_ruÀ
.
O±Mode
, bvci_ruÀ.
NS_BVCI
, bvci_ruÀ.
NS_BVCI_ﬁd
, bvci_ruÀ.
u_p‹t
.
vÂ‹t
);

801 
ªt
 = 
	`≈_upd©eBVCI_Êow_add
(&
bvci_ruÀ
);

802 
ª∂y_sig
->
≈u_£t_ªque°_ack
.
ªsu…
 = 
ªt
;

803 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

805 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

806  
ERR_LINX_SEND
;

811 
NPU_DELETE_UPDATE_BVCI_PATH_RULE
:

813 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_£t_ªque°_ack_sig
), 
NPU_SET_REQUEST_ACK_SIG
);

814 i‡(
ª∂y_sig
 =
NULL
)

816 
	`WDDI_WARNING
("linx_alloc() failed\n");

817  
ERR_LINX_ALLOC
;

819 
STRU_DELETE_UPDATE_BVCI_PATH_RULE
 
bvci_ruÀ
={0};

820 
	`mem˝y
(&
bvci_ruÀ
,
sig
->
≈u_ªque°
.
∑rgv
,(
STRU_DELETE_UPDATE_BVCI_PATH_RULE
));

821 
	`WDDI_INFO
("öfo: NPU_REQUEST_SIG::NPU_DELETE_UPDATE_BVCI_PATH_RULE, O±Mode:%d, NS_BVCI_ﬁd:%d, vÂ‹t:%d\n", 
bvci_ruÀ
.
O±Mode
, bvci_ruÀ.
NS_BVCI_ﬁd
, bvci_ruÀ.
u_p‹t
.
vÂ‹t
);

822 
ªt
 = 
	`≈_upd©eBVCI_Êow_dñëe
(
bvci_ruÀ
.
u_p‹t
.
vÂ‹t
,bvci_ruÀ.
NS_BVCI_ﬁd
,bvci_ruÀ.
O±Mode
);

823 
ª∂y_sig
->
≈u_£t_ªque°_ack
.
ªsu…
 = 
ªt
;

824 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

826 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

827  
ERR_LINX_SEND
;

831 
NPU_SET_FR_DOWNLINK_PATH_LINK_TABLE
:

833 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_£t_ªque°_ack_sig
), 
NPU_SET_REQUEST_ACK_SIG
);

834 i‡(
ª∂y_sig
 =
NULL
)

836 
	`WDDI_WARNING
("linx_alloc() failed\n");

837  
ERR_LINX_ALLOC
;

839 
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
 
dl_lök_èbÀ
={0};

840 
	`mem˝y
(&
dl_lök_èbÀ
,
sig
->
≈u_ªque°
.
∑rgv
,(
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
));

841 
	`WDDI_INFO
("öfo: NPU_REQUEST_SIG::NPU_SET_FR_DOWNLINK_PATH_LINK_TABLE, FrVp‹tAcôveNum:%d, NSEI:%d\n", 
dl_lök_èbÀ
.
FrVp‹tAcôveNum
, dl_lök_èbÀ.
NSEI
);

842 if(
dl_lök_èbÀ
.
FrVp‹tAcôveNum
 > 16)

844 
	`WDDI_WARNING
("NPU_SET_FR_DOWNLINK_PATH_LINK_TABLE FrVp‹tAcôveNum %dövÆid \n",
dl_lök_èbÀ
.
FrVp‹tAcôveNum
);

845 
ª∂y_sig
->
≈u_£t_ªque°_ack
.
ªsu…
 = -1;

849 
ªt
 = 
	`≈_dl_lök_èbÀ_£t
(&
dl_lök_èbÀ
);

850 
ª∂y_sig
->
≈u_£t_ªque°_ack
.
ªsu…
 = 
ªt
;

853 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

855 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

856  
ERR_LINX_SEND
;

862 
NPU_MON_SET_CAPTURE_START
:

864 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_£t_ªque°_ack_sig
), 
NPU_SET_REQUEST_ACK_SIG
);

865 i‡(
ª∂y_sig
 =
NULL
)

867 
	`WDDI_WARNING
("linx_alloc() failed\n");

868  
ERR_LINX_ALLOC
;

870 
STRU_NPUMON_INFO
 
NpuM⁄Info
={0};

871 
	`mem˝y
(&
NpuM⁄Info
,
sig
->
≈u_ªque°
.
∑rgv
,(
STRU_NPUMON_INFO
));

872 
ªt
 = 
	`≈u_h™lde_≈um⁄_ªque°
(&
NpuM⁄Info
,
˛õ¡
);

873 
ª∂y_sig
->
≈u_£t_ªque°_ack
.
ªsu…
 = 
ªt
;

874 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

876 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

877  
ERR_LINX_SEND
;

880 
LINX_SIGNAL
 *
sigAâch
;

881 
LINX_OSATTREF
 
©t_ªf_˛õ¡
;

882 
sigAâch
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
LINX_SIGNAL
), 
ATTACH_NPUMON_SIG
);

883 
©t_ªf_˛õ¡
 = 
	`löx_©èch
(
löx_öfo
->
löx
,&
sigAâch
,
˛õ¡
);

884 if(
©t_ªf_˛õ¡
 =
LINX_ILLEGAL_ATTREF
)

886 
	`WDDI_WARNING
("linx_attach() failed");

890 
NPU_SET_LMI_PVC_STATUS
:

892 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_£t_ªque°_ack_sig
), 
NPU_SET_REQUEST_ACK_SIG
);

893 i‡(
ª∂y_sig
 =
NULL
)

895 
	`WDDI_WARNING
("linx_alloc() failed\n");

896  
ERR_LINX_ALLOC
;

898 
STRU_NPU_SET_LMI_PVC_STATUS
 
PvcSètus
={0};

899 
	`mem˝y
(&
PvcSètus
,
sig
->
≈u_ªque°
.
∑rgv
,(
STRU_NPU_SET_LMI_PVC_STATUS
));

900 
	`WDDI_INFO
("öfo: NPU_REQUEST_SIG::NPU_SET_LMI_PVC_STATUS, sètus:%d, vÂ‹t:%d\n", 
PvcSètus
.
°©us
, PvcSètus.
vÂ‹t
);

901 if(
PvcSètus
.
°©us
 =
SET_PVC_DISABLE
)

904 
STRU_VPORT_INFO
 * 
p_Vp‹tInfo

	`≈u_gë_vp‹t_öfo
(
PvcSètus
.
vÂ‹t
);

905 if(
p_Vp‹tInfo
 !
NULL
)

907 if(
p_Vp‹tInfo
->
U£dFœg
 =
USED
)

912 
	`≈_dißbÀ_‰_iw_ch™√l
(&
p_Vp‹tInfo
->
ch_öfo
);

913 
	`≈_dißbÀ_‰_ho°_ch™√l
(&
p_Vp‹tInfo
->
ch_öfo
);

918 i‡(
PvcSètus
.
°©us
 =
SET_PVC_ENABLE
)

920 
STRU_VPORT_INFO
 * 
p_Vp‹tInfo

	`≈u_gë_vp‹t_öfo
(
PvcSètus
.
vÂ‹t
);

921 if(
p_Vp‹tInfo
 !
NULL
)

923 if(
p_Vp‹tInfo
->
U£dFœg
 =
USED
)

925 
	`≈_íabÀ_‰_ho°_ch™√l
(&
p_Vp‹tInfo
->
ch_öfo
);

926 
	`≈_íabÀ_‰_iw_ch™√l
(&
p_Vp‹tInfo
->
ch_öfo
);

935 
ª∂y_sig
->
≈u_£t_ªque°_ack
.
ªsu…
 = 
STATUS_OK
;

936 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

938 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

939  
ERR_LINX_SEND
;

943 
NPU_SET_LOG_DEBUG_LEVEL
:

945 * 
wddi_log_Àvî
[8] = {"LOG_DEBUG",

954 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_£t_ªque°_ack_sig
), 
NPU_SET_REQUEST_ACK_SIG
);

955 i‡(
ª∂y_sig
 =
NULL
)

957 
	`WDDI_WARNING
("linx_alloc() failed\n");

958  
ERR_LINX_ALLOC
;

960 
STRU_NPU_SET_LOG_DEBUG_LEVEL
 
logLevñ
={0};

961 
	`mem˝y
(&
logLevñ
,
sig
->
≈u_ªque°
.
∑rgv
,(
STRU_NPU_SET_LOG_DEBUG_LEVEL
));

962 
	`WDDI_WARNING
("£àlogÜevñ %d \n",
logLevñ
.
Àvñ
);

963 if(
logLevñ
.
Àvñ
 > 7)logLevel.level= 2;

964 
g_logLevñ
 = 
logLevñ
.
Àvñ
;

965 
	`wddi_log_£t_mask
(
wddi_log_Àvî
[
logLevñ
.
Àvñ
]);

966 
ª∂y_sig
->
≈u_£t_ªque°_ack
.
ªsu…
 = 
STATUS_OK
;

967 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

969 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

970  
ERR_LINX_SEND
;

974 
NPU_SET_NS_BSSGP_STATICS_ZERO
:

976 
u32
 
vÂ‹t
;

977 
STRU_SET_NS_BSSGP_STATICS_ZERO
 
£t_ns_bssgp_°©ics
;

978 
	`mem˝y
(&
£t_ns_bssgp_°©ics
,
sig
->
≈u_ªque°
.
∑rgv
,(
STRU_SET_NS_BSSGP_STATICS_ZERO
));

979 
ªt
 = 
	`≈_˛ór_ns_bssgp_°©ics
(
£t_ns_bssgp_°©ics
.
vÂ‹t
);

980 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_£t_ªque°_ack_sig
), 
NPU_SET_REQUEST_ACK_SIG
);

981 i‡(
ª∂y_sig
 =
NULL
)

983 
	`WDDI_WARNING
("linx_alloc() failed\n");

984  
ERR_LINX_ALLOC
;

986 
ª∂y_sig
->
≈u_£t_ªque°_ack
.
ªsu…
 = 
ªt
;

987 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

989 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

990  
ERR_LINX_SEND
;

994 
NPU_SET_NONPOOL_STATE
:

996 
NODE
 *
ãmp
;

997 
ENTRY
 
ôem
={0};

998 
ENTRY
 *
found_ôem
;

999 
NP_UL_FLOW_INFO
 *
p_FrFlowInfo
;

1000 
u32
 
ƒi
;

1001 
ãmp
=
u∂ök_nodehód
;

1004 
ãmp
!=
NULL
)

1006 
ôem
.
key
 = 
ãmp
->
ht_key
;

1007 
ãmp
Òemp->
√xt
;

1009 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
u∂ök_ht
))

1011 
	`WDDI_WARNING
("When find ul_route_ht_link failed\n");

1015 
p_FrFlowInfo
 = (
NP_UL_FLOW_INFO
 *)
found_ôem
->
d©a
;

1016 if(
USED
 =
p_FrFlowInfo
->
U£dFœg
)

1019 
ƒi
 = 0;nri < 257 ;nri++)

1021 ()
	`≈_ul_rouã_èbÀ_dñëe
(
p_FrFlowInfo
->
vp‹t
,
ƒi
);

1027 
STRU_SET_NPU_NONPOOL_STATE
 
£t_≈u_n⁄poﬁ
;

1028 
	`mem˝y
(&
£t_≈u_n⁄poﬁ
,
sig
->
≈u_ªque°
.
∑rgv
,(
STRU_SET_NPU_NONPOOL_STATE
));

1029 
	`F¥ötf
("Gë së_≈u_n⁄poﬁ.n⁄poﬁÊag = %d\n",
£t_≈u_n⁄poﬁ
.
n⁄poﬁÊag
);

1030 
g_≈n⁄poﬁFœg
 = 
£t_≈u_n⁄poﬁ
.
n⁄poﬁÊag
;

1031 
ªt
 = 
STATUS_OK
;

1033 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_£t_ªque°_ack_sig
), 
NPU_SET_REQUEST_ACK_SIG
);

1034 i‡(
ª∂y_sig
 =
NULL
)

1036 
	`WDDI_WARNING
("linx_alloc() failed\n");

1037  
ERR_LINX_ALLOC
;

1039 
ª∂y_sig
->
≈u_£t_ªque°_ack
.
ªsu…
 = 
ªt
;

1040 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

1042 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

1043  
ERR_LINX_SEND
;

1047 
NPU_SET_NSEAGG_FLAG
:

1049 
u32
 
ªt
;

1051 
STRU_SET_NPU_NSEAGG_FLAG
 
£t_n£Agg_Êag
;

1052 
	`mem˝y
(&
£t_n£Agg_Êag
,
sig
->
≈u_ªque°
.
∑rgv
,(
STRU_SET_NPU_NSEAGG_FLAG
));

1053 
	`F¥ötf
("Gë së_n£Agg_Êag.n£AggFœg = %d\n",
£t_n£Agg_Êag
.
n£AggFœg
);

1054 
g_≈N£AggFœg
 = 
£t_n£Agg_Êag
.
n£AggFœg
;

1055 
ªt
 = 
STATUS_OK
;

1057 
	`WP_N£Agg_£t
(
g_≈N£AggFœg
);

1059 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_£t_ªque°_ack_sig
), 
NPU_SET_REQUEST_ACK_SIG
);

1060 i‡(
ª∂y_sig
 =
NULL
)

1062 
	`WDDI_WARNING
("linx_alloc() failed\n");

1063  
ERR_LINX_ALLOC
;

1065 
ª∂y_sig
->
≈u_£t_ªque°_ack
.
ªsu…
 = 
ªt
;

1066 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

1068 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

1069  
ERR_LINX_SEND
;

1077 if(
NPU_GET_REQUEST_TYPE
 =
sig
->
≈u_ªque°
.
cmdTy≥
)

1079 
sig
->
≈u_ªque°
.
cmd
)

1081 
NPU_GET_ETH_STATICS
:

1083 
u32
 
EthNumbî
;

1084 
STRU_GET_ETH_STATICS
 
gë_ëh°©ics
;

1085 
EthNumbî
 = ((
STRU_GET_ETH_STATICS
 *)(
sig
->
≈u_ªque°
.
∑rgv
))->EthNumber;

1086 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_gë_ªque°_ack_sig
)+(
STRU_GET_ETH_STATICS
), 
NPU_GET_REQUEST_ACK_SIG
);

1087 i‡(
ª∂y_sig
 =
NULL
)

1089 
	`WDDI_WARNING
("linx_alloc() failed\n");

1090  
ERR_LINX_ALLOC
;

1092 
gë_ëh°©ics
.
EthNumbî
 = EthNumber;

1093 if((
EthNumbî
 !=1)&& (EthNumber !=2))

1095 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
ªsu…
 = -1;

1099 
°©us
 = 
	`íë_°©_gë
(
EthNumbî
, (*)&(
gë_ëh°©ics
.
°ru_ëh_°©ics
));

1101 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
ªsu…
 = 
°©us
;

1102 
	`mem˝y
(
ª∂y_sig
->
≈u_gë_ªque°_ack
.
pd©a
,&
gë_ëh°©ics
,(get_ethstatics));

1103 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
cmd
 = 
NPU_GET_ETH_STATICS
;

1104 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

1106 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

1107  
ERR_LINX_SEND
;

1111 
NPU_GET_UPI_TRUNK_STATICS
:

1113 
u32
 
åunkid
;

1114 
u32
 
°m1Id
;

1115 
STRU_GET_UPI_TRUNK_STATICS
 
gë_upi°©ics
;

1116 
°m1Id
 = ((
STRU_GET_UPI_TRUNK_STATICS
 *)(
sig
->
≈u_ªque°
.
∑rgv
))->stm1Id;

1117 if((
°m1Id
 != 1)&&(stm1Id != 2))

1119 
	`WDDI_WARNING
("NPU_GET_UPI_TRUNK_STATICS stm1Id %d invÆid \n",
°m1Id
);

1122 
åunkid
 = ((
STRU_GET_UPI_TRUNK_STATICS
 *)(
sig
->
≈u_ªque°
.
∑rgv
))->trunkid;

1123 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_gë_ªque°_ack_sig
)+(
STRU_GET_UPI_TRUNK_STATICS
), 
NPU_GET_REQUEST_ACK_SIG
);

1124 i‡(
ª∂y_sig
 =
NULL
)

1126 
	`WDDI_WARNING
("linx_alloc() failed\n");

1127  
ERR_LINX_ALLOC
;

1129 
gë_upi°©ics
.
åunkid
 =Årunkid;

1130 
gë_upi°©ics
.
°m1Id
 = stm1Id;

1131 if(
åunkid
 > (
SPP_MAX_TRUNK_NUM
-1))

1133 
	`WDDI_WARNING
("NPU_GET_UPI_TRUNK_STATICSÅrunkid %d invÆid \n",
åunkid
);

1136 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

1137 if(
öôül_cfg
->
°ru_°m1_cfg_öfo
[
°m1Id
-1].
E1T1ty≥
 =
NPU_MODE_E1
)

1139 
åunkid
 = (
°m1Id
 -1Ë* 
N_UFE_MAX_LINES_E1
/2 +Årunkid -1 ;

1143 
åunkid
 = (
°m1Id
 -1Ë* 
N_UFE_MAX_LINES_T1
/2 +Årunkid -1 ;

1145 
°©us
 = 
	`upi_°©_gë_by_åunk
(
åunkid
, &(
gë_upi°©ics
.
°ru_upi_°©ics
));

1146 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
ªsu…
 = 
°©us
;

1147 
	`mem˝y
(
ª∂y_sig
->
≈u_gë_ªque°_ack
.
pd©a
,(*)&
gë_upi°©ics
,(get_upistatics));

1148 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
cmd
 = 
NPU_GET_UPI_TRUNK_STATICS
;

1149 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

1151 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

1152  
ERR_LINX_SEND
;

1156 
NPU_GET_UPI_GROUP_STATICS
:

1158 
u32
 
åunkid
;

1159 
u32
 
°m1Id
;

1160 
u32
 
groupId
;

1161 
STRU_GET_UPI_GROUP_STATICS
 
gë_upi°©ics
;

1162 
°m1Id
 = ((
STRU_GET_UPI_GROUP_STATICS
 *)(
sig
->
≈u_ªque°
.
∑rgv
))->stm1Id;

1163 if((
°m1Id
 != 1)&&(stm1Id != 2))

1165 
	`WDDI_WARNING
("NPU_GET_UPI_GROUP_STATICS stm1Id %d invÆid \n",
°m1Id
);

1168 
åunkid
 = ((
STRU_GET_UPI_GROUP_STATICS
 *)(
sig
->
≈u_ªque°
.
∑rgv
))->trunkid;

1169 
groupId
 = ((
STRU_GET_UPI_GROUP_STATICS
 *)(
sig
->
≈u_ªque°
.
∑rgv
))->
groupid
;

1170 if((
åunkid
 > (
SPP_MAX_TRUNK_NUM
-1)Ë||(
groupId
 > (
SPP_MAX_GROUP_NUM
 -1)))

1172 
	`WDDI_WARNING
("NPU_GET_UPI_GROUP_STATICSÅrunkid %d groupId %d invÆid \n",
åunkid
,
groupId
);

1175 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_gë_ªque°_ack_sig
)+(
STRU_GET_UPI_GROUP_STATICS
), 
NPU_GET_REQUEST_ACK_SIG
);

1176 i‡(
ª∂y_sig
 =
NULL
)

1178 
	`WDDI_WARNING
("linx_alloc() failed\n");

1179  
ERR_LINX_ALLOC
;

1181 
gë_upi°©ics
.
åunkid
 =Årunkid;

1182 
gë_upi°©ics
.
°m1Id
 = stm1Id;

1183 
gë_upi°©ics
.
groupid

groupId
;

1184 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

1185 if(
öôül_cfg
->
°ru_°m1_cfg_öfo
[
°m1Id
-1].
E1T1ty≥
 =
NPU_MODE_E1
)

1187 
åunkid
 = (
°m1Id
 -1Ë* 
N_UFE_MAX_LINES_E1
/2 +Årunkid -1 ;

1191 
åunkid
 = (
°m1Id
 -1Ë* 
N_UFE_MAX_LINES_T1
/2 +Årunkid -1 ;

1193 
°©us
 = 
	`upi_°©_gë_by_group
(
åunkid
,
groupId
,&(
gë_upi°©ics
.
°ru_upi_°©ics
));

1194 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
ªsu…
 = 
°©us
;

1195 
	`mem˝y
(
ª∂y_sig
->
≈u_gë_ªque°_ack
.
pd©a
,(*)&
gë_upi°©ics
,(get_upistatics));

1196 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
cmd
 = 
NPU_GET_UPI_GROUP_STATICS
;

1197 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

1199 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

1200  
ERR_LINX_SEND
;

1205 
NPU_GET_UPI_STM1_STATICS
:

1207 
u32
 
°m1id
;

1208 
STRU_GET_UPI_STM1_STATICS
 
gë_upi°©ics
;

1209 
°m1id
 = ((
STRU_GET_UPI_STM1_STATICS
 *)(
sig
->
≈u_ªque°
.
∑rgv
))->stm1id -1 ;

1210 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_gë_ªque°_ack_sig
)+(
STRU_GET_UPI_STM1_STATICS
), 
NPU_GET_REQUEST_ACK_SIG
);

1211 i‡(
ª∂y_sig
 =
NULL
)

1213 
	`WDDI_WARNING
("linx_alloc() failed\n");

1214  
ERR_LINX_ALLOC
;

1216 if((
°m1id
 != 0)&&(stm1id != 1))

1218 
	`WDDI_WARNING
("NPU_GET_UPI_STM1_STATICS stm1Id %d invÆid \n",
°m1id
);

1221 
gë_upi°©ics
.
°m1id
 = stm1id;

1222 
°©us
 = 
	`upi_°m1_°©_gë
(
°m1id
, &(
gë_upi°©ics
.
°ru_upi_°©ics
));

1223 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
ªsu…
 = 
°©us
;

1224 
	`mem˝y
(
ª∂y_sig
->
≈u_gë_ªque°_ack
.
pd©a
,(*)&
gë_upi°©ics
,(get_upistatics));

1225 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
cmd
 = 
NPU_GET_UPI_STM1_STATICS
;

1226 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

1228 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

1229  
ERR_LINX_SEND
;

1234 
NPU_GET_RXFR_STATICS
:

1236 
u32
 
vÂ‹t
;

1237 
STRU_GET_RXFR_STATICS
 
gë_rx‰°©ics
;

1238 
vÂ‹t
 = ((
STRU_GET_RXFR_STATICS
 *)(
sig
->
≈u_ªque°
.
∑rgv
))->vfport;

1239 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_gë_ªque°_ack_sig
)+(
STRU_GET_RXFR_STATICS
), 
NPU_GET_REQUEST_ACK_SIG
);

1240 i‡(
ª∂y_sig
 =
NULL
)

1242 
	`WDDI_WARNING
("linx_alloc() failed\n");

1243  
ERR_LINX_ALLOC
;

1245 
gë_rx‰°©ics
.
vÂ‹t
 = vfport;

1246 
°©us
 = 
	`rx‰_°©_gë
(
vÂ‹t
, (*)&(
gë_rx‰°©ics
.
°ru_rx‰_°©ics
));

1247 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
ªsu…
 = 
°©us
;

1248 
	`mem˝y
(
ª∂y_sig
->
≈u_gë_ªque°_ack
.
pd©a
,&
gë_rx‰°©ics
,(get_rxfrstatics));

1249 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
cmd
 = 
NPU_GET_RXFR_STATICS
;

1250 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

1252 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

1253  
ERR_LINX_SEND
;

1258 
NPU_GET_TXFR_STATICS
:

1260 
u32
 
vÂ‹t
;

1261 
STRU_GET_TXFR_STATICS
 
gë_tx‰°©ics
;

1262 
vÂ‹t
 = ((
STRU_GET_TXFR_STATICS
 *)(
sig
->
≈u_ªque°
.
∑rgv
))->vfport;

1263 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_gë_ªque°_ack_sig
)+(
STRU_GET_TXFR_STATICS
), 
NPU_GET_REQUEST_ACK_SIG
);

1264 i‡(
ª∂y_sig
 =
NULL
)

1266 
	`WDDI_WARNING
("linx_alloc() failed\n");

1267  
ERR_LINX_ALLOC
;

1269 
gë_tx‰°©ics
.
vÂ‹t
 = vfport;

1270 
°©us
 = 
	`tx‰_°©_gë
(
vÂ‹t
, (*)&(
gë_tx‰°©ics
.
°ru_tx‰_°©ics
));

1271 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
ªsu…
 = 
°©us
;

1272 
	`mem˝y
(
ª∂y_sig
->
≈u_gë_ªque°_ack
.
pd©a
,&
gë_tx‰°©ics
,(get_txfrstatics));

1273 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
cmd
 = 
NPU_GET_TXFR_STATICS
;

1274 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

1276 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

1277  
ERR_LINX_SEND
;

1282 
NPU_DEBUG_CHANNEL
:

1284 
u32
 
vÂ‹t
;

1285 
u32
 
debugty≥
;

1286 
STRU_DEBUG_CHANNEL
 
≈_debug_ch™√l
;

1287 
vÂ‹t
 = ((
STRU_DEBUG_CHANNEL
 *)(
sig
->
≈u_ªque°
.
∑rgv
))->vfport;

1288 
debugty≥
 = ((
STRU_DEBUG_CHANNEL
 *)(
sig
->
≈u_ªque°
.
∑rgv
))->
DebugTy≥
;

1289 
STRU_VPORT_INFO
 *
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
vÂ‹t
);

1290 if(
Vp‹tInfo
 =
NULL
)

1292 
	`WDDI_WARNING
(" c™'àgë f∏vp‹àöfÿvp‹à%d \¿",
vÂ‹t
);

1295 if(
Vp‹tInfo
->
U£dFœg
 =
UNUSED
)

1297 
	`WDDI_WARNING
(" c™'àgë f∏vp‹àöfÿ,‰ vp‹à˛o£d ! vp‹à%d \¿",
vÂ‹t
);

1300 
FR_CHANNEL_INFO
 *
ch_öfo
 = &
Vp‹tInfo
->ch_info;

1301 if(
debugty≥
 == 0)

1303 
u32
 
dïth
=0;

1304 
WP_°©us
 
ªt
=-1;

1305 
ªt
 = 
	`WP_Ch™√lQDïth
(
ch_öfo
->
tx_ho°_h™dÀ
,&
dïth
);

1306 
	`WDDI_WARNING
("WP_Ch™√lQDïth:Åx_ho°_h™dÀ=0x%x,vp‹t=%u,ªt=%d,dïth=%u\n",
ch_öfo
->
tx_ho°_h™dÀ
, 
vÂ‹t
,
ªt
,
dïth
);

1307 
ªt
=-1;

1308 
dïth
=0;

1309 
ªt
 = 
	`WP_Ch™√lQDïth
(
ch_öfo
->
tx_iw_h™dÀ
,&
dïth
);

1310 
	`WDDI_WARNING
("WP_Ch™√lQDïth:Åx_iw_h™dÀ=0x%x,vp‹t=%u,ªt=%d,dïth=%u\n",
ch_öfo
->
tx_iw_h™dÀ
,
vÂ‹t
,
ªt
,
dïth
);

1312 if(
debugty≥
 == 1)

1314 
WP_°©us
 
ªt
=-1;

1315 
ªt
 = 
	`WP_Di•œy
(0,
ch_öfo
->
tx_ho°_h™dÀ
,
WP_DISPLAY_DEFAULT
,0);

1316 
	`WDDI_WARNING
("WP_Di•œy ch™√l:Åx_ho°_h™dÀ=0x%x,vp‹t=%u,ªt=%d\n",
ch_öfo
->
tx_ho°_h™dÀ
,
vÂ‹t
,
ªt
);

1318 if(
debugty≥
 == 2)

1320 
WP_°©us
 
ªt
=-1;

1321 
WP_°©us
 
°©us
;

1322 
WP_h™dÀ
 
upi_u„_p‹t
;

1323 
°©us
 = 
	`WP_Ch™√lDißbÀ
(
ch_öfo
->
rx_iw_h™dÀ
);

1324 
°©us
 = 
	`WP_P‹tDißbÀ
(
upi_u„_p‹t
, 
WP_DIRECTION_DUPLEX
);

1325 
	`¶ìp
(1);

1326 
ªt
 = 
	`WP_Devi˚Flush
(
ch_öfo
->
devi˚_h™dÀ
);

1327 
	`¶ìp
(1);

1328 
°©us
 = 
	`WP_Ch™√lDißbÀ
(
ch_öfo
->
tx_ho°_h™dÀ
);

1329 
	`¶ìp
(1);

1330 
°©us
 = 
	`WP_Ch™√lE«bÀ
(
ch_öfo
->
tx_ho°_h™dÀ
);

1331 
°©us
 = 
	`WP_P‹tE«bÀ
(
upi_u„_p‹t
, 
WP_DIRECTION_DUPLEX
);

1332 
°©us
 = 
	`WP_Ch™√lE«bÀ
(
ch_öfo
->
rx_iw_h™dÀ
);

1333 
	`WDDI_WARNING
("WP_Devi˚Flush:Åx_ho°_h™dÀ=0x%x,vp‹t=%u,ªt=%d\n",
ch_öfo
->
tx_ho°_h™dÀ
,
vÂ‹t
,
ªt
);

1335 if(
debugty≥
 == 3)

1337 
WP_°©us
 
ªt
=-1;

1338 
ªt
 = 
	`WP_Di•œy
(0,
ch_öfo
->
phy_h™dÀ
,
WP_DISPLAY_DEFAULT
,0);

1339 
	`WDDI_WARNING
("WP_Di•œyÖhy:Åx_ho°_h™dÀ=0x%x,phy_h™dÀ=0x%x,vp‹t=%u,ªt=%d\n",
ch_öfo
->
tx_ho°_h™dÀ
,ch_öfo->
phy_h™dÀ
,
vÂ‹t
,
ªt
);

1341 if(
debugty≥
 == 4)

1343 
WP_boﬁón
 
ch_dißbÀd_°©e
 = 
WP_TRUE
;

1344 
WP_°©us
 
ªt
=-1;

1345 
ªt
 = 
	`WP_Ch™√lSètus
(
ch_öfo
->
tx_ho°_h™dÀ
, 
WP_CH_STATUS_DISABLED
, &
ch_dißbÀd_°©e
);

1346 
	`WDDI_WARNING
("WP_Ch™√lSètus:Åx_ho°_h™dÀ=0x%x,vp‹t=%u,ªt=%d,dißbÀd=%d\n",
ch_öfo
->
tx_ho°_h™dÀ
,
vÂ‹t
,
ªt
,
ch_dißbÀd_°©e
);

1348 if(
debugty≥
 == 5)

1350 
WP_°©us
 
°©us
;

1351 
WP_°©s_emphy
 
emphy_°©s
;

1352 
°©us
=
	`WP_EmphyP‹tSèti°ics
(
WP_PORT_UPI1
,&
emphy_°©s
);

1353 
	`WDDI_WARNING
("WP_EmphyP‹tSèti°ics: sètus=0x%x\n",
°©us
);

1354 
	`WDDI_WARNING
(" Hi:Ñx_unsuµ‹ãd_devi˚=0x%x\n",*((*)(&
emphy_°©s
.
rx_unsuµ‹ãd_devi˚
)));

1355 
	`WDDI_WARNING
(" Lo:Ñx_unsuµ‹ãd_devi˚=0x%x\n",*((*)(&
emphy_°©s
.
rx_unsuµ‹ãd_devi˚
)+1));

1356 
	`WDDI_WARNING
(" Hi:Åx_unsuµ‹ãd_devi˚=0x%x\n",*((*)(&
emphy_°©s
.
tx_unsuµ‹ãd_devi˚
)));

1357 
	`WDDI_WARNING
(" Lo:Åx_unsuµ‹ãd_devi˚=0x%x\n",*((*)(&
emphy_°©s
.
tx_unsuµ‹ãd_devi˚
)+1));

1358 
	`WDDI_WARNING
(" Hi:Ñx_îr_∑rôy=0x%x\n",*((*)(&
emphy_°©s
.
rx_îr_∑rôy
)));

1359 
	`WDDI_WARNING
(" Lo:Ñx_îr_∑rôy=0x%x\n",*((*)(&
emphy_°©s
.
rx_îr_∑rôy
)+1));

1360 
	`WDDI_WARNING
(" Hi:Ñx_îr_s›_e›=0x%x\n",*((*)(&
emphy_°©s
.
rx_îr_s›_e›
)));

1361 
	`WDDI_WARNING
(" Lo:Ñx_îr_s›_e›=0x%x\n",*((*)(&
emphy_°©s
.
rx_îr_s›_e›
)+1));

1367 
NPU_GET_UFE_SYS
:

1369 
	`F¥ötf
("UFE System Display\n");

1370 
	`≈_di•œy_u„_sy°em
();

1372 
	`di•œyU„Evíts
();

1373 
STRU_MEMORY_STATICS
 
mem‹y_°©ics
;

1374 
	`Np_ShowMem‹yAvaûabÀ
(&
mem‹y_°©ics
);

1375 
	`F¥ötf
("NP Aµ: PackëMemLe·Byã = %d\n", 
mem‹y_°©ics
.
PackëMemLe·Byã
);

1376 
	`F¥ötf
("NP Aµ: P¨amMemLe·Byã = %d\n", 
mem‹y_°©ics
.
P¨amMemLe·Byã
);

1377 
	`F¥ötf
("NP Aµ: I¡îMemLe·Byã = %d\n", 
mem‹y_°©ics
.
I¡îMemLe·Byã
);

1378 
	`F¥ötf
("NP Aµ: PackëMemTŸÆByã =%d\n", 
mem‹y_°©ics
.
PackëMemTŸÆByã
);

1379 
	`F¥ötf
("NP Aµ: P¨amMemTŸÆByã = %d\n", 
mem‹y_°©ics
.
P¨amMemTŸÆByã
);

1380 
	`F¥ötf
("NP Aµ: I¡îMemTŸÆByã = %d\n", 
mem‹y_°©ics
.
I¡îMemTŸÆByã
);

1383 
	`WPU_BusM⁄ô‹Dump
(0,0);

1384 
	`≈_di•œy_u„4_shd_°©us
();

1385 
	`≈_di•œy_Æl_u„4_e1t1_°©us
();

1386 
	`≈u_¥ötf_debugReg
();

1387 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_gë_ªque°_ack_sig
), 
NPU_GET_REQUEST_ACK_SIG
);

1388 i‡(
ª∂y_sig
 =
NULL
)

1390 
	`WDDI_WARNING
("linx_alloc() failed\n");

1391  
ERR_LINX_ALLOC
;

1394 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
cmd
 = 
NPU_GET_UFE_SYS
;

1395 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
ªsu…
 = 
STATUS_OK
;

1396 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

1398 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

1399  
ERR_LINX_SEND
;

1404 
NPU_DISPLAY_CONFIG_INFO
:

1406 
	`F¥ötf
("NPU_DISPLAY_CONFIG_INFO\n");

1407 
	`di•œy_c⁄fig_öfo
();

1408 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_gë_ªque°_ack_sig
), 
NPU_GET_REQUEST_ACK_SIG
);

1409 i‡(
ª∂y_sig
 =
NULL
)

1411 
	`WDDI_WARNING
("linx_alloc() failed\n");

1412  
ERR_LINX_ALLOC
;

1414 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
cmd
 = 
NPU_DISPLAY_CONFIG_INFO
;

1415 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
ªsu…
 = 
STATUS_OK
;

1416 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

1418 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

1419  
ERR_LINX_SEND
;

1424 
NPU_GET_UFE_LINE
:

1427 
u32
 
löeIndex
;

1429 
löeIndex
 = ((
STRU_GET_UFE_LINE
 *)(
sig
->
≈u_ªque°
.
∑rgv
))->
Löeödex
 -1 ;

1430 if(
löeIndex
 > 
N_UFE_MAX_LINES_T1
)

1432 
	`WDDI_WARNING
("NPU_GET_UFE_LINEÜöê%d i†övÆid \n",
löeIndex
);

1435 
	`F¥ötf
("\àUFE LöêDi•œy f‹ÜöeIndex 0x%x\n", 
löeIndex
);

1436 
	`≈_di•œy_u„_löe
(
löeIndex
);

1437 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_gë_ªque°_ack_sig
), 
NPU_GET_REQUEST_ACK_SIG
);

1438 i‡(
ª∂y_sig
 =
NULL
)

1440 
	`WDDI_WARNING
("linx_alloc() failed\n");

1441  
ERR_LINX_ALLOC
;

1444 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
cmd
 = 
NPU_GET_UFE_LINE
;

1445 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
ªsu…
 = 
STATUS_OK
;

1446 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

1448 
	`WDDI_WARNING
("löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),
˛õ¡
);

1449  
ERR_LINX_SEND
;

1454 
NPU_GET_UFE_PHY
:

1456 
u32
 
vÆue
;

1458 
vÆue
 = ((
STRU_GET_UFE
 *)(
sig
->
≈u_ªque°
.
∑rgv
))->
P‹tNumbî
;

1459 
	`F¥ötf
("\àUFE PHY Di•œy f‹ P‹à0x%x\n", 
vÆue
);

1460 
	`≈_di•œy_u„_phy
(
vÆue
);

1461 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_gë_ªque°_ack_sig
), 
NPU_GET_REQUEST_ACK_SIG
);

1462 i‡(
ª∂y_sig
 =
NULL
)

1464 
	`WDDI_WARNING
("linx_alloc() failed\n");

1465  
ERR_LINX_ALLOC
;

1468 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
cmd
 = 
NPU_GET_UFE_PHY
;

1469 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
ªsu…
 = 
STATUS_OK
;

1470 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

1472 
	`WDDI_WARNING
("löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),
˛õ¡
);

1473  
ERR_LINX_SEND
;

1477 
NPU_GET_FLOW_STATICS
:

1479 
u32
 
vf‹t
;

1480 
	`NPU_DEBUG_FILE_ENABLE
();

1481 
STRU_VPORT_INFO
 *
Vp‹tInfo
;

1482 
vf‹t
 = ((
STRU_GET_UFE
*)(
sig
->
≈u_ªque°
.
∑rgv
))->
P‹tNumbî
;

1483 
NP_SYSTEM_INFO
 * 
the_sy°em
 = 
	`≈_gë_sy°em_öfo
();

1484 
	`≈_di•œy_iw_p‹t_°©
();

1485 
	`≈_di•Æy_sy°em_Êow_agg
();

1486 
	`≈_di•œy_‰ag_Êow_öfo
();

1487 
	`≈_di•œy_de‰ag_öfo
(
the_sy°em
->
ù_de‰ag_group
);

1488 #i‡
BFD_OVERETH


1489 
	`≈_bfd_Êow_°©i°ics
(
the_sy°em
->
agg_bfd_rx_h™dÀ
);

1490 
	`≈_bfd_£s°i⁄_°©i°ics
(
the_sy°em
->
bfd_rx_èbÀ_h™dÀ
);

1496 
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
vf‹t
);

1498 if(
Vp‹tInfo
 =
NULL
)

1500 
	`NPU_DEBUG_FILE_DISABLE
();

1503 
	`≈_di•œy_Êow_agg
(
vf‹t
);

1506 
	`NPU_DEBUG_FILE_DISABLE
();

1511 
	`WP_Di•œy
(0,
Vp‹tInfo
->
ch_öfo
.
rx_ho°_h™dÀ
,
WP_DISPLAY_DEFAULT
,0);

1512 
	`WP_Di•œy
(0,
Vp‹tInfo
->
ch_öfo
.
tx_ho°_h™dÀ
,
WP_DISPLAY_DEFAULT
,0);

1516 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_gë_ªque°_ack_sig
), 
NPU_GET_REQUEST_ACK_SIG
);

1517 i‡(
ª∂y_sig
 =
NULL
)

1519 
	`WDDI_WARNING
("linx_alloc() failed\n");

1520  
ERR_LINX_ALLOC
;

1523 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
cmd
 = 
NPU_GET_FLOW_STATICS
;

1524 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
ªsu…
 = 
STATUS_OK
;

1525 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

1527 
	`WDDI_WARNING
("löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),
˛õ¡
);

1528  
ERR_LINX_SEND
;

1532 
NPU_GET_CPU_STATICS
:

1534 
STRU_CPU_STATICS
 
gë_˝u_°©ics
;

1535 
	`Np_Gë_Utûiz©i⁄
(&
gë_˝u_°©ics
);

1537 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_gë_ªque°_ack_sig
)+(
STRU_CPU_STATICS
), 
NPU_GET_REQUEST_ACK_SIG
);

1538 i‡(
ª∂y_sig
 =
NULL
)

1540 
	`WDDI_WARNING
("linx_alloc() failed\n");

1541  
ERR_LINX_ALLOC
;

1543 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
cmd
 = 
NPU_GET_CPU_STATICS
;

1544 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
ªsu…
 = 
STATUS_OK
;

1545 
	`mem˝y
(
ª∂y_sig
->
≈u_gë_ªque°_ack
.
pd©a
,&
gë_˝u_°©ics
,(get_cpu_statics));

1546 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

1548 
	`WDDI_WARNING
("löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),
˛õ¡
);

1549  
ERR_LINX_SEND
;

1553 
NPU_GET_MEMORY_STATICS
:

1555 
STRU_MEMORY_STATICS
 
gë_mem‹y_°©ics
;

1556 
	`Np_ShowMem‹yAvaûabÀ
(&
gë_mem‹y_°©ics
);

1557 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_gë_ªque°_ack_sig
)+(
STRU_MEMORY_STATICS
), 
NPU_GET_REQUEST_ACK_SIG
);

1558 i‡(
ª∂y_sig
 =
NULL
)

1560 
	`WDDI_WARNING
("linx_alloc() failed\n");

1561  
ERR_LINX_ALLOC
;

1563 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
cmd
 = 
NPU_GET_MEMORY_STATICS
;

1564 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
ªsu…
 = 
STATUS_OK
;

1565 
	`mem˝y
(
ª∂y_sig
->
≈u_gë_ªque°_ack
.
pd©a
,&
gë_mem‹y_°©ics
,(get_memory_statics));

1566 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

1568 
	`WDDI_WARNING
("löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),
˛õ¡
);

1569  
ERR_LINX_SEND
;

1573 
NPU_GET_NS_BSSGP_STATICS_STATICS
:

1575 
STRU_GET_NS_BSSGP_STATICS
 
gë_ns_bssgp_°©ics
;

1576 
u32
 
vÂ‹t
;

1577 
vÂ‹t
 = ((
STRU_GET_NS_BSSGP_STATICS
 *)(
sig
->
≈u_ªque°
.
∑rgv
))->vfport;

1578 
ªt
 = 
	`≈_gë_ns_bssgp_°©ics
(
vÂ‹t
,(*)&(
gë_ns_bssgp_°©ics
));

1579 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_gë_ªque°_ack_sig
)+(
STRU_GET_NS_BSSGP_STATICS
), 
NPU_GET_REQUEST_ACK_SIG
);

1580 i‡(
ª∂y_sig
 =
NULL
)

1582 
	`WDDI_WARNING
("linx_alloc() failed\n");

1583  
ERR_LINX_ALLOC
;

1585 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
cmd
 = 
NPU_GET_NS_BSSGP_STATICS_STATICS
;

1586 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
ªsu…
 = 
ªt
;

1587 
gë_ns_bssgp_°©ics
.
vÂ‹t
 = vfport;

1588 
	`mem˝y
(
ª∂y_sig
->
≈u_gë_ªque°_ack
.
pd©a
,&
gë_ns_bssgp_°©ics
,(get_ns_bssgp_statics));

1589 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

1591 
	`WDDI_WARNING
("löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),
˛õ¡
);

1592  
ERR_LINX_SEND
;

1597 
NPU_GET_STM1_E1T1_STATUS
:

1599 
STRU_NPU_GET_STM1_E1T1_STATUS
 
°m1_e1t1_°©us
;

1600 
u32
 
°m1id
;

1601 
°m1id
 = ((
STRU_NPU_GET_STM1_E1T1_STATUS
 *)(
sig
->
≈u_ªque°
.
∑rgv
))->stm1id -1;

1602 if((
°m1id
 != 0)&&(stm1id != 1))

1604 
	`WDDI_WARNING
("NPU_GET_STM1_E1T1_STATUS stm1Id %d invÆid \n",
°m1id
);

1608 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_gë_ªque°_ack_sig
)+(
STRU_NPU_GET_STM1_E1T1_STATUS
), 
NPU_GET_REQUEST_ACK_SIG
);

1609 i‡(
ª∂y_sig
 =
NULL
)

1611 
	`WDDI_WARNING
("linx_alloc() failed\n");

1612  
ERR_LINX_ALLOC
;

1614 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
cmd
 = 
NPU_GET_STM1_E1T1_STATUS
;

1615 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
ªsu…
 = 
STATUS_OK
;

1616 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

1617 
°m1_e1t1_°©us
.
°m1id
 = stm1id;

1618 if(
öôül_cfg
->
°ru_°m1_cfg_öfo
[
°m1id
].
°m1VÆid
 =
NPU_VALID
)

1620 
°m1_e1t1_°©us
.
°©us
.
°m1_°©us
 = 
	`≈_check_u„4_°m1_°©us
(
°m1id
);

1624 
°m1_e1t1_°©us
.
°©us
.
°m1_°©us
 = 
LINK_STATUS_DISABLED
;

1626 
i
;

1627 
i
 = 0; i < 
SPP_MAX_TRUNK_NUM
;i++)

1629 if(
öôül_cfg
->
°ru_°m1_cfg_öfo
[
°m1id
].
åunk_öfo
[
i
].
åunkVÆid
 =
NPU_VALID
)

1631 
°m1_e1t1_°©us
.
°©us
.
e1t1_°©us
[
i
] = 
	`≈_check_u„4_e1t1_°©us
(
°m1id
,i);

1635 
°m1_e1t1_°©us
.
°©us
.
e1t1_°©us
[
i
] = 
LINK_STATUS_DISABLED
;

1638 
	`mem˝y
(
ª∂y_sig
->
≈u_gë_ªque°_ack
.
pd©a
,&
°m1_e1t1_°©us
,(stm1_e1t1_status));

1639 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

1641 
	`WDDI_WARNING
("löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),
˛õ¡
);

1642  
ERR_LINX_SEND
;

1646 
NPU_GET_TRUNK_INFO
:

1648 
NP_TRUNK_INFO
 *
pTrunkInfo
;

1649 
u32
 
åunkID
, 
i
;

1650 
åunkID
 = ((
STRU_GET_TRUNKINFO
*)(
sig
->
≈u_ªque°
.
∑rgv
))->trunkID;

1651 
pTrunkInfo
 = 
	`≈u_gë_åunk_öfo
(
åunkID
);

1652 if(0 =
pTrunkInfo
)

1654 
	`WDDI_WARNING
("W¨n: NPU_GET_TRUNK_INFO, couldÇŸ gëÅrunk:%d (0x%xËöfo!\n",
åunkID
,ÅrunkID);

1658 if(
åunkID
 !
pTrunkInfo
->
åunkid
)

1659 
	`F¥ötf
("Error:ÅrunkID is different!\n");

1660 
	`F¥ötf
("tu∫k ID:%d, GroupNum:%d\n", 
åunkID
, 
pTrunkInfo
->
GroupNum
);

1661 
i
 = 0; i < 
pTrunkInfo
->
GroupNum
; i++)

1663 
	`F¥ötf
("Groupid[%d]:%d\n", 
i
, 
pTrunkInfo
->
Groupid
[i]);

1667 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_gë_ªque°_ack_sig
), 
NPU_GET_REQUEST_ACK_SIG
);

1668 i‡(
ª∂y_sig
 =
NULL
)

1670 
	`WDDI_WARNING
("linx_alloc() failed\n");

1671  
ERR_LINX_ALLOC
;

1673 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
cmd
 = 
NPU_GET_TRUNK_INFO
;

1674 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
ªsu…
 = 
STATUS_OK
;

1676 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

1678 
	`WDDI_WARNING
("löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),
˛õ¡
);

1679  
ERR_LINX_SEND
;

1683 
NPU_GET_DPORT_STATISTIC_INFO
:

1685 
u16
 
dp‹tID
;

1686 
dp‹tID
 = ((
STRU_GET_DPORT_STATISTICS
*)(
sig
->
≈u_ªque°
.
∑rgv
))->dportID;

1687 
	`≈_di•œy_dp‹t_Êow_öfo
(
dp‹tID
);

1689 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_gë_ªque°_ack_sig
), 
NPU_GET_REQUEST_ACK_SIG
);

1690 i‡(
ª∂y_sig
 =
NULL
)

1692 
	`WDDI_WARNING
("linx_alloc() failed\n");

1693  
ERR_LINX_ALLOC
;

1695 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
cmd
 = 
NPU_GET_DPORT_STATISTIC_INFO
;

1696 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
ªsu…
 = 
STATUS_OK
;

1698 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

1700 
	`WDDI_WARNING
("löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),
˛õ¡
);

1701  
ERR_LINX_SEND
;

1705 
NPU_GET_TABLE_ITEM
:

1707 
STRU_GET_TABLE_ITEM
 
°ru_gë_tblIãm
 = {0};

1708 
	`mem˝y
(&
°ru_gë_tblIãm
, (*)
sig
->
≈u_ªque°
.
∑rgv
, (
STRU_GET_TABLE_ITEM
));

1709 
	`≈_di•œy_èbÀ_ôem
(&
°ru_gë_tblIãm
);

1711 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_gë_ªque°_ack_sig
), 
NPU_GET_REQUEST_ACK_SIG
);

1712 i‡(
ª∂y_sig
 =
NULL
)

1714 
	`WDDI_WARNING
("linx_alloc() failed\n");

1715  
ERR_LINX_ALLOC
;

1717 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
cmd
 = 
NPU_GET_TRUNK_INFO
;

1718 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
ªsu…
 = 
STATUS_OK
;

1720 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

1722 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),client);

1723  
ERR_LINX_SEND
;

1740 if(
	`löx_‰ì_buf
(
löx_öfo
->
löx
,&
sig
) == -1)

1742 
	`WDDI_WARNING
("löx_‰ì_buf(Ë%s", 
	`°ªº‹
(
î∫o
));

1748 
ATTACH_CLIENT_SIG
:

1750 *
˛õ¡Name
=
NULL
;

1751 if(0==
	`löx_gë_«me
(
löx_öfo
->
löx
,
˛õ¡
,&
˛õ¡Name
))

1753 
	`WDDI_WARNING
("Sîvî: C⁄è˘ wôh clõ¡Üo°. clõ¡ =0x%xÇame:%†\n",
˛õ¡
,
˛õ¡Name
);

1754 
	`löx_‰ì_«me
(
löx_öfo
->
löx
,&
˛õ¡Name
);

1758 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"Server: Contact with clientÜost. client =0x%x\n",client);

1762 
	`löx_‰ì_buf
(
löx_öfo
->
löx
,&
sig
);

1764 #i‡
ENEA_RELEASE


1765 
ªt
;

1766 
ªt
 = 
	`≈_˛o£_vp‹t_f‹_˛õ¡
(
˛õ¡
);

1767 if(
ªt
 !
STATUS_OK
)

1769 
	`WDDI_WARNING
("≈_˛o£_vp‹t_f‹_˛õ¡ faû clõ¡ 0x%0x \n",
˛õ¡
);

1774 
ATTACH_NPUMON_SIG
:

1776 
	`LINX_CLIENT_PRINT
(
löx_öfo
->
löx
,
˛õ¡
,"Server: Contact with NPUMONÜost. client =0x%x\n",client);

1777 
	`löx_‰ì_buf
(
löx_öfo
->
löx
,&
sig
);

1778 ()
	`≈_˛o£_vp‹t_f‹_≈um⁄
(
˛õ¡
);

1783 
	`WDDI_WARNING
("Server: Unexpected signalÑeceived "

1785 
sig
->
sig_no
);

1786 i‡(
	`löx_‰ì_buf
(
löx_öfo
->
löx
, &
sig
) == -1)

1788 
	`WDDI_WARNING
("löx_‰ì_buf(Ë%s", 
	`°ªº‹
(
î∫o
));

1796 
	}
}

1798 
	$≈u_öô_vp‹t_öfo
()

1800 
Àn
;

1801 
Àn
 = (
h£¨ch_d©a
);

1803 
ht
 = 
	`mÆloc
(
Àn
);

1804 
	`mem£t
(
ht
,0,
Àn
);

1805 
	`h¸óã_r
(
MAX_PORTS
, 
ht
);

1807 
	}
}

1809 
	$≈u_öô_u∂ök_öfo
()

1811 
Àn
;

1812 
Àn
 = (
h£¨ch_d©a
);

1814 
u∂ök_ht
 = 
	`mÆloc
(
Àn
);

1815 
	`mem£t
(
u∂ök_ht
,0,
Àn
);

1816 
	`h¸óã_r
(
MAX_FLOWS
, 
u∂ök_ht
);

1817 
	}
}

1819 
	$≈u_öô_dow∆ök_öfo
()

1821 
Àn
;

1822 
Àn
 = (
h£¨ch_d©a
);

1824 
dow∆ök_ht
 = 
	`mÆloc
(
Àn
);

1825 
	`mem£t
(
dow∆ök_ht
,0,
Àn
);

1826 
	`h¸óã_r
(
MAX_FLOWS
, 
dow∆ök_ht
);

1827 
	}
}

1828 
	$≈u_öô_¨p_öfo
()

1830 
Àn
;

1831 
Àn
 = (
h£¨ch_d©a
);

1833 
¨p_ht
 = 
	`mÆloc
(
Àn
);

1834 
	`mem£t
(
¨p_ht
,0,
Àn
);

1835 
	`h¸óã_r
(
MAX_ARPS
, 
¨p_ht
);

1836 
	}
}

1838 
	$≈u_öô_upd©e_bvci_öfo
()

1840 
Àn
;

1841 
Àn
 = (
h£¨ch_d©a
);

1843 
upd©e_bvci_ht
 = 
	`mÆloc
(
Àn
);

1844 
	`mem£t
(
upd©e_bvci_ht
,0,
Àn
);

1845 
	`h¸óã_r
(
MAX_BVCIS
, 
upd©e_bvci_ht
);

1846 
	}
}

1848 
	$≈u_öô_åunk_öfo
()

1850 
Àn
;

1851 
Àn
 = (
h£¨ch_d©a
);

1853 
åunk_ht
 = 
	`mÆloc
(
Àn
);

1854 
	`mem£t
(
åunk_ht
,0,
Àn
);

1855 
	`h¸óã_r
(
MAX_TRUNKS
, 
åunk_ht
);

1856 
	}
}

1858 
	$≈u_öô_‰_ul_lök_èbÀ_öfo
()

1860 
Àn
;

1861 
Àn
 = (
h£¨ch_d©a
);

1863 
‰_ul_lök_èbÀ_ht
 = 
	`mÆloc
(
Àn
);

1864 
	`mem£t
(
‰_ul_lök_èbÀ_ht
,0,
Àn
);

1865 
	`h¸óã_r
(
MAX_FLOWS
, 
‰_ul_lök_èbÀ_ht
);

1866 
	}
}

1868 
	$≈u_öô_‰_dl_lök_èbÀ_öfo
()

1870 
Àn
;

1871 
Àn
 = (
h£¨ch_d©a
);

1873 
‰_dl_lök_èbÀ_ht
 = 
	`mÆloc
(
Àn
);

1874 
	`mem£t
(
‰_dl_lök_èbÀ_ht
,0,
Àn
);

1875 
	`h¸óã_r
(
MAX_FLOWS
, 
‰_dl_lök_èbÀ_ht
);

1876 
	}
}

1877 
	$≈u_öô_≥î_vp‹t_öfo
()

1879 
Àn
;

1880 
Àn
 = (
h£¨ch_d©a
);

1882 
≥î_vp‹t_ht
 = 
	`mÆloc
(
Àn
);

1883 
	`mem£t
(
≥î_vp‹t_ht
,0,
Àn
);

1884 
	`h¸óã_r
(
MAX_PORTS
, 
≥î_vp‹t_ht
);

1886 
	}
}

1889 
	$≈u_£t_vp‹t_öfo
(
LINX_SPID
 
˛õ¡
,
u8
 
vp_ty≥
,
u32
 
ùaddr_§c
,u32 
p‹t_§c
)

1892 
ENTRY
 
ôem
={0};

1893 
ENTRY
 *
found_ôem
;

1894 
ôem°r
[16]={0};

1895 
STRU_VPORT_INFO
 *
p_Vp‹tInfo
;

1896 
ôem
.
key
 = 
ôem°r
;

1898 
	`•rötf
(
ôem
.
key
,"%d",
p‹t_§c
);

1900 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
ht
))

1902 
p_Vp‹tInfo
 = 
	`mÆloc
((
STRU_VPORT_INFO
));

1903 
	`mem£t
(
p_Vp‹tInfo
,0,(
STRU_VPORT_INFO
));

1904 
ôem
.
key
 = 
	`mÆloc
(16);

1905 
	`mem£t
(
ôem
.
key
,0,16);

1906 
	`•rötf
(
ôem
.
key
,"%d",
p‹t_§c
);

1909 
ôem
.
d©a
 = (*)
p_Vp‹tInfo
;

1910 ()
	`h£¨ch_r
(
ôem
, 
ENTER
,&
found_ôem
,
ht
) ;

1911 
	`¸óã_ht_lök
(&
vp‹t_nodehód
, 
ôem
.
key
);

1915 
p_Vp‹tInfo
 = (
STRU_VPORT_INFO
 *)
found_ôem
->
d©a
;

1918 if(
p_Vp‹tInfo
->
U£dFœg
 =
USED
)

1920 if(
vp_ty≥
 =
VP_TYPE_FR
)

1922 
u32
 
ˇrd
;

1923 
u32
 
åunk
;

1924 
u32
 
group
;

1925 
u32
 
dlci
;

1926 
	`≈_‰addr_u≈ack
(
p‹t_§c
,&
ˇrd
,&
åunk
,&
group
,&
dlci
);

1927 
	`WDDI_WARNING
("w¨¬ög :≈u_£t_vp‹t_öfÿvp‹àha†bì¿u£d !p‹à%d : S%dP%dFR%dD%d\n",
	`ht⁄s
(
p‹t_§c
),
ˇrd
,
åunk
,
group
,
dlci
);

1931 
	`WDDI_WARNING
("w¨¬ög :≈u_£t_vp‹t_öfÿvp‹àha†bì¿u£d !p‹à%d\n",
	`ht⁄s
(
p‹t_§c
));

1934 
p_Vp‹tInfo
->
˛õ¡
 = client;

1935 
p_Vp‹tInfo
->
vp_ty≥
 = vp_type;

1936 
p_Vp‹tInfo
->
ùaddr_§c
 = ipaddr_src;

1937 
p_Vp‹tInfo
->
p‹t_§c
 =Öort_src;

1941 if(
vp_ty≥
 =
VP_TYPE_FR
)

1944 
u32
 
ˇrd
;

1945 
u32
 
åunk
;

1946 
u32
 
group
;

1947 
u32
 
dlci
;

1948 
	`≈_‰addr_u≈ack
(
p‹t_§c
,&
ˇrd
,&
åunk
,&
group
,&
dlci
);

1954 
p_Vp‹tInfo
->
ch_öfo
.
ˇrd
 = card;

1955 
p_Vp‹tInfo
->
ch_öfo
.
vÂ‹t
 = 
p‹t_§c
;

1956 
p_Vp‹tInfo
->
ch_öfo
.
åunk
 =Årunk;

1957 
p_Vp‹tInfo
->
ch_öfo
.
group
 = group;

1958 
p_Vp‹tInfo
->
ch_öfo
.
dlci
 = dlci;

1959 
p_Vp‹tInfo
->
ch_öfo
.
¶Ÿ_£À˘i⁄
 = 
	`≈_gë_¶Ÿs_£À˘i⁄
(
ˇrd
,
åunk
,
group
);

1961 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

1962 
p_Vp‹tInfo
->
ch_öfo
.
QosEn
 = 
öôül_cfg
->
°ru_°m1_cfg_öfo
[
ˇrd
-1].
åunk_öfo
[
åunk
-1].
group_öfo
[
group
].
PVCQos
[
dlci
].
admöSèã
;

1963 
p_Vp‹tInfo
->
ch_öfo
.
be
 = 
öôül_cfg
->
°ru_°m1_cfg_öfo
[
ˇrd
-1].
åunk_öfo
[
åunk
-1].
group_öfo
[
group
].
PVCQos
[
dlci
].be;

1964 
p_Vp‹tInfo
->
ch_öfo
.
bc
 = 
öôül_cfg
->
°ru_°m1_cfg_öfo
[
ˇrd
-1].
åunk_öfo
[
åunk
-1].
group_öfo
[
group
].
PVCQos
[
dlci
].bc;

1965 
p_Vp‹tInfo
->
ch_öfo
.
cú

öôül_cfg
->
°ru_°m1_cfg_öfo
[
ˇrd
-1].
åunk_öfo
[
åunk
-1].
group_öfo
[
group
].
PVCQos
[
dlci
].cir;

1967 
p_Vp‹tInfo
->
ch_öfo
.
QosEn
 =1;

1968 
p_Vp‹tInfo
->
ch_öfo
.
be
 = 0;

1969 
p_Vp‹tInfo
->
ch_öfo
.
bc
 = 0;

1970 
p_Vp‹tInfo
->
ch_öfo
.
cú
= 2048;

1973  
STATUS_OK
;

1974 
	}
}

1976 
	$≈u_£t_u∂ök_öfo
(
NP_UL_FLOW_INFO
* 
Êowöfo
)

1979 
ENTRY
 
ôem
={0};

1980 
ENTRY
 *
found_ôem
;

1981 
ôem°r
[30]={0};

1982 
NP_UL_FLOW_INFO
 *
p_FlowInfo
;

1983 
ôem
.
key
 = 
ôem°r
;

1985 
	`•rötf
(
ôem
.
key
,"%d%d",
Êowöfo
->
vp‹t
,Êowöfo->
NRI
);

1986 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
u∂ök_ht
))

1988 
p_FlowInfo
 = 
	`mÆloc
((
NP_UL_FLOW_INFO
));

1989 
	`mem£t
(
p_FlowInfo
,0,(
NP_UL_FLOW_INFO
));

1990 
ôem
.
key
 = 
	`mÆloc
(30);

1991 
	`mem£t
(
ôem
.
key
,0,30);

1992 
	`•rötf
(
ôem
.
key
,"%d%d",
Êowöfo
->
vp‹t
,Êowöfo->
NRI
);

1995 
ôem
.
d©a
 = (*)
p_FlowInfo
;

1996 ()
	`h£¨ch_r
(
ôem
, 
ENTER
,&
found_ôem
,
u∂ök_ht
) ;

1997 
	`¸óã_ht_lök
(&
u∂ök_nodehód
, 
ôem
.
key
);

2001 
p_FlowInfo
 = (
NP_UL_FLOW_INFO
 *)
found_ôem
->
d©a
;

2003 if(
USED
 =
p_FlowInfo
->
U£dFœg
)

2005 
	`WDDI_WARNING
("w¨¬ög :≈u_£t_u∂ök_öfo: Thi†ôem ha†bì¿u£d! vÂ‹à%d,NRIVÆuê%d\n",
Êowöfo
->
vp‹t
,Êowöfo->
NRI
);

2007 
	`mem˝y
(
p_FlowInfo
,
Êowöfo
,(
NP_UL_FLOW_INFO
));

2008  
STATUS_OK
;

2009 
	}
}

2011 
	$≈u_£t_dow∆ök_öfo
(
NP_DL_FLOW_INFO
* 
Êowöfo
)

2014 
ENTRY
 
ôem
={0};

2015 
ENTRY
 *
found_ôem
;

2016 
ôem°r
[30]={0};

2017 
NP_DL_FLOW_INFO
 *
p_FlowInfo
;

2018 
ôem
.
key
 = 
ôem°r
;

2019 
u32
 
key1
 = 
Êowöfo
->
ruÀ
.
Dp‹tSèπVÆue
;

2020 
u32
 
key2
 = 
Êowöfo
->
ruÀ
.
BVCI
;

2022 
	`•rötf
(
ôem
.
key
,"%d%d",
key1
,
key2
);

2023 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
dow∆ök_ht
))

2025 
p_FlowInfo
 = 
	`mÆloc
((
NP_DL_FLOW_INFO
));

2026 
	`mem£t
(
p_FlowInfo
,0,(
NP_DL_FLOW_INFO
));

2027 
ôem
.
key
 = 
	`mÆloc
(30);

2028 
	`mem£t
(
ôem
.
key
,0,30);

2029 
	`•rötf
(
ôem
.
key
,"%d%d",
key1
,
key2
);

2032 
ôem
.
d©a
 = (*)
p_FlowInfo
;

2033 ()
	`h£¨ch_r
(
ôem
, 
ENTER
,&
found_ôem
,
dow∆ök_ht
) ;

2034 
	`¸óã_ht_lök
(&
dow∆ök_nodehód
, 
ôem
.
key
);

2035 
	`¸óã_ht_lök
(&
‰_dl_bvci_nodehód
[
Êowöfo
->
ruÀ
.
BVCI
],
ôem
.
key
);

2036 
	`¸óã_ht_lök
(&
‰_dl_dp‹t_nodehód
[
Êowöfo
->
ruÀ
.
Dp‹tSèπVÆue
],
ôem
.
key
);

2040 
p_FlowInfo
 = (
NP_DL_FLOW_INFO
 *)
found_ôem
->
d©a
;

2042 if(
USED
 =
p_FlowInfo
->
U£dFœg
)

2044 
	`WDDI_WARNING
("w¨¬ög :≈u_£t_dow∆ök_öfo: Thi†ôem ha†bì¿u£d! bvcò0x%x,Dp‹tSèπVÆuê0x%x(%d)\n",
key2
,
	`ht⁄s
(
key1
),htons(key1));

2046 
	`mem˝y
(
p_FlowInfo
,
Êowöfo
,(
NP_DL_FLOW_INFO
));

2047  
STATUS_OK
;

2048 
	}
}

2051 
	$≈u_£t_¨p_öfo
(
u32
 
ù
, 
NP_ARP_INFO
* 
¨pöfo
)

2054 
ENTRY
 
ôem
={0};

2055 
ENTRY
 *
found_ôem
;

2056 
ôem°r
[30]={0};

2057 
NP_ARP_INFO
 *
p_AΩInfo
;

2058 
ôem
.
key
 = 
ôem°r
;

2060 
	`•rötf
(
ôem
.
key
,"%d",
ù
);

2061 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
¨p_ht
))

2063 
p_AΩInfo
 = 
	`mÆloc
((
NP_ARP_INFO
));

2064 
	`mem£t
(
p_AΩInfo
,0,(
NP_ARP_INFO
));

2065 
ôem
.
key
 = 
	`mÆloc
(16);

2066 
	`mem£t
(
ôem
.
key
,0,16);

2067 
	`•rötf
(
ôem
.
key
,"%d",
ù
);

2069 
ôem
.
d©a
 = (*)
p_AΩInfo
;

2070 ()
	`h£¨ch_r
(
ôem
, 
ENTER
,&
found_ôem
,
¨p_ht
) ;

2071 
	`¸óã_ht_lök
(&
¨p_nodehód
, 
ôem
.
key
);

2075 
p_AΩInfo
 = (
NP_ARP_INFO
 *)
found_ôem
->
d©a
;

2078 
p_AΩInfo
->
Ip
 = 
¨pöfo
->Ip;

2079 
	`mem˝y
(
p_AΩInfo
->
Mac
,
¨pöfo
->Mac,6);

2080  
STATUS_OK
;

2081 
	}
}

2083 
	$≈u_£t_upd©e_bvci_öfo
(
u32
 
vÂ‹t
, 
u16
 
NS_BVCI_ﬁd
, 
NP_UPDATE_BVCI_FLOW_INFO
* 
Êowöfo
,
STRU_VPORT_INFO
 *
Vp‹tInfo
)

2086 
ENTRY
 
ôem
={0};

2087 
ENTRY
 *
found_ôem
;

2088 
ôem°r
[30]={0};

2089 
NP_UPDATE_BVCI_FLOW_INFO
 *
p_Upd©eBvciInfo
;

2090 
ôem
.
key
 = 
ôem°r
;

2092 
	`•rötf
(
ôem
.
key
,"%d%d",
vÂ‹t
,
NS_BVCI_ﬁd
);

2093 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
upd©e_bvci_ht
))

2095 
p_Upd©eBvciInfo
 = 
	`mÆloc
((
NP_UPDATE_BVCI_FLOW_INFO
));

2096 
	`mem£t
(
p_Upd©eBvciInfo
,0,(
NP_UPDATE_BVCI_FLOW_INFO
));

2097 
ôem
.
key
 = 
	`mÆloc
(30);

2098 
	`mem£t
(
ôem
.
key
,0,30);

2099 
	`•rötf
(
ôem
.
key
,"%d%d",
vÂ‹t
,
NS_BVCI_ﬁd
);

2100 
	`WDDI_INFO
("Info:Çpu_£t_upd©e_bvci_öfo, së iãm.key = %†\n",
ôem
.
key
);

2102 
ôem
.
d©a
 = (*)
p_Upd©eBvciInfo
;

2103 ()
	`h£¨ch_r
(
ôem
, 
ENTER
,&
found_ôem
,
upd©e_bvci_ht
) ;

2104 
	`¸óã_ht_lök
(&
upd©e_bvci_nodehód
, 
ôem
.
key
);

2106 
	`¸óã_ht_lök
(&
Vp‹tInfo
->
bvci_nodehód
, 
ôem
.
key
);

2111 
p_Upd©eBvciInfo
 = (
NP_UPDATE_BVCI_FLOW_INFO
 *)
found_ôem
->
d©a
;

2113 if(
USED
 =
p_Upd©eBvciInfo
->
U£dFœg
)

2115 
	`WDDI_WARNING
("w¨¬ög :≈u_£t_upd©e_bvci_öfo: Thi†ôem ha†bì¿u£d! vÂ‹à0x%x,NS_BVCI_ﬁd = 0x%x\n",
vÂ‹t
,
NS_BVCI_ﬁd
);

2117 
	`mem˝y
(
p_Upd©eBvciInfo
,
Êowöfo
,(
NP_UPDATE_BVCI_FLOW_INFO
));

2118  
STATUS_OK
;

2119 
	}
}

2121 
	$≈u_£t_åunk_öfo
(
u32
 
åunkid
, 
NP_TRUNK_INFO
* 
åunköfo
)

2124 
ENTRY
 
ôem
={0};

2125 
ENTRY
 *
found_ôem
;

2126 
ôem°r
[30]={0};

2127 
NP_TRUNK_INFO
 *
p_åunkInfo
;

2128 
ôem
.
key
 = 
ôem°r
;

2130 
	`WDDI_INFO
("######£àåunkid = %d \n",
åunkid
);

2131 
	`•rötf
(
ôem
.
key
,"%d",
åunkid
);

2132 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
åunk_ht
))

2134 
p_åunkInfo
 = 
	`mÆloc
((
NP_TRUNK_INFO
));

2135 
	`mem£t
(
p_åunkInfo
,0,(
NP_TRUNK_INFO
));

2136 
ôem
.
key
 = 
	`mÆloc
(16);

2137 
	`mem£t
(
ôem
.
key
,0,16);

2138 
	`•rötf
(
ôem
.
key
,"%d",
åunkid
);

2139 
	`WDDI_INFO
("£àôem.key = %†\n",
ôem
.
key
);

2141 
ôem
.
d©a
 = (*)
p_åunkInfo
;

2142 ()
	`h£¨ch_r
(
ôem
, 
ENTER
,&
found_ôem
,
åunk_ht
) ;

2143 
	`¸óã_ht_lök
(&
åunk_nodehód
, 
ôem
.
key
);

2147 
p_åunkInfo
 = (
NP_TRUNK_INFO
 *)
found_ôem
->
d©a
;

2150 
	`mem˝y
(
p_åunkInfo
,
åunköfo
,(
NP_TRUNK_INFO
));

2151  
STATUS_OK
;

2152 
	}
}

2154 
	$≈u_£t_‰_ul_lök_èbÀ_öfo
(
STRU_SET_UPLINK_PATH_LINK_TABLE
* 
lökInfo
)

2157 
ENTRY
 
ôem
={0};

2158 
ENTRY
 *
found_ôem
;

2159 
ôem°r
[30]={0};

2160 
STRU_SET_UPLINK_PATH_LINK_TABLE
 *
p_LökInfo
;

2161 
ôem
.
key
 = 
ôem°r
;

2163 
	`•rötf
(
ôem
.
key
,"%d",
lökInfo
->
P‹tSrc
);

2164 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
‰_ul_lök_èbÀ_ht
))

2166 
p_LökInfo
 = 
	`mÆloc
((
STRU_SET_UPLINK_PATH_LINK_TABLE
));

2167 
	`mem£t
(
p_LökInfo
,0,(
STRU_SET_UPLINK_PATH_LINK_TABLE
));

2168 
ôem
.
key
 = 
	`mÆloc
(30);

2169 
	`mem£t
(
ôem
.
key
,0,30);

2170 
	`•rötf
(
ôem
.
key
,"%d",
lökInfo
->
P‹tSrc
);

2171 
	`WDDI_INFO
("Info:Çpu_£t_‰_ul_lök_èbÀ_öfo, së iãm.key: %†\n",
ôem
.
key
);

2173 
ôem
.
d©a
 = (*)
p_LökInfo
;

2174 ()
	`h£¨ch_r
(
ôem
, 
ENTER
,&
found_ôem
,
‰_ul_lök_èbÀ_ht
) ;

2175 
	`¸óã_ht_lök
(&
‰_ul_lök_èbÀ_nodehód
, 
ôem
.
key
);

2179 
p_LökInfo
 = (
STRU_SET_UPLINK_PATH_LINK_TABLE
 *)
found_ôem
->
d©a
;

2181 
	`mem˝y
(
p_LökInfo
,
lökInfo
,(
STRU_SET_UPLINK_PATH_LINK_TABLE
));

2182  
STATUS_OK
;

2183 
	}
}

2186 
	$≈u_£t_‰_dl_lök_èbÀ_öfo
(
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
* 
lökInfo
)

2189 
ENTRY
 
ôem
={0};

2190 
ENTRY
 *
found_ôem
;

2191 
ôem°r
[30]={0};

2192 
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
 *
p_LökInfo
;

2193 
ôem
.
key
 = 
ôem°r
;

2195 
	`•rötf
(
ôem
.
key
,"%d",
lökInfo
->
NSEI
);

2196 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
‰_dl_lök_èbÀ_ht
))

2198 
p_LökInfo
 = 
	`mÆloc
((
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
));

2199 
	`mem£t
(
p_LökInfo
,0,(
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
));

2200 
ôem
.
key
 = 
	`mÆloc
(30);

2201 
	`mem£t
(
ôem
.
key
,0,30);

2202 
	`•rötf
(
ôem
.
key
,"%d",
lökInfo
->
NSEI
);

2203 
	`WDDI_INFO
("Info:Çpu_£t_‰_dl_lök_èbÀ_öfo, së iãm.key = %†\n",
ôem
.
key
);

2205 
ôem
.
d©a
 = (*)
p_LökInfo
;

2206 ()
	`h£¨ch_r
(
ôem
, 
ENTER
,&
found_ôem
,
‰_dl_lök_èbÀ_ht
) ;

2207 
	`¸óã_ht_lök
(&
‰_dl_lök_èbÀ_nodehód
, 
ôem
.
key
);

2211 
p_LökInfo
 = (
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
 *)
found_ôem
->
d©a
;

2213 
	`mem˝y
(
p_LökInfo
,
lökInfo
,(
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
));

2214  
STATUS_OK
;

2215 
	}
}

2217 
	$≈u_dl_lök_èbÀ_dñëe
(
WP_U32
 
vf‹t
)

2219 
NODE
 *
ãmp
;

2220 
ENTRY
 
ôem
={0};

2221 
ENTRY
 *
found_ôem
;

2222 
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
 *
p_lökInfo
;

2223 
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
 
NewlökInfo
;

2224 
u32
 
i
 = 0,
j
 = 0;

2225 
°©us
;

2226 
ãmp
=
‰_dl_lök_èbÀ_nodehód
;

2227 
	`mem£t
(&
NewlökInfo
, 0, (
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
));

2228 
ãmp
!=
NULL
)

2230 
ôem
.
key
 = 
ãmp
->
ht_key
;

2231 
ãmp
Òemp->
√xt
;

2233 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
‰_dl_lök_èbÀ_ht
))

2235 
	`WDDI_WARNING
("WhenÇp_dl_link_table_delete failed\n");

2239 
p_lökInfo
 = (
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
 *)
found_ôem
->
d©a
;

2240 
i
 = 0; i< 
p_lökInfo
->
FrVp‹tAcôveNum
; i ++)

2242 if(
vf‹t
 =
p_lökInfo
->
NsvcGΩ
[
i
].vfort)

2247 if(
i
 < 
p_lökInfo
->
FrVp‹tAcôveNum
)

2249 
NewlökInfo
.
NSEI
 = 
p_lökInfo
->NSEI;

2250 
i
 = 0; i< 
p_lökInfo
->
FrVp‹tAcôveNum
; i ++)

2252 if(
vf‹t
 !
p_lökInfo
->
NsvcGΩ
[
i
].vfort)

2254 
NewlökInfo
.
FrVp‹tAcôveNum
 ++;

2255 
NewlökInfo
.
NsvcGΩ
[
j
].
Fœg
 = 
p_lökInfo
->NsvcGΩ[
i
].Flag;

2256 
NewlökInfo
.
NsvcGΩ
[
j
].
vf‹t
 = 
p_lökInfo
->NsvcGΩ[
i
].vfort;

2257 
j
 ++;

2260 
°©us
 = 
	`≈_dl_lök_èbÀ_£t
(&
NewlökInfo
);

2261 if(0 !
°©us
)

2263  
°©us
;

2269 
	}
}

2271 
	$≈u_˛ór_vp‹t_öfo
(
u32
 
p‹t_§c
,
u8
 
vp_ty≥
)

2273 
ENTRY
 
ôem
={0};

2274 
ENTRY
 *
found_ôem
;

2275 
ôem°r
[30];

2276 
STRU_VPORT_INFO
 *
p_Vp‹tInfo
;

2277 
ôem
.
key
 = 
ôem°r
;

2278 
°©us
;

2279 
	`•rötf
(
ôem
.
key
,"%d",
p‹t_§c
);

2280 
	`WDDI_INFO
("Info:Çpu_˛ór_vp‹t_öfo, iãm.key:%s\n",
ôem
.
key
);

2282 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
ht
))

2284 
	`WDDI_WARNING
("W¨n:Çpu_˛ór_vp‹t_öfo, Whí cÀ¨ vp‹t,hashÇŸ foundÖ‹t_§c: %d\n",
p‹t_§c
);

2287 
p_Vp‹tInfo
 = (
STRU_VPORT_INFO
 *)
found_ôem
->
d©a
;

2288 if(
p_Vp‹tInfo
->
U£dFœg
 =
UNUSED
)

2290 
	`WDDI_WARNING
("W¨n:Çpu_˛ór_vp‹t_öfo, Whí cÀ¨ vp‹t,vp‹àunu£d: %d\n",
p‹t_§c
);

2294 
u32
 
ƒi
=0;

2296 
p_Vp‹tInfo
->
ƒi_vÆid_èlbe
[
ƒi
] !=0)

2298 ()
	`≈_ul_rouã_èbÀ_dñëe
(
p‹t_§c
,
p_Vp‹tInfo
->
ƒi_vÆid_èlbe
[
ƒi
]-1);

2299 
ƒi
++;

2300 if(
ƒi
>256);

2302 
	`mem£t
(
p_Vp‹tInfo
->
ƒi_vÆid_èlbe
,0,(p_VportInfo->nri_valid_talbe));

2304 if(
vp_ty≥
 =
VP_TYPE_UDP
)

2306 ()
	`≈_ul_lök_èbÀ_dñëe
(
p‹t_§c
);

2310 
°©us
 = 
	`≈_upd©eBVCI_Êow_dñëe
(
p‹t_§c
,0,
DEL_UL_UPDATE_BVCI_TALBE_BASED_ON_PORT
);

2311 if(
°©us
 !
STATUS_OK
)

2313 
	`WDDI_WARNING
("npu_clear_vport_infoÇp_updateBVCI_flow_deleteÉrror");

2316 if(
vp_ty≥
 =
VP_TYPE_UDP
)

2319 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

2320 
u32
 
Dp‹t
;

2321 
WP_h™dÀ
 
Dp‹tGΩÊow_h™dÀ
[];

2322 
Dp‹tGΩaggInfo
 
Dp‹tGΩagg_h™dÀ
[];

2323 
Dp‹t
 = 0;Dport<65535;Dport++)

2325 if(
Dp‹tGΩÊow_h™dÀ
[
Dp‹t
]!= 0)

2327 if(
	`ht⁄s
(
p‹t_§c
Ë>ht⁄s(
Dp‹t
Ë&& ht⁄s’‹t_§cË<(ht⁄s(Dp‹tË+ 
Dp‹tGΩagg_h™dÀ
[Dp‹t].
P‹tSize
-1))

2330 
°©us
 = 
	`≈_dl_rouã_èbÀ_dñëe
(
Dp‹t
,0,
DEL_DL_RULE_TALBE_BASED_ON_DPORT
);

2332 
	`≈_dl_ªÀa£_FMC_ªsour˚
(
Dp‹t
);

2338 if(
vp_ty≥
 =
VP_TYPE_FR
)

2340 
°©us
 = 
	`≈u_dl_lök_èbÀ_dñëe
(
p‹t_§c
);

2341 if(
°©us
 !
STATUS_OK
)

2343 
	`WDDI_WARNING
("npu_dl_link_table_delete() statusÉrror");

2348 
°©us
 = 
	`≈_ul_ªÀa£_vp‹t_ªsour˚
(
p‹t_§c
);

2349 if(
°©us
 !
STATUS_OK
)

2351 
	`WDDI_WARNING
("np_ul_release_vport_resource() statusÉrror");

2355 
°©us
 = 
	`≈_dl_ªÀa£_vp‹t_ªsour˚
(
p‹t_§c
);

2356 if(
°©us
 !
STATUS_OK
)

2358 
	`WDDI_WARNING
("np_dl_release_vport_resource() statusÉrror");

2362 if(
p_Vp‹tInfo
->
U£dFœg
 =
USED
)

2364 
p_Vp‹tInfo
->
U£dFœg
 = 
UNUSED
;

2368 
	`WDDI_WARNING
("W¨n:Çpu_˛ór_vp‹t_öfo, vp‹àhavêbì¿£àtÿunu£d !p‹à%d \n",
p‹t_§c
);

2371 if(
vp_ty≥
 =
VP_TYPE_FR
)

2376  
STATUS_OK
;

2377 
	}
}

2379 
STRU_VPORT_INFO
 * 
	$≈u_gë_vp‹t_öfo
(
u32
 
p‹t_§c
)

2381 
ENTRY
 
ôem
={0};

2382 
ENTRY
 *
found_ôem
;

2383 
ôem°r
[30];

2384 
ôem
.
key
 = 
ôem°r
;

2385 
	`•rötf
(
ôem
.
key
,"%d",
p‹t_§c
);

2389 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
ht
))

2391 #i‡
ENEA_RELEASE


2392 
	`WDDI_INFO
("Info:Çpu_gë_vp‹t_öfÿÁû.Ö‹t_§c: %ld\n",
p‹t_§c
);

2394 
	`WDDI_WARNING
("W¨n:Çpu_gë_vp‹t_öfÿÁû.Ö‹t_§c: %ld\n",
p‹t_§c
);

2396  
NULL
;

2399 { 
STRU_VPORT_INFO
 *
p_Vp‹tInfo
;

2400 
p_Vp‹tInfo
 = (
STRU_VPORT_INFO
 *)
found_ôem
->
d©a
;

2401 if(((
STRU_VPORT_INFO
 *)
found_ôem
->
d©a
)->
U£dFœg
 =
USED
)

2406 if(((
STRU_VPORT_INFO
 *)
found_ôem
->
d©a
)->
vp_ty≥
 =
VP_TYPE_FR
)

2408 
u32
 
ˇrd
;

2409 
u32
 
åunk
;

2410 
u32
 
group
;

2411 
u32
 
dlci
;

2412 
	`≈_‰addr_u≈ack
(
p_Vp‹tInfo
->
p‹t_§c
,&
ˇrd
,&
åunk
,&
group
,&
dlci
);

2413 
	`WDDI_WARNING
("W¨n:Çpu_gë_vp‹t_öfo::vp‹àunu£d !Ö‹à0x%x : S%dP%dFR%dD%d\n",
p‹t_§c
,

2414 
ˇrd
,
åunk
,
group
,
dlci
);

2418 #i‡
ENEA_RELEASE


2419 
	`WDDI_INFO
("W¨n:Çpu_gë_vp‹t_öfo::vp‹àunu£d !Ö‹à%d\n",
p‹t_§c
);

2421 
	`WDDI_WARNING
("≈u_gë_vp‹t_öfÿÁûed vp‹àunu£d !Ö‹à%d\n",
p‹t_§c
);

2426  (
STRU_VPORT_INFO
 *)
found_ôem
->
d©a
;

2430 
	}
}

2432 
NP_UL_FLOW_INFO
 * 
	$≈u_gë_u∂ök_öfo
(
u32
 
vÂ‹t
,u32 
NRIVÆue
)

2434 
ENTRY
 
ôem
={0};

2435 
ENTRY
 *
found_ôem
;

2436 
ôem°r
[30];

2437 
ôem
.
key
 = 
ôem°r
;

2438 
	`•rötf
(
ôem
.
key
,"%d%d",
vÂ‹t
,
NRIVÆue
);

2440 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
u∂ök_ht
))

2443  
NULL
;

2447 if(((
NP_UL_FLOW_INFO
 *)
found_ôem
->
d©a
)->
U£dFœg
 =
USED
)

2454  (
NP_UL_FLOW_INFO
 *)
found_ôem
->
d©a
;

2456 
	}
}

2458 
NP_DL_FLOW_INFO
 * 
	$≈u_gë_dow∆ök_öfo
(
u16
 
Dp‹tSèπVÆue
,u16 
bvci
)

2460 
ENTRY
 
ôem
={0};

2461 
ENTRY
 *
found_ôem
;

2462 
ôem°r
[30];

2463 
ôem
.
key
 = 
ôem°r
;

2464 
	`•rötf
(
ôem
.
key
,"%d%d",
Dp‹tSèπVÆue
,
bvci
);

2465 
	`WDDI_INFO
("Info:Çpu_gë_dow∆ök_öfo, iãm.key:%†\n",
ôem
.
key
);

2466 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
dow∆ök_ht
))

2469  
NULL
;

2473 if(((
NP_DL_FLOW_INFO
 *)
found_ôem
->
d©a
)->
U£dFœg
 =
USED
)

2478 
	`WDDI_WARNING
("≈u_gë_dow∆ök_öfÿÁûed! Thi†ôem i†unu£d ! Dp‹tSèπVÆuê0x%x,ns_bvcò0x%x\n",
Dp‹tSèπVÆue
,
bvci
);

2480  (
NP_DL_FLOW_INFO
 *)
found_ôem
->
d©a
;

2482 
	}
}

2484 
NP_DL_FLOW_INFO
 * 
	$≈u_gë_dl_rouã_èbÀ_öfo
(* 
key
)

2486 
ENTRY
 
ôem
={0};

2487 
ENTRY
 *
found_ôem
;

2488 
NP_DL_FLOW_INFO
 *
p_EthFlowInfo
;

2489 
ôem°r
[30];

2490 
ôem
.
key
 = 
ôem°r
;

2491 
	`•rötf
(
ôem
.
key
,"%s",key);

2492 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
dow∆ök_ht
))

2494  
NULL
;

2498 
p_EthFlowInfo
 = (
NP_DL_FLOW_INFO
 *)
found_ôem
->
d©a
;

2500  
p_EthFlowInfo
;

2503  
NULL
;

2504 
	}
}

2506 
NP_UPDATE_BVCI_FLOW_INFO
 * 
	$≈u_gë_ul_bvci_èbÀ_öfo
(* 
key
)

2508 
ENTRY
 
ôem
={0};

2509 
ENTRY
 *
found_ôem
;

2510 
NP_UPDATE_BVCI_FLOW_INFO
 *
p_FlowInfo
;

2511 
ôem°r
[30];

2512 
ôem
.
key
 = 
ôem°r
;

2513 
	`•rötf
(
ôem
.
key
,"%s",key);

2514 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
upd©e_bvci_ht
))

2516  
NULL
;

2520 
p_FlowInfo
 = (
NP_UPDATE_BVCI_FLOW_INFO
 *)
found_ôem
->
d©a
;

2522  
p_FlowInfo
;

2525  
NULL
;

2526 
	}
}

2529 
STRU_SET_UPLINK_PATH_LINK_TABLE
 * 
	$≈u_gë_ul_lök_èbÀ_öfo
(
u32
 
P‹tSrc
)

2531 
ENTRY
 
ôem
={0};

2532 
ENTRY
 *
found_ôem
;

2533 
STRU_SET_UPLINK_PATH_LINK_TABLE
 *
p_lökTabÀ
;

2534 
ôem°r
[30] = {0};

2535 
ôem
.
key
 = 
ôem°r
;

2536 
	`•rötf
(
ôem
.
key
,"%d",
P‹tSrc
);

2537 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
‰_ul_lök_èbÀ_ht
))

2539 
	`WDDI_INFO
("Info:Çpu_gë_ul_lök_èbÀ_öfo, gë ul-lök faû, key:%s\n", 
ôem
.
key
);

2540  
NULL
;

2544 
p_lökTabÀ
 = (
STRU_SET_UPLINK_PATH_LINK_TABLE
 *)
found_ôem
->
d©a
;

2545  
p_lökTabÀ
;

2547 
	}
}

2549 
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
 * 
	$≈u_gë_dl_lök_èbÀ_öfo
(
u16
 
NSEI
)

2551 
ENTRY
 
ôem
={0};

2552 
ENTRY
 *
found_ôem
;

2553 
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
 *
p_lökTabÀ
;

2554 
ôem°r
[30];

2555 
ôem
.
key
 = 
ôem°r
;

2556 
	`•rötf
(
ôem
.
key
,"%d",
NSEI
);

2557 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
‰_dl_lök_èbÀ_ht
))

2559  
NULL
;

2563 
p_lökTabÀ
 = (
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
 *)
found_ôem
->
d©a
;

2564  
p_lökTabÀ
;

2566 
	}
}

2568 
NP_ARP_INFO
 * 
	$≈u_gë_¨p_öfo
(
u32
 
ù
)

2570 
ENTRY
 
ôem
={0};

2571 
ENTRY
 *
found_ôem
;

2572 
ôem°r
[30];

2573 
ôem
.
key
 = 
ôem°r
;

2574 
	`•rötf
(
ôem
.
key
,"%d",
ù
);

2576 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
¨p_ht
))

2578 
	`WDDI_WARNING
("Whí gëáΩ info,hashÇŸ found ip: %ld\n",
ù
);

2579  
NULL
;

2583  (
NP_ARP_INFO
 *)
found_ôem
->
d©a
;

2585 
	}
}

2587 
NP_UPDATE_BVCI_FLOW_INFO
 * 
	$≈u_gë_upd©e_bvci_öfo
(
u32
 
vÂ‹t
, 
u16
 
NS_BVCI_ﬁd
)

2589 
ENTRY
 
ôem
={0};

2590 
ENTRY
 *
found_ôem
;

2591 
ôem°r
[30];

2592 
ôem
.
key
 = 
ôem°r
;

2593 
	`•rötf
(
ôem
.
key
,"%d%d",
vÂ‹t
,
NS_BVCI_ﬁd
);

2595 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
upd©e_bvci_ht
))

2597 
	`WDDI_WARNING
("Whí gë upgødêbvcòöfo,hashÇŸ found vÂ‹t: %ld NS_BVCI_ﬁd: %d\n",
vÂ‹t
,
NS_BVCI_ﬁd
);

2598  
NULL
;

2602  (
NP_UPDATE_BVCI_FLOW_INFO
 *)
found_ôem
->
d©a
;

2604 
	}
}

2606 
NP_TRUNK_INFO
 * 
	$≈u_gë_åunk_öfo
(
u32
 
Trunkid
)

2608 
ENTRY
 
ôem
={0};

2609 
ENTRY
 *
found_ôem
;

2610 
ôem°r
[30];

2611 
ôem
.
key
 = 
ôem°r
;

2612 
	`•rötf
(
ôem
.
key
,"%d",
Trunkid
);

2614 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
åunk_ht
))

2616 
	`WDDI_WARNING
("Whí gëÅrunk info,hashÇŸ found Trunkid: %ld\n",
Trunkid
);

2617  
NULL
;

2621  (
NP_TRUNK_INFO
 *)
found_ôem
->
d©a
;

2623 
	}
}

2625 
	$≈u_£nd_udp_∑ckë
(
u8
* 
p
, 
u32
 
Àn
,u32 
ùaddr_§c
,u32 
ùaddr_d°
,u32 
p‹t_§c
, u32 
p‹t_d°
)

2628 
STRU_NPU_ETH_VLAN_HDR
 *
pSåuEthVœnHdr
 = 
NULL
;

2629 
STRU_NPU_ETH_HDR
 *
pSåuEthHdr
 = 
NULL
;

2630 
STRU_NPU_IP_HDR
 *
pSåuIpv4Hdr
 = 
NULL
;

2631 
STRU_NPU_UDP_HDR
 *
pSåuUdpHdr
 = 
NULL
;

2632 
u8
 *
pu8UdpD©a
 = 
NULL
;

2633 
AºaySídBuf
[
NPU_UDP_ETHPACK_LEN_MAX
+
NPU_UDP_ETHPACK_PROTECTION
];

2634 
u32
 
u32i
;

2635 
u32
 
tmp_Êag
 = 0;

2637 
u32
 
u32SídD©aLí
;

2638 
u16
 
u16ChkSum
;

2639 
u8
 
mac_d°
[6]={0x01,0x02,0x03,0x04,0x05,0x06};

2640 
u8
 
mac_§c
[6]={0x11,0x12,0x13,0x14,0x15,0x16};

2641 
ªt
;

2642 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

2644 
	`mem£t
((*)
AºaySídBuf
, 0, (
u8
Ë* 
NPU_UDP_ETHPACK_LEN_MAX
);

2645 ()
	`èp_sockë_gëhwaddr
(
mac_§c
);

2647 if(
öôül_cfg
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

2649 
pSåuEthVœnHdr
 = (
STRU_NPU_ETH_VLAN_HDR
 *)
AºaySídBuf
;

2651 
u32i
 = 0; u32i < 6; u32i++)

2653 
pSåuEthVœnHdr
->
ëhî_dho°
[
u32i
] = 
mac_d°
[u32i];

2655 
pSåuEthVœnHdr
->
ëhî_sho°
[
u32i
] = 
mac_§c
[u32i];;

2657 
pSåuEthVœnHdr
->
ëhî_ty≥_èg
 = 
	`ht⁄s
(
NPU_UDP_VLAN_TYPE_TAG
);

2658 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

2660 
pSåuEthVœnHdr
->
èg
 = 
	`ht⁄s
(
öôül_cfg
->
VœnTag
);

2661 
pSåuEthVœnHdr
->
ëhî_ty≥
 = 
	`ht⁄s
(
NPU_UDP_ETH_TYPE_IPV4
);

2662 
u32SídD©aLí
 = (
STRU_NPU_ETH_VLAN_HDR
Ë+ (
STRU_NPU_IP_HDR
) +

2663 (
STRU_NPU_UDP_HDR
Ë+ 
Àn
;

2665 
pSåuIpv4Hdr
 = (
STRU_NPU_IP_HDR
 *)(
AºaySídBuf
 + (
STRU_NPU_ETH_VLAN_HDR
));

2671 
pSåuEthHdr
 = (
STRU_NPU_ETH_HDR
 *)
AºaySídBuf
;

2672 
u32i
 = 0; u32ò< 
NPU_UDP_MAC_ADDR_LEN
; u32i++)

2674 
pSåuEthHdr
->
ëhî_dho°
[
u32i
] = 
mac_d°
[u32i];

2676 
pSåuEthHdr
->
ëhî_sho°
[
u32i
] = 
mac_§c
[u32i];;

2678 
pSåuEthHdr
->
ëhî_ty≥
 = 
	`ht⁄s
(
NPU_UDP_ETH_TYPE_IPV4
);

2679 
u32SídD©aLí
 = (
STRU_NPU_ETH_HDR
Ë+ (
STRU_NPU_IP_HDR
) +

2680 (
STRU_NPU_UDP_HDR
Ë+ 
Àn
;

2682 
pSåuIpv4Hdr
 = (
STRU_NPU_IP_HDR
 *)(
AºaySídBuf
 + (
STRU_NPU_ETH_HDR
));

2685 
pSåuIpv4Hdr
->
ù_vhl
 = 
NPU_UDP_IPV4_VER
;

2687 
pSåuIpv4Hdr
->
ù_tos
 = 
NPU_UDP_IPV4_TOS
;

2689 
pSåuIpv4Hdr
->
ù_Àn
 = 
	`ht⁄s
((
STRU_NPU_IP_HDR
) +

2691 (
STRU_NPU_UDP_HDR
) +

2693 
Àn
);

2695 
pSåuIpv4Hdr
->
ù_id
 = 
	`ht⁄s
(
NPU_UDP_IPV4_ID
);

2697 
pSåuIpv4Hdr
->
ù_off
 = 
	`ht⁄s
(
NPU_UDP_IPV4_OFF
);

2699 
pSåuIpv4Hdr
->
ù_âl
 = 
NPU_UDP_IPV4_TTL
;

2701 
pSåuIpv4Hdr
->
ù_p
 = 
NPU_UDP_IPV4_PRO_UDP
;

2703 
pSåuIpv4Hdr
->
ù_sum
 = 
	`ht⁄s
(
NPU_UDP_IPV4_CKSUM
);

2706 
pSåuIpv4Hdr
->
ù_§c
 = 
ùaddr_§c
;

2707 
pSåuIpv4Hdr
->
ù_d°
 = 
ùaddr_d°
;

2709 
u16ChkSum
 = 
	`≈u_udp_ˇl_chksum
((
u8
 *)
pSåuIpv4Hdr
, (
u32
)(
STRU_NPU_IP_HDR
));

2710 
pSåuIpv4Hdr
->
ù_sum
 = 
u16ChkSum
;

2713 
pSåuUdpHdr
 = (
STRU_NPU_UDP_HDR
 *)((
u8
 *)
pSåuIpv4Hdr
 + (
STRU_NPU_IP_HDR
));

2716 
pSåuUdpHdr
->
uh_dp‹t
 = 
p‹t_d°
;

2718 
pSåuUdpHdr
->
uh_•‹t
 = 
p‹t_§c
;

2720 
pSåuUdpHdr
->
uh_uÀn
 = 
	`ht⁄s
((
STRU_NPU_UDP_HDR
Ë+ 
Àn
);

2722 
pSåuUdpHdr
->
uh_sum
 = 
	`ht⁄s
(
NPU_UDP_CHKSUM
);

2724 
pu8UdpD©a
 =(
u8
 *)
pSåuUdpHdr
 + (
STRU_NPU_UDP_HDR
);

2727 i‡(
Àn
 > 1490)

2729 
	`WDDI_WARNING
("###bef‹êmem˝y:Üí=%d, ip_§c=%0x, ip_d°=%0x,Ö_§c=%d,Ö_d°=%d\n", 
Àn
,
ùaddr_§c
, 
ùaddr_d°
, 
p‹t_§c
, 
p‹t_d°
);

2730 
tmp_Êag
 = 1;

2733 
	`mem˝y
(
pu8UdpD©a
,
p
,
Àn
);

2735 i‡(
tmp_Êag
)

2737 
	`WDDI_WARNING
("###á·î mem˝y:Üí=%d, ip_§c=%0x, ip_d°=%0x,Ö_§c=%d,Ö_d°=%d\n", 
Àn
,
ùaddr_§c
, 
ùaddr_d°
, 
p‹t_§c
, 
p‹t_d°
);

2743 
NPU_HOST_RSV_PACKET_INFO
 
SåuRsvPackëInfo
;

2744 
SåuRsvPackëInfo
.
vp_ty≥
 = 
VP_TYPE_UDP
;

2745 
SåuRsvPackëInfo
.
p‹t
 = 
p‹t_§c
;

2746 
SåuRsvPackëInfo
.
p‹t_§c
 = 
p‹t_d°
;

2747 
SåuRsvPackëInfo
.
ùaddr_§c
 = 
ùaddr_d°
;

2748 
SåuRsvPackëInfo
.
Àngth
 = 
Àn
;

2749 
SåuRsvPackëInfo
.
pd©a
 = 
pu8UdpD©a
;

2750 
ªt
;

2751 
ªt
 = 
	`≈u_di•©ch_∑ckë_to_˛õ¡
(&
SåuRsvPackëInfo
);

2752 if(
ªt
 < 0)
	`F¥ötf
("npu_dispatch_packet_to_clientÑet = %d",ret);

2754 
	`WDDI_INFO
("≈u_£nd_udp_∑ckë::ùaddr_d°=0x%x,ùaddr_§c=0x%x,p‹t_d°=0x%x,p‹t_§c=0x%x,Àn=0x%x,p=0x%x\n",
ùaddr_d°
,
ùaddr_§c
,
p‹t_d°
,
p‹t_§c
,
Àn
,
p
);

2755 
ªt
 = 
	`èp_sockë_gë¨p
(
ùaddr_d°
, 
AºaySídBuf
);

2756 if(
ªt
 != -1)

2758 
	`≈_ëh_ho°_£nd
(
u32SídD©aLí
, 
AºaySídBuf
);

2763 ()
	`èp_sockë_£nd
(
ùaddr_d°
, 
p‹t_d°
,
ùaddr_§c
,
p‹t_§c
, 
p
, 
Àn
);

2767 
	`≈u_m⁄_ˇ±uª_∑ckë
(
AºaySídBuf
,
u32SídD©aLí
,
p‹t_§c
,1);

2770  
STATUS_OK
;

2771 
	}
}

2772 
u16
 
	$≈u_udp_ˇl_chksum
(
u8
 *
pu8ChkD©a
, 
u32
 
u32ChkD©aLí
)

2776 
u32
 
u32Sum
;

2778 
u16
 
u16ChkSum
;

2780 
u32Sum
 = 0; 
u32ChkD©aLí
 > 1; u32ChkDataLen -= 2)

2783 
u32Sum
 +(
u32
)(*((
u16
 *)(*)
pu8ChkD©a
));

2785 
pu8ChkD©a
 += 2;

2788 i‡(1 =
u32ChkD©aLí
)

2791 
u32Sum
 +
	`ht⁄s
((
u16
)((*
pu8ChkD©a
) & 0xff) << 8);

2794 0 !(
u32Sum
 >> 16))

2796 
u32Sum
 = (u32Sum & 0xffff) + (u32Sum >> 16);

2799 
u16ChkSum
 = (
u16
)(~(
u32Sum
 & 0xffff));

2801  
u16ChkSum
;

2803 
	}
}

2806 
	$≈u_di•©ch_∑ckë_to_˛õ¡
(
NPU_HOST_RSV_PACKET_INFO
 *
SåuRsvPackëInfo
)

2810 
LINX_SIGNAL
 *
sig
;

2811 
STRU_LINX_SERVER_INFO
 *
löx_öfo
;

2812 
STRU_VPORT_INFO
 * 
Vp‹tInfo
;

2816 
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
SåuRsvPackëInfo
->
p‹t
);

2817 if(
Vp‹tInfo
 =
NULL
)

2819  
ERR_GET_VPORT_INFO
;

2820 }if(
Vp‹tInfo
->
U£dFœg
 =
UNUSED
)

2822  
ERR_GET_VPORT_INFO
;

2824 if(
SåuRsvPackëInfo
->
vp_ty≥
 =
VP_TYPE_FR
)

2826 
löx_öfo
 = 
	`≈u_gë_£rvî_rx_‰_thªad_löx_öfo
();

2831 
löx_öfo
 = 
	`≈u_gë_£rvî_rx_ëh_thªad_löx_öfo
();

2834 if(
löx_öfo
 =
NULL
)

2836  
ERR_GET_LINX_INFO
;

2839 
sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_•p_ª˚ive_sig
Ë+ 
SåuRsvPackëInfo
->
Àngth
, 
SPP_RECEIVE_SIG
);

2840 i‡(
sig
 =
NULL
)

2842 
	`WDDI_WARNING
("löx_Æloc(Ë%s", 
	`°ªº‹
(
î∫o
));

2843  
ERR_LINX_ALLOC
;

2845 
sig
->
•p_ª˚ive
.
Àngth
 = 
SåuRsvPackëInfo
->length;

2846 
sig
->
•p_ª˚ive
.
ùaddr_d°
 = 
SåuRsvPackëInfo
->ipaddr_dst;

2847 
sig
->
•p_ª˚ive
.
ùaddr_§c
 = 
SåuRsvPackëInfo
->ipaddr_src;

2848 
sig
->
•p_ª˚ive
.
p‹t
 = 
SåuRsvPackëInfo
->port;

2849 
sig
->
•p_ª˚ive
.
p‹t_§c
 = 
SåuRsvPackëInfo
->port_src;

2850 
sig
->
•p_ª˚ive
.
vp_ty≥
 = 
SåuRsvPackëInfo
->vp_type;

2854 
	`mem˝y
(
sig
->
•p_ª˚ive
.
pd©a
,
SåuRsvPackëInfo
->pd©a,sig->•p_ª˚ive.
Àngth
);

2857 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
sig
, 
Vp‹tInfo
->
˛õ¡
) == -1)

2859 
	`WDDI_WARNING
("löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),
Vp‹tInfo
->
˛õ¡
);

2860  
ERR_LINX_SEND
;

2862  
STATUS_OK
;

2863 
	}
}

2866 
	$≈u_£t_£rvî_löx_öfo
(
LINX
 * 
löx
)

2868 
g_LöxSevîInfo
.
löx
 =Üinx;

2869 
g_LöxSevîInfo
.
U£dFœg
 = 
USED
;

2870 
	}
}

2872 
	$≈u_£t_£rvî_rx_‰_thªad_löx_öfo
(
LINX
 * 
löx
)

2874 
g_LöxSevîRxFπhªadInfo
.
löx
 =Üinx;

2875 
g_LöxSevîRxFπhªadInfo
.
U£dFœg
 = 
USED
;

2876 
	}
}

2878 
	$≈u_£t_£rvî_rx_ëh_thªad_löx_öfo
(
LINX
 * 
löx
)

2880 
g_LöxSevîRxEththªadInfo
.
löx
 =Üinx;

2881 
g_LöxSevîRxEththªadInfo
.
U£dFœg
 = 
USED
;

2882 
	}
}

2885 
STRU_LINX_SERVER_INFO
 * 
	$≈u_gë_£rvî_löx_öfo
()

2887 if(
g_LöxSevîInfo
.
U£dFœg
 =
USED
)

2889  &
g_LöxSevîInfo
;

2893 
	`WDDI_WARNING
("npu_get_server_linx_info failedÜinx unused !");

2894  
NULL
;

2896 
	}
}

2898 
STRU_LINX_SERVER_INFO
 * 
	$≈u_gë_£rvî_rx_‰_thªad_löx_öfo
()

2900 if(
g_LöxSevîRxFπhªadInfo
.
U£dFœg
 =
USED
)

2902  &
g_LöxSevîRxFπhªadInfo
;

2906 
	`WDDI_WARNING
("npu_get_server_rx_fr_thread_linx_info failedÜinx unused !");

2907  
NULL
;

2909 
	}
}

2911 
STRU_LINX_SERVER_INFO
 * 
	$≈u_gë_£rvî_rx_ëh_thªad_löx_öfo
()

2913 if(
g_LöxSevîRxEththªadInfo
.
U£dFœg
 =
USED
)

2915  &
g_LöxSevîRxEththªadInfo
;

2919 
	`WDDI_WARNING
("npu_get_server_rx_eth_thread_linx_info failedÜinx unused !");

2920  
NULL
;

2922 
	}
}

2924 
u32
 
	$≈u_£t_öôül_cfg_öfo
(*
fûíame
, 
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
)

2928 
STRU_SET_INITAIL_CONFIG
 *
p
 =
≈_c⁄figuª_±r
;

2930 if(0 !
	`˛i_≠∂y_c⁄figuøti⁄_fûes_‰om_dú
(
fûíame
, 
p
))

2932 
	`WDDI_ERR
("cant'Ñead xml files \n");

2941 
STRU_SET_INITAIL_CONFIG
 *
p
 =
≈_c⁄figuª_±r
;

2943 
p
->
ifI∑ddr
 = 0x0aaa21c1;

2944 
p
->
ifIpNëMask
 = 0xffffff80;

2945 
p
->
VœnFœg
 = 
NPU_VLAN_ENABLE
;

2946 
p
->
ifMAC§c
[0] = 0x00;

2947 
p
->
ifMAC§c
[1] = 0x01;

2948 
p
->
ifMAC§c
[2] = 0x02;

2949 
p
->
ifMAC§c
[3] = 0x03;

2950 
p
->
ifMAC§c
[4] = 0x04;

2951 
p
->
ifMAC§c
[5] = 0x05;

2952 
p
->
NRI_bôLí
 = 8;

2953 
p
->
VœnTag
 = 133;

2954 
p
->
°m1_num
 = 1;

2955 
i
;

2956 
i
=1; i< 3; i++)

2958 
p
->
°ru_°m1_cfg_öfo
[0].
°m1VÆid
 = 
NPU_VALID
;

2959 
p
->
°ru_°m1_cfg_öfo
[0].
E1T1ty≥
 = 
NPU_MODE_E1
;

2960 
p
->
°ru_°m1_cfg_öfo
[0].
O±_Mode
 = 
OPMODE_E1_TRUE_CRC4
;

2961 
p
->
°ru_°m1_cfg_öfo
[0].
åunk_öfo
[
i
].
åunkVÆid
 = 
NPU_VALID
;

2962 
p
->
°ru_°m1_cfg_öfo
[0].
åunk_öfo
[
i
].
group_öfo
[0].
groupVÆid
 = 
NPU_VALID
;

2963 
p
->
°ru_°m1_cfg_öfo
[0].
åunk_öfo
[
i
].
group_öfo
[0].
¶Ÿ_£À˘i⁄
 = 0xfffffffe;

2964 
p
->
°ru_°m1_cfg_öfo
[0].
åunk_öfo
[
i
].
group_öfo
[0].
max_‰ame_size
 =1600;

2965 
p
->
°ru_°m1_cfg_öfo
[0].
åunk_öfo
[
i
].
group_öfo
[0].
¸c_ty≥
 =
NPU_E1T1_CRC16
;

2972 
p
->
°ru_°m1_cfg_öfo
[0].
°m1VÆid
 = 
NPU_VALID
;

2973 
p
->
°ru_°m1_cfg_öfo
[0].
E1T1ty≥
 = 
NPU_MODE_E1
;

2974 
p
->
°ru_°m1_cfg_öfo
[0].
åunk_öfo
[1].
O±_Mode
 = 
OPMODE_E1_TRUE_CRC4
;

2975 
p
->
°ru_°m1_cfg_öfo
[0].
åunk_öfo
[1].
åunkVÆid
 = 
NPU_VALID
;

2976 
p
->
°ru_°m1_cfg_öfo
[0].
åunk_öfo
[1].
group_öfo
[0].
groupVÆid
 = 
NPU_VALID
;

2977 
p
->
°ru_°m1_cfg_öfo
[0].
åunk_öfo
[1].
group_öfo
[0].
¶Ÿ_£À˘i⁄
 = 0xfffffffe;

2978 
p
->
°ru_°m1_cfg_öfo
[0].
åunk_öfo
[1].
group_öfo
[0].
max_‰ame_size
 =1600;

2979 
p
->
°ru_°m1_cfg_öfo
[0].
åunk_öfo
[1].
group_öfo
[0].
¸c_ty≥
 =
NPU_E1T1_CRC16
;

2981 
p
->
°ru_°m1_cfg_öfo
[0].
°m1VÆid
 = 
NPU_VALID
;

2982 
p
->
°ru_°m1_cfg_öfo
[0].
E1T1ty≥
 = 
NPU_MODE_E1
;

2983 
p
->
°ru_°m1_cfg_öfo
[0].
åunk_öfo
[22].
O±_Mode
 = 
OPMODE_E1_TRUE_CRC4
;

2984 
p
->
°ru_°m1_cfg_öfo
[0].
åunk_öfo
[22].
åunkVÆid
 = 
NPU_VALID
;

2985 
p
->
°ru_°m1_cfg_öfo
[0].
åunk_öfo
[22].
group_öfo
[0].
groupVÆid
 = 
NPU_VALID
;

2986 
p
->
°ru_°m1_cfg_öfo
[0].
åunk_öfo
[22].
group_öfo
[0].
¶Ÿ_£À˘i⁄
 = 0xfffffffe;

2987 
p
->
°ru_°m1_cfg_öfo
[0].
åunk_öfo
[22].
group_öfo
[0].
max_‰ame_size
 =1600;

2988 
p
->
°ru_°m1_cfg_öfo
[0].
åunk_öfo
[22].
group_öfo
[0].
¸c_ty≥
 =
NPU_E1T1_CRC16
;

2989 
p
->
O±î©eMode
 = 
NPU_MODE_FR
;

2990 
p
->
P‹tPoﬁSize
 = 3;

2991 
p
->
rouãInfo
[0].
IpD°
 = 
	`ht⁄l
(0xdc21aa0a); ;

2992 
p
->
rouãInfo
[0].
G©ewayIP
 = 
	`ht⁄l
(0xdc21aa0a); ;

2996 
	}
}

2998 
STRU_SET_INITAIL_CONFIG
 * 
	$≈u_gë_öôül_cfg_öfo
()

3000  &
g_≈öôül
;

3001 
	}
}

3002 
STRU_SET_INITAIL_CONFIG
 * 
	$≈u_gë_≈_ªc⁄fig
()

3005  &
g_≈_ªc⁄fig
;

3006 
	}
}

3008 
	$≈_gë_¶Ÿs_£À˘i⁄
(
u32
 
ˇrd
,u32 
åunk
,u32 
group
)

3010 
u32
 
°m1P‹t
 = 
ˇrd
-1;

3011  
g_≈öôül
.
°ru_°m1_cfg_öfo
[
°m1P‹t
].
åunk_öfo
[
åunk
-1].
group_öfo
[
group
].
¶Ÿ_£À˘i⁄
;

3012 
	}
}

3015 
	$¸óã_ht_lök
(
NODE
 **
nodehód
,*
key
)

3017 
NODE
 *
p
,*
s
;

3019 if(
NULL
 =*
nodehód
)

3021 *
nodehód
 = ( 
NODE
*)
	`mÆloc
((NODE));

3022 (*
nodehód
)->
ht_key
 = 
key
;

3023 (*
nodehód
)->
√xt
 = 
NULL
;

3027 
s
 = *
nodehód
;

3028 
NULL
 !
s
->
√xt
)

3030 
s
 = s->
√xt
;

3033 
p
 = (
NODE
 *)
	`mÆloc
((NODE));

3034 
p
->
ht_key
 = 
key
;

3035 
p
->
√xt
 = 
NULL
;

3037 
s
->
√xt

p
;

3039 
	}
}

3041 
	$di•œy_vp‹t_ht_lök
()

3043 
NODE
 *
ãmp
;

3044 
ENTRY
 
ôem
={0};

3045 
ENTRY
 *
found_ôem
;

3046 
STRU_VPORT_INFO
 *
p_Vp‹tInfo
;

3047 
u32
 
i
 = 0;

3049 
ãmp
=
vp‹t_nodehód
;

3051 
ãmp
!=
NULL
)

3053 
ôem
.
key
 = 
ãmp
->
ht_key
;

3054 
ãmp
Òemp->
√xt
;

3056 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
ht
))

3058 
	`WDDI_WARNING
("When display_vport_ht_link failed\n");

3063 
p_Vp‹tInfo
 = (
STRU_VPORT_INFO
 *)
found_ôem
->
d©a
;

3065 if(
USED
 =
p_Vp‹tInfo
->
U£dFœg
)

3067 
i
++;

3068 
	`F¥ötf
(" ####ôem %d##### \n",
i
);

3069 
	`F¥ötf
("/*****************vp‹t=0x%x (%d)***************/\n",
p_Vp‹tInfo
->
p‹t_§c
,
	`ht⁄l
(p_VportInfo->port_src));

3070 
ö_addr
 
addr
;

3071 
u32
 
ù§c
 = (
p_Vp‹tInfo
->
ùaddr_§c
);

3072 
	`mem˝y
(&
addr
,&
ù§c
,4);

3073 
	`F¥ötf
("ùaddr_§¯is: %s\n",
	`öë_¡ﬂ
(
addr
));

3074 
	`F¥ötf
("p‹t_§¯is: 0x%x (%d)\n",
p_Vp‹tInfo
->
p‹t_§c
,
	`ht⁄s
(p_VportInfo->port_src));

3075 
	`F¥ötf
("vp_ty≥ is: %s\n",(
p_Vp‹tInfo
->
vp_ty≥
 =
VP_TYPE_UDP
)?"VP_TYPE_UDP":"VP_TYPE_FR");

3077 *
˛õ¡Name
=
NULL
;

3078 
STRU_LINX_SERVER_INFO
 * 
löx_öfo
;

3079 
löx_öfo
 = 
	`≈u_gë_£rvî_löx_öfo
();

3080 if(0 =
	`löx_gë_«me
(
löx_öfo
->
löx
,
p_Vp‹tInfo
->
˛õ¡
,&
˛õ¡Name
))

3082 
	`F¥ötf
("˛õ¡«me: %†˛õ¡ =0x%x \n",
˛õ¡Name
,
p_Vp‹tInfo
->
˛õ¡
);

3083 
	`löx_‰ì_«me
(
löx_öfo
->
löx
,&
˛õ¡Name
);

3086 if(
p_Vp‹tInfo
->
vp_ty≥
 =
VP_TYPE_FR
)

3088 
	`F¥ötf
("vÂ‹àis: 0x%x (%dË: ""S%dP%dFR%dD%d"" \n",
p_Vp‹tInfo
->
ch_öfo
.
vÂ‹t
,
	`ht⁄l
(p_VportInfo->ch_info.vfport),

3089 
p_Vp‹tInfo
->
ch_öfo
.
ˇrd
,p_Vp‹tInfo->ch_öfo.
åunk
,p_Vp‹tInfo->ch_öfo.
group
,p_Vp‹tInfo->ch_öfo.
dlci
);

3090 
	`F¥ötf
("dlcòis: %d\n",
p_Vp‹tInfo
->
ch_öfo
.
dlci
);

3091 
	`F¥ötf
("ˇrd is: %d\n",
p_Vp‹tInfo
->
ch_öfo
.
ˇrd
);

3092 
	`F¥ötf
("åunk is: %d\n",
p_Vp‹tInfo
->
ch_öfo
.
åunk
);

3093 
	`F¥ötf
("grou∞is: %d\n",
p_Vp‹tInfo
->
ch_öfo
.
group
);

3094 
	`F¥ötf
("¶Ÿ_£À˘i⁄ is: 0x%x\n",
p_Vp‹tInfo
->
ch_öfo
.
¶Ÿ_£À˘i⁄
);

3095 
	`F¥ötf
("Qo†is: %s\n",(
p_Vp‹tInfo
->
ch_öfo
.
QosEn
 == 0)?"enabled":"disabled");

3096 
	`F¥ötf
("Qo†∑øm bc: %d bôs\n",
p_Vp‹tInfo
->
ch_öfo
.
bc
);

3097 
	`F¥ötf
("Qo†∑øm be: %d bôs\n",
p_Vp‹tInfo
->
ch_öfo
.
be
);

3098 
	`F¥ötf
("Qo†∑øm cú: %d bôs/£c⁄d\n",
p_Vp‹tInfo
->
ch_öfo
.
cú
);

3099 
	`F¥ötf
("\n");

3104 
	}
}

3106 
	$di•œy_ul_rouã_ht_lök
()

3108 
NODE
 *
ãmp
;

3109 
ENTRY
 
ôem
={0};

3110 
ENTRY
 *
found_ôem
;

3111 
NP_UL_FLOW_INFO
 *
p_FrFlowInfo
;

3112 
u32
 
NRI
;

3113 
u32
 
i
 = 0;

3114 
ãmp
=
u∂ök_nodehód
;

3115 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

3116 
ãmp
!=
NULL
)

3118 
ôem
.
key
 = 
ãmp
->
ht_key
;

3119 
ãmp
Òemp->
√xt
;

3121 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
u∂ök_ht
))

3123 
	`WDDI_WARNING
("When display_ul_route_ht_link failed\n");

3128 
p_FrFlowInfo
 = (
NP_UL_FLOW_INFO
 *)
found_ôem
->
d©a
;

3129 if(
USED
 =
p_FrFlowInfo
->
U£dFœg
)

3131 
i
++;

3132 
	`F¥ötf
(" ####ôem %d##### \n",
i
);

3133 if(
i
%1024 == 0)

3134 
	`¶ìp
(1);

3135 
NRI
 = 
p_FrFlowInfo
->NRI;

3136 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

3138 
u32
 
ˇrd
;

3139 
u32
 
åunk
;

3140 
u32
 
group
;

3141 
u32
 
dlci
;

3142 
	`≈_‰addr_u≈ack
(
p_FrFlowInfo
->
vp‹t
,&
ˇrd
,&
åunk
,&
group
,&
dlci
);

3143 
	`F¥ötf
("vp‹àis: 0x%x (%dË: S%dP%dFR%dD%d(vÆid f‹ FR vp‹t)\n",
p_FrFlowInfo
->
vp‹t
,
	`ht⁄s
(p_FrFlowInfo->vport),

3144 
ˇrd
,
åunk
,
group
,
dlci
);

3148 
	`F¥ötf
("vp‹àis: 0x%x (%d)\n",
p_FrFlowInfo
->
vp‹t
,
	`ht⁄s
(p_FrFlowInfo->vport));

3151 
	`F¥ötf
("NRI is: %d\n",
p_FrFlowInfo
->
NRI
);

3152 
	`F¥ötf
("p‹tSr¯is: 0x%x (%d)\n",
p_FrFlowInfo
->
p‹tSrc
,
	`ht⁄s
(p_FrFlowInfo->portSrc));

3153 
	`F¥ötf
("\n");

3155 
	`show_dps_ul_rouã_ôem
(
p_FrFlowInfo
);

3160 
	}
}

3162 
	$di•œy_dl_rouã_ht_lök
(
WP_U16
 
Dp‹tSèπVÆue
,WP_U16 
bvci
,
u32
 
O±Mode
)

3164 
NODE
 *
ãmp
;

3165 
ENTRY
 
ôem
={0};

3166 
ENTRY
 *
found_ôem
;

3167 
NP_DL_FLOW_INFO
 *
p_EthFlowInfo
;

3168 
u32
 
i
 = 0;

3169 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

3170 if(
O±Mode
 =
DEL_DL_RULE_TALBE_BASED_ON_DPORT_BVCI
)

3172 
ãmp
=
dow∆ök_nodehód
;

3174 if(
O±Mode
 =
DEL_DL_RULE_TALBE_BASED_ON_DPORT
)

3176 
ãmp
=
‰_dl_dp‹t_nodehód
[
Dp‹tSèπVÆue
];

3179 if(
O±Mode
 =
DEL_DL_RULE_TALBE_BASED_ON_BVCI
)

3181 
ãmp
=
‰_dl_bvci_nodehód
[
bvci
];

3190 
ãmp
!=
NULL
)

3192 
ôem
.
key
 = 
ãmp
->
ht_key
;

3193 
ãmp
Òemp->
√xt
;

3195 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
dow∆ök_ht
))

3197 
	`WDDI_WARNING
("When display_dl_route_ht_link failed\n");

3201 
p_EthFlowInfo
 = (
NP_DL_FLOW_INFO
 *)
found_ôem
->
d©a
;

3202 if(
USED
 =
p_EthFlowInfo
->
U£dFœg
)

3203 { 
i
++;

3204 
	`F¥ötf
(" ####ôem %d ##### \n",
i
);

3205 if(
i
%1024 == 0)

3206 
	`¶ìp
(1);

3207 
	`F¥ötf
("Dp‹tSèπVÆuêis: 0x%x (%d)\n",
p_EthFlowInfo
->
ruÀ
.
Dp‹tSèπVÆue
,
	`ht⁄s
(p_EthFlowInfo->rule.DportStartValue));

3208 
	`F¥ötf
("NS_BVCI is: 0x%x (%d)\n",
p_EthFlowInfo
->
ruÀ
.
BVCI√w
,(p_EthFlowInfo->rule.BVCInew));

3209 
	`F¥ötf
("NS_BVCI_ﬁd is: 0x%x (%d)\n",
p_EthFlowInfo
->
ruÀ
.
BVCI
,(p_EthFlowInfo->rule.BVCI));

3210 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

3212 
	`F¥ötf
("NSEI is: 0x%x (%d)\n",
p_EthFlowInfo
->
ruÀ
.
n£i_p‹tSrc
.
NSEI
,(p_EthFlowInfo->rule.nsei_portSrc.NSEI));

3217 
	`F¥ötf
("p‹tSr¯is: 0x%x (%d)\n",
p_EthFlowInfo
->
ruÀ
.
n£i_p‹tSrc
.
p‹tSrc
,’_EthFlowInfo->ruÀ.n£i_p‹tSrc.
NSEI
));

3221 
ö_addr
 
addr
;

3222 
	`mem˝y
(&
addr
,&
p_EthFlowInfo
->
ruÀ
.,4);

3223 
	`F¥ötf
("IpD° is: %s\n",
	`öë_¡ﬂ
(
addr
));

3224 
	`F¥ötf
("P‹tD° is: 0x%x (%d)\n",
p_EthFlowInfo
->
P‹tD°
,
	`ht⁄s
(p_EthFlowInfo->PortDst));

3225 
	`F¥ötf
("\n");

3227 
	`show_dps_dl_rouã_ôem
(
p_EthFlowInfo
);

3231 
	}
}

3233 
	$di•œy_¨p_ht_lök
()

3235 
NODE
 *
ãmp
;

3236 
ENTRY
 
ôem
={0};

3237 
ENTRY
 *
found_ôem
;

3238 
NP_ARP_INFO
 *
p_AΩInfo
;

3239 
ãmp
=
¨p_nodehód
;

3240 
ãmp
!=
NULL
)

3242 
ôem
.
key
 = 
ãmp
->
ht_key
;

3243 
ãmp
Òemp->
√xt
;

3245 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
¨p_ht
))

3247 
	`WDDI_WARNING
("When display_vport_ht_link failed\n");

3251 
p_AΩInfo
 = (
NP_ARP_INFO
 *)
found_ôem
->
d©a
;

3252 
	`F¥ötf
("/***********************************************/\n");

3253 
ö_addr
 
addr
;

3254 
u32
 
ù
 = (
p_AΩInfo
->
Ip
);

3255 
	`mem˝y
(&
addr
,&
ù
,4);

3256 
	`F¥ötf
("ù is: %†",
	`öë_¡ﬂ
(
addr
));

3257 
	`F¥ötf
("Ma¯is: 0x%x:0x%x:0x%x:0x%x:0x%x:0x%x\n",
p_AΩInfo
->
Mac
[0],p_ArpInfo->Mac[1],p_ArpInfo->Mac[2],

3258 
p_AΩInfo
->
Mac
[3],p_ArpInfo->Mac[4],p_ArpInfo->Mac[5]);

3259 
	`F¥ötf
("\n");

3264 
	}
}

3266 
	$di•œy_upd©e_bvci_ht_lök
()

3268 
NODE
 *
ãmp
;

3269 
ENTRY
 
ôem
={0};

3270 
ENTRY
 *
found_ôem
;

3271 
NP_UPDATE_BVCI_FLOW_INFO
 *
p_BvciFlowInfo
;

3272 
u32
 
i
 = 0;

3273 
ãmp
=
upd©e_bvci_nodehód
;

3274 
ãmp
!=
NULL
)

3276 
ôem
.
key
 = 
ãmp
->
ht_key
;

3277 
ãmp
Òemp->
√xt
;

3279 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
upd©e_bvci_ht
))

3281 
	`WDDI_WARNING
("When display_update_bvci_ht_link failed\n");

3285 
p_BvciFlowInfo
 = (
NP_UPDATE_BVCI_FLOW_INFO
 *)
found_ôem
->
d©a
;

3286 if(
USED
 =
p_BvciFlowInfo
->
U£dFœg
)

3287 { 
i
++;

3288 
	`F¥ötf
(" ####ôem %d ##### \n",
i
);

3289 if(
i
%1024 == 0)

3290 
	`¶ìp
(1);

3291 
	`F¥ötf
("P‹àis: 0x%x (%dË\n",
p_BvciFlowInfo
->
vp‹t
,
	`ht⁄s
(p_BvciFlowInfo->vport));

3292 
	`F¥ötf
("NS_BVCI is: 0x%x (%d)\n",
p_BvciFlowInfo
->
NS_BVCI
,(p_BvciFlowInfo->NS_BVCI));

3293 
	`F¥ötf
("NS_BVCI_ﬁd is: 0x%x (%d)\n",
p_BvciFlowInfo
->
NS_BVCI_ﬁd
,(p_BvciFlowInfo->NS_BVCI_old));

3294 
	`F¥ötf
("\n");

3295 
	`show_dps_bvci_ôem
(
p_BvciFlowInfo
);

3299 
	}
}

3302 
	$di•œy_ul_lök_èbÀ_ht_lök
()

3304 
NODE
 *
ãmp
;

3305 
ENTRY
 
ôem
={0};

3306 
ENTRY
 *
found_ôem
;

3307 
STRU_SET_UPLINK_PATH_LINK_TABLE
 *
p_lökInfo
;

3308 
u32
 
i
 = 0;

3309 
ãmp
=
‰_ul_lök_èbÀ_nodehód
;

3310 
ãmp
!=
NULL
)

3312 
ôem
.
key
 = 
ãmp
->
ht_key
;

3313 
ãmp
Òemp->
√xt
;

3315 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
‰_ul_lök_èbÀ_ht
))

3317 
	`WDDI_WARNING
("When display_dl_route_ht_link failed\n");

3320 { 
i
++;

3321 
p_lökInfo
 = (
STRU_SET_UPLINK_PATH_LINK_TABLE
 *)
found_ôem
->
d©a
;

3322 if(0 !
p_lökInfo
->
IpEpAcôveNum
)

3324 
	`F¥ötf
(" ####ôem %d ##### \n",
i
);

3325 if(
i
%1024 == 0)

3326 
	`¶ìp
(1);

3327 
u32
 
k
,
ùd°
;

3328 
ö_addr
 
addr
;

3329 
	`F¥ötf
("IpEpAcôveNum is: %d\n",
p_lökInfo
->
IpEpAcôveNum
);

3330 
	`F¥ötf
("P‹tSr¯is: 0x%x (%d)\n",
p_lökInfo
->
P‹tSrc
,
	`ht⁄s
(p_linkInfo->PortSrc));

3331 
k
 = 0;k<
p_lökInfo
->
IpEpAcôveNum
;k++)

3333 
ùd°
 = 
p_lökInfo
->
IpEp
[
k
].
IpD°
;

3334 
	`mem˝y
(&
addr
,&
ùd°
,4);

3335 
	`F¥ötf
(" IP_EP%d: \n",
k
);

3336 
	`F¥ötf
("Fœg is: %†\n",(
p_lökInfo
->
IpEp
[
k
].
Fœg
 =
LOCAL_FLAG
)?"LOCAL":"REMOTE");

3337 
	`F¥ötf
("IpD° is: %s\n",
	`öë_¡ﬂ
(
addr
));

3338 
	`F¥ötf
("P‹tD° is: 0x%x (%d)\n",
p_lökInfo
->
IpEp
[
k
].
P‹tD°
,
	`ht⁄s
(p_linkInfo->IpEp[k].PortDst));

3339 
	`F¥ötf
("\n");

3341 
	`F¥ötf
("\n");

3342 
	`show_dps_ul_lök_ôem
(
p_lökInfo
);

3347 
	}
}

3349 
show_dps_dl_lök_ôem
(
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
 *
p_lökInfo
);

3351 
	$di•œy_dl_lök_èbÀ_ht_lök
()

3353 
NODE
 *
ãmp
;

3354 
ENTRY
 
ôem
={0};

3355 
ENTRY
 *
found_ôem
;

3356 
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
 *
p_lökInfo
;

3357 
u32
 
i
 = 0;

3358 
ãmp
=
‰_dl_lök_èbÀ_nodehód
;

3359 
ãmp
!=
NULL
)

3361 
ôem
.
key
 = 
ãmp
->
ht_key
;

3362 
ãmp
Òemp->
√xt
;

3364 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
‰_dl_lök_èbÀ_ht
))

3366 
	`WDDI_WARNING
("When display_dl_route_ht_link failed\n");

3369 { 
i
++;

3370 
p_lökInfo
 = (
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
 *)
found_ôem
->
d©a
;

3371 if(0 !
p_lökInfo
->
FrVp‹tAcôveNum
)

3373 
	`F¥ötf
(" ####ôem %d ##### \n",
i
);

3374 if(
i
%1024 == 0)

3375 
	`¶ìp
(1);

3376 
u32
 
k
;

3377 
	`F¥ötf
("FrVp‹tAcôveNum is: %d\n",
p_lökInfo
->
FrVp‹tAcôveNum
);

3378 
	`F¥ötf
("NSEI is: 0x%x (%d)\n",
p_lökInfo
->
NSEI
,(p_linkInfo->NSEI));

3379 
k
 = 0;k<
p_lökInfo
->
FrVp‹tAcôveNum
;k++)

3381 
	`F¥ötf
("Fœg is: %†\n",(
p_lökInfo
->
NsvcGΩ
[
k
].
Fœg
 =
LOCAL_FLAG
)?"LOCAL":"REMOTE");

3382 
	`F¥ötf
("vp‹àis: 0x%x\n",
p_lökInfo
->
NsvcGΩ
[
k
].
vf‹t
);

3383 
	`F¥ötf
("\n");

3385 
	`F¥ötf
("\n");

3386 
	`show_dps_dl_lök_ôem
(
p_lökInfo
);

3390 
	}
}

3392 
	$di•œy_c⁄fig_öfo
()

3394 
i
,
j
,
k
;

3395 
	`NPU_DEBUG_FILE_ENABLE
();

3396 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

3397 
	`F¥ötf
("\n");

3398 
	`F¥ötf
("/**************NP Initial Configure**********************/\n");

3399 
	`F¥ötf
("NPU vîsi⁄ : %s\n",
NPU_VERSION_NUM
);

3400 
	`F¥ötf
("g_≈n⁄poﬁFœg i†%d\n",
g_≈n⁄poﬁFœg
);

3401 
	`F¥ötf
("VœnFœg is: %†\n",(
öôül_cfg
->
VœnFœg
 =
NPU_VLAN_ENABLE
)?"NPU_VLAN_ENABLE":"NPU_VLAN_DISABLE");

3402 
	`F¥ötf
("VœnTag is: %d\n",
öôül_cfg
->
VœnTag
);

3403 
	`F¥ötf
("O±î©eModêis: %s\n",(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)?"NPU_MODE_FR ":"NPU_MODE_IP");

3404 
	`F¥ötf
("ifMAC§¯is: 0x%x:0x%x:0x%x:0x%x:0x%x:0x%x\n",
öôül_cfg
->
ifMAC§c
[0],initial_cfg->ifMACsrc[1],initial_cfg->ifMACsrc[2],

3405 
öôül_cfg
->
ifMAC§c
[3],initial_cfg->ifMACsrc[4],initial_cfg->ifMACsrc[5]);

3406 
	`F¥ötf
("P‹tPoﬁSizêis: %d\n",
öôül_cfg
->
P‹tPoﬁSize
);

3407 
	`F¥ötf
("NRI_bôLí is: %d\n",
öôül_cfg
->
NRI_bôLí
);

3408 
	`F¥ötf
("NRI Sizêö DPS: %d\n", 
ƒi_bô_Àngth
);

3409 
ö_addr
 
addr
;

3410 
u32
 
ifI∑ddr
 = 
	`¡ohl
(
öôül_cfg
->ifIpaddr);

3411 
	`mem˝y
(&
addr
,&
ifI∑ddr
,4);

3412 
	`F¥ötf
("ifI∑dd∏is: %s\n",
	`öë_¡ﬂ
(
addr
));

3414 
u32
 
ifIpNëMask
 = 
	`¡ohl
(
öôül_cfg
->ifIpNetMask);

3415 
	`mem˝y
(&
addr
,&
ifIpNëMask
,4);

3416 
	`F¥ötf
("ifIpNëMask is: %s\n",
	`öë_¡ﬂ
(
addr
));

3418 
	`F¥ötf
("route configure is:\n");

3419 
i
 = 0;ò< 
SPP_MAX_ROUTE_NUM
;i++)

3421 if((
öôül_cfg
->
rouãInfo
[
i
].
IpD°
!0Ë|| (öôül_cfg->rouãInfo[i].
G©ewayIP
!= 0))

3423 
	`F¥ötf
("rouã%d :ù d° = 0x%xÇëmask = 0x%x g©eway = 0x%0x \n",
i
,
öôül_cfg
->
rouãInfo
[i].
IpD°
,öôül_cfg->rouãInfo[i].
mask
,öôül_cfg->rouãInfo[i].
G©ewayIP
);

3427 
	`F¥ötf
("°m1_num is: 0x%x\n",
öôül_cfg
->
°m1_num
);

3428 if–
öôül_cfg
->
°m1_num
 >0 && initial_cfg->stm1_num < 3)

3430 
i
 = 0; i < 
SPP_MAX_STM1_PORT_NUM
; i ++)

3432 if(
öôül_cfg
->
°ru_°m1_cfg_öfo
[
i
].
°m1VÆid
)

3434 
	`F¥ötf
("E1T1ty≥ is: %s\n",(
öôül_cfg
->
°ru_°m1_cfg_öfo
[
i
].
E1T1ty≥
 =
NPU_MODE_E1
)?"NPU_MODE_E1":"NPU_MODE_T1");

3435 
j
 = 0; j < 
SPP_MAX_TRUNK_NUM
; j ++)

3437 if(
öôül_cfg
->
°ru_°m1_cfg_öfo
[
i
].
åunk_öfo
[
j
].
åunkVÆid
)

3440 
	`F¥ötf
("˛ock modêis: %s\n",(
öôül_cfg
->
°ru_°m1_cfg_öfo
[
i
].
åunk_öfo
[
j
].
˛ock_mode
 =
NPU_E1T1_CLOCK_MASTER
)?"Master":"Slave");

3441 
k
 = 0; k < 
SPP_MAX_GROUP_NUM
; k ++)

3444 if(
öôül_cfg
->
°ru_°m1_cfg_öfo
[
i
].
åunk_öfo
[
j
].
group_öfo
[
k
].
groupVÆid
)

3446 
	`F¥ötf
("°ru_°m1_cfg_öfo[%d].åunk_öfo[%d].group_öfo[%d].¶Ÿ_£À˘i⁄ is: 0x%x max_‰ame_sizê%d crc_ty≥ = %s\n",
i
,
j
,
k
,
öôül_cfg
->
°ru_°m1_cfg_öfo
[i].
åunk_öfo
[j].
group_öfo
[k].
¶Ÿ_£À˘i⁄
,

3447 
öôül_cfg
->
°ru_°m1_cfg_öfo
[
i
].
åunk_öfo
[
j
].
group_öfo
[
k
].
max_‰ame_size
,

3448 (
öôül_cfg
->
°ru_°m1_cfg_öfo
[
i
].
åunk_öfo
[
j
].
group_öfo
[
k
].
¸c_ty≥
 =
NPU_E1T1_CRC16
 ? "CRC16":"CRC32"));

3452 
	`F¥ötf
("\n");

3455 
	`F¥ötf
("\n");

3459 
	`F¥ötf
("\n/**************display_vport_ht************************/\n");

3460 
	`di•œy_vp‹t_ht_lök
();

3461 
	`F¥ötf
("/***************display_ul_route_table_ht************************/\n");

3462 
	`di•œy_ul_rouã_ht_lök
();

3463 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

3465 
	`F¥ötf
("/***************display_ul_link_table_ht**************************/\n");

3469 
	`F¥ötf
("/***************display_link_table_ht**************************/\n");

3471 
	`di•œy_ul_lök_èbÀ_ht_lök
();

3472 
	`F¥ötf
("/***************display_dl_route_table_ht**********************/\n");

3473 
	`di•œy_dl_rouã_ht_lök
(0,0,
DEL_DL_RULE_TALBE_BASED_ON_DPORT_BVCI
);

3474 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

3476 
	`F¥ötf
("/***************display_dl_link_table_ht**************************/\n");

3477 
	`di•œy_dl_lök_èbÀ_ht_lök
();

3479 
	`F¥ötf
("/***************display_bvci_ht**************************/\n");

3480 
	`di•œy_upd©e_bvci_ht_lök
();

3484 
	`F¥ötf
("/***************display_fr_ul_route_table_based_on dport_ht**********************/\n");

3485 
	`di•œy_dl_rouã_ht_lök
(10000,0x0708,
DEL_DL_RULE_TALBE_BASED_ON_DPORT
);

3486 
	`F¥ötf
("/***************display_fr_ul_route_table_based_on bvci_ht**********************/\n");

3487 
	`di•œy_dl_rouã_ht_lök
(10000,0x0708,
DEL_DL_RULE_TALBE_BASED_ON_BVCI
);

3490 
	`F¥ötf
("/***************display_arp_ht***************************/\n");

3491 
	`di•œy_¨p_ht_lök
();

3492 
	`NPU_DEBUG_FILE_DISABLE
();

3493 
	}
}

3498 
	$≈u_h™lde_≈um⁄_ªque°
(
STRU_NPUMON_INFO
 * 
öfo
,
LINX_SPID
 
˛õ¡
)

3500 
ªt
;

3501 
STRU_VPORT_INFO
 * 
Vp‹tInfo
;

3502 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

3504 
u32
 
löeIndex
,
groupIndex
;

3505 if(
öfo
->
ifTy≥
 =
VP_TYPE_FR
)

3508 if(
öôül_cfg
->
°ru_°m1_cfg_öfo
[
öfo
->
°m1
-1].
E1T1ty≥
 =
NPU_MODE_E1
)

3510 
löeIndex
 = (
öfo
->
°m1
-1)*(
N_UFE_MAX_LINES_E1
/2Ë+ (öfo->
TrunkNumbî
-1);

3514 
löeIndex
 = (
öfo
->
°m1
-1)*(
N_UFE_MAX_LINES_T1
/2Ë+ (öfo->
TrunkNumbî
-1);

3517 
	`F¥ötf
("≈um⁄:Stm1 = %d TrunkNumbî = %d grou∞%d dlcò%d \n",
öfo
->
°m1
,öfo->
TrunkNumbî
,öfo->
group
,öfo->
dlci
);

3522 
öfo
->
cmd
)

3524 
NPU_MON_CMD_XM
:

3529 
NPU_MON_CMD_XL
:

3531 if(
öfo
->
ifTy≥
 =
VP_TYPE_FR
)

3534 
buf
[3];

3535 
u„_devi˚_h™dÀ
[
N_UFE_MAX_LINES_T1
][32];

3536 if(
u„_devi˚_h™dÀ
[
löeIndex
][
öfo
->
group
])

3538 
buf
[0] = 1;

3542 
buf
[0] = 0;

3544 ()
	`≈_m⁄_£nd_ˇ±uª_d©a
(
buf
,1,
˛õ¡
,0,
VP_TYPE_LINX
);

3548 
NPU_MON_CMD_XRU
:

3550 
sysRólTime
 = 
	`time
(
NULL
);

3551 
timeSec⁄ds
;

3552 
u16
 
hours
;

3553 
u8
 
möuãs
;

3554 
u8
 
£c⁄ds
;

3555 
timeSec⁄ds
 = 
	`dif·ime
(
sysRólTime
,
sysInôTime
);

3556 
möuãs
 = 
timeSec⁄ds
/60;

3557 
£c⁄ds
 = ()
timeSec⁄ds
%60;

3558 
hours
 = 
timeSec⁄ds
/(60*60);

3560 
buf
[6];

3561 
buf
[0] = 
hours
>>8;

3562 
buf
[1] = 
hours
&0xff;

3563 
buf
[2] = 
möuãs
;

3564 
buf
[3] = 
£c⁄ds
;

3565 ()
	`≈_m⁄_£nd_ˇ±uª_d©a
(
buf
,4,
˛õ¡
,0,
VP_TYPE_LINX
);

3569 
NPU_MON_CMD_TI4
:

3570 
NPU_MON_CMD_TI
:

3571 
NPU_MON_CMD_TR
:

3573 
ªt
;

3574 
ªt
 = 
	`≈_íabÀ_vp‹t_ˇ±uª_f‹_≈um⁄
(
öfo
,
˛õ¡
);

3575 if(
ªt
 != 0)

3577  
ªt
;

3581 
NPU_MON_CMD_DD
:

3582 
NPU_MON_CMD_CD
:

3584 if(
öfo
->
ifTy≥
 =
VP_TYPE_FR
)

3586 
ªt
;

3588 if(
öfo
->
cmd
 =
NPU_MON_CMD_CD
)

3590 if(
	`≈u_upi_°©_˛ór
(
löeIndex
,
öfo
->
group
)!= 0)

3592  
NPU_GET_UPI_STATICS_ERROR
;

3595 
STRU_GET_UPI_GROUP_STATICS
 
gë_upi°©ics
;

3596 
gë_upi°©ics
.
åunkid
 = 
öfo
->
TrunkNumbî
;

3597 
gë_upi°©ics
.
°m1Id
 = 
öfo
->
°m1
;

3598 
gë_upi°©ics
.
groupid
 = 
öfo
->
group
;

3599 
ªt
 = 
	`upi_°©_gë_by_group
(
löeIndex
, 
öfo
->
group
,&
gë_upi°©ics
.
°ru_upi_°©ics
);

3600 if(
ªt
 != 0)

3602  
ªt
;

3604 ()
	`≈_m⁄_£nd_ˇ±uª_d©a
((*)&
gë_upi°©ics
,(gë_upi°©ics),
˛õ¡
,0,
VP_TYPE_LINX
);

3608 
NPU_MON_CMD_DC
:

3612 
NPU_MON_CMD_CC
:

3619 
	`F¥ötf
("Unk⁄w cmdÅy≥ %d \n",
öfo
->
cmd
);

3623  
STATUS_OK
;

3624 
	}
}

3626 
	$≈u_m⁄_ˇ±uª_∑ckë
(* 
buf„r
, 
u32
 
Àn
,u32 
p‹t
,
dúe˘i⁄
)

3628 
STRU_VPORT_INFO
 * 
Vp‹tInfo
;

3629 
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
p‹t
);

3630 if(
Vp‹tInfo
 =
NULL
)

3634 if(
Vp‹tInfo
->
U£dFœg
 =
UNUSED
)

3638 if(
Vp‹tInfo
->
≈um⁄_öfo
.
ˇ±uªE«bÀFœg
 =
NPU_NPUMON_CAPTURE_ENABLE


3639 && 
Vp‹tInfo
->
≈um⁄_öfo
.
˛õ¡
!= 0)

3641 if(
Àn
 >
Vp‹tInfo
->
≈um⁄_öfo
.len)

3643 
Àn
 = 
Vp‹tInfo
->
≈um⁄_öfo
.len;

3645 if(
Vp‹tInfo
->
≈um⁄_öfo
.
ifTy≥
 =
VP_TYPE_UDP
)

3650 if(
dúe˘i⁄
 == 0)

3652 ()
	`≈_m⁄_£nd_ˇ±uª_d©a
(
buf„r
,
Àn
,
Vp‹tInfo
->
≈um⁄_öfo
.
˛õ¡
,
dúe˘i⁄
,Vp‹tInfo->≈um⁄_öfo.
ifTy≥
);

3656 ()
	`≈_m⁄_£nd_ˇ±uª_d©a
(
buf„r
,
Àn
,
Vp‹tInfo
->
≈um⁄_öfo
.
˛õ¡
,
dúe˘i⁄
,
VP_TYPE_LINX
);

3661 if(
Vp‹tInfo
->
≈um⁄_öfo
.
˛õ¡
 != 0)

3663 
Vp‹tInfo
->
≈um⁄_öfo
.
˛õ¡
 = 0;

3664 
Vp‹tInfo
->
≈um⁄_öfo
.
Àn
 = 0;

3667 
	}
}

3668 
	$≈_m⁄_£nd_ˇ±uª_d©a
(* 
buf„r
, 
u32
 
Àn
,
LINX_SPID
 
˛õ¡
,
dúe˘i⁄
,
u8
 
ty≥
)

3670 
LINX_SIGNAL
 *
ª∂y_sig
;

3671 
STRU_LINX_SERVER_INFO
 * 
löx_öfo
;

3672 if(
ty≥
 =
VP_TYPE_FR
)

3674 
löx_öfo
 = 
	`≈u_gë_£rvî_rx_‰_thªad_löx_öfo
();

3676 if(
ty≥
 =
VP_TYPE_UDP
)

3678 
löx_öfo
 = 
	`≈u_gë_£rvî_rx_ëh_thªad_löx_öfo
();

3682 
löx_öfo
 = 
	`≈u_gë_£rvî_löx_öfo
();

3686 
ª∂y_sig
 = 
	`löx_Æloc
(
löx_öfo
->
löx
, (
°ru_≈u_gë_ªque°_ack_sig
)+
Àn
+3, 
NPU_GET_REQUEST_ACK_SIG
);

3687 i‡(
ª∂y_sig
 =
NULL
)

3689 
	`F¥ötf
("linx_alloc() failed\n");

3690  
ERR_LINX_ALLOC
;

3693 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
cmd
 = 
NPU_MON_GET_CAPTURE_FILE
;

3694 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
ªsu…
 = 
STATUS_OK
;

3695 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
pd©a
[0] = 
Àn
>>8;

3696 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
pd©a
[1] = 
Àn
&0xff;

3697 
ª∂y_sig
->
≈u_gë_ªque°_ack
.
pd©a
[2] = 
dúe˘i⁄
;

3698 
	`mem˝y
(&
ª∂y_sig
->
≈u_gë_ªque°_ack
.
pd©a
[3],
buf„r
,
Àn
);

3699 i‡(
	`löx_£nd
(
löx_öfo
->
löx
, &
ª∂y_sig
, 
˛õ¡
) == -1)

3701 
	`WDDI_WARNING
("löx_£nd(Ë%†˛õ¡ = 0x%x", 
	`°ªº‹
(
î∫o
),
˛õ¡
);

3702  
ERR_LINX_SEND
;

3704  
STATUS_OK
;

3705 
	}
}

3707 
	$≈_gë_ns_bssgp_°©ics
(
u32
 
vp‹t
,
STRU_GET_NS_BSSGP_STATICS
 * 
°©ics
)

3709 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

3710 
ªt
;

3711 
STRU_VPORT_INFO
 *
Vp‹tInfo
;

3712 
FR_CHANNEL_INFO
 * 
ch_öfo
;

3713 
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
vp‹t
);

3714 
wp_ns_bssgp_°©is
 
wp_°©ics
;

3715 if(
Vp‹tInfo
 =
NULL
)

3717 
	`WDDI_WARNING
("≈_gë_ns_bssgp_°©ic†≈u_gë_vp‹t_öfÿÁû vp‹t0x%x",
vp‹t
);

3718  
ERR_UL_RELEASE_RESOURCE
;

3720 if(
Vp‹tInfo
->
U£dFœg
 =
UNUSED
)

3722 
	`WDDI_WARNING
("≈_gë_ns_bssgp_°©ic†≈u_gë_vp‹t_öfÿÁû ,vp‹à˛o£d vp‹t0x%x",
vp‹t
);

3723  
ERR_UL_RELEASE_RESOURCE
;

3725 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

3727 
ch_öfo
 = &
Vp‹tInfo
->ch_info;

3728 
	`mem£t
(&
wp_°©ics
,0,(wp_statics));

3729 
ªt
 = 
	`WP_FlowSèti°icsGë
(0,
ch_öfo
->
agg_‰_rx_ho°_Êow
,&
wp_°©ics
);

3731 
°©ics
->
ns_bssgp_°©ics
.
bssgp_ö_o˘ës
 = 
wp_°©ics
.
RxBssgpByãs
 - (wp_°©ics.
RxBssgpD©aPackës
+wp_°©ics.
RxBssgpSig«lPackës
)*6;

3732 
°©ics
->
ns_bssgp_°©ics
.
bssgp_ö_∑ckës
 = 
wp_°©ics
.
RxBssgpD©aPackës
 + wp_°©ics.
RxBssgpSig«lPackës
;

3733 
°©ics
->
ns_bssgp_°©ics
.
bssgp_ö_∑ckës_sig«Œög
 = 
wp_°©ics
.
RxBssgpSig«lPackës
;

3735 
°©ics
->
ns_bssgp_°©ics
.
ns_ö_o˘ës
 = 
wp_°©ics
.
RxNsByãs
-(wp_°©ics.
RxNsD©aPackës
+wp_°©ics.
RxNsSig«lPackës
)*2;

3736 
°©ics
->
ns_bssgp_°©ics
.
ns_ö_∑ckës
 = 
wp_°©ics
.
RxNsD©aPackës
 + wp_°©ics.
RxNsSig«lPackës
;

3737 
°©ics
->
ns_bssgp_°©ics
.
ns_ö_∑ckës_sig«Œög
 = 
wp_°©ics
.
RxNsSig«lPackës
;

3740 
	`mem£t
(&
wp_°©ics
,0,(wp_statics));

3741 
ªt
 = 
	`WP_FlowSèti°icsGë
(0,
ch_öfo
->
agg_dow∆ök_tx2‰_devi˚
,&
wp_°©ics
);

3742 if(
öôül_cfg
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

3744 
°©ics
->
ns_bssgp_°©ics
.
bssgp_out_o˘ës
 = 
wp_°©ics
.
TxBssgpByãs
 -(wp_°©ics.
TxBssgpD©aPackës
+ wp_°©ics.
TxBssgpSig«lPackës
)*(4+46);

3748 
°©ics
->
ns_bssgp_°©ics
.
bssgp_out_o˘ës
 = 
wp_°©ics
.
TxBssgpByãs
 -(wp_°©ics.
TxBssgpD©aPackës
+ wp_°©ics.
TxBssgpSig«lPackës
)*(4+42);

3750 
°©ics
->
ns_bssgp_°©ics
.
bssgp_out_∑ckës
 = 
wp_°©ics
.
TxBssgpD©aPackës
 + wp_°©ics.
TxBssgpSig«lPackës
;

3751 
°©ics
->
ns_bssgp_°©ics
.
bssgp_out_∑ckës_sig«Œög

wp_°©ics
.
TxBssgpSig«lPackës
;

3753 
°©ics
->
ns_bssgp_°©ics
.
bssgp_out_o˘ës
 +
Vp‹tInfo
->ns_bssgp_°©ics.
TxBssgpByãs
;

3754 
°©ics
->
ns_bssgp_°©ics
.
bssgp_out_∑ckës
 +(
Vp‹tInfo
->ns_bssgp_°©ics.
TxBssgpD©aPackës
 + Vp‹tInfo->ns_bssgp_°©ics.
TxBssgpSig«lPackës
);

3755 
°©ics
->
ns_bssgp_°©ics
.
bssgp_out_∑ckës_sig«Œög
 +
Vp‹tInfo
->ns_bssgp_°©ics.
TxBssgpSig«lPackës
;

3756 if(
öôül_cfg
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

3758 
°©ics
->
ns_bssgp_°©ics
.
ns_out_o˘ës
 = 
wp_°©ics
.
TxNsByãs
-(wp_°©ics.
TxNsD©aPackës
+wp_°©ics.
TxNsSig«lPackës
)*46;

3762 
°©ics
->
ns_bssgp_°©ics
.
ns_out_o˘ës
 = 
wp_°©ics
.
TxNsByãs
-(wp_°©ics.
TxNsD©aPackës
+wp_°©ics.
TxNsSig«lPackës
)*42;

3764 
°©ics
->
ns_bssgp_°©ics
.
ns_out_∑ckës
 = 
wp_°©ics
.
TxNsD©aPackës
 + wp_°©ics.
TxNsSig«lPackës
;

3765 
°©ics
->
ns_bssgp_°©ics
.
ns_out_∑ckës_sig«Œög
 = 
wp_°©ics
.
TxNsSig«lPackës
;

3767 
°©ics
->
ns_bssgp_°©ics
.
ns_out_o˘ës
 +
Vp‹tInfo
->ns_bssgp_°©ics.
TxNsByãs
;

3768 
°©ics
->
ns_bssgp_°©ics
.
ns_out_∑ckës
 +(
Vp‹tInfo
->ns_bssgp_°©ics.
TxNsD©aPackës
 + Vp‹tInfo->ns_bssgp_°©ics.
TxNsSig«lPackës
);

3769 
°©ics
->
ns_bssgp_°©ics
.
ns_out_∑ckës_sig«Œög
 +
Vp‹tInfo
->ns_bssgp_°©ics.
TxNsSig«lPackës
;

3774 
	`mem£t
(&
wp_°©ics
,0,(wp_statics));

3775 
ªt
 = 
	`WP_FlowSèti°icsGë
(0,
Vp‹tInfo
->
agg_ù2ùtx2ho°
,&
wp_°©ics
);

3776 if(
öôül_cfg
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

3778 
°©ics
->
ns_bssgp_°©ics
.
bssgp_ö_o˘ës
 = 
wp_°©ics
.
RxBssgpByãs
 - (wp_°©ics.
RxBssgpD©aPackës
+wp_°©ics.
RxBssgpSig«lPackës
)*50;

3782 
°©ics
->
ns_bssgp_°©ics
.
bssgp_ö_o˘ës
 = 
wp_°©ics
.
RxBssgpByãs
 - (wp_°©ics.
RxBssgpD©aPackës
+wp_°©ics.
RxBssgpSig«lPackës
)*46;

3784 
°©ics
->
ns_bssgp_°©ics
.
bssgp_ö_∑ckës
 = 
wp_°©ics
.
RxBssgpD©aPackës
 + wp_°©ics.
RxBssgpSig«lPackës
;

3785 
°©ics
->
ns_bssgp_°©ics
.
bssgp_ö_∑ckës_sig«Œög
 = 
wp_°©ics
.
RxBssgpSig«lPackës
;

3786 if(
öôül_cfg
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

3788 
°©ics
->
ns_bssgp_°©ics
.
ns_ö_o˘ës
 = 
wp_°©ics
.
RxNsByãs
-(wp_°©ics.
RxNsD©aPackës
+wp_°©ics.
RxNsSig«lPackës
)*46;

3792 
°©ics
->
ns_bssgp_°©ics
.
ns_ö_o˘ës
 = 
wp_°©ics
.
RxNsByãs
-(wp_°©ics.
RxNsD©aPackës
+wp_°©ics.
RxNsSig«lPackës
)*42;

3794 
°©ics
->
ns_bssgp_°©ics
.
ns_ö_∑ckës
 = 
wp_°©ics
.
RxNsD©aPackës
 + wp_°©ics.
RxNsSig«lPackës
;

3795 
°©ics
->
ns_bssgp_°©ics
.
ns_ö_∑ckës_sig«Œög
 = 
wp_°©ics
.
RxNsSig«lPackës
;

3799 
	`mem£t
(&
wp_°©ics
,0,(wp_statics));

3800 
ªt
 = 
	`WP_FlowSèti°icsGë
(0,
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1
,&
wp_°©ics
);

3801 if(
öôül_cfg
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

3803 
°©ics
->
ns_bssgp_°©ics
.
bssgp_out_o˘ës
 = 
wp_°©ics
.
TxBssgpByãs
 -(wp_°©ics.
TxBssgpD©aPackës
+ wp_°©ics.
TxBssgpSig«lPackës
)*(4+46);

3807 
°©ics
->
ns_bssgp_°©ics
.
bssgp_out_o˘ës
 = 
wp_°©ics
.
TxBssgpByãs
 -(wp_°©ics.
TxBssgpD©aPackës
+ wp_°©ics.
TxBssgpSig«lPackës
)*(4+42);

3809 
°©ics
->
ns_bssgp_°©ics
.
bssgp_out_∑ckës
 = 
wp_°©ics
.
TxBssgpD©aPackës
 + wp_°©ics.
TxBssgpSig«lPackës
;

3810 
°©ics
->
ns_bssgp_°©ics
.
bssgp_out_∑ckës_sig«Œög

wp_°©ics
.
TxBssgpSig«lPackës
;

3812 
	`mem£t
(&
wp_°©ics
,0,(wp_statics));

3813 
ªt
 = 
	`WP_FlowSèti°icsGë
(0,
Vp‹tInfo
->
agg_dl_ù2ùtx2E√t1
,&
wp_°©ics
);

3814 if(
öôül_cfg
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

3816 
°©ics
->
ns_bssgp_°©ics
.
bssgp_out_o˘ës
 +
wp_°©ics
.
TxBssgpByãs
 -(wp_°©ics.
TxBssgpD©aPackës
+ wp_°©ics.
TxBssgpSig«lPackës
)*(4+46);

3820 
°©ics
->
ns_bssgp_°©ics
.
bssgp_out_o˘ës
 +
wp_°©ics
.
TxBssgpByãs
 -(wp_°©ics.
TxBssgpD©aPackës
+ wp_°©ics.
TxBssgpSig«lPackës
)*(4+42);

3822 
°©ics
->
ns_bssgp_°©ics
.
bssgp_out_∑ckës
 +(
wp_°©ics
.
TxBssgpD©aPackës
 + wp_°©ics.
TxBssgpSig«lPackës
);

3823 
°©ics
->
ns_bssgp_°©ics
.
bssgp_out_∑ckës_sig«Œög
 +
wp_°©ics
.
TxBssgpSig«lPackës
;

3827 
°©ics
->
ns_bssgp_°©ics
.
bssgp_out_o˘ës
 +
Vp‹tInfo
->ns_bssgp_°©ics.
TxBssgpByãs
;

3828 
°©ics
->
ns_bssgp_°©ics
.
bssgp_out_∑ckës
 +(
Vp‹tInfo
->ns_bssgp_°©ics.
TxBssgpD©aPackës
 + Vp‹tInfo->ns_bssgp_°©ics.
TxBssgpSig«lPackës
);

3829 
°©ics
->
ns_bssgp_°©ics
.
bssgp_out_∑ckës_sig«Œög
 +
Vp‹tInfo
->ns_bssgp_°©ics.
TxBssgpSig«lPackës
;

3830 if(
öôül_cfg
->
VœnFœg
 =
NPU_VLAN_ENABLE
)

3832 
°©ics
->
ns_bssgp_°©ics
.
ns_out_o˘ës
 = 
wp_°©ics
.
TxNsByãs
-(wp_°©ics.
TxNsD©aPackës
+wp_°©ics.
TxNsSig«lPackës
)*46;

3836 
°©ics
->
ns_bssgp_°©ics
.
ns_out_o˘ës
 = 
wp_°©ics
.
TxNsByãs
-(wp_°©ics.
TxNsD©aPackës
+wp_°©ics.
TxNsSig«lPackës
)*42;

3838 
°©ics
->
ns_bssgp_°©ics
.
ns_out_∑ckës
 = 
wp_°©ics
.
TxNsD©aPackës
+wp_°©ics.
TxNsSig«lPackës
;

3839 
°©ics
->
ns_bssgp_°©ics
.
ns_out_∑ckës_sig«Œög
 = 
wp_°©ics
.
TxNsSig«lPackës
;

3841 
°©ics
->
ns_bssgp_°©ics
.
ns_out_o˘ës
 +
Vp‹tInfo
->ns_bssgp_°©ics.
TxNsByãs
;

3842 
°©ics
->
ns_bssgp_°©ics
.
ns_out_∑ckës
 +(
Vp‹tInfo
->ns_bssgp_°©ics.
TxNsD©aPackës
 + Vp‹tInfo->ns_bssgp_°©ics.
TxNsSig«lPackës
);

3843 
°©ics
->
ns_bssgp_°©ics
.
ns_out_∑ckës_sig«Œög
 +
Vp‹tInfo
->ns_bssgp_°©ics.
TxNsSig«lPackës
;

3847 
	}
}

3848 
	$≈_˛ór_ns_bssgp_°©ics
(
u32
 
vp‹t
)

3850 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

3851 
ªt
;

3852 
STRU_VPORT_INFO
 *
Vp‹tInfo
;

3853 
FR_CHANNEL_INFO
 * 
ch_öfo
;

3854 
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
vp‹t
);

3855 
wp_ns_bssgp_°©is
 
wp_°©ics
;

3856 if(
Vp‹tInfo
 =
NULL
)

3858 
	`WDDI_WARNING
("≈_˛ór_ns_bssgp_°©ic†≈u_gë_vp‹t_öfÿÁû vp‹t0x%x",
vp‹t
);

3859  
ERR_UL_RELEASE_RESOURCE
;

3861 if(
Vp‹tInfo
->
U£dFœg
 =
UNUSED
)

3863 
	`WDDI_WARNING
("≈_˛ór_ns_bssgp_°©ic†≈u_gë_vp‹t_öfÿÁû ,vp‹à˛o£d vp‹t0x%x",
vp‹t
);

3864  
ERR_UL_RELEASE_RESOURCE
;

3866 if(
öôül_cfg
->
O±î©eMode
 =
NPU_MODE_FR
)

3868 
ch_öfo
 = &
Vp‹tInfo
->ch_info;

3869 ()
	`WP_FlowSèti°icsCÀ¨
(0,
ch_öfo
->
agg_‰_rx_ho°_Êow
);

3870 ()
	`WP_FlowSèti°icsCÀ¨
(0,
ch_öfo
->
agg_dow∆ök_tx2‰_devi˚
);

3874 ()
	`WP_FlowSèti°icsCÀ¨
(0,
Vp‹tInfo
->
agg_ù2ùtx2ho°
);

3875 ()
	`WP_FlowSèti°icsCÀ¨
(0,
Vp‹tInfo
->
agg_ul_ù2ùtx2E√t1
);

3878 
	`mem£t
(&
Vp‹tInfo
->
ns_bssgp_°©ics
,0,(
HOST_NS_BSSGP_STATICS
));

3880 
	}
}

3882 
	$≈_ho°_£t_ns_bssgp_°©ics
(
u8
 * 
buf
,
u32
 
Àn
,
HOST_NS_BSSGP_STATICS
 * 
°©ics
)

3886 if(
buf
[0] == 0x00)

3888 if(
buf
[4] == 0x01 || buf[4] == 0x00)

3890 
°©ics
->
TxBssgpD©aPackës
++;

3894 
°©ics
->
TxBssgpSig«lPackës
++;

3896 
°©ics
->
TxBssgpByãs
+=(
Àn
-4);

3897 
°©ics
->
TxNsD©aPackës
++;

3902 
°©ics
->
TxNsSig«lPackës
++;

3904 
°©ics
->
TxNsByãs
+=
Àn
;

3906 
	}
}

3909 
	$≈_˛o£_vp‹t_f‹_˛õ¡
(
LINX_SPID
 
˛õ¡
)

3911 
NODE
 *
ãmp
;

3912 
ENTRY
 
ôem
={0};

3913 
ENTRY
 *
found_ôem
;

3914 
STRU_VPORT_INFO
 *
p_Vp‹tInfo
;

3915 
ãmp
=
vp‹t_nodehód
;

3916 
ªt
;

3918 
ãmp
!=
NULL
)

3920 
ôem
.
key
 = 
ãmp
->
ht_key
;

3921 
ãmp
Òemp->
√xt
;

3923 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
ht
))

3925 
	`WDDI_WARNING
("np_release_resource_on_vport\n");

3929 
p_Vp‹tInfo
 = (
STRU_VPORT_INFO
 *)
found_ôem
->
d©a
;

3930 if(
USED
 =
p_Vp‹tInfo
->
U£dFœg
)

3933 if(
p_Vp‹tInfo
->
˛õ¡
 == client)

3935 
	`WDDI_INFO
("≈_˛o£_vp‹t_f‹_˛õ¡ vp‹à0x%x ,˛õ¡ = 0x%x",
p_Vp‹tInfo
->
p‹t_§c
,
˛õ¡
);

3936 if(
p_Vp‹tInfo
->
vp_ty≥
 =
VP_TYPE_FR
)

3938 
ªt
 = 
	`≈_˛o£_‰_vp‹t
(
p_Vp‹tInfo
->
p‹t_§c
);

3939 if(
ªt
 !
STATUS_OK
) Ñet;

3941 
ªt
 = 
	`≈u_˛ór_vp‹t_öfo
(
p_Vp‹tInfo
->
p‹t_§c
,p_Vp‹tInfo->
vp_ty≥
);

3942 if(
ªt
 !
STATUS_OK
)

3944 
	`WDDI_WARNING
("≈_˛o£_vp‹t_f‹_˛õ¡Çpu_˛ór_vp‹t_öfo(Ëªt=%dÉº‹",
ªt
);

3945  
ªt
;

3951  
STATUS_OK
;

3952 
	}
}

3954 
	$≈_˛o£_vp‹t_f‹_≈um⁄
(
LINX_SPID
 
˛õ¡
)

3956 
NODE
 *
ãmp
;

3957 
ENTRY
 
ôem
={0};

3958 
ENTRY
 *
found_ôem
;

3959 
STRU_VPORT_INFO
 *
p_Vp‹tInfo
;

3960 
ãmp
=
vp‹t_nodehód
;

3961 
ªt
;

3963 
ãmp
!=
NULL
)

3965 
ôem
.
key
 = 
ãmp
->
ht_key
;

3966 
ãmp
Òemp->
√xt
;

3968 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
ht
))

3970 
	`WDDI_WARNING
("np_release_resource_on_vport\n");

3974 
p_Vp‹tInfo
 = (
STRU_VPORT_INFO
 *)
found_ôem
->
d©a
;

3975 if(
USED
 =
p_Vp‹tInfo
->
U£dFœg
)

3978 if(
p_Vp‹tInfo
->
≈um⁄_öfo
.
˛õ¡
 == client)

3980 
	`WDDI_INFO
("≈_˛o£_vp‹t_f‹_≈um⁄ vp‹à0x%x ,˛õ¡ = 0x%x",
p_Vp‹tInfo
->
p‹t_§c
,
˛õ¡
);

3982 if(
p_Vp‹tInfo
->
≈um⁄_öfo
.
ˇ±uªE«bÀFœg
 =
NPU_NPUMON_CAPTURE_ENABLE
)

3984 
p_Vp‹tInfo
->
≈um⁄_öfo
.
ˇ±uªE«bÀFœg
 = 
NPU_NPUMON_CAPTURE_DISABLE
;

3985 
p_Vp‹tInfo
->
≈um⁄_öfo
.
˛õ¡
 = 0;

3991  
STATUS_OK
;

3992 
	}
}

3994 
	$≈_íabÀ_vp‹t_ˇ±uª_f‹_≈um⁄
(
STRU_NPUMON_INFO
 * 
öfo
,
LINX_SPID
 
˛õ¡
)

3996 
NODE
 *
ãmp
;

3997 
ENTRY
 
ôem
={0};

3998 
ENTRY
 *
found_ôem
;

3999 
STRU_VPORT_INFO
 *
Vp‹tInfo
;

4000 
ãmp
=
vp‹t_nodehód
;

4001 
ªt
;

4002 
u32
 
vp‹t
 = 0;

4003 if(
öfo
->
ifTy≥
 =
VP_TYPE_FR
)

4005 if(
öfo
->
group
 !
NPUMON_NO_ARGS
 && info->
dlci
!= NPUMON_NO_ARGS)

4007 
vp‹t
 = 
	`≈_‰addr_∑ck
(
öfo
->
°m1
,öfo->
TrunkNumbî
,öfo->
group
,öfo->
dlci
);

4008 
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
vp‹t
);

4009 if(
Vp‹tInfo
 =
NULL
)

4011 
	`F¥ötf
("ˇn'àgëÖ‹àöfÿ,∂ó£ checkÇpum⁄ i≈uà∑ømÖ‹à%d \n",
vp‹t
);

4012  
NPU_SET_NPUMON_CMD_PORT_ERROR
;

4014 if(
USED
 =
Vp‹tInfo
->
U£dFœg
)

4016 if(
Vp‹tInfo
->
≈um⁄_öfo
.
ˇ±uªE«bÀFœg
 =
NPU_NPUMON_CAPTURE_DISABLE
)

4018 
Vp‹tInfo
->
≈um⁄_öfo
.
˛õ¡
 = client;

4019 
Vp‹tInfo
->
≈um⁄_öfo
.
ˇ±uªE«bÀFœg
 = 
NPU_NPUMON_CAPTURE_ENABLE
;

4020 
Vp‹tInfo
->
≈um⁄_öfo
.
Àn
 = 
öfo
->len;

4021 
Vp‹tInfo
->
≈um⁄_öfo
.
ifTy≥
 = 
VP_TYPE_FR
;

4025  
NPU_SET_NPUMON_CMD_ALREAD_START_ERROR
;

4031  
NPU_SET_NPUMON_CMD_ALREAD_START_ERROR
;

4037 
ãmp
!=
NULL
)

4039 
ôem
.
key
 = 
ãmp
->
ht_key
;

4040 
ãmp
Òemp->
√xt
;

4042 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
ht
))

4044 
	`WDDI_WARNING
("np_enable_vport_capture_for_npumonÖort can't find\n");

4048 
Vp‹tInfo
 = (
STRU_VPORT_INFO
 *)
found_ôem
->
d©a
;

4049 if(
USED
 =
Vp‹tInfo
->
U£dFœg
)

4051 if(
öfo
->
group
 =
NPUMON_NO_ARGS
)

4053 if((
Vp‹tInfo
->
ch_öfo
.
åunk
 =
öfo
->
TrunkNumbî
)&& (Vp‹tInfo->ch_öfo.
ˇrd
 =öfo->
°m1
))

4055 if(
Vp‹tInfo
->
≈um⁄_öfo
.
ˇ±uªE«bÀFœg
 =
NPU_NPUMON_CAPTURE_DISABLE
)

4057 
Vp‹tInfo
->
≈um⁄_öfo
.
˛õ¡
 = client;

4058 
Vp‹tInfo
->
≈um⁄_öfo
.
ˇ±uªE«bÀFœg
 = 
NPU_NPUMON_CAPTURE_ENABLE
;

4059 
Vp‹tInfo
->
≈um⁄_öfo
.
Àn
 = 
öfo
->len;

4060 
Vp‹tInfo
->
≈um⁄_öfo
.
ifTy≥
 = 
VP_TYPE_FR
;

4064  
NPU_SET_NPUMON_CMD_ALREAD_START_ERROR
;

4070 if((
Vp‹tInfo
->
ch_öfo
.
åunk
 =
öfo
->
TrunkNumbî
Ë&& (Vp‹tInfo->ch_öfo.
group
 =öfo->groupË&& (Vp‹tInfo->ch_öfo.
ˇrd
 =öfo->
°m1
))

4072 if(
Vp‹tInfo
->
≈um⁄_öfo
.
ˇ±uªE«bÀFœg
 =
NPU_NPUMON_CAPTURE_DISABLE
)

4074 
Vp‹tInfo
->
≈um⁄_öfo
.
˛õ¡
 = client;

4075 
Vp‹tInfo
->
≈um⁄_öfo
.
ˇ±uªE«bÀFœg
 = 
NPU_NPUMON_CAPTURE_ENABLE
;

4076 
Vp‹tInfo
->
≈um⁄_öfo
.
Àn
 = 
öfo
->len;

4077 
Vp‹tInfo
->
≈um⁄_öfo
.
ifTy≥
 = 
VP_TYPE_FR
;

4081  
NPU_SET_NPUMON_CMD_ALREAD_START_ERROR
;

4094 
vp‹t
 = 
öfo
->
p‹tSrc
;

4096 if(
vp‹t
 == 0x100)

4098 
	`F¥ötf
("startÅo captureÖacket onáll udpÖort\n");

4099 
NODE
 *
ãmp
;

4100 
ENTRY
 
ôem
={0};

4101 
ENTRY
 *
found_ôem
;

4102 
ãmp
=
vp‹t_nodehód
;

4103 
ªt
;

4104 
ãmp
!=
NULL
)

4106 
ôem
.
key
 = 
ãmp
->
ht_key
;

4107 
ãmp
Òemp->
√xt
;

4109 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
ht
))

4111 
	`WDDI_WARNING
("np_enable_vport_capture_for_npumonÖortÇot found\n");

4115 
Vp‹tInfo
 = (
STRU_VPORT_INFO
 *)
found_ôem
->
d©a
;

4116 if(
USED
 =
Vp‹tInfo
->
U£dFœg
)

4118 if(
Vp‹tInfo
->
vp_ty≥
 =
VP_TYPE_UDP
)

4120 if(
Vp‹tInfo
->
≈um⁄_öfo
.
ˇ±uªE«bÀFœg
 =
NPU_NPUMON_CAPTURE_DISABLE
)

4122 
Vp‹tInfo
->
≈um⁄_öfo
.
˛õ¡
 = client;

4123 
Vp‹tInfo
->
≈um⁄_öfo
.
ˇ±uªE«bÀFœg
 = 
NPU_NPUMON_CAPTURE_ENABLE
;

4124 
Vp‹tInfo
->
≈um⁄_öfo
.
Àn
 = 
öfo
->len;

4125 
Vp‹tInfo
->
≈um⁄_öfo
.
ifTy≥
 = 
VP_TYPE_UDP
;

4126 
Vp‹tInfo
->
≈um⁄_öfo
.
ùaddr
 = 
öfo
->ipaddr;

4136  
STATUS_OK
;

4139 
Vp‹tInfo
 = 
	`≈u_gë_vp‹t_öfo
(
vp‹t
);

4140 if(
Vp‹tInfo
 =
NULL
)

4142 
	`F¥ötf
("ˇn'àgëÖ‹àöfÿ,∂ó£ checkÇpum⁄ i≈uà∑ømÖ‹à%d \n",
vp‹t
);

4143  
NPU_SET_NPUMON_CMD_PORT_ERROR
;

4145 if(
USED
 =
Vp‹tInfo
->
U£dFœg
)

4147 if(
Vp‹tInfo
->
≈um⁄_öfo
.
ˇ±uªE«bÀFœg
 =
NPU_NPUMON_CAPTURE_DISABLE
)

4149 
Vp‹tInfo
->
≈um⁄_öfo
.
˛õ¡
 = client;

4150 
Vp‹tInfo
->
≈um⁄_öfo
.
ˇ±uªE«bÀFœg
 = 
NPU_NPUMON_CAPTURE_ENABLE
;

4151 
Vp‹tInfo
->
≈um⁄_öfo
.
Àn
 = 
öfo
->len;

4152 
Vp‹tInfo
->
≈um⁄_öfo
.
ifTy≥
 = 
VP_TYPE_UDP
;

4153 
Vp‹tInfo
->
≈um⁄_öfo
.
ùaddr
 = 
öfo
->ipaddr;

4157  
NPU_SET_NPUMON_CMD_ALREAD_START_ERROR
;

4162  
NPU_SET_NPUMON_CMD_PORT_ERROR
;

4166  
STATUS_OK
;

4167 
	}
}

4170 
	$≈_di•œy_‰ag_Êow_öfo
()

4172 
NODE
 *
ãmp
;

4173 
ENTRY
 
ôem
={0};

4174 
ENTRY
 *
found_ôem
;

4175 
NP_ARP_INFO
 *
p_AΩInfo
;

4176 
ãmp
=
¨p_nodehód
;

4177 
	`F¥ötf
("IP fragement info :\n");

4178 
ãmp
!=
NULL
)

4180 
ôem
.
key
 = 
ãmp
->
ht_key
;

4181 
ãmp
Òemp->
√xt
;

4183 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
¨p_ht
))

4188 
p_AΩInfo
 = (
NP_ARP_INFO
 *)
found_ôem
->
d©a
;

4190 if(
p_AΩInfo
->
agg_ù‰ag
)

4192 
ö_addr
 
addr
;

4193 
u32
 
ù
 = (
p_AΩInfo
->
Ip
);

4194 
	`mem˝y
(&
addr
,&
ù
,4);

4195 
	`F¥ötf
("ù is: %†",
	`öë_¡ﬂ
(
addr
));

4196 
	`F¥ötf
("Ma¯is: 0x%x:0x%x:0x%x:0x%x:0x%x:0x%x\n",
p_AΩInfo
->
Mac
[0],p_ArpInfo->Mac[1],p_ArpInfo->Mac[2],

4197 
p_AΩInfo
->
Mac
[3],p_ArpInfo->Mac[4],p_ArpInfo->Mac[5]);

4198 
	`≈_di•œy_‰ag_öfo
(
p_AΩInfo
->
‰agGΩH™dÀ
);

4199 
	`F¥ötf
("\n");

4200 
	`F¥ötf
("p_ArpInfo->agg_tx2eth1: \n");

4201 
	`SètIwFlowAggªg©i⁄
(
p_AΩInfo
->
agg_tx2ëh1
);

4202 
	`F¥ötf
("p_ArpInfo->agg_ipfrag: \n");

4203 
	`SètIwFlowAggªg©i⁄
(
p_AΩInfo
->
agg_ù‰ag
);

4208 
	}
}

4209 
	$löx_öô_thªad_rx_‰
()

4211 
LINX
 *
löx
;

4214 
löx
 = 
	`löx_›í
("wddi_£rvî_rx_‰_thªad", 0, 
NULL
);

4215 i‡(
löx
 =
NULL
)

4217 
	`WDDI_ERR
("löx_›í(Ë%s", 
	`°ªº‹
(
î∫o
));

4220 
	`≈u_£t_£rvî_rx_‰_thªad_löx_öfo
(
löx
);

4221  
	`löx_gë_des¸ùt‹
(
löx
);

4222 
	}
}

4223 
	$löx_öô_thªad_rx_ëh
()

4225 
LINX
 *
löx
;

4228 
löx
 = 
	`löx_›í
("wddi_£rvî_rx_ëh_thªad", 0, 
NULL
);

4229 i‡(
löx
 =
NULL
)

4231 
	`WDDI_ERR
("löx_›í(Ë%s", 
	`°ªº‹
(
î∫o
));

4234 
	`≈u_£t_£rvî_rx_ëh_thªad_löx_öfo
(
löx
);

4235  
	`löx_gë_des¸ùt‹
(
löx
);

4236 
	}
}

4240 
STRU_PEER_VPORT_INFO
 * 
	$≈u_£t_≥î_vp‹t_öfo
(
u32
 
p‹t_§c
)

4243 
ENTRY
 
ôem
={0};

4244 
ENTRY
 *
found_ôem
;

4245 
ôem°r
[16]={0};

4246 
STRU_PEER_VPORT_INFO
 *
p_Vp‹tInfo
;

4247 
ôem
.
key
 = 
ôem°r
;

4249 
	`•rötf
(
ôem
.
key
,"%d",
p‹t_§c
);

4251 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
≥î_vp‹t_ht
))

4253 
p_Vp‹tInfo
 = 
	`mÆloc
((
STRU_PEER_VPORT_INFO
));

4254 
	`mem£t
(
p_Vp‹tInfo
,0,(
STRU_PEER_VPORT_INFO
));

4255 
ôem
.
key
 = 
	`mÆloc
(16);

4256 
	`mem£t
(
ôem
.
key
,0,16);

4257 
	`•rötf
(
ôem
.
key
,"%d",
p‹t_§c
);

4260 
ôem
.
d©a
 = (*)
p_Vp‹tInfo
;

4261 ()
	`h£¨ch_r
(
ôem
, 
ENTER
,&
found_ôem
,
≥î_vp‹t_ht
) ;

4265 
p_Vp‹tInfo
 = (
STRU_PEER_VPORT_INFO
 *)
found_ôem
->
d©a
;

4267 
p_Vp‹tInfo
->
p‹t_§c
 =Öort_src;

4269  
p_Vp‹tInfo
;

4270 
	}
}

4272 
STRU_PEER_VPORT_INFO
 * 
	$≈u_gë_≥î_vp‹t_öfo
(
u32
 
p‹t_§c
)

4274 
ENTRY
 
ôem
={0};

4275 
ENTRY
 *
found_ôem
;

4276 
ôem°r
[30];

4277 
ôem
.
key
 = 
ôem°r
;

4278 
	`•rötf
(
ôem
.
key
,"%d",
p‹t_§c
);

4279 if(0 =
	`h£¨ch_r
(
ôem
,
FIND
,&
found_ôem
,
≥î_vp‹t_ht
))

4281  
NULL
;

4285  (
STRU_PEER_VPORT_INFO
 *)
found_ôem
->
d©a
;

4288 
	}
}

	@spp_wddi_server.h

3 #i‚de‡
__WDDI_SERVER_H


4 
	#__WDDI_SERVER_H


	)

5 
	~<î∫o.h
>

6 
	~<°rög.h
>

7 
	~<°dio.h
>

8 
	~<löx.h
>

9 
	~"•p_≈u_lök.h
"

10 
	~"≈_comm⁄.h
"

12 
	#USED
 1

	)

13 
	#UNUSED
 0

	)

15 
	#NPU_UDP_MAC_ADDR_LEN
 6

	)

16 
	#NPU_UDP_VLAN_EN
 1

	)

19 
	#NPU_UDP_ETHPACK_LEN_MAX
 1536

	)

20 
	#NPU_UDP_ETHPACK_PROTECTION
 64

	)

22 
	#NPU_UDP_ETH_TYPE_IPV4
 0x0800

	)

24 
	#NPU_UDP_VLAN_TYPE_TAG
 0x8100

	)

26 
	#NPU_UDP_VLAN_EN
 1

	)

28 
	#NPU_UDP_VLAN_DIS
 0

	)

32 
	#NPU_UDP_IPV4_VER
 0x45

	)

34 
	#NPU_UDP_IPV4_LEN
 4

	)

36 
	#NPU_UDP_IPV4_TOS
 0

	)

38 
	#NPU_UDP_IPV4_ID
 0

	)

40 
	#NPU_UDP_IPV4_OFF
 0x4000

	)

42 
	#NPU_UDP_IPV4_TTL
 0x40

	)

44 
	#NPU_UDP_IPV4_PRO_UDP
 0x11

	)

46 
	#NPU_UDP_IPV4_CKSUM
 0

	)

48 
	#NPU_UDP_CHKSUM
 0

	)

50 
	gNODE


52 *
	ght_key
;

53 
NODE
 *
	g√xt
;

54 }
	tNODE
;

58 
	gSTRU_VPORT_NPUMON_TAG


60 
LINX_SPID
 
	g˛õ¡
;

61 
u32
 
	gˇ±uªE«bÀFœg
;

62 
u32
 
	gÀn
;

63 
	gifTy≥
;

64 
	gùaddr
;

65 }
	tSTRU_VPORT_NPUMON
;

67 
	gSTRU_VPORT_INFO_TAG


70 
LINX_SPID
 
	g˛õ¡
;

71 
	gùaddr_§c
;

72 
	gp‹t_§c
;

73 
	gvp_ty≥
;

74 
	gU£dFœg
;

75 
FR_CHANNEL_INFO
 
	gch_öfo
;

76 
STRU_VPORT_NPUMON
 
	g≈um⁄_öfo
;

77 
u32
 
	gagg_ul_ù2ùtx2E√t1
;

78 
u32
 
	gagg_dl_ù2ùtx2E√t1
;

79 
u32
 
	gagg_ù2ùtx2ho°
;

80 
u32
 
	gÊow_ul_tx2íë1
;

81 
u32
 
	gagg_ul_ù2ùtx2E√t1ModifyFœg
;

82 
u32
 
	gagg_ul_ù_to_íë2_h™dÀ
;

83 
HOST_NS_BSSGP_STATICS
 
	gns_bssgp_°©ics
;

84 
NODE
* 
	gbvci_nodehód
;

85 
u16
 
	gƒi_vÆid_èlbe
[257];

86 }
	tSTRU_VPORT_INFO
;

88 
	gSTRU_PEER_VPORT_INFO_TAG


91 
	gp‹t_§c
;

92 
WP_h™dÀ
 
	gagg_dow∆ök_tx2≥î‰
;

93 }
	tSTRU_PEER_VPORT_INFO
;

95 
	gSTRU_LINX_SERVER_INFO_TAG


97 
LINX
 *
	glöx
;

98 
	gU£dFœg
;

99 }
	tSTRU_LINX_SERVER_INFO
;

101 
	gNPU_HOST_RSV_PACKET_INFO_TAG


103 
u32
 
	gvp_ty≥
;

104 
u32
 
	gÀngth
;

105 
u32
 
	gp‹t
;

106 
u32
 
	gùaddr_d°
;

107 
u32
 
	gùaddr_§c
;

108 
u16
 
	gp‹t_§c
;

109 
u8
 *
	gpd©a
;

110 }
	tNPU_HOST_RSV_PACKET_INFO
;

116 
u8
 
	gëhî_dho°
[6];

117 
u8
 
	gëhî_sho°
[6];

118 
u16
 
	gëhî_ty≥
;

120 
	tSTRU_NPU_ETH_HDR
;

125 
u8
 
	gëhî_dho°
[6];

126 
u8
 
	gëhî_sho°
[6];

127 
u16
 
	gëhî_ty≥_èg
;

128 
u16
 
	gèg
;

133 
u16
 
	gëhî_ty≥
;

135 
	tSTRU_NPU_ETH_VLAN_HDR
;

141 
u8
 
	gù_vhl
;

142 
u8
 
	gù_tos
;

143 
u16
 
	gù_Àn
;

144 
u16
 
	gù_id
;

145 
u16
 
	gù_off
;

146 
u8
 
	gù_âl
;

147 
u8
 
	gù_p
;

148 
u16
 
	gù_sum
;

149 
u32
 
	gù_§c
;

150 
u32
 
	gù_d°
;

152 
	tSTRU_NPU_IP_HDR
;

157 
u16
 
	guh_•‹t
;

158 
u16
 
	guh_dp‹t
;

159 
u16
 
	guh_uÀn
;

160 
u16
 
	guh_sum
;

162 
	tSTRU_NPU_UDP_HDR
;

165 
STRU_VPORT_INFO
 * 
≈u_gë_vp‹t_öfo
(
u32
 
p‹t_§c
);

166 
≈u_£nd_udp_∑ckë
(
u8
* 
p
, 
u32
 
Àn
,u32 
ùaddr_§c
,u32 
ùaddr_d°
,u32 
p‹t_§c
, u32 
p‹t_d°
);

167 
≈u_£t_vp‹t_öfo
(
LINX_SPID
 
˛õ¡
,
u8
 
vp_ty≥
,
u32
 
ùaddr_§c
,u32 
p‹t_§c
);

168 
≈u_£t_upd©e_bvci_öfo
(
u32
 
vÂ‹t
, 
u16
 
NS_BVCI_ﬁd
, 
NP_UPDATE_BVCI_FLOW_INFO
* 
Êowöfo
,
STRU_VPORT_INFO
 *
Vp‹tInfo
);

169 
u16
 
≈u_udp_ˇl_chksum
(
u8
 *
pu8ChkD©a
, 
u32
 
u32ChkD©aLí
);

170 
≈u_£t_£rvî_löx_öfo
(
LINX
 * 
löx
);

171 
≈u_£t_£rvî_rx_‰_thªad_löx_öfo
(
LINX
 * 
löx
);

172 
≈u_£t_£rvî_rx_ëh_thªad_löx_öfo
(
LINX
 * 
löx
);

173 
≈u_£t_åunk_öfo
(
u32
 
åunkid
, 
NP_TRUNK_INFO
* 
åunköfo
);

174 
≈u_˛ór_vp‹t_öfo
(
u32
 
p‹t_§c
,
u8
 
vp_ty≥
);

175 
STRU_LINX_SERVER_INFO
 * 
≈u_gë_£rvî_löx_öfo
();

176 
STRU_LINX_SERVER_INFO
 * 
≈u_gë_£rvî_rx_‰_thªad_löx_öfo
();

177 
STRU_LINX_SERVER_INFO
 * 
≈u_gë_£rvî_rx_ëh_thªad_löx_öfo
();

179 
≈u_di•©ch_∑ckë_to_˛õ¡
(
NPU_HOST_RSV_PACKET_INFO
 *
SåuRsvPackëInfo
);

180 
≈u_gë_ª∂y
(
LINX
 *
löx
, 
LINX_SIGNAL
 **
sig
, 
LINX_SPID
 
˛õ¡
);

181 
≈u_h™dÀ_löx_msg
();

182 
löx_öô
();

183 
≈u_öô_vp‹t_öfo
();

184 
≈u_öô_u∂ök_öfo
();

185 
≈u_öô_dow∆ök_öfo
();

186 
≈u_öô_¨p_öfo
();

187 
≈u_öô_upd©e_bvci_öfo
();

188 
≈u_öô_åunk_öfo
();

189 
NP_ARP_INFO
 * 
≈u_gë_¨p_öfo
(
u32
 
ù
);

190 
≈u_£t_¨p_öfo
(
u32
 
ù
, 
NP_ARP_INFO
* 
¨pöfo
);

191 
NP_DL_FLOW_INFO
 * 
≈u_gë_dow∆ök_öfo
(
u16
 
Dp‹tSèπVÆue
,u16 
bvci
);

192 
NP_UL_FLOW_INFO
 * 
≈u_gë_u∂ök_öfo
(
u32
 
vÂ‹t
,u32 
NRIVÆue
);

193 
NP_UPDATE_BVCI_FLOW_INFO
 * 
≈u_gë_upd©e_bvci_öfo
(
u32
 
vÂ‹t
, 
u16
 
NS_BVCI_ﬁd
);

194 
STRU_SET_INITAIL_CONFIG
 * 
≈u_gë_öôül_cfg_öfo
();

195 
STRU_SET_INITAIL_CONFIG
 * 
≈u_gë_≈_ªc⁄fig
();

197 
NP_TRUNK_INFO
 * 
≈u_gë_åunk_öfo
(
u32
 
Trunkid
);

198 
¸óã_ht_lök
(
NODE
 **
nodehód
,*
key
);

199 
di•œy_vp‹t_ht_lök
();

200 
di•œy_ul_rouã_ht_lök
();

201 
di•œy_dl_rouã_ht_lök
(
WP_U16
 
Dp‹tSèπVÆue
,WP_U16 
bvci
,
u32
 
O±Mode
);

202 
di•œy_¨p_ht_lök
();

203 
di•œy_upd©e_bvci_ht_lök
();

204 
di•œy_c⁄fig_öfo
();

205 
≈u_£t_u∂ök_öfo
(
NP_UL_FLOW_INFO
* 
Êowöfo
);

206 
≈u_£t_dow∆ök_öfo
(
NP_DL_FLOW_INFO
* 
Êowöfo
);

207 
≈u_h™lde_≈um⁄_ªque°
(
STRU_NPUMON_INFO
 * 
öfo
,
LINX_SPID
 
˛õ¡
);

208 
≈u_m⁄_ˇ±uª_∑ckë
(* 
buf„r
, 
u32
 
Àn
,u32 
p‹t
,
dúe˘i⁄
);

209 
≈u_£t_‰_dl_lök_èbÀ_öfo
(
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
* 
lökInfo
);

210 
≈u_£t_‰_ul_lök_èbÀ_öfo
(
STRU_SET_UPLINK_PATH_LINK_TABLE
* 
lökInfo
);

211 
≈u_öô_‰_ul_lök_èbÀ_öfo
();

212 
≈u_öô_‰_dl_lök_èbÀ_öfo
();

213 
di•œy_dl_lök_èbÀ_ht_lök
();

214 
di•œy_ul_lök_èbÀ_ht_lök
();

215 
STRU_SET_UPLINK_PATH_LINK_TABLE
 * 
≈u_gë_ul_lök_èbÀ_öfo
(
u32
 
P‹tSrc
);

216 
STRU_SET_FR_DOWNLINK_PATH_LINK_TABLE
 * 
≈u_gë_dl_lök_èbÀ_öfo
(
u16
 
NSEI
);

217 
NP_DL_FLOW_INFO
 * 
≈u_gë_dl_rouã_èbÀ_öfo
(* 
key
);

218 
u32
 
≈u_£t_öôül_cfg_öfo
(*
fûíame
, 
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
);

220 
ex∑t_∑r£r
(* 
fûíame
,
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
);

221 
˛i_≠∂y_c⁄figuøti⁄_fûes_‰om_dú
(* 
c⁄figuøti⁄_dú
,
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
);

222 
≈_˛o£_vp‹t_f‹_˛õ¡
(
LINX_SPID
 
˛õ¡
);

223 
NP_UPDATE_BVCI_FLOW_INFO
 * 
≈u_gë_ul_bvci_èbÀ_öfo
(* 
key
);

224 
≈_m⁄_£nd_ˇ±uª_d©a
(* 
buf„r
, 
u32
 
Àn
,
LINX_SPID
 
˛õ¡
,
dúe˘i⁄
,
u8
 
ty≥
);

225 
≈_˛o£_vp‹t_f‹_≈um⁄
(
LINX_SPID
 
˛õ¡
);

226 
≈_íabÀ_vp‹t_ˇ±uª_f‹_≈um⁄
(
STRU_NPUMON_INFO
 * 
öfo
,
LINX_SPID
 
˛õ¡
);

227 
≈_di•œy_‰ag_Êow_öfo
();

228 
≈_ul_ù_f‹w¨d_to_íë2_¸óã
(
STRU_VPORT_INFO
 *
Vp‹tInfo
);

229 
g_logLevñ
;

230 
löx_öô_thªad_rx_‰
();

231 
löx_öô_thªad_rx_ëh
();

	@tun_dev.c

1 
	~"≈_comm⁄.h
"

2 
	~<uni°d.h
>

3 
	~<f˙é.h
>

4 
	~<°dlib.h
>

5 
	~<°dio.h
>

6 
	~<°rög.h
>

7 
	~<sy¶og.h
>

8 
	~<î∫o.h
>

10 
	~<¨∑/öë.h
>

11 
	~<√töë/ëhî.h
>

12 
	~<sys/io˘l.h
>

13 
	~<sys/sockë.h
>

14 
	~<löux/if.h
>

16 
	~"tun_dev.h
"

17 
	~"wddi_log.h
"

18 
	~"•p_≈u_lök.h
"

19 
	~"•p_wddi_£rvî.h
"

21 
	~"xs_io˘l.h
"

23 
	#HAVE_LINUX_IF_TUN_H


	)

24 
	#IF_NAME
 "sÂ2"

	)

26 * 
	$gë_i‚ame
(){  
IF_NAME
;
	}
}

32 
	$tun_›í_comm⁄0
(*
dev
, 
i°un
)

34 
tu¬ame
[14];

35 
i
, 
fd
, 
îr
;

37 if–*
dev
 ) {

38 
	`•rötf
(
tu¬ame
, "/dev/%s", 
dev
);

39  
	`›í
(
tu¬ame
, 
O_RDWR
);

42 
	`•rötf
(
tu¬ame
, "/dev/%s", 
i°un
 ? "tun" : "tap");

43 
îr
 = 0;

44 
i
=0; i < 255; i++){

45 
	`•rötf
(
tu¬ame
 + 8, "%d", 
i
);

47 if–(
fd
=
	`›í
(
tu¬ame
, 
O_RDWR
)) > 0 ) {

48 
	`°r˝y
(
dev
, 
tu¬ame
 + 5);

49  
fd
;

51 i‡(
î∫o
 !
ENOENT
)

52 
îr
 = 
î∫o
;

53 i‡(
i
)

56 i‡(
îr
)

57 
î∫o
 = 
îr
;

59 
	}
}

61 #ifde‡
HAVE_LINUX_IF_TUN_H


62 
	~<löux/if_tun.h
>

64 #i‚de‡
OTUNSETNOCSUM


66 
	#OTUNSETNOCSUM
 (('T'<< 8Ë| 200)

	)

67 
	#OTUNSETDEBUG
 (('T'<< 8Ë| 201)

	)

68 
	#OTUNSETIFF
 (('T'<< 8Ë| 202)

	)

69 
	#OTUNSETPERSIST
 (('T'<< 8Ë| 203)

	)

70 
	#OTUNSETOWNER
 (('T'<< 8Ë| 204)

	)

73 
	$tun_›í_comm⁄
(*
dev
, 
i°un
)

75 
i‰eq
 
i‰
;

76 
fd
;

78 i‡((
fd
 = 
	`›í
("/dev/√t/tun", 
O_RDWR
)) < 0)

79  
	`tun_›í_comm⁄0
(
dev
, 
i°un
);

81 
	`mem£t
(&
i‰
, 0, (ifr));

82 
i‰
.
i‰_Êags
 = (
i°un
 ? 
IFF_TUN
 : 
IFF_TAP
Ë| 
IFF_NO_PI
;

83 i‡(*
dev
)

84 
	`°∫˝y
(
i‰
.
i‰_«me
, 
dev
, 
IFNAMSIZ
);

86 i‡(
	`io˘l
(
fd
, 
TUNSETIFF
, (*Ë&
i‰
) < 0) {

87 i‡(
î∫o
 =
EBADFD
) {

89 i‡(
	`io˘l
(
fd
, 
OTUNSETIFF
, (*Ë&
i‰
) < 0)

90 
Áûed
;

92 
Áûed
;

95 
	`°r˝y
(
dev
, 
i‰
.
i‰_«me
);

96  
fd
;

98 
Áûed
:

99 
	`˛o£
(
fd
);

101 
	}
}

104 
	#tun_›í_comm⁄
(
dev
, 
ty≥
Ë
	`tun_›í_comm⁄0
(dev,Åy≥)

	)

108 
	$tun_›í
(*
dev
Ë{  
	`tun_›í_comm⁄
(dev, 1); 
	}
}

109 
	$èp_›í
(*
dev
Ë{  
	`tun_›í_comm⁄
(dev, 0); 
	}
}

111 
	$tun_˛o£
(
fd
, *
dev
Ë{  
	`˛o£
(fd); 
	}
}

112 
	$èp_˛o£
(
fd
, *
dev
Ë{  
	`˛o£
(fd); 
	}
}

115 
	$tun_wrôe
(
fd
, *
buf
, 
Àn
Ë{  
	`wrôe
(fd, buf,Üí); 
	}
}

116 
	$èp_wrôe
(
fd
, *
buf
, 
Àn
Ë{  
	`wrôe
(fd, buf,Üí); 
	}
}

118 
	$tun_ªad
(
fd
, *
buf
, 
Àn
Ë{  
	`ªad
(fd, buf,Üí); 
	}
}

119 
	$èp_ªad
(
fd
, *
buf
, 
Àn
Ë{  
	`ªad
(fd, buf,Üí); 
	}
}

121 
	gg_èpfd
;

123 
	$å™s_mask
(
u32
 
mask
)

125 
u32
 
i
;

126  
i
 = 0; i < 32; ++i)

128 if(
mask
 << (31 - 
i
))  32-i;

131 
	}
}

132 
	$¸óã_èpcfg
(
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
)

134 
u32
 
i
;

135 
èpcfg«me
[200]={0};

136 
vèpcfg«me
[200]={0};

137 
èpc⁄ã¡
[200]={0};

138 
vèpc⁄ã¡
[200]={0};

139 
rouã«me
[200]={0};

140 
πc⁄ã¡
[200]={0};

141 
FILE
 *
fd
;

144 if(
NPU_VLAN_ENABLE
 =
öôül_cfg
->
VœnFœg
)

146 
	`•rötf
(
vèpcfg«me
, "/etc/sysconfig/network/ifcfg-%s.%d",

147 
	`gë_i‚ame
(),

148 
öôül_cfg
->
VœnTag
);

149 
	`•rötf
(
vèpc⁄ã¡
,"ETHERDEVICE=%s\nSTARTMODE=onboot\nIPADDR=%d.%d.%d.%d/%d\nLLADDR=%02x:%02x:%02x:%02x:%02x:%02x",

150 
	`gë_i‚ame
(),

151 (
u8
)(
öôül_cfg
->
ifI∑ddr
>>24),

152 (
u8
)((
öôül_cfg
->
ifI∑ddr
>>16)&0xFF),

153 (
u8
)((
öôül_cfg
->
ifI∑ddr
>>8)&0xFF),

154 (
u8
)((
öôül_cfg
->
ifI∑ddr
)&0xFF),

155 
	`å™s_mask
(
öôül_cfg
->
ifIpNëMask
),

156 
öôül_cfg
->
ifMAC§c
[0],

157 
öôül_cfg
->
ifMAC§c
[1],

158 
öôül_cfg
->
ifMAC§c
[2],

159 
öôül_cfg
->
ifMAC§c
[3],

160 
öôül_cfg
->
ifMAC§c
[4],

161 
öôül_cfg
->
ifMAC§c
[5]

164 
	`•rötf
(
èpcfg«me
, "/ëc/sysc⁄fig/√tw‹k/ifcfg-%s",
	`gë_i‚ame
());

165 
	`•rötf
(
èpc⁄ã¡
,"BOOTPROTO='static'\nETHTOOL_OPTIONS=''\nMTU=''\nNAME='Tap Connection'\nSTARTMODE='auto'\nUSERCONTROL='no'",

166 
	`gë_i‚ame
());

167 
fd
 = 
	`f›í
(
èpcfg«me
, "w");

168 
	`fwrôe
(
èpc⁄ã¡
, 
	`°æí
—≠c⁄ã¡), 1, 
fd
);

169 
	`f˛o£
(
fd
);

171 
fd
 = 
	`f›í
(
vèpcfg«me
, "w");

172 
	`fwrôe
(
vèpc⁄ã¡
, 
	`°æí
(vèpc⁄ã¡), 1, 
fd
);

173 
	`f˛o£
(
fd
);

180 
	`•rötf
(
èpcfg«me
, "/ëc/sysc⁄fig/√tw‹k/ifcfg-%s",
	`gë_i‚ame
());

181 
	`•rötf
(
èpc⁄ã¡
,"BOOTPROTO='static'\nETHTOOL_OPTIONS=''\nMTU=''\nNAME='Tap Connection'\nSTARTMODE='auto'\nUSERCONTROL='no'\nIPADDR='%d.%d.%d.%d/%d'\nLLADDR=%02x:%02x:%02x:%02x:%02x:%02x",

182 (
u8
)(
öôül_cfg
->
ifI∑ddr
>>24),

183 (
u8
)((
öôül_cfg
->
ifI∑ddr
>>16)&0xFF),

184 (
u8
)((
öôül_cfg
->
ifI∑ddr
>>8)&0xFF),

185 (
u8
)((
öôül_cfg
->
ifI∑ddr
)&0xFF),

186 
	`å™s_mask
(
öôül_cfg
->
ifIpNëMask
),

187 
öôül_cfg
->
ifMAC§c
[0],

188 
öôül_cfg
->
ifMAC§c
[1],

189 
öôül_cfg
->
ifMAC§c
[2],

190 
öôül_cfg
->
ifMAC§c
[3],

191 
öôül_cfg
->
ifMAC§c
[4],

192 
öôül_cfg
->
ifMAC§c
[5]

194 
fd
 = 
	`f›í
(
èpcfg«me
, "w");

195 
	`fwrôe
(
èpc⁄ã¡
, 
	`°æí
—≠c⁄ã¡), 1, 
fd
);

196 
	`f˛o£
(
fd
);

199 if(
NPU_VLAN_ENABLE
 =
öôül_cfg
->
VœnFœg
)

201 
	`•rötf
(
rouã«me
, "/etc/sysconfig/network/ifroute-%s.%d",

202 
	`gë_i‚ame
(), 
öôül_cfg
->
VœnTag
);

206 
	`•rötf
(
rouã«me
, "/ëc/sysc⁄fig/√tw‹k/i‰ouã-%s", 
	`gë_i‚ame
());

209 
fd
 = 
	`f›í
(
rouã«me
, "w");

210 
i
 = 0; i < 
SPP_MAX_ROUTE_NUM
; ++i)

212 if(
öôül_cfg
->
rouãInfo
[
i
].
G©ewayIP
 && inôül_cfg->rouãInfo[i].
IpD°
)

215 if(
NPU_VLAN_ENABLE
 =
öôül_cfg
->
VœnFœg
)

219 
	`•rötf
(
πc⁄ã¡
,"%d.%d.%d.%d/%d %d.%d.%d.%d - %s.%d -\n",

220 (
u8
)(
öôül_cfg
->
rouãInfo
[
i
].
IpD°
>>24),

221 (
u8
)((
öôül_cfg
->
rouãInfo
[
i
].
IpD°
>>16)&0xFF),

222 (
u8
)((
öôül_cfg
->
rouãInfo
[
i
].
IpD°
>>8)&0xFF),

223 (
u8
)((
öôül_cfg
->
rouãInfo
[
i
].
IpD°
)&0xFF),

224 
	`å™s_mask
(
öôül_cfg
->
rouãInfo
[
i
].
mask
),

226 (
u8
)(
öôül_cfg
->
rouãInfo
[
i
].
G©ewayIP
>>24),

227 (
u8
)((
öôül_cfg
->
rouãInfo
[
i
].
G©ewayIP
>>16)&0xFF),

228 (
u8
)((
öôül_cfg
->
rouãInfo
[
i
].
G©ewayIP
>>8)&0xFF),

229 (
u8
)((
öôül_cfg
->
rouãInfo
[
i
].
G©ewayIP
)&0xFF),

231 
	`gë_i‚ame
(), 
öôül_cfg
->
VœnTag


236 
	`•rötf
(
πc⁄ã¡
,"%d.%d.%d.%d/%d %d.%d.%d.%d - %s -\n",

237 (
u8
)(
öôül_cfg
->
rouãInfo
[
i
].
IpD°
>>24),

238 (
u8
)((
öôül_cfg
->
rouãInfo
[
i
].
IpD°
>>16)&0xFF),

239 (
u8
)((
öôül_cfg
->
rouãInfo
[
i
].
IpD°
>>8)&0xFF),

240 (
u8
)((
öôül_cfg
->
rouãInfo
[
i
].
IpD°
)&0xFF),

241 
	`å™s_mask
(
öôül_cfg
->
rouãInfo
[
i
].
mask
),

243 (
u8
)(
öôül_cfg
->
rouãInfo
[
i
].
G©ewayIP
>>24),

244 (
u8
)((
öôül_cfg
->
rouãInfo
[
i
].
G©ewayIP
>>16)&0xFF),

245 (
u8
)((
öôül_cfg
->
rouãInfo
[
i
].
G©ewayIP
>>8)&0xFF),

246 (
u8
)((
öôül_cfg
->
rouãInfo
[
i
].
G©ewayIP
)&0xFF),

248 
	`gë_i‚ame
());

250 
	`fwrôe
(
πc⁄ã¡
, 
	`°æí
‘tc⁄ã¡), 1, 
fd
);

254 
	`f˛o£
(
fd
);

257 
	}
}

258 
	$ªmove_èpcfg
()

260 
èpcfg«me
[200]={0};

261 
vèpcfg«me
[200]={0};

262 
rouã«me
[200]={0};

263 
i
;

264 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

267 if(
NPU_VLAN_ENABLE
 =
öôül_cfg
->
VœnFœg
)

269 
	`•rötf
(
vèpcfg«me
,"/etc/sysconfig/network/ifcfg-%s.%d",

270 
	`gë_i‚ame
(), 
öôül_cfg
->
VœnTag
);

271 
	`•rötf
(
rouã«me
,"/etc/sysconfig/network/ifroute-%s.%d",

272 
	`gë_i‚ame
(), 
öôül_cfg
->
VœnTag
);

274 
	`u∆ök
(
vèpcfg«me
);

278 
	`•rötf
(
rouã«me
,"/ëc/sysc⁄fig/√tw‹k/i‰ouã-%s", 
	`gë_i‚ame
());

280 
	`•rötf
(
èpcfg«me
,"/ëc/sysc⁄fig/√tw‹k/ifcfg-%s",
	`gë_i‚ame
());

281 
	`u∆ök
(
èpcfg«me
);

282 
	`u∆ök
(
rouã«me
);

283 
	}
}

285 
	$èp_öô
()

287 
èpfd
;

288 
tunfd
;

289 
°©us
;

290 
èpName
[16]={0};

291 
tunName
[16]={0};

292 
°rVœn
[25]={0};

293 
°rIpc⁄f
[60]={0};

294 
°rRouãc⁄f
[128]={0};

295 
i‚ame
[10];

296 
ifup
[60]= {0};

297 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

298 if(
NPU_VLAN_ENABLE
 =
öôül_cfg
->
VœnFœg
)

300 
	`•rötf
(
°rVœn
,"vc⁄figádd %†%d",
	`gë_i‚ame
(), 
öôül_cfg
->
VœnTag
);

301 
	`•rötf
(
°rIpc⁄f
,"ifc⁄fig %s.%d %d.%d.%d.%dÇëmask %d.%d.%d.%d up",
	`gë_i‚ame
(), 
öôül_cfg
->
VœnTag
,

302 (
u8
)(
öôül_cfg
->
ifI∑ddr
>>24),(u8)((initial_cfg->ifIpaddr>>16)&0xFF),(u8)((initial_cfg->ifIpaddr>>8)&0xFF),(u8)((initial_cfg->ifIpaddr)&0xFF),

303 (
u8
)(
öôül_cfg
->
ifIpNëMask
>>24),(u8)((initial_cfg->ifIpNetMask>>16)&0xFF),(u8)((initial_cfg->ifIpNetMask>>8)&0xFF),(u8)((initial_cfg->ifIpNetMask)&0xFF));

307 
	`•rötf
(
°rIpc⁄f
,"ifc⁄fig %†%d.%d.%d.%dÇëmask %d.%d.%d.%d up",
	`gë_i‚ame
(),

308 (
u8
)(
öôül_cfg
->
ifI∑ddr
>>24),(u8)((initial_cfg->ifIpaddr>>16)&0xFF),(u8)((initial_cfg->ifIpaddr>>8)&0xFF),(u8)((initial_cfg->ifIpaddr)&0xFF),

309 (
u8
)(
öôül_cfg
->
ifIpNëMask
>>24),(u8)((initial_cfg->ifIpNetMask>>16)&0xFF),(u8)((initial_cfg->ifIpNetMask>>8)&0xFF),(u8)((initial_cfg->ifIpNetMask)&0xFF));

312 
	`°r˝y
(
èpName
, 
	`gë_i‚ame
());

313 
èpfd

	`èp_›í
(
èpName
);

314 
tunfd

	`tun_›í
(
tunName
);

315 
	`¸óã_èpcfg
(
öôül_cfg
);

316 
	`WDDI_INFO
–"%s\n", 
èpName
);

317 
	`WDDI_INFO
–"%s\n", 
tunName
);

319 
	`WDDI_INFO
("tu¿fûêid: %d\n", 
tunfd
);

320 
	`WDDI_INFO
("è∞fûêid: %d\n", 
èpfd
);

328 if(
NPU_VLAN_ENABLE
 =
öôül_cfg
->
VœnFœg
)

330 
	`•rötf
(
ifup
, "ifc⁄fig %†0.0.0.0 up", 
	`gë_i‚ame
());

331 i‡((
°©us
 = 
	`sy°em
(
ifup
)) < 0)

332 
	`WDDI_ERR
("system ifconfig up");

334 i‡((
°©us
 = 
	`sy°em
(
°rVœn
)) < 0)

335 
	`WDDI_ERR
("system vconfig");

336 
	`•rötf
(
i‚ame
,"%s.%d",
	`gë_i‚ame
(), 
öôül_cfg
->
VœnTag
);

340 
	`•rötf
(
i‚ame
,
	`gë_i‚ame
());

342 ()
	`èp_sockë_£thwaddr
(
öôül_cfg
->
ifMAC§c
,
i‚ame
);

343 i‡((
°©us
 = 
	`sy°em
(
°rIpc⁄f
)) < 0)

344 
	`WDDI_ERR
("system ifconfig");

349 i‡((
°©us
 = 
	`sy°em
("ifconfig -a")) < 0)

350 
	`WDDI_ERR
("system ifconfig -a");

352 i‡((
°©us
 = 
	`sy°em
("ifconfigÅun0 0.0.0.0 up")) < 0)

353 
	`WDDI_ERR
("system ifconfigÅun0");

356 
i
;

357 
ö_addr
 
D°I∑ddr
;

358 
ö_addr
 
GwI∑ddr
;

359 
ö_addr
 
Rouãgwaddr
;

360 
u32
 
D°ù
,
Gwù
 ,
RouãMask
;

361 
i
 = 0;i< 
SPP_MAX_ROUTE_NUM
;i++)

363 if(
öôül_cfg
->
rouãInfo
[
i
].
G©ewayIP
 && inôül_cfg->rouãInfo[i].
IpD°
)

365 
Gwù
 = 
	`ht⁄l
(
öôül_cfg
->
rouãInfo
[
i
].
G©ewayIP
);

366 
D°ù
 = 
	`ht⁄l
(
öôül_cfg
->
rouãInfo
[
i
].
IpD°
);

367 
RouãMask
 = 
	`ht⁄l
(
öôül_cfg
->
rouãInfo
[
i
].
mask
);

368 
	`mem˝y
(&
D°I∑ddr
,&
D°ù
,4);

369 
	`mem˝y
(&
GwI∑ddr
,&
Gwù
,4);

370 
	`mem˝y
(&
Rouãgwaddr
,&
RouãMask
,4);

372 
GwIp
[24];

373 
	`•rötf
(
GwIp
,"%s",
	`öë_¡ﬂ
(
GwI∑ddr
));

375 
RouãmaskSå
[24];

376 
	`•rötf
(
RouãmaskSå
,"%s",
	`öë_¡ﬂ
(
Rouãgwaddr
));

378 if(0xfffffff‡=
RouãMask
)

380 if(
NPU_VLAN_ENABLE
 =
öôül_cfg
->
VœnFœg
)

382 
	`•rötf
(
°rRouãc⁄f
,"rouãádd -ho° %†gw %†dev %s.%d",
	`öë_¡ﬂ
(
D°I∑ddr
),
GwIp
,
	`gë_i‚ame
(),
öôül_cfg
->
VœnTag
);

386 
	`•rötf
(
°rRouãc⁄f
,"rouãádd -ho° %†gw %†dev %s",
	`öë_¡ﬂ
(
D°I∑ddr
),
GwIp
, 
	`gë_i‚ame
());

391 if(
NPU_VLAN_ENABLE
 =
öôül_cfg
->
VœnFœg
)

393 
	`•rötf
(
°rRouãc⁄f
,"rouãádd -√à%†√tmask %†gw %†dev %s.%d",
	`öë_¡ﬂ
(
D°I∑ddr
),
RouãmaskSå
,
GwIp
,
	`gë_i‚ame
(),
öôül_cfg
->
VœnTag
);

397 
	`•rötf
(
°rRouãc⁄f
,"rouãádd -√à%†√tmask %†gw %†dev %s",
	`öë_¡ﬂ
(
D°I∑ddr
),
RouãmaskSå
,
GwIp
,
	`gë_i‚ame
());

400 
	`F¥ötf
("%s\n",
°rRouãc⁄f
);

401 i‡((
°©us
 = 
	`sy°em
(
°rRouãc⁄f
)) < 0)

402 
	`WDDI_ERR
("systemÑouteádd");

405 
g_èpfd
 = 
èpfd
;

406  
èpfd
;

407 
	}
}

409 
	$èp_öãrÁ˚_ªc⁄fig
()

413 
°©us
;

414 
°rVœn
[128]={0};

415 
°rIpc⁄f
[128]={0};

416 
°rIpOld
[128]={0};

417 
°rIfup
[128]={0};

418 
°rRouãc⁄f
[128]={0};

419 
i‚ame
[10];

420 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

421 
STRU_SET_INITAIL_CONFIG
 *
≈_ªc⁄fig_±r
 = 
	`≈u_gë_≈_ªc⁄fig
();

423 
	`ªmove_èpcfg
();

424 if(
NPU_VLAN_ENABLE
 =
öôül_cfg
->
VœnFœg
)

426 
	`•rötf
(
°rVœn
,"ifc⁄fig %s.%d down",
	`gë_i‚ame
(),
öôül_cfg
->
VœnTag
);

427 
	`F¥ötf
("%s\n", 
°rVœn
);

431 
	`•rötf
(
°rVœn
,"ifc⁄fig %†down",
	`gë_i‚ame
());

432 
	`F¥ötf
("%s\n", 
°rVœn
);

434 i‡((
°©us
 = 
	`sy°em
(
°rVœn
)) < 0)

435 
	`WDDI_ERR
("system ifconfig");

437 if(
NPU_VLAN_ENABLE
 =
öôül_cfg
->
VœnFœg
 && inôül_cfg->
VœnTag
 !
≈_ªc⁄fig_±r
->VlanTag)

439 
	`•rötf
(
°rVœn
,"vc⁄figÑem %s.%d",
	`gë_i‚ame
(),
öôül_cfg
->
VœnTag
);

440 
	`F¥ötf
("%s\n", 
°rVœn
);

441 i‡((
°©us
 = 
	`sy°em
(
°rVœn
)) < 0)

442 
	`WDDI_ERR
("system vconfig");

444 if(
NPU_VLAN_ENABLE
 =
öôül_cfg
->
VœnFœg
)

447 
	`•rötf
(
°rIpOld
,"ipáddress del %d.%d.%d.%d/%d dev %s.%d",

448 (
u8
)(
öôül_cfg
->
ifI∑ddr
>>24),(u8)((initial_cfg->ifIpaddr>>16)&0xFF),(u8)((initial_cfg->ifIpaddr>>8)&0xFF),(u8)((initial_cfg->ifIpaddr)&0xFF),

449 
	`å™s_mask
(
öôül_cfg
->
ifIpNëMask
),

450 
	`gë_i‚ame
(),
öôül_cfg
->
VœnTag
);

455 
	`•rötf
(
°rIpOld
,"ipáddress del %d.%d.%d.%d/%d dev %s",

456 (
u8
)(
öôül_cfg
->
ifI∑ddr
>>24),(u8)((initial_cfg->ifIpaddr>>16)&0xFF),(u8)((initial_cfg->ifIpaddr>>8)&0xFF),(u8)((initial_cfg->ifIpaddr)&0xFF),

457 
	`å™s_mask
(
öôül_cfg
->
ifIpNëMask
),
	`gë_i‚ame
());

460 if(
NPU_VLAN_ENABLE
 =
≈_ªc⁄fig_±r
->
VœnFœg
)

462 
	`•rötf
(
°rVœn
,"vc⁄figádd %†%d",
	`gë_i‚ame
(),
≈_ªc⁄fig_±r
->
VœnTag
);

464 
	`•rötf
(
°rIpc⁄f
,"ipáddressádd %d.%d.%d.%d/%d dev %s.%d broadcast +",

465 (
u8
)(
≈_ªc⁄fig_±r
->
ifI∑ddr
>>24),(u8)((np_reconfig_ptr->ifIpaddr>>16)&0xFF),(u8)((np_reconfig_ptr->ifIpaddr>>8)&0xFF),(u8)((np_reconfig_ptr->ifIpaddr)&0xFF),

466 
	`å™s_mask
(
≈_ªc⁄fig_±r
->
ifIpNëMask
),

467 
	`gë_i‚ame
(),
≈_ªc⁄fig_±r
->
VœnTag
);

469 
	`•rötf
(
°rIfup
,"ifc⁄fig %s.%d up",
	`gë_i‚ame
(),
≈_ªc⁄fig_±r
->
VœnTag
);

470 i‡((
°©us
 = 
	`sy°em
(
°rVœn
)) < 0)

471 
	`WDDI_ERR
("system vconfig");

475 
	`•rötf
(
°rIpc⁄f
,"ipáddressádd %d.%d.%d.%d/%d dev %s broadcast +",

476 (
u8
)(
≈_ªc⁄fig_±r
->
ifI∑ddr
>>24),(u8)((np_reconfig_ptr->ifIpaddr>>16)&0xFF),(u8)((np_reconfig_ptr->ifIpaddr>>8)&0xFF),(u8)((np_reconfig_ptr->ifIpaddr)&0xFF),

477 
	`å™s_mask
(
≈_ªc⁄fig_±r
->
ifIpNëMask
),
	`gë_i‚ame
());

478 
	`•rötf
(
°rIfup
,"ifc⁄fig %†up",
	`gë_i‚ame
());

480 i‡((
°©us
 = 
	`sy°em
(
°rIpOld
)) < 0) ;

481 i‡((
°©us
 = 
	`sy°em
(
°rIpc⁄f
)) < 0)

482 
	`WDDI_ERR
("system ifconfig");

483 i‡((
°©us
 = 
	`sy°em
(
°rIfup
)) < 0) ;

486 if(
NPU_VLAN_ENABLE
 =
≈_ªc⁄fig_±r
->
VœnFœg
)

488 
	`•rötf
(
i‚ame
,"%s.%d",
	`gë_i‚ame
(),
≈_ªc⁄fig_±r
->
VœnTag
);

492 
	`•rötf
(
i‚ame
,"%s",
	`gë_i‚ame
());

495 ()
	`èp_sockë_£thwaddr
(
≈_ªc⁄fig_±r
->
ifMAC§c
,
i‚ame
);

496 i‡((
°©us
 = 
	`sy°em
("ifconfig -a")) < 0)

497 
	`WDDI_ERR
("system ifconfig -a");

500 
i
;

501 
ö_addr
 
D°I∑ddr
;

502 
ö_addr
 
GwI∑ddr
;

503 
ö_addr
 
Rouãgwaddr
;

504 
u32
 
D°ù
,
Gwù
 ,
RouãMask
;

505 
i
 = 0;i< 
SPP_MAX_ROUTE_NUM
;i++)

507 if(
≈_ªc⁄fig_±r
->
rouãInfo
[
i
].
G©ewayIP
 &&Çp_ªc⁄fig_±r->rouãInfo[i].
IpD°
)

509 
Gwù
 = 
	`ht⁄l
(
≈_ªc⁄fig_±r
->
rouãInfo
[
i
].
G©ewayIP
);

510 
D°ù
 = 
	`ht⁄l
(
≈_ªc⁄fig_±r
->
rouãInfo
[
i
].
IpD°
);

511 
RouãMask
 = 
	`ht⁄l
(
≈_ªc⁄fig_±r
->
rouãInfo
[
i
].
mask
);

512 
	`mem˝y
(&
D°I∑ddr
,&
D°ù
,4);

513 
	`mem˝y
(&
GwI∑ddr
,&
Gwù
,4);

514 
	`mem˝y
(&
Rouãgwaddr
,&
RouãMask
,4);

516 
GwIp
[24];

517 
	`•rötf
(
GwIp
,"%s",
	`öë_¡ﬂ
(
GwI∑ddr
));

519 
RouãmaskSå
[24];

520 
	`•rötf
(
RouãmaskSå
,"%s",
	`öë_¡ﬂ
(
Rouãgwaddr
));

522 if(0xfffffff‡=
RouãMask
)

524 
	`•rötf
(
°rRouãc⁄f
,"rouãádd -ho° %†gw %†dev %s.%d",
	`öë_¡ﬂ
(
D°I∑ddr
),
GwIp
,
	`gë_i‚ame
(),
≈_ªc⁄fig_±r
->
VœnTag
);

528 
	`•rötf
(
°rRouãc⁄f
,"rouãádd -√à%†√tmask %†gw %†dev %s.%d",
	`öë_¡ﬂ
(
D°I∑ddr
),
RouãmaskSå
,
GwIp
,
	`gë_i‚ame
(),
≈_ªc⁄fig_±r
->
VœnTag
);

530 
	`F¥ötf
("%s\n",
°rRouãc⁄f
);

531 i‡((
°©us
 = 
	`sy°em
(
°rRouãc⁄f
)) < 0)

532 
	`WDDI_ERR
("systemÑouteádd");

535 
	`¸óã_èpcfg
(
≈_ªc⁄fig_±r
);

538 
	}
}

542 
	gsockfd
;

544 
	$èp_sockë_›í
()

546 
°©us
=0;

547 
›ti⁄
;

548 
ªu£
 =1;

549 
sockfd
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

550 i‡(
sockfd
 < 0) {

551 
	`WDDI_ERR
("socket open fail");

557 
	`£tsock›t
(
sockfd
,
SOL_SOCKET
,
SO_REUSEADDR
,&
ªu£
,());

558 
°©us
 = 
	`f˙é
(
sockfd
, 
F_SETFL
, 
O_NONBLOCK
);

559 i‡(
°©us
 < 0)

561 
	`WDDI_ERR
("socket fcntl fail");

564 
›ti⁄
 = 1;

565 
°©us
 = 
	`io˘l
(
sockfd
, 
FIONBIO
, (*)&
›ti⁄
);

566 i‡(
°©us
 < 0)

568 
	`WDDI_ERR
("socket ioctl fail");

571  
sockfd
;

573 
	}
}

574 
	$èp_sockë_gë¨p
(
ùaddr
, * 
buf
)

576 
¨¥eq
árpreq={{0}};

577 
sockaddr_ö
 *
sö
;

578 
sockaddr_°‹age
 
ss
;

579 
i‚ame
[10];

580 
	`mem£t
(&
ss
, 0, (ss));

582 
sö
 = (
sockaddr_ö
 *Ë&
ss
;

583 
sö
->
sö_Ámûy
 = 
AF_INET
;

590 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

593 if((
	`ht⁄l
(
ùaddr
)&
öôül_cfg
->
ifIpNëMask
Ë=(öôül_cfg->
ifI∑ddr
&initial_cfg->ifIpNetMask))

598 
u32
 
i
;

599 
i
 = 0;i< 
SPP_MAX_ROUTE_NUM
;i++)

603 if(
öôül_cfg
->
rouãInfo
[
i
].
mask
 != 0)

605 if((
	`ht⁄l
(
ùaddr
)&
öôül_cfg
->
rouãInfo
[
i
].
mask
Ë=(öôül_cfg->rouãInfo[i].
IpD°
))

607 
ùaddr
 = 
öôül_cfg
->
rouãInfo
[
i
].
G©ewayIP
;

608 
ùaddr
 = 
	`ht⁄l
 (ipaddr);

614 if(
i
 =
SPP_MAX_ROUTE_NUM
)

616 
	`WDDI_WARNING
("ˇn'àgë g©eway i∞,ùadd∏0x%x", 
ùaddr
);

626 if(
NPU_VLAN_ENABLE
 =
öôül_cfg
->
VœnFœg
)

628 
	`•rötf
(
i‚ame
,"%s.%d",
	`gë_i‚ame
(),
öôül_cfg
->
VœnTag
);

632 
	`•rötf
(
i‚ame
,"%s",
	`gë_i‚ame
());

635 
sö
->
sö_addr
.
s_addr
 = (
ùaddr
);

637 
sö
 = (
sockaddr_ö
 *Ë&
¨¥eq
.
¨p_∑
;

638 
	`mem˝y
(
sö
, &
ss
, (
sockaddr_ö
));

639 
	`°r˝y
(
¨¥eq
.
¨p_dev
, 
i‚ame
);

640 
¨¥eq
.
¨p_ha
.
ß_Ámûy
 = 
AF_UNSPEC
;

641 i‡(
	`io˘l
(
sockfd
, 
SIOCGARP
, &
¨¥eq
) < 0) {

642 
	`WDDI_WARNING
("W¨n: io˘»Áûed:%s, i∑ddr: 0x%x,Éº‹: %d\n", 
	`°ªº‹
(
î∫o
),
ùaddr
,errno);

646 if(
¨¥eq
.
¨p_Êags
 !
ATF_COM
)

652 
	`mem˝y
(
buf
, 
¨¥eq
.
¨p_ha
.
ß_d©a
, 6);

655 
	}
}

657 
	$èp_sockë_gëhwaddr
(* 
mac
)

659 
i‰eq
 
i‰
;

660 
ªt
;

661 
i‚ame
[10];

662 
STRU_SET_INITAIL_CONFIG
 *
öôül_cfg
 = 
	`≈u_gë_öôül_cfg_öfo
();

663 if(
NPU_VLAN_ENABLE
 =
öôül_cfg
->
VœnFœg
)

665 
	`•rötf
(
i‚ame
,"%s.%d",
	`gë_i‚ame
(),
öôül_cfg
->
VœnTag
);

669 
	`•rötf
(
i‚ame
,"%s",
	`gë_i‚ame
());

671 
	`mem£t
(&
i‰
, 0, (ifr));

672 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

673 
ªt
 = 
	`io˘l
(
sockfd
, 
SIOCGIFHWADDR
, &
i‰
, (ifr));

674 i‡(
ªt
 == 0) {

675 
	`mem˝y
(
mac
, 
i‰
.
i‰_hwaddr
.
ß_d©a
, 6);

677 
	`WDDI_WARNING
("io˘»%†i‚amê%s:", 
	`°ªº‹
(
î∫o
),
i‚ame
);

680  
ªt
;

681 
	}
}

683 
	$èp_sockë_£thwaddr
–* 
mac
, * 
i‚ame
)

685 
i‰eq
 
i‰
;

686 
ªt
;

687 
	`mem£t
(&
i‰
, 0, (ifr));

689 
	`°r˝y
(
i‰
.
i‰_«me
, 
i‚ame
);

690 
i‰
.
i‰_addr
.
ß_Ámûy
 = 
ARPHRD_ETHER
;

691 
	`mem˝y
(
i‰
.
i‰_hwaddr
.
ß_d©a
, 
mac
, 6);

693 
ªt
 = 
	`io˘l
(
sockfd
, 
SIOCSIFHWADDR
, &
i‰
, (ifr));

694 i‡(
ªt
 != 0){

695 
	`WDDI_WARNING
("io˘»%†i‚amê%s:", 
	`°ªº‹
(
î∫o
),
i‚ame
);

698  
ªt
;

699 
	}
}

701 
	$èp_sockë_£nd
–
ùaddr
,
p‹t
, 
ùaddr_§c
,
p‹t_§c
,* 
buf
, 
Àn
)

705 
	`èp_sockë_˛o£
();

706 
	`èp_sockë_›í
();

707 
tﬁí
;

708 
sockaddr_ö
 
sö
={0};

709 
ªt
;

710 
	`mem£t
(&
sö
,0,(sin));

711 
sö
.
sö_Ámûy
 = 
AF_INET
;

712 
sö
.
sö_addr
.
s_addr
 = 
ùaddr_§c
;

713 
sö
.
sö_p‹t
 = 
p‹t_§c
;

715 if(
	`böd
(
sockfd
, (
sockaddr
 *)&
sö
, (sin))< 0)

717 
	`WDDI_WARNING
("böd %†p‹t_§¯ = %d i∑ddr_§¯0x%xÖ‹à%d bu‡%∞À¿%dÉº⁄ = %d", 
	`°ªº‹
(
î∫o
),
p‹t_§c
,
ùaddr_§c
,
p‹t
,
buf
,
Àn
,errno);

722 
lo›time
 = 1000;

723 (
	`böd
(
sockfd
, (
sockaddr
 *)&
sö
, (sin))< 0))

725 
	`u¶ìp
(1000);

726 
lo›time
--;

728 
	`F¥ötf
("lo›timê=%d \n",
lo›time
);

730 
sö
.
sö_Ámûy
 = 
AF_INET
;

731 
sö
.
sö_p‹t
 = (
p‹t
);

732 
sö
.
sö_addr
.
s_addr
 = (
ùaddr
);

739 
tﬁí
 = (
sö
);

740 
ªt
 = 
	`£ndto
(
sockfd
, 
buf
, 
Àn
, 
MSG_DONTWAIT
, (
sockaddr
 *)&
sö
, 
tﬁí
);

741 if(
ªt
 < 0)

742 
	`WDDI_WARNING
("£ndtÿ%s", 
	`°ªº‹
(
î∫o
));

747 
À·
 ,
us
;

748 
À·
 = 4000;

751 
us
 = 
À·
;

752 
À·
 = 
	`u¶ìp
(
us
);

754 }
À·
 >0 );

758  
ªt
;

759 
	}
}

762 
	$èp_∑ckë_wrôe
(* 
buf
, 
Àn
)

764 
size
;

765 
size
 = 
	`èp_wrôe
(
g_èpfd
, 
buf
, 
Àn
);

766 if(
size
 < 0)

768 
	`WDDI_WARNING
("wrôê%†%s", 
	`gë_i‚ame
(),
	`°ªº‹
(
î∫o
));

770  
size
;

771 
	}
}

775 
	$èp_sockë_˛o£
()

777 
	`˛o£
(
sockfd
);

779 
	}
}

782 
	#O_NOFOLLOW
 00400000

	)

783 
	$èp_hwadd_ªad
 (* 
mac
)

785 
fd
;

786 
XS_FILE_DESC
 
desc
;

787 
buf
[2048], 
off£t
;

788 *
°r
, *
±r
, *
ßvïå
;

789 
ëhî_addr
 *
addr
;

791 
fd
 = 
	`›í
("/dev/wp_b™k24", 
O_RDWR
|
O_NOFOLLOW
, 0644);

792 if(
fd
 == -1) {

793 
	`≥º‹
("open");

794 
	`exô
(1);

797 
desc
.
buf
 = buf;

799 if(
	`io˘l
(
fd
, 
XS_IOCTL_ENV_GET32
, &
desc
) != 0) {

801 
	`F¥ötf
("XS_IOCTL_ENV_GET failed\n");

802 
	`≥º‹
("ioctl");

803 
	`exô
(1);

812 
±r
 = (*)
buf
;

813 (
°r
 = 
	`°πok_r
(
±r
, "\n", &
ßvïå
)Ë!
NULL
) {

814 if(!
	`°∫cmp
(
°r
, "BOARD_MAC_ETH0", 
	`°æí
("BOARD_MAC_ETH0"))) {

815 
off£t
 = 
	`°æí
("BOARD_MAC_ETH0") + 1;

816 
addr
 = 
	`ëhî_©⁄
(&
°r
[
off£t
]);

817 
	`WDDI_INFO
("MAC forÖort 0 is %02x:%02x:%02x:%02x:%02x:%02x\n",

818 
addr
->
ëhî_addr_o˘ë
[0],

819 
addr
->
ëhî_addr_o˘ë
[1],

820 
addr
->
ëhî_addr_o˘ë
[2],

821 
addr
->
ëhî_addr_o˘ë
[3],

822 
addr
->
ëhî_addr_o˘ë
[4],

823 
addr
->
ëhî_addr_o˘ë
[5]);

824 
	`mem˝y
(
mac
, 
addr
->
ëhî_addr_o˘ë
, 6);

828 
±r
 = 
NULL
;

832 
	}
}

836 
	$èp_sockë_gë¨p1
(* 
ùaddr
, * 
buf
)

838 * 
±r
;

839 
¨¥eq
árpreq;

840 
sockaddr_ö
 *
sö
;

841 
sockaddr_°‹age
 
ss
;

843 
	`mem£t
(&
ss
, 0, (ss));

845 
sö
 = (
sockaddr_ö
 *Ë&
ss
;

846 
sö
->
sö_Ámûy
 = 
AF_INET
;

848 i‡(
	`öë_±⁄
(
AF_INET
, 
ùaddr
, &(
sö
->
sö_addr
)) <= 0) {

849 
	`≥º‹
("inet_pton");

855 
sö
 = (
sockaddr_ö
 *Ë&
¨¥eq
.
¨p_∑
;

856 
	`mem˝y
(
sö
, &
ss
, (
sockaddr_ö
));

857 
	`°r˝y
(
¨¥eq
.
¨p_dev
, "eth0");

858 
¨¥eq
.
¨p_ha
.
ß_Ámûy
 = 
AF_UNSPEC
;

859 i‡(
	`io˘l
(
sockfd
, 
SIOCGARP
, &
¨¥eq
) < 0) {

860 
	`≥º‹
("ioctl SIOCGARP: ");

863 
±r
 = (*)
¨¥eq
.
¨p_ha
.
ß_d©a
;

864 
	`mem˝y
(
buf
, 
¨¥eq
.
¨p_ha
.
ß_d©a
, 6);

865 
	`F¥ötf
("%x:%x:%x:%x:%x:%x\n", *
±r
, *(ptr+1), *(ptr+2), *(ptr+3), *(ptr+4), *(ptr+5));

867 
	}
}

869 
	$maö
(
¨gc
, **
¨gv
)

871 
mac
[6];

872 * 
±r
;

874 
	`èp_sockë_›í
();

876 
	`èp_sockë_gë¨p1
(
¨gv
[1], 
mac
);

878 
	`èp_sockë_gëhwaddr
("ëh0", 
mac
);

880 
±r
 = 
mac
;

882 
	`F¥ötf
("%x:%x:%x:%x:%x:%x\n", *
±r
, *(ptr+1), *(ptr+2), *(ptr+3), *(ptr+4), *(ptr+5));

884 
	`èp_sockë_˛o£
();

885 
	}
}

	@tun_dev.h

1 #i‚de‡
_TUN_DEV_H


2 
	#_TUN_DEV_H


	)

4 
tun_›í
(*
dev
);

5 
èp_›í
(*
dev
) ;

6 
tun_˛o£
(
fd
, *
dev
) ;

7 
èp_˛o£
(
fd
, *
dev
) ;

8 
tun_wrôe
(
fd
, *
buf
, 
Àn
);

9 
èp_wrôe
(
fd
, *
buf
, 
Àn
) ;

10 
tun_ªad
(
fd
, *
buf
, 
Àn
);

11 
èp_ªad
(
fd
, *
buf
, 
Àn
) ;

12 
èp_öô
();

13 
èp_sockë_›í
();

14 
èp_sockë_gë¨p
(
ùaddr
, * 
buf
) ;

15 
èp_sockë_£nd
–
ùaddr
,
p‹t
, 
ùaddr_§c
,
p‹t_§c
,* 
buf
, 
Àn
);

16 
èp_sockë_˛o£
();

17 
èp_∑ckë_wrôe
(* 
buf
, 
Àn
);

18 
èp_sockë_£thwaddr
–* 
mac
, * 
i‚ame
);

19 
èp_sockë_gëhwaddr
(* 
mac
);

20 
£t_i‚ame
(* 
i‚ame
);

21 * 
gë_i‚ame
();

22 
ªmove_èpcfg
();

	@wddi_log.c

31 
	~<sy¶og.h
>

32 
	~<°d¨g.h
>

33 
	~<°d¨g.h
>

34 
	~<°dio.h
>

35 
	~<°rög.h
>

36 
	~<f˙é.h
>

37 
	~<uni°d.h
>

38 
	~<as£π.h
>

39 
	~<sys/time.h
>

40 
	~<time.h
>

42 
	#COMMON_MAX_STRING_LENGTH
 16

	)

77 c⁄° 
	gÁcûôy
 = 
LOG_LOCAL0
;

78 
	gwddi_og_Àvñ
[
COMMON_MAX_STRING_LENGTH
];

96 
	$wddi_log_›í
(c⁄° *
idít
)

104 
logfd
;

105 
FILE
 * 
Â
 = 
	`f›í
( "/var/log/spp_wddi.log","a+");

106 if(
Â
 =
NULL
)

108 
	`¥ötf
("wddi_log_open fail \n");

109 
	`exô
(1);

111 
logfd
=
	`fûío
(
Â
);

112 
	`˛o£
(
STDERR_FILENO
);

113 
	`dup2
–
logfd
, 
STDERR_FILENO
);

114 
	`dup2
–
logfd
, 
STDOUT_FILENO
);

115 
	`˛o£
(
logfd
);

118 
	`›ílog
(
idít
, 
LOG_PID
, 
LOG_USER
);

121 
	}
}

136 
	$wddi_log_˛o£
()

138 (Ë
	`˛o£log
();

140 
	}
}

158 
	$wddi_log_gë_mask
(*
logÀvñ
, 
max_buff_size
)

160 
	`°∫˝y
(
logÀvñ
, 
wddi_og_Àvñ
, 
max_buff_size
);

161 
logÀvñ
[
max_buff_size
 - 1] = '\0';

163 
	}
}

180 
	$wddi_log_£t_mask
(*
logÀvñ
)

182 
mask
;

189 i‡(
logÀvñ
 =
NULL
)

192 i‡(
	`°∫cmp
(
logÀvñ
, "LOG_DEBUG", 
COMMON_MAX_STRING_LENGTH
) == 0)

193 
mask
 = 
LOG_DEBUG
;

194 i‡(
	`°∫cmp
(
logÀvñ
, "LOG_INFO", 
COMMON_MAX_STRING_LENGTH
) == 0)

195 
mask
 = 
LOG_INFO
;

196 i‡(
	`°∫cmp
(
logÀvñ
, "LOG_NOTICE", 
COMMON_MAX_STRING_LENGTH
) == 0)

197 
mask
 = 
LOG_NOTICE
;

198 i‡(
	`°∫cmp
(
logÀvñ
, "LOG_WARNING", 
COMMON_MAX_STRING_LENGTH
) == 0)

199 
mask
 = 
LOG_WARNING
;

200 i‡(
	`°∫cmp
(
logÀvñ
, "LOG_ERR", 
COMMON_MAX_STRING_LENGTH
) == 0)

201 
mask
 = 
LOG_ERR
;

202 i‡(
	`°∫cmp
(
logÀvñ
, "LOG_CRIT", 
COMMON_MAX_STRING_LENGTH
) == 0)

203 
mask
 = 
LOG_CRIT
;

204 i‡(
	`°∫cmp
(
logÀvñ
, "LOG_ALERT", 
COMMON_MAX_STRING_LENGTH
) == 0)

205 
mask
 = 
LOG_ALERT
;

206 i‡(
	`°∫cmp
(
logÀvñ
, "LOG_EMERG", 
COMMON_MAX_STRING_LENGTH
) == 0)

207 
mask
 = 
LOG_EMERG
;

211 (Ë
	`£éogmask
(
	`LOG_UPTO
(
mask
));

213 
	`°∫˝y
(
wddi_og_Àvñ
, 
logÀvñ
, 
COMMON_MAX_STRING_LENGTH
);

214 
wddi_og_Àvñ
[
COMMON_MAX_STRING_LENGTH
 - 1] = '\0';

217 
	}
}

238 
	$wddi_log_msg
(c⁄° 
¥i‹ôy
, *
fûe
, 
löe
, *
log_msg
, ...)

241 
va_li°
 
¨gs
;

242 
	`va_°¨t
(
¨gs
, 
log_msg
);

243 
log_íåy_°r
[1024];

244 
˙t
 = 0;

246 
tm
 *
p
;

247 
time°r
[40];

248 
time_t
 
timï
;

249 
	`time
(&
timï
);

250 
p

	`loˇ…ime
(&
timï
);

251 
	`•rötf
(
time°r
,"%4d-%02d-%02d %2.2d:%2.2d:%2.2d",
p
->
tm_yór
+1900,p->
tm_m⁄
+1,p->
tm_mday
,p->
tm_hour
,p->
tm_mö
,p->
tm_£c
);

253 
˙t
 = 
	`¢¥ötf
(
log_íåy_°r
, 1024, "%†%s:%4d ", 
time°r
,
fûe
, 
löe
);

255 
˙t
 = 
	`¢¥ötf
(
log_íåy_°r
, 1024, "%s:%4d ",
fûe
, 
löe
);

257 if(
˙t
 < 0)

259 
˙t
 = 0;

262 ()
	`v¢¥ötf
(&(
log_íåy_°r
[
˙t
]), 1024 - c¡, 
log_msg
, 
¨gs
);

265 
	`sy¶og
(
Ácûôy
 | 
¥i‹ôy
, 
log_íåy_°r
);

266 
	`va_íd
(
¨gs
);

269 
	}
}

	@wddi_log.h

29 #i‚de‡
_WDDI_LOG_H


30 
	#_WDDI_LOG_H


	)

33 
	~<°rög.h
>

34 
	~<î∫o.h
>

35 
	~<°d¨g.h
>

36 
	~<sy¶og.h
>

41 
	#MAX_LOG_STR_LEN
 256

	)

42 
	#FILE_NOPATH
 (
	`°ºchr
(
__FILE__
, '/'Ë? sårchr(__FILE__, '/'Ë+ 1 : __FILE__)

	)

60 
	#WDDI_INFONL
(...) \

63 (Ë
	`wddi_log_msg
(
LOG_INFO
, 
FILE_NOPATH
, 
__LINE__
,"\n" 
__VA_ARGS__
); \

64 } 0)

	)

79 
	#WDDI_INFO
(...) \

82 if(
g_logLevñ
 < 2) \

83 (Ë
	`wddi_log_msg
(
LOG_INFO
, 
FILE_NOPATH
, 
__LINE__
, 
__VA_ARGS__
); \

84 } 0)

	)

98 
	#WDDI_WARNING
(...) \

101 if(
g_logLevñ
 < 3) \

102 (Ë
	`wddi_log_msg
(
LOG_WARNING
, 
FILE_NOPATH
, 
__LINE__
, 
__VA_ARGS__
); \

103 } 0)

	)

117 
	#WDDI_WARNINGNL
(...) \

120 (Ë
	`wddi_log_msg
(
LOG_WARNING
, 
FILE_NOPATH
, 
__LINE__
, "\n" 
__VA_ARGS__
); \

121 } 0)

	)

134 
	#WDDI_PRINT
(...) \

137 if(
g_logLevñ
 == 0) \

138 (Ë
	`wddi_log_msg
(
LOG_DEBUG
, 
FILE_NOPATH
, 
__LINE__
, 
__VA_ARGS__
); \

139 } 0)

	)

143 
	#WDDI_STRING
(
buf„r
, 
Àngth
) \

145 { if(
g_logLevñ
 == 0) \

147 
°rög
[512]={0}; \

148 *
p°r
 = 
°rög
; \

149 
cou¡
; \

150 
Àn
; \

151 
Àn
 = 
Àngth
 > 128 ? 128:Üength ; \

152 
cou¡
0; cou¡ < 
Àn
 ;count++) \

154 
p°r
 +=
	`•rötf
’°r, "%2.2x", ()
buf„r
[
cou¡
]); \

156 *
p°r
 = '\n'; \

157 
	`WDDI_PRINT
(
°rög
); \

159 } 0)

	)

172 
	#WDDI_ERR
(...) \

175 (Ë
	`wddi_log_msg
(
LOG_EMERG
, 
FILE_NOPATH
, 
__LINE__
, "\nFATAL_ERROR"); \

176 (Ë
	`wddi_log_msg
(
LOG_EMERG
, 
FILE_NOPATH
, 
__LINE__
, 
__VA_ARGS__
); \

177 i‡(
î∫o
) \

179 (Ë
	`wddi_log_msg
(
LOG_EMERG
, 
FILE_NOPATH
, 
__LINE__
, "î∫ÿ%d:%s", 
î∫o
, 
	`°ªº‹
(errno)); \

181 (Ë
	`wddi_log_msg
(
LOG_EMERG
, 
FILE_NOPATH
, 
__LINE__
, "Terminating.\n"); \

182 
	`exô
(0); \

183 } 0)

	)

192 
wddi_log_›í
(c⁄° *
idít
);

195 
wddi_log_˛o£
();

198 
wddi_log_£t_mask
(*
logÀvñ
);

201 
wddi_log_gë_mask
(*
logÀvñ
, 
max_buff_size
);

204 
wddi_log_msg
(
¥i‹ôy
, *
fûe
, 
löe
, *
log_msg
, ...);

	@wti_flexmux_util.c

16 
	~<°rög.h
>

17 
	~"wp_wddi.h
"

18 
	~"≈_comm⁄.h
"

20 #i‚de‡
WTI_FLEXMUX_UTIL_H


21 
	~"wti_Êexmux_utû.h
"

23 #i‚de‡
_WPL_PLATFORM_H__


24 
	~<w∂_∂©f‹m.h
>

26 
g_logLevñ
;

28 
	#WTI_UFE412_REVA
 0

	)

29 
	glöeAÃmSå
[54][12] =

87 
	g˛õ¡AÃmSå
[6][8] =

97 
	gsockëAœrmSå
[4][8] =

105 
	$Æ¨m_cback_p‹t
(
U8
 
iDevi˚
, U8 
iLöeP‹t
, U8 
AœrmC©eg‹y
, U8 
IsAs£πed
)

107 
	`¥ötf
("PORT : device = %d,ÜinePort = %d, category = %d %s, isAsserted = %d\n",

108 
iDevi˚
, 
iLöeP‹t
, 
AœrmC©eg‹y
,
löeAÃmSå
[AœrmC©eg‹y], 
IsAs£πed
);

110 if(
iLöeP‹t
 ==0)

112 
	`≈_£t_u„4_¨Æm_öfo
(
iLöeP‹t
,
AœrmC©eg‹y
,
IsAs£πed
);

113 }if(
iLöeP‹t
 ==5)

115 
	`≈_£t_u„4_¨Æm_öfo
(1,
AœrmC©eg‹y
,
IsAs£πed
);

122 
	}
}

124 
	$Æ¨m_cback_∑th
(
U8
 
iDevi˚
,

125 
WPX_UFE_FRAMER_COMMON_SDH_SONET_ENDPOINT_TYPE
 *
pLöeEndpoöt
,

126 
U8
 
AœrmC©eg‹y
,

127 
U8
 
IsAs£πed
)

129 
	`¥ötf
("PATH : device = %d, stm4=%d, stm1=%d, stm0=%d,Åug2=%d,tu=%d, category = %d %s, isAsserted = %d\n",

130 
iDevi˚
,

131 
pLöeEndpoöt
->
u
.
SDH
.
°m4
,

132 
pLöeEndpoöt
->
u
.
SDH
.
°m1
,

133 
pLöeEndpoöt
->
u
.
SDH
.
°m0
,

134 
pLöeEndpoöt
->
u
.
SDH
.
tug2
,

135 
pLöeEndpoöt
->
u
.
SDH
.
tu
,
AœrmC©eg‹y
,

136 
löeAÃmSå
[
AœrmC©eg‹y
],

137 
IsAs£πed
);

139 
	`≈_£t_u„4_E1T1_¨Æm_öfo
(
pLöeEndpoöt
, 
AœrmC©eg‹y
, 
IsAs£πed
);

142 
	}
}

144 
	$Æ¨m_cback_˛õ¡
(
U8
 
iDevi˚
,

145 
U8
 
iDis¸ëeClõ¡P‹t
,

146 
U8
 
AœrmC©eg‹y
,

147 
U8
 
IsAs£πed
)

149 
	`¥ötf
("CLIENT : device = %d, clientPort = %4d, category = %d %s, isAsserted = %d\n",

150 
iDevi˚
, 
iDis¸ëeClõ¡P‹t
, 
AœrmC©eg‹y
,
sockëAœrmSå
[AœrmC©eg‹y], 
IsAs£πed
);

151 
	`≈_£t_u„4_E1T1_¨Æm_öfo_‰omClõ¡P‹t
(
iDis¸ëeClõ¡P‹t
,
AœrmC©eg‹y
 ,
IsAs£πed
);

153 
	}
}

155 
	$Æ¨m_cback_dis¸ëe
(
U8
 
iDevi˚
,

156 
U32
 
iSockëClõ¡PDH
,

157 
U8
 
AœrmC©eg‹y
,

158 
U8
 
IsAs£πed
)

160 
	`¥ötf
("DISCRETE: device = %d, clientPDH = %4d, category = %s, isAsserted = %d\n",

161 
iDevi˚
, 
iSockëClõ¡PDH
, 
sockëAœrmSå
[
AœrmC©eg‹y
], 
IsAs£πed
);

164 
	}
}

166 
	$Æ¨m_cback_k1k2
(
U8
 
iDevi˚
,

167 
U8
 
iLöeP‹t
,

168 
WPX_UFE_FRAMER_SONET_SDH_PORT_LINE_K1K2_TYPE
 *
pRX_K1K2
)

170 
	`¥ötf
("K1/K2 : device = %d,ÜinePort = %d, k1 = %x, k2 = %x\n",

171 
iDevi˚
,

172 
iLöeP‹t
,

173 
pRX_K1K2
->
K1
,

174 
pRX_K1K2
->
K2
);

177 
	}
}

179 
	$Æ¨m_cback_S1
(
U8
 
iDevi˚
, U8 
iLöeP‹t
, U8 
S1
)

181 
	`¥ötf
("S1 : device = %d,ÜinePort = %d, S1 = %x\n",

182 
iDevi˚
,

183 
iLöeP‹t
,

184 
S1
);

187 
	}
}

189 
	$Æ¨m_cback_pm_p‹t
(
U8
 
iDevi˚
, U8 
iTabÀIndex
, 
U32
 
TimeSèmp
)

191 
	`¥ötf
("PM : PORT : %d %4x %8x\n", 
iDevi˚
, 
iTabÀIndex
, 
TimeSèmp
);

194 
	}
}

196 
	$Æ¨m_cback_pm_h∑th
(
U8
 
iDevi˚
, U8 
iTabÀIndex
, 
U32
 
TimeSèmp
)

198 
	`¥ötf
("PM : HPATH : %d %4x %8x\n", 
iDevi˚
, 
iTabÀIndex
, 
TimeSèmp
);

201 
	}
}

203 
	$Æ¨m_cback_pm_Õ©h
(
U8
 
iDevi˚
, U8 
iTabÀIndex
, 
U32
 
TimeSèmp
)

205 
	`¥ötf
("PM : LPATH : %d %4x %8x\n", 
iDevi˚
, 
iTabÀIndex
, 
TimeSèmp
);

208 
	}
}

210 
	$Æ¨m_cback_pm_˛õ¡
(
U8
 
iDevi˚
, U8 
iTabÀIndex
, 
U32
 
TimeSèmp
)

212 
	`¥ötf
("PM : CLIENT : %d %4x %8x\n", 
iDevi˚
, 
iTabÀIndex
, 
TimeSèmp
);

215 
	}
}

217 
	$Æ¨m_cback_pm_dis¸ëe
(
U8
 
iDevi˚
, U8 
iTabÀIndex
, 
U32
 
TimeSèmp
)

219 
	`¥ötf
("PM : DISCRETE: %d %4x %8x\n", 
iDevi˚
, 
iTabÀIndex
, 
TimeSèmp
);

222 
	}
}

225 
	$WTI_FÀxmuxTîmö©eOnEº‹
(
WP_CHAR
 * 
pF©ÆEº‹Mesßge
, 
WP_U8
 
îr‹_code
)

227 
	`¥ötf
("Te° Ab‹t: %†Löe:%d Eº‹ codê%d\n", 
pF©ÆEº‹Mesßge
, 
__LINE__
, (
WP_U32
Ë
îr‹_code
);

228 
	`exô
(-1);

229 
	}
}

231 
	$WTI_FÀxmuxCheckSètus
(
WP_CHAR
 * 
Mesßge
, 
WP_U8
 
°©us
, 
WP_U32
 
löe
)

233 i‡(
°©us
)

235 
	`¥ötf
("Te° Ab‹t: fun˘i⁄ %†ö Löe:%dÑëu∫ed Eº‹ codê%d\n", 
Mesßge
, 
löe
, (
WP_U32
Ë
°©us
);

240 #i‡
WTI_FLEXMUX_DBG_MODE


241 
	`¥ötf
("Sètu†ªtu∫ed from %†i†WPX_UFE_FRAMER_OK\n", 
Mesßge
);

244 
	}
}

246 
	$WTI_Êexmux_èke_‰amî_lock
()

248 #i‡!
	`deföed
(
WPL_MAILBOX_LOCK_KEY
)

249 
	#WPL_MAILBOX_LOCK_KEY
 
	`WPL_LOCK_KEY_CREATE
(
WPL_HW_LOCK
, 
WPL_PRIVATE_LOCK
, 6, 0)

	)

251 
	`WPL_Lock
(
WPL_MAILBOX_LOCK_KEY
, 0);

252 
	}
}

254 
WP_S32
 
	$WTI_FÀxmuxInô
(
WP_U32
 
upi_ödex
,

255 
WP_U8
 
Êexmux_id
,

256 
WTI_Êexmux_physiˇl_c⁄f
 
Êexmux_hw_c⁄fig
,

257 
WP_U8
 
Êexmux_mode
,

258 
WPX_UFE_FRAMER_WUFE_löe_å™sf_ty≥
 
vc_3_4
,

259 
WTI_FÀxmux_globÆ_£tup
 *
Êexmux_cfg
)

261 
WUFE_°©us
 
°©us
;

262 
WP_U8
 
max_löe_p‹ts
=0, 
löe_ö¸emít
=0;

263 
WP_U8
 
wti_Êexmux_buûd_≥rs⁄Æôy
=0;

264 
WTI_Êexmux_löe_p‹t_mode
 
löe_p‹t_mode
=0;

267 i‡(
Êexmux_id
 > 
WTI_FLEXMUX_NUM_DEVICES
)

268 
	`WTI_FÀxmuxTîmö©eOnEº‹
("flexmux_id is out of bounds !", 0);

270 i‡(
Êexmux_hw_c⁄fig
 !
WT_FLEXMUX_UFE_412_1_PORT_OC12
 &&

271 
Êexmux_hw_c⁄fig
 !
WT_FLEXMUX_UFE_412_2_PORTS_OC3
 &&

272 
Êexmux_hw_c⁄fig
 !
WT_FLEXMUX_UFE_412_4_PORTS_OC3
 &&

273 
Êexmux_hw_c⁄fig
 !
WT_FLEXMUX_UFE_448_4_PORTS_OC12_PLUS_4_PROTECTION
)

274 
	`WTI_FÀxmuxTîmö©eOnEº‹
("Invalid flexmux_hw_config !", 0);

276 i‡(
Êexmux_mode
 !
WPX_UFE_FRAMER_DEVICE_MODE_SONET
 &&

277 
Êexmux_mode
 !
WPX_UFE_FRAMER_DEVICE_MODE_SDH
)

278 
	`WTI_FÀxmuxTîmö©eOnEº‹
("Invalid flexmux_mode !", 0);

280 i‡(
Êexmux_hw_c⁄fig
 =
WT_FLEXMUX_UFE_412_1_PORT_OC12
)

282 i‡(
Êexmux_mode
 =
WPX_UFE_FRAMER_DEVICE_MODE_SONET
)

284 
löe_p‹t_mode
 = 
WT_FLEXMUX_LINE_PORT_OC12
;

286 i‡(
Êexmux_mode
 =
WPX_UFE_FRAMER_DEVICE_MODE_SDH
)

288 
löe_p‹t_mode
 = 
WT_FLEXMUX_LINE_PORT_STM4
;

290 
max_löe_p‹ts
 = 1;

291 
löe_ö¸emít
 = 1;

292 
wti_Êexmux_buûd_≥rs⁄Æôy
 = 
WPX_UFE_FRAMER_BUILD_PERSONALITY_1_PLUS_1_OC3_OC12
;

294 i‡(
Êexmux_hw_c⁄fig
 =
WT_FLEXMUX_UFE_412_4_PORTS_OC3
)

296 i‡(
Êexmux_mode
 =
WPX_UFE_FRAMER_DEVICE_MODE_SONET
)

298 
löe_p‹t_mode
 = 
WT_FLEXMUX_LINE_PORT_OC3
;

300 i‡(
Êexmux_mode
 =
WPX_UFE_FRAMER_DEVICE_MODE_SDH
)

302 
löe_p‹t_mode
 = 
WT_FLEXMUX_LINE_PORT_STM1
;

304 
max_löe_p‹ts
 = 4;

305 
löe_ö¸emít
 = 1;

306 
wti_Êexmux_buûd_≥rs⁄Æôy
 = 
WPX_UFE_FRAMER_BUILD_PERSONALITY_4_PLUS_4_OC3
;

308 i‡(
Êexmux_hw_c⁄fig
 =
WT_FLEXMUX_UFE_412_2_PORTS_OC3
)

310 i‡(
Êexmux_mode
 =
WPX_UFE_FRAMER_DEVICE_MODE_SONET
)

312 
löe_p‹t_mode
 = 
WT_FLEXMUX_LINE_PORT_OC3
;

314 i‡(
Êexmux_mode
 =
WPX_UFE_FRAMER_DEVICE_MODE_SDH
)

316 
löe_p‹t_mode
 = 
WT_FLEXMUX_LINE_PORT_STM1
;

318 
max_löe_p‹ts
 = 2;

319 
löe_ö¸emít
 = 1;

320 
wti_Êexmux_buûd_≥rs⁄Æôy
 = 
WPX_UFE_FRAMER_BUILD_PERSONALITY_2_PLUS_2_OC3
;

322 i‡(
Êexmux_hw_c⁄fig
 =
WT_FLEXMUX_UFE_448_4_PORTS_OC12_PLUS_4_PROTECTION
)

324 i‡(
Êexmux_mode
 =
WPX_UFE_FRAMER_DEVICE_MODE_SONET
)

326 
löe_p‹t_mode
 = 
WT_FLEXMUX_LINE_PORT_OC12
;

328 i‡(
Êexmux_mode
 =
WPX_UFE_FRAMER_DEVICE_MODE_SDH
)

330 
löe_p‹t_mode
 = 
WT_FLEXMUX_LINE_PORT_STM4
;

332 
max_löe_p‹ts
 = 8;

333 
löe_ö¸emít
 = 2;

334 
wti_Êexmux_buûd_≥rs⁄Æôy
 = 
WPX_UFE_FRAMER_BUILD_PERSONALITY_4_PLUS_4_OC3_OC12
;

338 
	`WTI_FÀxmuxTîmö©eOnEº‹
("Invalid flexmux_hw_config !", 0);

340 
	`mem£t
(
Êexmux_cfg
, 0, (
WTI_FÀxmux_globÆ_£tup
));

343 
Êexmux_cfg
->
Êexmux_id
 = flexmux_id;

346 
°©us
 = 
	`WPX_UFE_FRAMER_FÀxmuxInô
(
Êexmux_cfg
->
Êexmux_id
,

347 
upi_ödex
);

348 
	`WTI_FÀxmuxCheckSètus
("WPX_UFE_FRAMER_FÀxmuxInô", 
°©us
, 
__LINE__
);

352 
WP_THREAD_ID
 
maûbox_thªad_id
;

353 
WP_U32
 
thªad_∑øms
[2];

355 
thªad_∑øms
[0] = 
Êexmux_cfg
->
Êexmux_id
;

356 
thªad_∑øms
[1] = 
upi_ödex
;

358 
	`WPX_FRMR_Regi°îFømîLockCÆlback
(
WTI_Êexmux_èke_‰amî_lock
);

359 
	`WPL_ThªadInô
(&
maûbox_thªad_id
,

360 (*(*)(*)Ë
WPX_UFE_FRAMER_FÀxmuxSîvi˚Maûbox
,

361 (*Ë
thªad_∑øms
);

365 
°©us
 = 
	`WPX_UFE_FRAMER_FÀxmuxSëBuûdPîs⁄Æôy
(
Êexmux_cfg
->
Êexmux_id
,

366 
wti_Êexmux_buûd_≥rs⁄Æôy
,

367 
upi_ödex
);

368 
	`WTI_FÀxmuxCheckSètus
("WPX_UFE_FRAMER_FÀxmuxSëBuûdPîs⁄Æôy", 
°©us
, 
__LINE__
);

370 #i‡
WTI_UFE412_REVA


372 
	`WPX_FRMR_DEMO_ONLY_C⁄figuª_GTP_ClockSour˚
(
Êexmux_cfg
->
Êexmux_id
);

376 i‡(
wti_Êexmux_buûd_≥rs⁄Æôy
 =
WPX_UFE_FRAMER_BUILD_PERSONALITY_4_PLUS_4_OC3
)

378 
	`WPX_FRMR_SëDevPrŸe˘Mode
–0, 
Êexmux_cfg
->
Êexmux_id
, 
WPX_UFE_DEVICE_PROTECTION_MODE_LINE
);

382 
	`WPX_FRMR_SëDevPrŸe˘Mode
–0, 
Êexmux_cfg
->
Êexmux_id
, 
WPX_UFE_DEVICE_PROTECTION_MODE_LINE
);

386 
°©us
 = 
	`WPX_FRMR_DEV_SëMode
(0, 
Êexmux_cfg
->
Êexmux_id
, 
Êexmux_mode
);

387 
	`WTI_FÀxmuxCheckSètus
("WPX_UFE_FRAMER_CONFIGURATION_DEVICE_SëMode", 
°©us
, 
__LINE__
);

388 #i‡
WTI_FLEXMUX_DBG_MODE


389 
U8
 
pDevi˚Mode
;

390 
°©us
 = 
	`WPX_FRMR_DEV_GëMode
(
Êexmux_cfg
->
Êexmux_id
,&
pDevi˚Mode
 );

391 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_DEV_GëMode", 
°©us
, 
__LINE__
);

392 
Êexmux_mode
)

394 
WPX_UFE_FRAMER_DEVICE_MODE_SDH
:

395 if(
pDevi˚Mode
 !
WPX_UFE_FRAMER_DEVICE_MODE_SDH
)

397 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_DEV_GetMode != WPX_UFE_DEVICE_MODE_SDH\n", 0);

400 
WPX_UFE_FRAMER_DEVICE_MODE_SONET
:

401 if(
pDevi˚Mode
 !
WPX_UFE_FRAMER_DEVICE_MODE_SONET
)

403 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_DEV_GetMode != WPX_UFE_DEVICE_MODE_SONET\n", 0);

409 
Êexmux_cfg
->
Êexmux_hw_c⁄fig
 = flexmux_hw_config;

412 
Êexmux_cfg
->
Êexmux_buûd_≥rs⁄Æôy
 = 
wti_Êexmux_buûd_≥rs⁄Æôy
;

415 
Êexmux_ªg
[
Êexmux_id
].
is_öôülized
 = 
WP_TRUE
;

416 
Êexmux_ªg
[
Êexmux_id
].
Êexmux_hw_c⁄fig
 = flexmux_hw_config;

417 
Êexmux_ªg
[
Êexmux_id
].
Êexmux_buûd_≥rs⁄Æôy
 = 
wti_Êexmux_buûd_≥rs⁄Æôy
;

418 
Êexmux_ªg
[
Êexmux_id
].
Êexmux_mode
 = flexmux_mode;

419 
Êexmux_ªg
[
Êexmux_id
].
max_löe_p‹ts
 = max_line_ports;

421 i‡(
wti_Êexmux_buûd_≥rs⁄Æôy
 =
WPX_UFE_FRAMER_BUILD_PERSONALITY_4_PLUS_4_OC3_OC12
 ||

422 
wti_Êexmux_buûd_≥rs⁄Æôy
 =
WPX_UFE_FRAMER_BUILD_PERSONALITY_1_PLUS_1_OC3_OC12
 ||

423 
wti_Êexmux_buûd_≥rs⁄Æôy
 =
WPX_UFE_FRAMER_BUILD_PERSONALITY_2_PLUS_2_OC3
 ||

424 
wti_Êexmux_buûd_≥rs⁄Æôy
 =
WPX_UFE_FRAMER_BUILD_PERSONALITY_4_PLUS_4_OC3
)

426 
WPX_UFE_FRAMER_COMMON_SDH_SONET_ENDPOINT_TYPE
 
löe_íd_poöt
 = {0};

428 #i‡
WTI_ADM_MODE


430 
U8
 
TX_C2
=0x1, 
EX_C2
=0x1;

431 
WP_CHAR
 *
TX_J1
="0000000000000000", *
EX_J1
="0000000000000000",*
pTX_Tø˚Såög
="WG RS-TRACE",*
pEX_Tø˚Såög
="WG RS-TRACE";

433 
U8
 
TX_C2
=0x02, 
EX_C2
=0x02;

434 
WP_CHAR
 *
TX_J1
="WG HP-TRACE", *
EX_J1
="WG HP-TRACE",*
pTX_Tø˚Såög
="WG RS-TRACE",*
pEX_Tø˚Såög
="WG RS-TRACE";

437 
	`WPX_FRMR_Regi°îS⁄ëSdhP‹tAœrmCÆlback
(
Æ¨m_cback_p‹t
);

438 
	`WPX_FRMR_Regi°îS⁄ëSdhP©hAœrmCÆlback
(
Æ¨m_cback_∑th
);

439 
	`WPX_FRMR_Regi°îSockëClõ¡PdhAœrmCÆlback
(
Æ¨m_cback_˛õ¡
);

441 
	`WPX_FRMR_Regi°îS⁄ëSdhSe˘i⁄K1K2A¬oun˚CÆlback
(
Æ¨m_cback_k1k2
);

442 
	`WPX_FRMR_Regi°îS⁄ëSdhSe˘i⁄S1A¬oun˚CÆlback
(
Æ¨m_cback_S1
);

444 
	`WPX_FRMR_PM_Regi°îS⁄ëSdhP‹tA¬oun˚CÆlback
(
Æ¨m_cback_pm_p‹t
);

445 
	`WPX_FRMR_PM_Regi°îS⁄ëSdhHOP©hA¬oun˚CÆlback
(
Æ¨m_cback_pm_h∑th
);

446 
	`WPX_FRMR_PM_Regi°îS⁄ëSdhLOP©hA¬oun˚CÆlback
(
Æ¨m_cback_pm_Õ©h
);

447 
	`WPX_FRMR_PM_Regi°îSockëClõ¡PdhA¬oun˚CÆlback
(
Æ¨m_cback_pm_˛õ¡
);

448 
	`WPX_FRMR_Regi°îDis¸ëeClõ¡P‹tA¬oun˚CÆlback
(
Æ¨m_cback_pm_dis¸ëe
);

449 
AœrmC©eg‹y
;

450 
AœrmC©eg‹y
 = 
WPX_UFE_FRAMER_SDH_LOS
;AœrmC©eg‹y < 
WPX_UFE_FRAMER_SDH_TU_LOP
;AlarmCategory++)

452 
°©us
 = 
	`WPX_FRMR_DEV_DRV_SONET_SDH_E«bÀAœrm
(0,
AœrmC©eg‹y
);

453 if(
°©us
 != 0)

455 
	`¥ötf
("WPX_FRMR_DEV_DRV_SONET_SDH_E«bÀAœrm faû AœrmC©eg‹y = %d \n",
AœrmC©eg‹y
);

461 
	`WPX_FRMR_DEV_DRV_SONET_SDH_DißbÀAœrm
(0,
WPX_UFE_FRAMER_SDH_HP_TIM
);

462 
	`WPX_FRMR_DEV_DRV_SONET_SDH_DißbÀAœrm
(0,
WPX_UFE_FRAMER_SDH_LP_TIM
);

463 
	`WPX_FRMR_DEV_DRV_SONET_SDH_DißbÀAœrm
(0,
WPX_UFE_FRAMER_SDH_RS_TIM
);

464 
	`WPX_FRMR_DEV_DRV_SONET_SDH_DißbÀAœrm
(0,
WPX_UFE_FRAMER_SDH_HP_PLM
);

465 
	`WPX_FRMR_DEV_DRV_SONET_SDH_DißbÀAœrm
(0,
WPX_UFE_FRAMER_SDH_LP_PLM
);

467 
	`WPX_FRMR_DEV_DRV_SOCKET_E«bÀAœrm
(0,
WPX_UFE_FRAMER_SOCKET_CLIENT_E_RFI
);

468 
	`WPX_FRMR_DEV_DRV_SOCKET_E«bÀAœrm
(0,
WPX_UFE_FRAMER_SOCKET_CLIENT_A_RAI
);

469 
	`WPX_FRMR_DEV_DRV_SOCKET_E«bÀAœrm
(0,
WPX_UFE_FRAMER_SOCKET_CLIENT_LOS_AIS
);

470 
	`WPX_FRMR_DEV_DRV_SOCKET_E«bÀAœrm
(0,
WPX_UFE_FRAMER_SOCKET_CLIENT_OOF_LOF
);

481 i‡(
Êexmux_mode
 =
WPX_UFE_FRAMER_DEVICE_MODE_SONET
)

483 
WP_U32
 
°s12
, 
°s3
, 
°s1
;

484 
löe_íd_poöt
.
Tøns„rTy≥
 = 
WPX_UFE_FRAMER_WUFE_SONET_TYPE_STS1_SPE
;

486 if(
löe_p‹t_mode
 =
WT_FLEXMUX_LINE_PORT_OC3
)

488 
°s12
 = 0;

489 
löe_íd_poöt
.
u
.
SONET
.
°s12
 = sts12;

490 
°s3
=0; sts3<
max_löe_p‹ts
; sts3+=
löe_ö¸emít
)

492 
	`WTI_FÀxmuxLöeP‹tC⁄fig
(0,

493 
°s3
,

494 
löe_p‹t_mode
);

495 
	`WPX_FRMR_SONET_SDH_PORT_SEC_J0_SëMode
(0, 
Êexmux_id
, 
°s3
, 
WPX_UFE_FRAMER_PATH_TRACE_MODE_16_BYTE
);

496 
°©us
 = 
	`WPX_FRMR_SONET_SDH_PORT_SEC_J0_SëTX
(0, 
Êexmux_id
, 
°s3
, 
pTX_Tø˚Såög
);

497 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_SOH_J0_SëTX", 
°©us
, 
__LINE__
);

499 
°©us
 = 
	`WPX_FRMR_SONET_SDH_PORT_SEC_J0_SëEX
(0, 
Êexmux_id
, 
°s3
, 
pEX_Tø˚Såög
);

500 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_SOH_J0_SëEX", 
°©us
, 
__LINE__
);

502 
löe_íd_poöt
.
u
.
SONET
.
°s3
 = sts3;

503 
°s1
=0; sts1<3; ++sts1)

505 
löe_íd_poöt
.
u
.
SONET
.
°s1
 = sts1;

506 
°©us
 = 
	`WPX_FRMR_SONET_SDH_Cª©eFacûôy
(0, 
Êexmux_id
, &
löe_íd_poöt
);

507 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_Cª©eFacûôy (VC3/4)", 
°©us
, 
__LINE__
);

510 
°©us
 = 
	`WPX_FRMR_SONET_SDH_HO_PATH_C2_SëTX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
TX_C2
);

511 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_HO_PATH_C2_SëTX", 
°©us
, 
__LINE__
);

512 #i‡
WTI_FLEXMUX_DBG_MODE


513 
U8
 
pTX_C2
;

514 
°©us
 =
	`WPX_FRMR_SONET_SDH_HO_PATH_C2_GëTX
(
Êexmux_id
,&
löe_íd_poöt
,&
pTX_C2
 );

515 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_DEV_GëMode", 
°©us
, 
__LINE__
);

516 if(
pTX_C2
!=
TX_C2
)

518 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_HO_PATH_C2_GetTX != TX_C2\n", 0);

521 
°©us
 = 
	`WPX_FRMR_SONET_SDH_HO_PATH_C2_SëEX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
EX_C2
);

522 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_HO_PATH_C2_SëEX", 
°©us
, 
__LINE__
);

523 #i‡
WTI_FLEXMUX_DBG_MODE


524 
U8
 
pEX_C2
;

525 
°©us
 =
	`WPX_FRMR_SONET_SDH_HO_PATH_C2_GëTX
(
Êexmux_id
,&
löe_íd_poöt
,&
pEX_C2
 );

526 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_DEV_GëMode", 
°©us
, 
__LINE__
);

527 if(
pTX_C2
!=
TX_C2
)

529 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_HO_PATH_C2_GetTX != EX_C2\n", 0);

534 
	`WPX_FRMR_SONET_SDH_HO_PATH_J1_SëMode
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
WPX_UFE_FRAMER_PATH_TRACE_MODE_16_BYTE
);

535 
°©us
 = 
	`WPX_FRMR_SONET_SDH_HO_PATH_J1_SëTX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
TX_J1
);

536 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_HO_PATH_J1_SëTX", 
°©us
, 
__LINE__
);

537 #i‡
WTI_FLEXMUX_DBG_MODE


538 
WP_CHAR
 *
pTX_J1
;

539 
°©us
 =
	`WPX_FRMR_SONET_SDH_HO_PATH_J1_GëTX
(
Êexmux_id
,&
löe_íd_poöt
,
pTX_J1
 );

540 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_DEV_GëMode", 
°©us
, 
__LINE__
);

541 if(
pTX_J1
!=
TX_J1
)

543 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_HO_PATH_J1_GetTX != TX_J1\n", 0);

547 
°©us
 = 
	`WPX_FRMR_SONET_SDH_HO_PATH_J1_SëEX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
EX_J1
);

548 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_HO_PATH_J1_SëEX", 
°©us
, 
__LINE__
);

549 #i‡
WTI_FLEXMUX_DBG_MODE


550 
WP_CHAR
 *
pEX_J1
;

551 
°©us
 =
	`WPX_FRMR_SONET_SDH_HO_PATH_J1_GëEX
(
Êexmux_id
,&
löe_íd_poöt
,
pEX_J1
 );

552 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_DEV_GëMode", 
°©us
, 
__LINE__
);

553 if(
pEX_J1
!=
EX_J1
)

555 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_HO_PATH_J1_GetEX != EX_J1\n", 0);

562 if(
löe_p‹t_mode
 =
WT_FLEXMUX_LINE_PORT_OC12
)

564 
°s12
=0; sts12<
max_löe_p‹ts
; sts12+=
löe_ö¸emít
)

566 
löe_íd_poöt
.
u
.
SONET
.
°s12
 = sts12;

567 
	`WTI_FÀxmuxLöeP‹tC⁄fig
(0,

568 
°s12
,

569 
löe_p‹t_mode
);

570 
	`WPX_FRMR_SONET_SDH_PORT_SEC_J0_SëMode
(0, 
Êexmux_id
, 
°s12
, 
WPX_UFE_FRAMER_PATH_TRACE_MODE_16_BYTE
);

571 
°©us
 = 
	`WPX_FRMR_SONET_SDH_PORT_SEC_J0_SëTX
(0, 
Êexmux_id
, 
°s12
, 
pTX_Tø˚Såög
);

572 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_SOH_J0_SëTX", 
°©us
, 
__LINE__
);

574 
°©us
 = 
	`WPX_FRMR_SONET_SDH_PORT_SEC_J0_SëEX
(0, 
Êexmux_id
, 
°s12
, 
pEX_Tø˚Såög
);

575 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_SOH_J0_SëEX", 
°©us
, 
__LINE__
);

577 
°s3
=0; sts3<4; ++sts3)

579 
löe_íd_poöt
.
u
.
SONET
.
°s3
 = sts3;

580 
°s1
=0; sts1<3; ++sts1)

582 
löe_íd_poöt
.
u
.
SONET
.
°s1
 = sts1;

583 
°©us
 = 
	`WPX_FRMR_SONET_SDH_Cª©eFacûôy
(0, 
Êexmux_id
, &
löe_íd_poöt
);

584 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_Cª©eFacûôy (VC2/4)", 
°©us
, 
__LINE__
);

587 
°©us
 = 
	`WPX_FRMR_SONET_SDH_HO_PATH_C2_SëTX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
TX_C2
);

588 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_HO_PATH_C2_SëTX", 
°©us
, 
__LINE__
);

590 #i‡
WTI_FLEXMUX_DBG_MODE


591 
U8
 
pTX_C2
;

592 
°©us
 =
	`WPX_FRMR_SONET_SDH_HO_PATH_C2_GëTX
(
Êexmux_id
,&
löe_íd_poöt
,&
pTX_C2
 );

593 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_DEV_GëMode", 
°©us
, 
__LINE__
);

594 if(
pTX_C2
!=
TX_C2
)

596 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_HO_PATH_C2_GetTX != TX_C2\n", 0);

599 
°©us
 = 
	`WPX_FRMR_SONET_SDH_HO_PATH_C2_SëEX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
EX_C2
);

600 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_HO_PATH_C2_SëEX", 
°©us
, 
__LINE__
);

601 #i‡
WTI_FLEXMUX_DBG_MODE


602 
U8
 
pEX_C2
;

603 
°©us
 =
	`WPX_FRMR_SONET_SDH_HO_PATH_C2_GëTX
(
Êexmux_id
,&
löe_íd_poöt
,&
pEX_C2
 );

604 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_DEV_GëMode", 
°©us
, 
__LINE__
);

605 if(
pTX_C2
!=
TX_C2
)

607 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_HO_PATH_C2_GetTX != EX_C2\n", 0);

610 
	`WPX_FRMR_SONET_SDH_HO_PATH_J1_SëMode
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
WPX_UFE_FRAMER_PATH_TRACE_MODE_16_BYTE
);

611 
°©us
 = 
	`WPX_FRMR_SONET_SDH_HO_PATH_J1_SëTX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
TX_J1
);

612 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_HO_PATH_J1_SëTX", 
°©us
, 
__LINE__
);

613 #i‡
WTI_FLEXMUX_DBG_MODE


614 
WP_CHAR
 *
pTX_J1
;

615 
°©us
 =
	`WPX_FRMR_SONET_SDH_HO_PATH_J1_GëTX
(
Êexmux_id
,&
löe_íd_poöt
,
pTX_J1
 );

616 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_DEV_GëMode", 
°©us
, 
__LINE__
);

617 if(
pTX_J1
!=
TX_J1
)

619 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_HO_PATH_J1_GetTX != TX_J1\n", 0);

623 
°©us
 = 
	`WPX_FRMR_SONET_SDH_HO_PATH_J1_SëEX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
EX_J1
);

624 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_HO_PATH_J1_SëEX", 
°©us
, 
__LINE__
);

625 #i‡
WTI_FLEXMUX_DBG_MODE


626 
WP_CHAR
 *
pEX_J1
;

627 
°©us
 =
	`WPX_FRMR_SONET_SDH_HO_PATH_J1_GëEX
(
Êexmux_id
,&
löe_íd_poöt
,
pEX_J1
 );

628 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_DEV_GëMode", 
°©us
, 
__LINE__
);

629 if(
pEX_J1
!=
EX_J1
)

631 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_HO_PATH_J1_GetEX != EX_J1\n", 0);

640 i‡(
Êexmux_mode
 =
WPX_UFE_FRAMER_DEVICE_MODE_SDH
)

642 
WP_U32
 
°m4
, 
°m1
,
°m0
, 
num_f‹_vc3_‹_vc4
;

644 
löe_íd_poöt
.
Tøns„rTy≥
 = 
vc_3_4
;

647 i‡(
vc_3_4
 =
WPX_UFE_FRAMER_WUFE_SDH_TYPE_VC3
)

649 
num_f‹_vc3_‹_vc4
 = 3;

653 
num_f‹_vc3_‹_vc4
 = 1;

656 i‡(
löe_p‹t_mode
 =
WT_FLEXMUX_LINE_PORT_STM1
)

658 
°m4
 = 0;

659 
löe_íd_poöt
.
u
.
SDH
.
°m4
 = stm4;

660 
°m1
=0; stm1<
max_löe_p‹ts
; stm1+=
löe_ö¸emít
)

662 
löe_íd_poöt
.
u
.
SDH
.
°m1
 = stm1;

663 
	`WTI_FÀxmuxLöeP‹tC⁄fig
(0,

664 
°m1
,

665 
löe_p‹t_mode
);

667 
	`WPX_FRMR_SONET_SDH_PORT_SEC_J0_SëMode
(0, 
Êexmux_id
, 
°m1
, 
WPX_UFE_FRAMER_PATH_TRACE_MODE_16_BYTE
);

668 
°©us
 = 
	`WPX_FRMR_SONET_SDH_PORT_SEC_J0_SëTX
(0, 
Êexmux_id
, 
°m1
, 
pTX_Tø˚Såög
);

669 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_SOH_J0_SëTX", 
°©us
, 
__LINE__
);

671 
°©us
 = 
	`WPX_FRMR_SONET_SDH_PORT_SEC_J0_SëEX
(0, 
Êexmux_id
, 
°m1
, 
pEX_Tø˚Såög
);

672 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_SOH_J0_SëEX", 
°©us
, 
__LINE__
);

674 
°m0
=0; stm0<
num_f‹_vc3_‹_vc4
; ++stm0)

676 
löe_íd_poöt
.
u
.
SDH
.
°m0
 = stm0;

677 
°©us
 = 
	`WPX_FRMR_SONET_SDH_Cª©eFacûôy
(0, 
Êexmux_id
, &
löe_íd_poöt
);

678 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_Cª©eFacûôy (VC3/4)", 
°©us
, 
__LINE__
);

681 
°©us
 = 
	`WPX_FRMR_SONET_SDH_HO_PATH_C2_SëTX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
TX_C2
);

682 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_HO_PATH_C2_SëTX", 
°©us
, 
__LINE__
);

683 #i‡
WTI_FLEXMUX_DBG_MODE


684 
U8
 
pTX_C2
;

685 
°©us
 =
	`WPX_FRMR_SONET_SDH_HO_PATH_C2_GëTX
(
Êexmux_id
,&
löe_íd_poöt
,&
pTX_C2
 );

686 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_DEV_GëMode", 
°©us
, 
__LINE__
);

687 if(
pTX_C2
!=
TX_C2
)

689 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_HO_PATH_C2_GetTX != TX_C2\n", 0);

692 
°©us
 = 
	`WPX_FRMR_SONET_SDH_HO_PATH_C2_SëEX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
EX_C2
);

693 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_HO_PATH_C2_SëEX", 
°©us
, 
__LINE__
);

694 #i‡
WTI_FLEXMUX_DBG_MODE


695 
U8
 
pEX_C2
;

696 
°©us
 =
	`WPX_FRMR_SONET_SDH_HO_PATH_C2_GëTX
(
Êexmux_id
,&
löe_íd_poöt
,&
pEX_C2
 );

697 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_DEV_GëMode", 
°©us
, 
__LINE__
);

698 if(
pTX_C2
!=
TX_C2
)

700 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_HO_PATH_C2_GetTX != EX_C2\n", 0);

704 
	`WPX_FRMR_SONET_SDH_HO_PATH_J1_SëMode
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
WPX_UFE_FRAMER_PATH_TRACE_MODE_16_BYTE
);

705 
°©us
 = 
	`WPX_FRMR_SONET_SDH_HO_PATH_J1_SëTX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
TX_J1
);

706 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_HO_PATH_J1_SëTX", 
°©us
, 
__LINE__
);

707 #i‡
WTI_FLEXMUX_DBG_MODE


708 
WP_CHAR
 *
pTX_J1
;

709 
°©us
 =
	`WPX_FRMR_SONET_SDH_HO_PATH_J1_GëTX
(
Êexmux_id
,&
löe_íd_poöt
,
pTX_J1
 );

710 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_DEV_GëMode", 
°©us
, 
__LINE__
);

711 if(
pTX_J1
!=
TX_J1
)

713 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_HO_PATH_J1_GetTX != TX_J1\n", 0);

717 
°©us
 = 
	`WPX_FRMR_SONET_SDH_HO_PATH_J1_SëEX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
EX_J1
);

718 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_HO_PATH_J1_SëEX", 
°©us
, 
__LINE__
);

719 #i‡
WTI_FLEXMUX_DBG_MODE


720 
WP_CHAR
 *
pEX_J1
;

721 
°©us
 =
	`WPX_FRMR_SONET_SDH_HO_PATH_J1_GëEX
(
Êexmux_id
,&
löe_íd_poöt
,
pEX_J1
 );

722 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_DEV_GëMode", 
°©us
, 
__LINE__
);

723 if(
pEX_J1
!=
EX_J1
)

725 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_HO_PATH_J1_GetEX != EX_J1\n", 0);

732 i‡(
löe_p‹t_mode
 =
WT_FLEXMUX_LINE_PORT_STM4
)

734 
°m4
=0; stm4<
max_löe_p‹ts
; stm4+=
löe_ö¸emít
)

736 
löe_íd_poöt
.
u
.
SDH
.
°m4
 = stm4;

737 
	`WTI_FÀxmuxLöeP‹tC⁄fig
(0,

738 
°m4
,

739 
löe_p‹t_mode
);

740 
	`WPX_FRMR_SONET_SDH_PORT_SEC_J0_SëMode
(0, 
Êexmux_id
, 
°m4
, 
WPX_UFE_FRAMER_PATH_TRACE_MODE_16_BYTE
);

741 
°©us
 = 
	`WPX_FRMR_SONET_SDH_PORT_SEC_J0_SëTX
(0, 
Êexmux_id
, 
°m4
, 
pTX_Tø˚Såög
);

742 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_SOH_J0_SëTX", 
°©us
, 
__LINE__
);

744 
°©us
 = 
	`WPX_FRMR_SONET_SDH_PORT_SEC_J0_SëEX
(0, 
Êexmux_id
, 
°m4
, 
pEX_Tø˚Såög
);

745 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_SOH_J0_SëEX", 
°©us
, 
__LINE__
);

747 
°m1
=0; stm1<4; ++stm1)

749 
löe_íd_poöt
.
u
.
SDH
.
°m1
 = stm1;

750 
°m0
=0; stm0<
num_f‹_vc3_‹_vc4
; ++stm0)

752 
löe_íd_poöt
.
u
.
SDH
.
°m0
 = stm0;

753 
°©us
 = 
	`WPX_FRMR_SONET_SDH_Cª©eFacûôy
(0, 
Êexmux_id
, &
löe_íd_poöt
);

754 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_Cª©eFacûôy (VC3/4)", 
°©us
, 
__LINE__
);

757 
°©us
 = 
	`WPX_FRMR_SONET_SDH_HO_PATH_C2_SëTX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
TX_C2
);

758 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_HO_PATH_C2_SëTX", 
°©us
, 
__LINE__
);

759 #i‡
WTI_FLEXMUX_DBG_MODE


760 
U8
 
pTX_C2
;

761 
°©us
 =
	`WPX_FRMR_SONET_SDH_HO_PATH_C2_GëTX
(
Êexmux_id
,&
löe_íd_poöt
,&
pTX_C2
 );

762 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_DEV_GëMode", 
°©us
, 
__LINE__
);

763 if(
pTX_C2
!=
TX_C2
)

765 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_HO_PATH_C2_GetTX != TX_C2\n", 0);

768 
°©us
 = 
	`WPX_FRMR_SONET_SDH_HO_PATH_C2_SëEX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
EX_C2
);

769 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_HO_PATH_C2_SëEX", 
°©us
, 
__LINE__
);

770 #i‡
WTI_FLEXMUX_DBG_MODE


771 
U8
 
pEX_C2
;

772 
°©us
 =
	`WPX_FRMR_SONET_SDH_HO_PATH_C2_GëTX
(
Êexmux_id
,&
löe_íd_poöt
,&
pEX_C2
 );

773 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_DEV_GëMode", 
°©us
, 
__LINE__
);

774 if(
pTX_C2
!=
TX_C2
)

776 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_HO_PATH_C2_GetTX != EX_C2\n", 0);

779 
	`WPX_FRMR_SONET_SDH_HO_PATH_J1_SëMode
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
WPX_UFE_FRAMER_PATH_TRACE_MODE_16_BYTE
);

780 
°©us
 = 
	`WPX_FRMR_SONET_SDH_HO_PATH_J1_SëTX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
TX_J1
);

781 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_HO_PATH_J1_SëTX", 
°©us
, 
__LINE__
);

782 #i‡
WTI_FLEXMUX_DBG_MODE


783 
WP_CHAR
 *
pTX_J1
;

784 
°©us
 =
	`WPX_FRMR_SONET_SDH_HO_PATH_J1_GëTX
(
Êexmux_id
,&
löe_íd_poöt
,
pTX_J1
 );

785 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_DEV_GëMode", 
°©us
, 
__LINE__
);

786 if(
pTX_J1
!=
TX_J1
)

788 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_HO_PATH_J1_GetTX != TX_J1\n", 0);

792 
°©us
 = 
	`WPX_FRMR_SONET_SDH_HO_PATH_J1_SëEX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
EX_J1
);

793 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_HO_PATH_J1_SëEX", 
°©us
, 
__LINE__
);

794 #i‡
WTI_FLEXMUX_DBG_MODE


795 
WP_CHAR
 *
pEX_J1
;

796 
°©us
 =
	`WPX_FRMR_SONET_SDH_HO_PATH_J1_GëEX
(
Êexmux_id
,&
löe_íd_poöt
,
pEX_J1
 );

797 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_DEV_GëMode", 
°©us
, 
__LINE__
);

798 if(
pEX_J1
!=
EX_J1
)

800 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_HO_PATH_J1_GetEX != EX_J1\n", 0);

811 
	`WTI_FÀxmuxTîmö©eOnEº‹
("Unsupported BuildÖersonality", 0);

817 
°©us
 = 
	`WPX_FRMR_DEV_DIAG_DRV_RecClkSë
(0, 0, 0 ,0);

818 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_DEV_DIAG_DRV_RecClkSë", 
°©us
, 
__LINE__
);

821 
°©us
 = 
	`WPX_FRMR_DEV_DIAG_DRV_RecClkSë
(0, 0, 1 ,0);

822 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_DEV_DIAG_DRV_RecClkSë", 
°©us
, 
__LINE__
);

825 #i‡
WTI_FLEXMUX_DBG_MODE


826 
U8
 
piLöeP‹t
;

827 
°©us
 = 
	`WPX_FRMR_DEV_DIAG_DRV_RecClkGë
(
Êexmux_id
,0,&
piLöeP‹t
 );

828 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_DEV_GëMode", 
°©us
, 
__LINE__
);

829 if(
piLöeP‹t
!=0)

831 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_DEV_DIAG_DRV_RecClkGet != 0\n", 0);

836 
	}
}

838 
WP_S32
 
	$WTI_FÀxmuxLöeP‹tC⁄fig
(
WP_U8
 
Êexmux_id
,

839 
WP_U8
 
löe_p‹t_id
,

840 
WTI_Êexmux_löe_p‹t_mode
 
löe_p‹t_cfg
)

842 
WP_U8
 
°©us
 =0;

843 i‡(
Êexmux_id
 > 
WTI_FLEXMUX_NUM_DEVICES
)

844 
	`WTI_FÀxmuxTîmö©eOnEº‹
("flexmux_id is out of bounds !", 0);

846 i‡(
Êexmux_ªg
[
Êexmux_id
].
is_öôülized
 !
WP_TRUE
)

847 
	`WTI_FÀxmuxTîmö©eOnEº‹
("Flexmux device isÇot initialized!", 0);

849 i‡(
löe_p‹t_id
 >
WTI_MAX_LINE_PORTS_PER_FLEXMUX_DEVICE
)

850 
	`WTI_FÀxmuxTîmö©eOnEº‹
("InvalidÜine_port_id!", 0);

852 i‡((
Êexmux_ªg
[
Êexmux_id
].
Êexmux_mode
 =
WPX_UFE_FRAMER_DEVICE_MODE_SONET
) &&

853 (
löe_p‹t_cfg
 !
WT_FLEXMUX_LINE_PORT_OC3
 &&Üöe_p‹t_cfg !
WT_FLEXMUX_LINE_PORT_OC12
))

854 
	`WTI_FÀxmuxTîmö©eOnEº‹
("InvalidÜine_port_cfg!", 0);

856 i‡((
Êexmux_ªg
[
Êexmux_id
].
Êexmux_mode
 =
WPX_UFE_FRAMER_DEVICE_MODE_SDH
) &&

857 (
löe_p‹t_cfg
 !
WT_FLEXMUX_LINE_PORT_STM1
 &&Üöe_p‹t_cfg !
WT_FLEXMUX_LINE_PORT_STM4
))

858 
	`WTI_FÀxmuxTîmö©eOnEº‹
("InvalidÜine_port_cfg!", 0);

860 i‡(
löe_p‹t_cfg
 =
WT_FLEXMUX_LINE_PORT_OC3
)

862 
°©us
 = 
	`WPX_FRMR_SONET_SDH_PORT_SëR©e
(0, 
Êexmux_id
, 
löe_p‹t_id
, 
WPX_UFE_FRAMER_LINE_PORT_RATE_OC3
);

863 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_PORT_SëR©e", 
°©us
, 
__LINE__
);

864 #i‡
WTI_FLEXMUX_DBG_MODE


866 
U8
 
pP‹tR©e
;

867 
°©us
 =
	`WPX_FRMR_SONET_SDH_PORT_GëR©e
(
Êexmux_id
,
löe_p‹t_id
,&
pP‹tR©e
 );

868 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_PORT_GëR©e", 
°©us
, 
__LINE__
);

869 if(
pP‹tR©e
!=
WPX_UFE_FRAMER_LINE_PORT_RATE_OC3
)

871 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_PORT_GetRate != WPX_UFE_FRAMER_LINE_PORT_RATE_STS3C\n", 0);

876 i‡(
löe_p‹t_cfg
 =
WT_FLEXMUX_LINE_PORT_OC12
)

878 
°©us
 = 
	`WPX_FRMR_SONET_SDH_PORT_SëR©e
(0, 
Êexmux_id
, 
löe_p‹t_id
, 
WPX_UFE_FRAMER_LINE_PORT_RATE_OC12
);

879 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_PORT_SëR©e", 
°©us
, 
__LINE__
);

880 #i‡
WTI_FLEXMUX_DBG_MODE


881 
U8
 
pP‹tR©e
;

882 
°©us
 =
	`WPX_FRMR_SONET_SDH_PORT_GëR©e
(
Êexmux_id
,
löe_p‹t_id
,&
pP‹tR©e
 );

883 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_PORT_GëR©e", 
°©us
, 
__LINE__
);

884 if(
pP‹tR©e
!=
WPX_UFE_FRAMER_LINE_PORT_RATE_OC12
)

886 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_PORT_GetRate != WPX_UFE_FRAMER_LINE_PORT_RATE_STS12C\n", 0);

891 i‡(
löe_p‹t_cfg
 =
WT_FLEXMUX_LINE_PORT_STM1
)

893 
°©us
 = 
	`WPX_FRMR_SONET_SDH_PORT_SëR©e
(0, 
Êexmux_id
, 
löe_p‹t_id
, 
WPX_UFE_FRAMER_LINE_PORT_RATE_STM1
);

894 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_PORT_SëR©e", 
°©us
, 
__LINE__
);

895 #i‡
WTI_FLEXMUX_DBG_MODE


896 
U8
 
pP‹tR©e
;

897 
°©us
 =
	`WPX_FRMR_SONET_SDH_PORT_GëR©e
(
Êexmux_id
,
löe_p‹t_id
,&
pP‹tR©e
 );

898 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_PORT_GëR©e", 
°©us
, 
__LINE__
);

899 if(
pP‹tR©e
!=
WPX_UFE_FRAMER_LINE_PORT_RATE_STM1
)

901 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_PORT_GetRate != WPX_UFE_FRAMER_LINE_PORT_RATE_STM1\n", 0);

905 i‡(
löe_p‹t_cfg
 =
WT_FLEXMUX_LINE_PORT_STM4
)

907 
°©us
 = 
	`WPX_FRMR_SONET_SDH_PORT_SëR©e
(0, 
Êexmux_id
, 
löe_p‹t_id
, 
WPX_UFE_FRAMER_LINE_PORT_RATE_STM4
);

908 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_PORT_SëR©e", 
°©us
, 
__LINE__
);

909 #i‡
WTI_FLEXMUX_DBG_MODE


910 
U8
 
pP‹tR©e
;

911 
°©us
 =
	`WPX_FRMR_SONET_SDH_PORT_GëR©e
(
Êexmux_id
,
löe_p‹t_id
,&
pP‹tR©e
 );

912 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_PORT_GëR©e", 
°©us
, 
__LINE__
);

913 if(
pP‹tR©e
!=
WPX_UFE_FRAMER_LINE_PORT_RATE_STM4
)

915 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_PORT_GetRate != WPX_UFE_FRAMER_LINE_PORT_RATE_STM4\n", 0);

921 
Êexmux_ªg
[
Êexmux_id
].
löe_p‹ts_ªg
[
löe_p‹t_id
].
löe_p‹t_mode
 = 
löe_p‹t_cfg
;

924 
	}
}

926 
WP_S32
 
	$WTI_FÀxmuxC⁄√˘i⁄Cª©e
(
WP_U8
 
Êexmux_id
,

927 
WP_U8
 
löe_p‹t_id
,

928 
WP_U32
 
˛õ¡_p‹t_id
,

929 
WTI_Êexmux_c⁄√˘i⁄_ty≥
 
ty≥
,

930 *
u„_löe_∑øms
)

933 
WP_U8
 
°©us
 =0,
tx_˛k_ªc_íabÀ
=0;

934 
WP_U32
 
löe_timög
=0;

935 
WPX_UFE_FRAMER_COMMON_SDH_SONET_ENDPOINT_TYPE
 
löe_íd_poöt
;

937 i‡(
Êexmux_id
 > 
WTI_FLEXMUX_NUM_DEVICES
)

938 
	`WTI_FÀxmuxTîmö©eOnEº‹
("flexmux_id is out of bounds !", 0);

941 i‡(
ty≥
 =
WT_FLEXMUX_CONNECTION_TYPE_E1_UNFRAMED
)

943 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_Cª©eFacûôy
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_CLIENT_E1
);

944 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_Cª©eFacûôy", 
°©us
, 
__LINE__
);

946 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_SëFømög
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_CLIENT_UNFRAMED
);

947 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_SëFømög", 
°©us
, 
__LINE__
);

948 #i‡
WTI_FLEXMUX_DBG_MODE


949 
U8
 
pFømög
;

950 
°©us
 =
	`WPX_FRMR_SOCKET_PDH_GëFømög
(
Êexmux_id
,
˛õ¡_p‹t_id
,&
pFømög
 );

951 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_GëFømög", 
°©us
, 
__LINE__
);

952 if(
pFømög
!=
WPX_UFE_FRAMER_CLIENT_UNFRAMED
)

954 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SOCKET_PDH_GetFraming != WPX_UFE_FRAMER_CLIENT_UNFRAMED\n", 0);

957 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_SëM≠pög
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_CLIENT_MAPPING_BIT_ASYNC
);

958 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_SëM≠pög", 
°©us
, 
__LINE__
);

959 #i‡
WTI_FLEXMUX_DBG_MODE


960 
U8
 
pM≠pög
;

961 
°©us
 =
	`WPX_FRMR_SOCKET_PDH_GëM≠pög
(
Êexmux_id
,
˛õ¡_p‹t_id
,&
pM≠pög
 );

962 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_GëM≠pög", 
°©us
, 
__LINE__
);

963 if(
pM≠pög
!=
WPX_UFE_FRAMER_CLIENT_MAPPING_BIT_ASYNC
)

965 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SOCKET_PDH_GetMapping != WPX_UFE_FRAMER_CLIENT_MAPPING_BIT_ASYNC\n", 0);

970 i‡(
ty≥
 =
WT_FLEXMUX_CONNECTION_TYPE_E1_FRAMED
)

972 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_Cª©eFacûôy
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_CLIENT_E1
);

973 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_Cª©eFacûôy", 
°©us
, 
__LINE__
);

975 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_SëFømög
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_CLIENT_PCM31CRC
);

976 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_SëFømög", 
°©us
, 
__LINE__
);

978 #i‡
WTI_FLEXMUX_DBG_MODE


979 
U8
 
pFømög
;

980 
°©us
 =
	`WPX_FRMR_SOCKET_PDH_GëFømög
(
Êexmux_id
,
˛õ¡_p‹t_id
,&
pFømög
 );

981 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_GëFømög", 
°©us
, 
__LINE__
);

982 if(
pFømög
!=
WPX_UFE_FRAMER_CLIENT_PCM31CRC
)

984 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SOCKET_PDH_GetFraming != WPX_UFE_FRAMER_CLIENT_PCM31CRC\n", 0);

988 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_SëM≠pög
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_CLIENT_MAPPING_BIT_ASYNC
);

989 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_SëM≠pög", 
°©us
, 
__LINE__
);

991 #i‡
WTI_FLEXMUX_DBG_MODE


992 
U8
 
pM≠pög
;

993 
°©us
 =
	`WPX_FRMR_SOCKET_PDH_GëM≠pög
(
Êexmux_id
,
˛õ¡_p‹t_id
,&
pM≠pög
 );

994 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_GëM≠pög", 
°©us
, 
__LINE__
);

995 if(
pM≠pög
!=
WPX_UFE_FRAMER_CLIENT_MAPPING_BIT_ASYNC
)

997 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SOCKET_PDH_GetMapping != WPX_UFE_FRAMER_CLIENT_MAPPING_BIT_ASYNC\n", 0);

1001 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_DißbÀCAS
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
);

1002 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_DißbÀCAS", 
°©us
, 
__LINE__
);

1004 #i‡
WTI_FLEXMUX_DBG_MODE


1005 
U8
 
pCAS_IsE«bÀd
;

1006 
°©us
 =
	`WPX_FRMR_SOCKET_PDH_Gë_CAS_Sèã
(
Êexmux_id
,
˛õ¡_p‹t_id
,&
pCAS_IsE«bÀd
 );

1007 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_Gë_CAS_Sèã", 
°©us
, 
__LINE__
);

1008 if(
pCAS_IsE«bÀd
!=0)

1010 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SOCKET_PDH_Get_CAS_State != 0\n", 0);

1015 i‡(
ty≥
 =
WT_FLEXMUX_CONNECTION_TYPE_E1_FRAMED_CAS
)

1017 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_Cª©eFacûôy
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_CLIENT_E1
);

1018 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_Cª©eFacûôy", 
°©us
, 
__LINE__
);

1020 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_SëFømög
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_CLIENT_PCM31CRC
);

1021 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_SëFømög", 
°©us
, 
__LINE__
);

1023 #i‡
WTI_FLEXMUX_DBG_MODE


1024 
U8
 
pFømög
;

1025 
°©us
 =
	`WPX_FRMR_SOCKET_PDH_GëFømög
(
Êexmux_id
,
˛õ¡_p‹t_id
,&
pFømög
 );

1026 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_GëFømög", 
°©us
, 
__LINE__
);

1027 if(
pFømög
!=
WPX_UFE_FRAMER_CLIENT_PCM31CRC
)

1029 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SOCKET_PDH_GetFraming != WPX_UFE_FRAMER_CLIENT_PCM31CRC\n", 0);

1033 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_SëM≠pög
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_CLIENT_MAPPING_BIT_ASYNC
);

1034 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_SëM≠pög", 
°©us
, 
__LINE__
);

1036 #i‡
WTI_FLEXMUX_DBG_MODE


1037 
U8
 
pM≠pög
;

1038 
°©us
 =
	`WPX_FRMR_SOCKET_PDH_GëM≠pög
(
Êexmux_id
,
˛õ¡_p‹t_id
,&
pM≠pög
 );

1039 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_GëM≠pög", 
°©us
, 
__LINE__
);

1040 if(
pM≠pög
!=
WPX_UFE_FRAMER_CLIENT_MAPPING_BIT_ASYNC
)

1042 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SOCKET_PDH_GetMapping != WPX_UFE_FRAMER_CLIENT_MAPPING_BIT_ASYNC\n", 0);

1047 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_E«bÀCAS
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
);

1048 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_DißbÀCAS", 
°©us
, 
__LINE__
);

1050 #i‡
WTI_FLEXMUX_DBG_MODE


1051 
U8
 
pCAS_IsE«bÀd
;

1052 
°©us
 =
	`WPX_FRMR_SOCKET_PDH_Gë_CAS_Sèã
(
Êexmux_id
,
˛õ¡_p‹t_id
,&
pCAS_IsE«bÀd
 );

1053 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_Gë_CAS_Sèã", 
°©us
, 
__LINE__
);

1054 if(
pCAS_IsE«bÀd
!=1)

1056 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SOCKET_PDH_Get_CAS_State != 1\n", 0);

1061 i‡(
ty≥
 =
WT_FLEXMUX_CONNECTION_TYPE_T1_UNFRAMED
)

1063 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_Cª©eFacûôy
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_CLIENT_T1
);

1064 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_Cª©eFacûôy", 
°©us
, 
__LINE__
);

1066 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_SëFømög
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_CLIENT_UNFRAMED
);

1067 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_SëFømög", 
°©us
, 
__LINE__
);

1069 #i‡
WTI_FLEXMUX_DBG_MODE


1070 
U8
 
pFømög
;

1071 
°©us
 =
	`WPX_FRMR_SOCKET_PDH_GëFømög
(
Êexmux_id
,
˛õ¡_p‹t_id
,&
pFømög
 );

1072 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_GëFømög", 
°©us
, 
__LINE__
);

1073 if(
pFømög
!=
WPX_UFE_FRAMER_CLIENT_UNFRAMED
)

1075 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SOCKET_PDH_GetFraming != WPX_UFE_FRAMER_CLIENT_UNFRAMED\n", 0);

1079 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_SëM≠pög
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_CLIENT_MAPPING_BIT_ASYNC
);

1080 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_SëM≠pög", 
°©us
, 
__LINE__
);

1082 #i‡
WTI_FLEXMUX_DBG_MODE


1083 
U8
 
pM≠pög
;

1084 
°©us
 =
	`WPX_FRMR_SOCKET_PDH_GëM≠pög
(
Êexmux_id
,
˛õ¡_p‹t_id
,&
pM≠pög
 );

1085 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_GëM≠pög", 
°©us
, 
__LINE__
);

1086 if(
pM≠pög
!=
WPX_UFE_FRAMER_CLIENT_MAPPING_BIT_ASYNC
)

1088 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SOCKET_PDH_GetMapping != WPX_UFE_FRAMER_CLIENT_MAPPING_BIT_ASYNC\n", 0);

1093 i‡(
ty≥
 =
WT_FLEXMUX_CONNECTION_TYPE_T1_FRAMED
)

1095 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_Cª©eFacûôy
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_CLIENT_T1
);

1096 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_Cª©eFacûôy", 
°©us
, 
__LINE__
);

1098 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_SëFømög
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_CLIENT_FRAMING_SF_D4
);

1099 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_SëFømög", 
°©us
, 
__LINE__
);

1101 #i‡
WTI_FLEXMUX_DBG_MODE


1102 
U8
 
pFømög
;

1103 
°©us
 =
	`WPX_FRMR_SOCKET_PDH_GëFømög
(
Êexmux_id
,
˛õ¡_p‹t_id
,&
pFømög
 );

1104 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_GëFømög", 
°©us
, 
__LINE__
);

1105 if(
pFømög
!=
WPX_UFE_FRAMER_CLIENT_FRAMING_SF_D4
)

1107 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SOCKET_PDH_GetFraming != WPX_UFE_FRAMER_CLIENT_FRAMING_SF_D4\n", 0);

1111 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_SëM≠pög
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_CLIENT_MAPPING_BIT_ASYNC
);

1112 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_SëM≠pög", 
°©us
, 
__LINE__
);

1114 #i‡
WTI_FLEXMUX_DBG_MODE


1115 
U8
 
pM≠pög
;

1116 
°©us
 =
	`WPX_FRMR_SOCKET_PDH_GëM≠pög
(
Êexmux_id
,
˛õ¡_p‹t_id
,&
pM≠pög
 );

1117 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_GëM≠pög", 
°©us
, 
__LINE__
);

1118 if(
pM≠pög
!=
WPX_UFE_FRAMER_CLIENT_MAPPING_BIT_ASYNC
)

1120 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SOCKET_PDH_GetMapping != WPX_UFE_FRAMER_CLIENT_MAPPING_BIT_ASYNC\n", 0);

1124 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_DißbÀCAS
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
);

1125 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_DißbÀCAS", 
°©us
, 
__LINE__
);

1127 #i‡
WTI_FLEXMUX_DBG_MODE


1128 
U8
 
pCAS_IsE«bÀd
;

1129 
°©us
 =
	`WPX_FRMR_SOCKET_PDH_Gë_CAS_Sèã
(
Êexmux_id
,
˛õ¡_p‹t_id
,&
pCAS_IsE«bÀd
 );

1130 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_Gë_CAS_Sèã", 
°©us
, 
__LINE__
);

1131 if(
pCAS_IsE«bÀd
!=0)

1133 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SOCKET_PDH_Get_CAS_State != 0\n", 0);

1137 i‡(
ty≥
 =
WT_FLEXMUX_CONNECTION_TYPE_T1_FRAMED_CAS
)

1139 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_Cª©eFacûôy
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_CLIENT_T1
);

1140 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_Cª©eFacûôy", 
°©us
, 
__LINE__
);

1142 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_SëFømög
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_CLIENT_FRAMING_ESF
);

1143 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_SëFømög", 
°©us
, 
__LINE__
);

1145 #i‡
WTI_FLEXMUX_DBG_MODE


1146 
U8
 
pFømög
;

1147 
°©us
 =
	`WPX_FRMR_SOCKET_PDH_GëFømög
(
Êexmux_id
,
˛õ¡_p‹t_id
,&
pFømög
 );

1148 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_GëFømög", 
°©us
, 
__LINE__
);

1149 if(
pFømög
!=
WPX_UFE_FRAMER_CLIENT_FRAMING_ESF
)

1151 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SOCKET_PDH_GetFraming != WPX_UFE_FRAMER_CLIENT_FRAMING_ESF\n", 0);

1155 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_SëM≠pög
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_CLIENT_MAPPING_BIT_ASYNC
);

1156 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_SëM≠pög", 
°©us
, 
__LINE__
);

1158 #i‡
WTI_FLEXMUX_DBG_MODE


1159 
U8
 
pM≠pög
;

1160 
°©us
 =
	`WPX_FRMR_SOCKET_PDH_GëM≠pög
(
Êexmux_id
,
˛õ¡_p‹t_id
,&
pM≠pög
 );

1161 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_GëM≠pög", 
°©us
, 
__LINE__
);

1162 if(
pM≠pög
!=
WPX_UFE_FRAMER_CLIENT_MAPPING_BIT_ASYNC
)

1164 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SOCKET_PDH_GetMapping != WPX_UFE_FRAMER_CLIENT_MAPPING_BIT_ASYNC\n", 0);

1170 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_DißbÀCAS
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
);

1171 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_DißbÀCAS", 
°©us
, 
__LINE__
);

1173 #i‡
WTI_FLEXMUX_DBG_MODE


1174 
U8
 
pCAS_IsE«bÀd
;

1175 
°©us
 =
	`WPX_FRMR_SOCKET_PDH_Gë_CAS_Sèã
(
Êexmux_id
,
˛õ¡_p‹t_id
,&
pCAS_IsE«bÀd
 );

1176 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_Gë_CAS_Sèã", 
°©us
, 
__LINE__
);

1177 if(
pCAS_IsE«bÀd
!=1)

1179 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SOCKET_PDH_Get_CAS_State != 1\n", 0);

1185 
	`WTI_FÀxmuxTîmö©eOnEº‹
("ConnectionÅype isÇot supported !", 0);

1189 i‡(
Êexmux_ªg
[
Êexmux_id
].
Êexmux_mode
 =
WPX_UFE_FRAMER_DEVICE_MODE_SONET
)

1191 
WT_u„_löe_s⁄ë_∑øms
 *
s⁄ë_löe_∑øms
 = (WT_u„_löe_s⁄ë_∑øms*Ë
u„_löe_∑øms
;

1192 
U8
 
TX_V5_Sig«lLabñ
=0x2, 
EX_V5_Sig«lLabñ
=0x2;

1193 
WP_CHAR
 *
TX_J2_Tø˚Såög
 = "WG LP-TRACE",*
EX_J2_Tø˚Såög
 = "WG LP-TRACE";

1195 
löe_íd_poöt
.
u
.
SONET
.
°s12
 = 
s⁄ë_löe_∑øms
->sts12;

1196 
löe_íd_poöt
.
u
.
SONET
.
°s3
 = 
s⁄ë_löe_∑øms
->sts3;

1197 
löe_íd_poöt
.
u
.
SONET
.
°s1
 = 
s⁄ë_löe_∑øms
->sts1;

1198 
löe_íd_poöt
.
u
.
SONET
.
vt_group
 = 
s⁄ë_löe_∑øms
->vt_group;

1199 
löe_íd_poöt
.
u
.
SONET
.
vt
 = 
s⁄ë_löe_∑øms
->vt;

1201 #i‡
WTI_FLEXMUX_DBG_MODE


1202 
	`¥ötf
("c⁄√˘ög clõ¡_p‹t_id %dÅÿlöe_p‹t_id %d\n",
˛õ¡_p‹t_id
,
löe_p‹t_id
);

1203 
	`¥ötf
("°s12 %d sts3 %d sts1 %d vt_grou∞%d và%d\n", 
s⁄ë_löe_∑øms
->
°s12
,

1204 
s⁄ë_löe_∑øms
->
°s3
,

1205 
s⁄ë_löe_∑øms
->
°s1
,

1206 
s⁄ë_löe_∑øms
->
vt_group
,

1207 
s⁄ë_löe_∑øms
->
vt
);

1210 i‡(
s⁄ë_löe_∑øms
->
å™s„r_ty≥
 =
WUFE_SONET_TYPE_E1
)

1211 
löe_íd_poöt
.
Tøns„rTy≥
 = 
WPX_UFE_FRAMER_WUFE_SONET_TYPE_VT2
;

1212 i‡(
s⁄ë_löe_∑øms
->
å™s„r_ty≥
 =
WUFE_SONET_TYPE_T1
)

1213 
löe_íd_poöt
.
Tøns„rTy≥
 = 
WPX_UFE_FRAMER_WUFE_SONET_TYPE_VT1_5
;

1215 
	`WTI_FÀxmuxTîmö©eOnEº‹
("InvalidÜineÅransferÅype", 0);

1218 
°©us
 = 
	`WPX_FRMR_SONET_SDH_Cª©eFacûôy
(0, 
Êexmux_id
, &
löe_íd_poöt
);

1219 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_Cª©eFacûôy (Vt1.5 o∏Vt2)", 
°©us
, 
__LINE__
);

1222 
°©us
 = 
	`WPX_FRMR_SONET_SDH_LO_PATH_V5_SigLabñ_SëTX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
TX_V5_Sig«lLabñ
);

1223 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_LO_PATH_V5_SigLabñ_SëTX", 
°©us
, 
__LINE__
);

1225 #i‡
WTI_FLEXMUX_DBG_MODE


1226 
U8
 
pTX_V5_Sig«lLabñ
;

1227 
°©us
 =
	`WPX_FRMR_SONET_SDH_LO_PATH_V5_SigLabñ_GëTX
(
Êexmux_id
,&
löe_íd_poöt
,&
pTX_V5_Sig«lLabñ
 );

1228 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_LO_PATH_V5_SigLabñ_GëTX", 
°©us
, 
__LINE__
);

1229 if(
pTX_V5_Sig«lLabñ
!=
TX_V5_Sig«lLabñ
)

1231 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_LO_PATH_V5_SigLabel_GetTX != TX_V5_SignalLabel\n", 0);

1235 
°©us
 = 
	`WPX_FRMR_SONET_SDH_LO_PATH_V5_SigLabñ_SëEX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
EX_V5_Sig«lLabñ
);

1236 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_LO_PATH_V5_SigLabñ_SëEX", 
°©us
, 
__LINE__
);

1238 #i‡
WTI_FLEXMUX_DBG_MODE


1239 
U8
 
pEX_V5_Sig«lLabñ
;

1240 
°©us
 =
	`WPX_FRMR_SONET_SDH_LO_PATH_V5_SigLabñ_GëEX
(
Êexmux_id
,&
löe_íd_poöt
,&
pEX_V5_Sig«lLabñ
 );

1241 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_LO_PATH_V5_SigLabñ_GëEX", 
°©us
, 
__LINE__
);

1242 if(
pEX_V5_Sig«lLabñ
!=
EX_V5_Sig«lLabñ
)

1244 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_LO_PATH_V5_SigLabel_GetEX != EX_V5_SignalLabel\n", 0);

1249 
°©us
 = 
	`WPX_FRMR_SONET_SDH_LO_PATH_J2_SëTX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
TX_J2_Tø˚Såög
);

1250 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_LO_PATH_J2_SëTX", 
°©us
, 
__LINE__
);

1252 #i‡
WTI_FLEXMUX_DBG_MODE


1253 
WP_CHAR
 *
pTX_J2_Tø˚Såög
;

1254 
°©us
 =
	`WPX_FRMR_SONET_SDH_LO_PATH_J2_GëTX
(
Êexmux_id
,&
löe_íd_poöt
,
pTX_J2_Tø˚Såög
 );

1255 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_LO_PATH_J2_SëTX", 
°©us
, 
__LINE__
);

1256 if(*
pTX_J2_Tø˚Såög
!=*
TX_J2_Tø˚Såög
)

1258 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_LO_PATH_J2_GetTX != TX_J2_TraceString\n", 0);

1262 
°©us
 = 
	`WPX_FRMR_SONET_SDH_LO_PATH_J2_SëEX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
EX_J2_Tø˚Såög
);

1263 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_LO_PATH_J2_SëEX", 
°©us
, 
__LINE__
);

1265 #i‡
WTI_FLEXMUX_DBG_MODE


1266 
WP_CHAR
 *
pEX_J2_Tø˚Såög
;

1267 
°©us
 =
	`WPX_FRMR_SONET_SDH_LO_PATH_J2_GëEX
(
Êexmux_id
,&
löe_íd_poöt
,
pEX_J2_Tø˚Såög
 );

1268 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_LO_PATH_J2_GëEX", 
°©us
, 
__LINE__
);

1269 if(*
pEX_J2_Tø˚Såög
!=*
EX_J2_Tø˚Såög
)

1271 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_LO_PATH_J2_GetEX != EX_J2_TraceString\n", 0);

1279 i‡(
s⁄ë_löe_∑øms
->
˛ock_ªc_löe_∑øms
 !
NULL
)

1281 
tx_˛k_ªc_íabÀ
 = 
s⁄ë_löe_∑øms
->
˛ock_ªc_löe_∑øms
->tx_clk_rec_enable;

1284 i‡(
Êexmux_ªg
[
Êexmux_id
].
Êexmux_mode
 =
WPX_UFE_FRAMER_DEVICE_MODE_SDH
)

1286 
WT_u„_löe_sdh_∑øms
 *
sdh_löe_∑øms
 = (WT_u„_löe_sdh_∑øms*Ë
u„_löe_∑øms
;

1287 
U8
 
TX_V5_Sig«lLabñ
=0x2, 
EX_V5_Sig«lLabñ
=0x2;

1288 
WP_CHAR
 *
TX_J2_Tø˚Såög
 = "WG LP-TRACE",*
EX_J2_Tø˚Såög
 = "WG LP-TRACE";

1291 
löe_íd_poöt
.
u
.
SDH
.
°m4
 = 
sdh_löe_∑øms
->stm4;

1292 
löe_íd_poöt
.
u
.
SDH
.
°m1
 = 
sdh_löe_∑øms
->stm1;

1293 
löe_íd_poöt
.
u
.
SDH
.
°m0
 = 
sdh_löe_∑øms
->stm0;

1294 
löe_íd_poöt
.
u
.
SDH
.
tug2
 = 
sdh_löe_∑øms
->tug2;

1295 
löe_íd_poöt
.
u
.
SDH
.
tu
 = 
sdh_löe_∑øms
->tu;

1297 #i‡
WTI_FLEXMUX_DBG_MODE


1298 
	`¥ötf
("c⁄√˘ög clõ¡_p‹t_id %dÅÿlöe_p‹t_id %d\n",
˛õ¡_p‹t_id
,
löe_p‹t_id
);

1299 
	`¥ötf
("°m4 %d stm1 %d stm0 %dÅug2 %dÅu %d\n", 
sdh_löe_∑øms
->
°m4
,sdh_löe_∑øms->
°m1
,sdh_löe_∑øms->
°m0
,sdh_löe_∑øms->
tug2
,sdh_löe_∑øms->
tu
);

1301 i‡(
sdh_löe_∑øms
->
å™s„r_ty≥
 =
WUFE_SDH_TYPE_E1
)

1303 
löe_íd_poöt
.
Tøns„rTy≥
 = 
WPX_UFE_FRAMER_WUFE_SDH_TYPE_VC12
;

1306 i‡(
sdh_löe_∑øms
->
å™s„r_ty≥
 =
WUFE_SDH_TYPE_T1
)

1308 
löe_íd_poöt
.
Tøns„rTy≥
 = 
WPX_UFE_FRAMER_WUFE_SDH_TYPE_VC11
;

1311 
	`WTI_FÀxmuxTîmö©eOnEº‹
("InvalidÜineÅransferÅype", 0);

1313 i‡(
sdh_löe_∑øms
->
˛ock_ªc_löe_∑øms
 !
NULL
)

1315 
tx_˛k_ªc_íabÀ
 = 
sdh_löe_∑øms
->
˛ock_ªc_löe_∑øms
->tx_clk_rec_enable;

1320 
°©us
 = 
	`WPX_FRMR_SONET_SDH_Cª©eFacûôy
(0, 
Êexmux_id
, &
löe_íd_poöt
);

1321 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_Cª©eFacûôy (VC11 o∏VC12)", 
°©us
, 
__LINE__
);

1324 
°©us
 = 
	`WPX_FRMR_SONET_SDH_LO_PATH_V5_SigLabñ_SëTX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
TX_V5_Sig«lLabñ
);

1325 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_LO_PATH_V5_SigLabñ_SëTX", 
°©us
, 
__LINE__
);

1327 #i‡
WTI_FLEXMUX_DBG_MODE


1328 
U8
 
pTX_V5_Sig«lLabñ
;

1329 
°©us
 =
	`WPX_FRMR_SONET_SDH_LO_PATH_V5_SigLabñ_GëTX
(
Êexmux_id
,&
löe_íd_poöt
,&
pTX_V5_Sig«lLabñ
 );

1330 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_LO_PATH_V5_SigLabñ_GëTX", 
°©us
, 
__LINE__
);

1331 if(
pTX_V5_Sig«lLabñ
!=
TX_V5_Sig«lLabñ
)

1333 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_LO_PATH_V5_SigLabel_GetTX != TX_V5_SignalLabel\n", 0);

1337 
°©us
 = 
	`WPX_FRMR_SONET_SDH_LO_PATH_V5_SigLabñ_SëEX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
EX_V5_Sig«lLabñ
);

1338 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_LO_PATH_V5_SigLabñ_SëEX", 
°©us
, 
__LINE__
);

1340 #i‡
WTI_FLEXMUX_DBG_MODE


1341 
U8
 
pEX_V5_Sig«lLabñ
;

1342 
°©us
 =
	`WPX_FRMR_SONET_SDH_LO_PATH_V5_SigLabñ_GëEX
(
Êexmux_id
,&
löe_íd_poöt
,&
pEX_V5_Sig«lLabñ
 );

1343 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_LO_PATH_V5_SigLabñ_GëEX", 
°©us
, 
__LINE__
);

1344 if(
pEX_V5_Sig«lLabñ
!=
EX_V5_Sig«lLabñ
)

1346 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_LO_PATH_V5_SigLabel_GetEX != EX_V5_SignalLabel\n", 0);

1350 
°©us
 = 
	`WPX_FRMR_SONET_SDH_LO_PATH_J2_SëTX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
TX_J2_Tø˚Såög
);

1351 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_LO_PATH_J2_SëTX", 
°©us
, 
__LINE__
);

1353 #i‡
WTI_FLEXMUX_DBG_MODE


1354 
WP_CHAR
 *
pTX_J2_Tø˚Såög
;

1355 
°©us
 =
	`WPX_FRMR_SONET_SDH_LO_PATH_J2_GëTX
(
Êexmux_id
,&
löe_íd_poöt
,
pTX_J2_Tø˚Såög
 );

1356 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_LO_PATH_J2_SëTX", 
°©us
, 
__LINE__
);

1357 if(*
pTX_J2_Tø˚Såög
!=*
TX_J2_Tø˚Såög
)

1359 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_LO_PATH_J2_GetTX != TX_J2_TraceString\n", 0);

1363 
°©us
 = 
	`WPX_FRMR_SONET_SDH_LO_PATH_J2_SëEX
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
EX_J2_Tø˚Såög
);

1364 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_LO_PATH_J2_SëEX", 
°©us
, 
__LINE__
);

1366 #i‡
WTI_FLEXMUX_DBG_MODE


1367 
WP_CHAR
 *
pEX_J2_Tø˚Såög
;

1368 
°©us
 =
	`WPX_FRMR_SONET_SDH_LO_PATH_J2_GëEX
(
Êexmux_id
,&
löe_íd_poöt
,
pEX_J2_Tø˚Såög
 );

1369 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_LO_PATH_J2_GëEX", 
°©us
, 
__LINE__
);

1370 if(*
pEX_J2_Tø˚Såög
!=*
EX_J2_Tø˚Såög
)

1372 
	`WTI_FÀxmuxTîmö©eOnEº‹
("WPX_FRMR_SONET_SDH_LO_PATH_J2_GetEX != EX_J2_TraceString\n", 0);

1379 
°©us
 = 
	`WPX_FRMR_CONNECTIONS_AddDr›LöeToSockëCª©e
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
˛õ¡_p‹t_id
);

1380 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_CONNECTIONS_AddDr›LöeToSockëCª©e", 
°©us
, 
__LINE__
);

1389 i‡(
tx_˛k_ªc_íabÀ
)

1392 #if(
WTI_CESOP_REGRESSION_TEST
)

1395 
löe_timög
 = 
WPX_UFE_FRAMER_TRANSMIT_TIMING_SONET_TIMING
;

1396 #i‡
WTI_FLEXMUX_DBG_MODE


1397 
	`¥ötf
("WPX_UFE_FRAMER_TRANSMIT_TIMING_SONET_TIMING\n");

1401 
löe_timög
 = 
WPX_UFE_FRAMER_TRANSMIT_TIMING_WINPATH
;

1404 #i‡
WTI_FLEXMUX_DBG_MODE


1405 
	`¥ötf
("WPX_UFE_FRAMER_TRANSMIT_TIMING_WINPATH\n");

1410 #if(
WTI_CESOP_REGRESSION_TEST
)

1412 
löe_timög
 = 
WPX_UFE_FRAMER_TRANSMIT_TIMING_SONET_TIMING
;

1413 #i‡
WTI_FLEXMUX_DBG_MODE


1414 
	`¥ötf
("WPX_UFE_FRAMER_TRANSMIT_TIMING_SONET_TIMING\n");

1419 
WT_u„_löe_sdh_∑øms
 *
löe_∑øms
 = (WT_u„_löe_sdh_∑øms*Ë
u„_löe_∑øms
;

1420 
löe_timög
 = 
löe_∑øms
->
˛ock_mode
;

1421 #i‡
WTI_FLEXMUX_DBG_MODE


1422 
	`¥ötf
("WPX_UFE_FRAMER_TRANSMIT_TIMING_RX_PATH\n");

1429 i‡(
tx_˛k_ªc_íabÀ
)

1431 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_E«bÀTimeSèmp
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
,
WTI_FLEXMUX_CLOCK_REC_GAIN_SLOW
);

1432 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_E«bÀTimeSèmp", 
°©us
, 
__LINE__
);

1436 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_SëClkRec
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
löe_timög
);

1437 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_SëClkRec", 
°©us
, 
__LINE__
);

1442 
°©us
 = 
	`WTI_FÀxmuxE«bÀLo›back
(
Êexmux_id
, 
löe_p‹t_id
, 
˛õ¡_p‹t_id
, 
WT_FLEXMUX_NONE_LOOPBACK
);

1443 
	`WTI_FÀxmuxCheckSètus
("WTI_FÀxmuxE«bÀLo›back", 
°©us
, 
__LINE__
);

1444 #i‡
WTI_FLEXMUX_DBG_MODE


1445 
°©us
 = 
	`WTI_FÀxmuxGëLo›backSèã
(
Êexmux_id
, 
löe_p‹t_id
, 
˛õ¡_p‹t_id
, 
WT_FLEXMUX_NONE_LOOPBACK
);

1446 
	`WTI_FÀxmuxCheckSètus
("WTI_FÀxmuxGëLo›backSèã", 
°©us
, 
__LINE__
);

1450 
	}
}

1452 
WP_S32
 
	$WTI_FÀxmuxC⁄√˘i⁄Dñëe
(
WP_U8
 
Êexmux_id
,

1453 
WP_U32
 
˛õ¡_p‹t_id
,

1454 *
u„_löe_∑øms
)

1457 
WP_U8
 
°©us
 =0;

1458 
WPX_UFE_FRAMER_COMMON_SDH_SONET_ENDPOINT_TYPE
 
löe_íd_poöt
 = {0};

1460 i‡(
Êexmux_id
 > 
WTI_FLEXMUX_NUM_DEVICES
)

1461 
	`WTI_FÀxmuxTîmö©eOnEº‹
("flexmux_id is out of bounds !", 0);

1464 i‡(
Êexmux_ªg
[
Êexmux_id
].
Êexmux_mode
 =
WPX_UFE_FRAMER_DEVICE_MODE_SONET
)

1466 
WT_u„_löe_s⁄ë_∑øms
 *
s⁄ë_löe_∑øms
 = (WT_u„_löe_s⁄ë_∑øms*Ë
u„_löe_∑øms
;

1468 i‡(
s⁄ë_löe_∑øms
->
å™s„r_ty≥
 =
WUFE_SONET_TYPE_E1
)

1469 
löe_íd_poöt
.
Tøns„rTy≥
 = 
WPX_UFE_FRAMER_WUFE_SONET_TYPE_VT2
;

1470 i‡(
s⁄ë_löe_∑øms
->
å™s„r_ty≥
 =
WUFE_SONET_TYPE_T1
)

1471 
löe_íd_poöt
.
Tøns„rTy≥
 = 
WPX_UFE_FRAMER_WUFE_SONET_TYPE_VT1_5
;

1473 
	`WTI_FÀxmuxTîmö©eOnEº‹
("InvalidÜineÅransferÅype", 0);

1475 
löe_íd_poöt
.
u
.
SONET
.
°s12
 = 
s⁄ë_löe_∑øms
->sts12;

1476 
löe_íd_poöt
.
u
.
SONET
.
°s3
 = 
s⁄ë_löe_∑øms
->sts3;

1477 
löe_íd_poöt
.
u
.
SONET
.
°s1
 = 
s⁄ë_löe_∑øms
->sts1;

1478 
löe_íd_poöt
.
u
.
SONET
.
vt_group
 = 
s⁄ë_löe_∑øms
->vt_group;

1479 
löe_íd_poöt
.
u
.
SONET
.
vt
 = 
s⁄ë_löe_∑øms
->vt;

1481 i‡(
Êexmux_ªg
[
Êexmux_id
].
Êexmux_mode
 =
WPX_UFE_FRAMER_DEVICE_MODE_SDH
)

1483 
WT_u„_löe_sdh_∑øms
 *
sdh_löe_∑øms
 = (WT_u„_löe_sdh_∑øms*Ë
u„_löe_∑øms
;

1485 i‡(
sdh_löe_∑øms
->
å™s„r_ty≥
 =
WUFE_SDH_TYPE_E1
)

1486 
löe_íd_poöt
.
Tøns„rTy≥
 = 
WPX_UFE_FRAMER_WUFE_SDH_TYPE_VC12
;

1487 i‡(
sdh_löe_∑øms
->
å™s„r_ty≥
 =
WUFE_SDH_TYPE_T1
)

1488 
löe_íd_poöt
.
Tøns„rTy≥
 = 
WPX_UFE_FRAMER_WUFE_SDH_TYPE_VC11
;

1490 
	`WTI_FÀxmuxTîmö©eOnEº‹
("InvalidÜineÅransferÅype", 0);

1492 
löe_íd_poöt
.
u
.
SDH
.
°m4
 = 
sdh_löe_∑øms
->stm4;

1493 
löe_íd_poöt
.
u
.
SDH
.
°m1
 = 
sdh_löe_∑øms
->stm1;

1494 
löe_íd_poöt
.
u
.
SDH
.
°m0
 = 
sdh_löe_∑øms
->stm0;

1495 
löe_íd_poöt
.
u
.
SDH
.
tug2
 = 
sdh_löe_∑øms
->tug2;

1496 
löe_íd_poöt
.
u
.
SDH
.
tu
 = 
sdh_löe_∑øms
->tu;

1500 
°©us
 = 
	`WPX_FRMR_CONNECTIONS_AddDr›LöeToSockëDñëe
(0, 
Êexmux_id
, &
löe_íd_poöt
, 
˛õ¡_p‹t_id
);

1501 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_CONNECTIONS_AddDr›LöeToSockëDñëe", 
°©us
, 
__LINE__
);

1504 
°©us
 = 
	`WPX_FRMR_SONET_SDH_DñëeFacûôy
(0, 
Êexmux_id
, &
löe_íd_poöt
);

1505 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_DñëeFacûôy", 
°©us
, 
__LINE__
);

1508 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_DñëeFacûôy
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
);

1509 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_DñëeFacûôy", 
°©us
, 
__LINE__
);

1512 
	}
}

1514 
WP_S32
 
	$WTI_FÀxmuxClõ¡P‹tIndexGë
(
WP_U32
 
u„_löe_ödex
, 
WUFE_löe_å™sf_ty≥
 
å™s„r_ty≥
)

1516 
å™s„r_ty≥
)

1518 (
WUFE_SONET_TYPE_E1
):

1519 (
WUFE_SDH_TYPE_E1
):

1521 
WP_U32
 
•e_num
 = (
u„_löe_ödex
 / 28);

1522 
WP_U32
 
tug2_num
 = ((
u„_löe_ödex
 % 28) / 3);

1523 
WP_U32
 
off£t_wôhö_tug2
 = ((
u„_löe_ödex
 % 28) % 3);

1526  ((
•e_num
*28Ë+ (
tug2_num
*4Ë+ 
off£t_wôhö_tug2
);

1528 (
WUFE_SONET_TYPE_T1
):

1529 (
WUFE_SDH_TYPE_T1
):

1531  
u„_löe_ödex
;

1534 
	`¥ötf
("Unsuµ‹ãdÅøns„r_ty≥ %d\n", 
å™s„r_ty≥
);

1535 
	`exô
(-1);

1538 
	}
}

1540 
WP_S32
 
	$WTI_FÀxmuxLöeP‹tIndexGë
(
WP_U32
 
u„_löe_ödex
, WP_U32 
Êexmux_id
)

1542 
WP_U32
 
ªsu…
 = -1;

1543 i‡(
Êexmux_ªg
[
Êexmux_id
].
Êexmux_buûd_≥rs⁄Æôy
 !
WPX_UFE_FRAMER_BUILD_PERSONALITY_4_PLUS_4_OC3_OC12
 &&

1544 
Êexmux_ªg
[
Êexmux_id
].
Êexmux_buûd_≥rs⁄Æôy
 !
WPX_UFE_FRAMER_BUILD_PERSONALITY_1_PLUS_1_OC3_OC12
 &&

1545 
Êexmux_ªg
[
Êexmux_id
].
Êexmux_buûd_≥rs⁄Æôy
 !
WPX_UFE_FRAMER_BUILD_PERSONALITY_2_PLUS_2_OC3
 &&

1546 
Êexmux_ªg
[
Êexmux_id
].
Êexmux_buûd_≥rs⁄Æôy
 !
WPX_UFE_FRAMER_BUILD_PERSONALITY_4_PLUS_4_OC3
)

1547 
	`WTI_FÀxmuxTîmö©eOnEº‹
("Invalid flexmux_build_personality !", 0);

1551 i‡(
Êexmux_ªg
[
Êexmux_id
].
Êexmux_buûd_≥rs⁄Æôy
 =
WPX_UFE_FRAMER_BUILD_PERSONALITY_4_PLUS_4_OC3_OC12
)

1553 
ªsu…
 = (
u„_löe_ödex
 / 336);

1555 i‡(
ªsu…
 > 3)

1557 
ªsu…
 = -1;

1561 
ªsu…
 =Ñesult * 2;

1565 i‡((
Êexmux_ªg
[
Êexmux_id
].
Êexmux_buûd_≥rs⁄Æôy
 =
WPX_UFE_FRAMER_BUILD_PERSONALITY_1_PLUS_1_OC3_OC12
) ||

1566 (
Êexmux_ªg
[
Êexmux_id
].
Êexmux_buûd_≥rs⁄Æôy
 =
WPX_UFE_FRAMER_BUILD_PERSONALITY_2_PLUS_2_OC3
) ||

1567 (
Êexmux_ªg
[
Êexmux_id
].
Êexmux_buûd_≥rs⁄Æôy
 =
WPX_UFE_FRAMER_BUILD_PERSONALITY_4_PLUS_4_OC3
))

1570 i‡(
Êexmux_ªg
[
Êexmux_id
].
Êexmux_hw_c⁄fig
 =
WT_FLEXMUX_UFE_412_1_PORT_OC12
)

1572 
ªsu…
 = 0;

1575 i‡((
Êexmux_ªg
[
Êexmux_id
].
Êexmux_hw_c⁄fig
 =
WT_FLEXMUX_UFE_412_4_PORTS_OC3
) ||

1576 (
Êexmux_ªg
[
Êexmux_id
].
Êexmux_hw_c⁄fig
 =
WT_FLEXMUX_UFE_412_2_PORTS_OC3
))

1578 
ªsu…
 = (
u„_löe_ödex
 / 84);

1579 i‡(
ªsu…
 > 3)

1581 
ªsu…
 = -1;

1586  
ªsu…
;

1587 
	}
}

1589 
	$WTI_FÀxmuxDi•œyVîsi⁄AndC⁄fig
(
WP_U32
 
Êexmux_id
)

1591 
WP_U8
 
°©us
;

1592 
WP_U8
 
buûd
[128];

1594 
°©us
 = 
	`WPX_FRMR_DEV_GëBuûdPîs⁄Æôy
(
Êexmux_id
, 
buûd
);

1595 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_DEV_GëBuûdPîs⁄Æôy", 
°©us
, 
__LINE__
);

1596 
	`¥ötf
("FÀxmux Buûd Pîs⁄Æôy: %d\n", (
WP_U32
Ë
buûd
);

1597 
	}
}

1599 
WP_U8
 
	$WTI_FÀxmuxE«bÀLo›back
(
U8
 
Êexmux_id
, 
WP_U32
 
löe_p‹t_id
, WP_U32 
˛õ¡_p‹t_id
, 
WTI_Êexmux_lo›back_mode
 
lo›back_ty≥
)

1601 
WP_U8
 
°©us
 = 
WPX_UFE_FRAMER_OK
;

1603 
lo›back_ty≥
)

1605 
WT_FLEXMUX_NONE_LOOPBACK
:

1607 
WT_FLEXMUX_SHALLOW_LINE_LOOPBACK
:

1609 
°©us
 = (
WP_U8
Ë
	`WPX_FRMR_SONET_SDH_PORT_DIAG_LpbkE«bÀShÆlowLöe
(0, 
Êexmux_id
, 
löe_p‹t_id
);

1610 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_PORT_DIAG_LpbkE«bÀShÆlowLöe", 
°©us
, 
__LINE__
);

1614 
WT_FLEXMUX_DEEP_LINE_LOOPBACK
:

1616 
°©us
 = (
WP_U8
Ë
	`WPX_FRMR_SOCKET_PDH_DIAG_LpbkE«bÀDìpLöe
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
);

1617 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_DIAG_LpbkE«bÀDìpLöe", 
°©us
, 
__LINE__
);

1621 
WT_FLEXMUX_SHALLOW_SYSTEM_LOOPBACK
:

1623 
°©us
 = (
WP_U8
Ë
	`WPX_FRMR_SOCKET_PDH_DIAG_LpbkE«bÀShÆlowSy°em
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
);

1624 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_DIAG_LpbkE«bÀShÆlowSy°em", 
°©us
, 
__LINE__
);

1628 
WT_FLEXMUX_DEEP_SYSTEM_LOOPBACK
:

1630 
°©us
 = (
WP_U8
Ë
	`WPX_FRMR_SONET_SDH_PORT_DIAG_LpbkE«bÀDìpSy°em
(0, 
Êexmux_id
, 
löe_p‹t_id
);

1631 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_PORT_DIAG_LpbkE«bÀDìpSy°em", 
°©us
, 
__LINE__
);

1637 
	`¥ötf
("Unsuµ‹ãdÜo›back_ty≥ %d\n", 
lo›back_ty≥
);

1638 
	`exô
(-1);

1642  
°©us
;

1643 
	}
}

1645 
WP_U8
 
	$WTI_FÀxmuxDißbÀLo›back
(
U8
 
Êexmux_id
, 
WP_U32
 
löe_p‹t_id
, WP_U32 
˛õ¡_p‹t_id
, 
WTI_Êexmux_lo›back_mode
 
lo›back_ty≥
)

1647 
WP_U8
 
°©us
 = 
WPX_UFE_FRAMER_OK
;

1649 
lo›back_ty≥
)

1651 
WT_FLEXMUX_NONE_LOOPBACK
:

1653 
WT_FLEXMUX_SHALLOW_LINE_LOOPBACK
:

1655 
°©us
 = (
WP_U8
Ë
	`WPX_FRMR_SONET_SDH_PORT_DIAG_LpbkDißbÀShÆlowLöe
(0, 
Êexmux_id
, 
löe_p‹t_id
);

1656 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_PORT_DIAG_LpbkDißbÀShÆlowLöe", 
°©us
, 
__LINE__
);

1660 
WT_FLEXMUX_DEEP_LINE_LOOPBACK
:

1662 
°©us
 = (
WP_U8
Ë
	`WPX_FRMR_SOCKET_PDH_DIAG_LpbkDißbÀDìpLöe
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
);

1663 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_DIAG_LpbkDißbÀDìpLöe", 
°©us
, 
__LINE__
);

1667 
WT_FLEXMUX_SHALLOW_SYSTEM_LOOPBACK
:

1669 
°©us
 = (
WP_U8
Ë
	`WPX_FRMR_SOCKET_PDH_DIAG_LpbkDißbÀShÆlowSy°em
(0,
Êexmux_id
, 
˛õ¡_p‹t_id
);

1670 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_DIAG_LpbkDißbÀShÆlowSy°em", 
°©us
, 
__LINE__
);

1674 
WT_FLEXMUX_DEEP_SYSTEM_LOOPBACK
:

1676 
°©us
 = (
WP_U8
Ë
	`WPX_FRMR_SONET_SDH_PORT_DIAG_LpbkDißbÀDìpSy°em
(0, 
Êexmux_id
, 
löe_p‹t_id
);

1677 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_PORT_DIAG_LpbkDißbÀDìpSy°em", 
°©us
, 
__LINE__
);

1683 
	`¥ötf
("Unsuµ‹ãdÜo›back_ty≥ %d\n", 
lo›back_ty≥
);

1684 
	`exô
(-1);

1687  
°©us
;

1688 
	}
}

1690 
WP_U8
 
	$WTI_FÀxmuxGëLo›backSèã
(
U8
 
Êexmux_id
, 
WP_U32
 
löe_p‹t_id
, WP_U32 
˛õ¡_p‹t_id
, 
WTI_Êexmux_lo›back_mode
 
lo›back_ty≥
)

1692 
WP_U8
 
°©us
 = 
WPX_UFE_FRAMER_OK
, 
lo›back_íabÀd
 = 0;

1694 
lo›back_ty≥
)

1696 
WT_FLEXMUX_NONE_LOOPBACK
:

1698 
WT_FLEXMUX_SHALLOW_LINE_LOOPBACK
:

1700 
°©us
 = (
WP_U8
Ë
	`WPX_FRMR_SONET_SDH_PORT_DIAG_LpbkGëShÆlowLöeSèã
(0, 
löe_p‹t_id
, &
lo›back_íabÀd
 );

1701 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_PORT_DIAG_LpbkGëShÆlowLöeSèã", 
°©us
, 
__LINE__
);

1702 i‡(
lo›back_íabÀd
)

1704 
	`¥ötf
("SHALLOW_LINE");

1709 
WT_FLEXMUX_DEEP_LINE_LOOPBACK
:

1711 
°©us
 = (
WP_U8
Ë
	`WPX_FRMR_SOCKET_PDH_DIAG_LpbkGëDìpLöeSèã
(0,
˛õ¡_p‹t_id
, &
lo›back_íabÀd
);

1712 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_DIAG_LpbkGëDìpLöeSèã", 
°©us
, 
__LINE__
);

1713 i‡(
lo›back_íabÀd
)

1715 
	`¥ötf
("DEEP_LINE");

1720 
WT_FLEXMUX_SHALLOW_SYSTEM_LOOPBACK
:

1722 
°©us
 = (
WP_U8
Ë
	`WPX_FRMR_SOCKET_PDH_DIAG_LpbkGëShÆlowSy°emSèã
(0,
˛õ¡_p‹t_id
,&
lo›back_íabÀd
);

1723 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_DIAG_LpbkGëShÆlowSy°emSèã", 
°©us
, 
__LINE__
);

1724 i‡(
lo›back_íabÀd
)

1726 
	`¥ötf
("SHALLOW_SYSTEM");

1731 
WT_FLEXMUX_DEEP_SYSTEM_LOOPBACK
:

1733 
°©us
 = (
WP_U8
Ë
	`WPX_FRMR_SONET_SDH_PORT_DIAG_LpbkGëDìpSy°emSèã
(0, 
löe_p‹t_id
, &
lo›back_íabÀd
);

1734 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_PORT_DIAG_LpbkGëDìpSy°emSèã", 
°©us
, 
__LINE__
);

1735 i‡(
lo›back_íabÀd
)

1737 
	`¥ötf
("DEEP_SYSTEM");

1744 
	`¥ötf
("Unsuµ‹ãdÜo›back_ty≥ %d\n", 
lo›back_ty≥
);

1745 
	`exô
(-1);

1748 i‡(
lo›back_íabÀd
)

1750 
	`¥ötf
(" Loopback isÉnabled\n");

1754 
	`¥ötf
(" Loopback isÇotÉnabled\n");

1757  
°©us
;

1758 
	}
}

1760 
WP_U8
 
	$WTI_FÀxmuxCheckPrbsResu…
(
U8
 
Êexmux_id
, 
WP_U32
 
˛õ¡_p‹t_id
, 
WUFE_un_‰amed
 
‰amög_mode
)

1762 
WP_U8
 
¥bs_°©e
 = 
WPX_UFE_FRAMER_PRBS_STATE_IDLE
;

1763 
WP_U8
 
u„_‰amî_°©us
;

1764 
WP_U8
 
°©us
 = 
WPX_UFE_FRAMER_OK
;

1767 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_DIAG_EgªssGíPrbs_Së
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_PRBS_23
);

1768 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_DIAG_EgªssGíPrbs_Së", 
°©us
, 
__LINE__
);

1771 if(
‰amög_mode
 =
WUFE_UNFRAMED
)

1774 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_DIAG_EgªssTîmPrbsSë
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_PRBS_23
);

1775 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_DIAG_EgªssTîmPrbsSë", 
°©us
, 
__LINE__
);

1780 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_DIAG_IngªssTîmPrbsSë
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_PRBS_23
);

1781 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_DIAG_IngªssTîmPrbsSë", 
°©us
, 
__LINE__
);

1784 
	`WPL_Dñay
(1000000);

1786 if(
‰amög_mode
 =
WUFE_UNFRAMED
)

1788 
u„_‰amî_°©us
 = 
	`WPX_FRMR_STATUS_SOCKET_PDH_DIAG_EgªssPrbsGëSèã
(0, 
˛õ¡_p‹t_id
 , &
¥bs_°©e
);

1789 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_STATUS_SOCKET_PDH_DIAG_EgªssPrbsGëSèã", 
u„_‰amî_°©us
, 
__LINE__
);

1790 
¥bs_ªsu…
[
˛õ¡_p‹t_id
] = 
¥bs_°©e
;

1794 
u„_‰amî_°©us
 = 
	`WPX_FRMR_STATUS_SOCKET_PDH_DIAG_IngªssPrbsGëSèã
(0, 
˛õ¡_p‹t_id
 , &
¥bs_°©e
);

1795 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_STATUS_SOCKET_PDH_DIAG_IngªssPrbsGëSèã", 
u„_‰amî_°©us
, 
__LINE__
);

1796 
¥bs_ªsu…
[
˛õ¡_p‹t_id
] = 
¥bs_°©e
;

1801 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_DIAG_EgªssGíPrbs_Së
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_PRBS_DISABLED
);

1802 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_DIAG_EgªssGíPrbs_Së", 
°©us
, 
__LINE__
);

1804 if(
‰amög_mode
 =
WUFE_UNFRAMED
)

1807 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_DIAG_EgªssTîmPrbsSë
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_PRBS_DISABLED
);

1808 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_DIAG_EgªssTîmPrbsSë", 
°©us
, 
__LINE__
);

1813 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_DIAG_IngªssTîmPrbsSë
(0, 
Êexmux_id
, 
˛õ¡_p‹t_id
, 
WPX_UFE_FRAMER_PRBS_DISABLED
);

1814 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_DIAG_IngªssTîmPrbsSë", 
°©us
, 
__LINE__
);

1818 i‡(
¥bs_ªsu…
[
˛õ¡_p‹t_id
] =
WPX_UFE_FRAMER_PRBS_STATE_CLEAR
)

1824 
¥bs_ªsu…
[
˛õ¡_p‹t_id
])

1826 
WPX_UFE_FRAMER_PRBS_STATE_IDLE
: 
	`¥ötf
("PRBS i†dißbÀd f‹ clõ¡_p‹t_id %d\n",
˛õ¡_p‹t_id
);

1828 
WPX_UFE_FRAMER_PRBS_STATE_ERRORS
: 
	`¥ötf
("PRBS d©®check faûed f‹ clõ¡_p‹t_id %d\n",
˛õ¡_p‹t_id
);

1830 
WPX_UFE_FRAMER_PRBS_STATE_INACTIVE
: 
	`¥ötf
("PRBS i†öa˘ivêf‹ clõ¡_p‹t_id %d\n",
˛õ¡_p‹t_id
);

1835 
	}
}

1837 
	$WTI_FÀxmuxF‹˚A
(
WP_U32
 
löe_p‹t_id
)

1839 
WP_U8
 
f‹˚_side
 = 2, 
°©us
 = 
WPX_UFE_FRAMER_OK
;

1840 
WP_time
 
bef‹e
 ,
a·î
;

1841 
WP_U32
 
£c
, 
u£c
;

1843 
	`WPL_Time°ampGë
(&
bef‹e
);

1844 
°©us
 = 
	`WPX_FRMR_SONET_SDH_PORT_F‹˚A
(0, 0, 
löe_p‹t_id
);

1845 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_PORT_F‹˚A", 
°©us
, 
__LINE__
);

1846 
°©us
 =
	`WPX_FRMR_SONET_SDH_PORT_GëF‹˚Sèã
(0, 
löe_p‹t_id
, &
f‹˚_side
);

1847 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_PORT_GëF‹˚Sèã", 
°©us
, 
__LINE__
);

1848 
	`WPL_Time°ampGë
(&
a·î
);

1849 
£c
 = (
a·î
.£c)-(
bef‹e
.sec);

1850 
u£c
 = (
a·î
.u£c)-(
bef‹e
.usec);

1851 i‡(
u£c
<0)

1853 
£c
 = sec - 1;

1854 
u£c
 = usec + 1000000;

1856 
	`¥ötf
("I¿löê%d f‹cögÖ‹àAÅook %d.%06d sec⁄ds\n",
löe_p‹t_id
,
£c
,
u£c
);

1857 i‡(
°©us
 =
WPX_UFE_FRAMER_OK
)

1859 i‡(
f‹˚_side
 =
WPX_UFE_FRAMER_PROTECTION_FORCE_A
)

1861 
	`¥ötf
("I¿löê%dÅøffi¯i†ªcõved fromÖ‹àA\n",
löe_p‹t_id
);

1863 i‡(
f‹˚_side
 =
WPX_UFE_FRAMER_PROTECTION_FORCE_B
)

1865 
	`¥ötf
("I¿löê%dÅøffi¯i†ªcõved fromÖ‹àB\n",
löe_p‹t_id
);

1868 
	}
}

1870 
	$WTI_FÀxmuxF‹˚B
(
WP_U32
 
löe_p‹t_id
)

1872 
WP_U8
 
f‹˚_side
 = 2, 
°©us
 = 
WPX_UFE_FRAMER_OK
;

1873 
WP_time
 
bef‹e
 ,
a·î
;

1874 
WP_U32
 
£c
, 
u£c
;

1876 
	`WPL_Time°ampGë
(&
bef‹e
);

1877 
°©us
 =
	`WPX_FRMR_SONET_SDH_PORT_F‹˚B
(0, 0, 
löe_p‹t_id
);

1878 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_PORT_F‹˚B", 
°©us
, 
__LINE__
);

1879 
°©us
 =
	`WPX_FRMR_SONET_SDH_PORT_GëF‹˚Sèã
(0, 
löe_p‹t_id
, &
f‹˚_side
);

1880 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SONET_SDH_PORT_GëF‹˚Sèã", 
°©us
, 
__LINE__
);

1881 
	`WPL_Time°ampGë
(&
a·î
);

1882 
£c
 = (
a·î
.£c)-(
bef‹e
.sec);

1883 
u£c
 = (
a·î
.u£c)-(
bef‹e
.usec);

1884 i‡(
u£c
<0)

1886 
£c
 = sec - 1;

1887 
u£c
 = usec + 1000000;

1889 
	`¥ötf
("I¿löê%d f‹cögÖ‹àBÅook %d.%06d sec⁄ds\n",
löe_p‹t_id
,
£c
,
u£c
);

1890 i‡(
°©us
 =
WPX_UFE_FRAMER_OK
)

1892 i‡(
f‹˚_side
 =
WPX_UFE_FRAMER_PROTECTION_FORCE_A
)

1894 
	`¥ötf
("I¿löê%dÅøffi¯i†ªcõved fromÖ‹àA\n",
löe_p‹t_id
);

1896 i‡(
f‹˚_side
 =
WPX_UFE_FRAMER_PROTECTION_FORCE_B
)

1898 
	`¥ötf
("I¿löê%dÅøffi¯i†ªcõved fromÖ‹àB\n",
löe_p‹t_id
);

1902 
	}
}

1906 
	$WTI_FÀxmuxPDHOuçutClockSë
(
WP_U8
 
ouçut_£À˘
, 
WP_U32
 
löe_ödex
,
WUFE_löe_å™sf_ty≥
 
å™s„r_ty≥
,WP_U32 
˛ock_øã
)

1908 
WP_U32
 
˛õ¡_p‹t_id
=0;

1909 
WP_U8
 
°©us
 = 
WPX_UFE_FRAMER_OK
;

1911 
˛õ¡_p‹t_id
 = 
	`WTI_FÀxmuxClõ¡P‹tIndexGë
(
löe_ödex
,
å™s„r_ty≥
);

1914 
°©us
 = 
	`WPX_FRMR_SOCKET_PDH_DIAG_DRV_RecClkSë
(0,0,
ouçut_£À˘
,
˛õ¡_p‹t_id
,
˛ock_øã
);

1915 
	`WTI_FÀxmuxCheckSètus
("WPX_FRMR_SOCKET_PDH_DIAG_DRV_RecClkSë", 
°©us
, 
__LINE__
);

1917 #i‡
WTI_FLEXMUX_DBG_MODE


1918 
	`¥ötf
("Sëtög PDH Rx clock %dÅÿlöê%dáà%dKhz\n",
ouçut_£À˘
,
˛õ¡_p‹t_id
,
˛ock_øã
);

1921 
	}
}

	@wti_flexmux_util.h

17 #i‚de‡
WTI_FLEXMUX_UTIL_H


18 
	#WTI_FLEXMUX_UTIL_H


	)

20 #i‚de‡
_OMIINO_FRAMER_API_PUBLIC_


23 
	~<wu„_ty≥s.h
>

24 
	~<wu„_îr‹s.h
>

25 
	~<wu„i_u£r_c⁄fig.h
>

26 
	~<wu„_u£r_c⁄fig.h
>

27 
	~<wu„_u„.h
>

28 
	~<wpx_u„/wpx_‰mr/Êexmux/WO_FRMR_API_public.h
>

31 
WP_U8
 
	g¥bs_ªsu…
[8092];

32 
	#WTI_MAX_FLEXMUX_DEVICES_SUPPORTED_BY_DRIVER
 4

	)

33 
	#WTI_FLEXMUX_NUM_DEVICES
 1

	)

34 
	#WTI_MAX_LINE_PORTS_PER_FLEXMUX_DEVICE
 16

	)

35 
	#WTI_FLEXMUX_DBG_MODE
 0

	)

37 
	#WTI_FLEXMUX_ENABLE_PERFORMANCE_MONITORING
 0

	)

39 #i‡
WTI_CESOP_CLOCK_RECOVERY_ENABLE


40 
	#WTI_FLEXMUX_UFE_FRAMER_WUFE_SDH_TYPE_VC
 
WPX_UFE_FRAMER_WUFE_SDH_TYPE_VC3


	)

42 
	#WTI_FLEXMUX_UFE_FRAMER_WUFE_SDH_TYPE_VC
 
WPX_UFE_FRAMER_WUFE_SDH_TYPE_VC4


	)

44 #ifde‡
WTI_UFE_4_1_2


45 
	#WTI_FLEXMUX_PHYSICAL_CONF
 
WT_FLEXMUX_UFE_412_1_PORT_OC12


	)

47 
	#WTI_FLEXMUX_PHYSICAL_CONF
 
WT_FLEXMUX_UFE_448_4_PORTS_OC12_PLUS_4_PROTECTION


	)

50 
	#WTI_FLEXMUX_CLOCK_REC_GAIN_FAST
 
MAX_TIMESTAMP_GAIN


	)

51 
	#WTI_FLEXMUX_CLOCK_REC_GAIN_SLOW
 0x000001FF

	)

53 
	#WTI_FLEXMUX_RECV_PDH_LINE_CLK_0
 0

	)

54 
	#WTI_FLEXMUX_RECV_PDH_LINE_CLK_1
 1

	)

57 
WP_U8
 
	m°m4
;

58 
WP_U8
 
	m°m1
;

59 
WP_U8
 
	m°m0
;

60 
WP_U8
 
	mtug2
;

61 
WP_U8
 
	mtu
;

62 
WUFE_löe_å™sf_ty≥
 
	må™s„r_ty≥
;

63 
WUFE_un_‰amed
 
	m‰amed
;

64 
WUFE_ˇs_íabÀ
 
	mˇs_íabÀ
;

65 
WUFE_löe_lo›back_ty≥
 
	mlo›back
;

66 
WUFE_löe_˛ock_ªc_∑øms
 *
	m˛ock_ªc_löe_∑øms
;

67 
WP_U32
 
	m˛ock_mode
;

68 } 
	tWT_u„_löe_sdh_∑øms
;

72 
WP_U8
 
	m°s12
;

73 
WP_U8
 
	m°s3
;

74 
WP_U8
 
	m°s1
;

75 
WP_U8
 
	mvt_group
;

76 
WP_U8
 
	mvt
;

77 
WUFE_löe_å™sf_ty≥
 
	må™s„r_ty≥
;

78 
WUFE_un_‰amed
 
	m‰amed
;

79 
WUFE_ˇs_íabÀ
 
	mˇs_íabÀ
;

80 
WUFE_löe_lo›back_ty≥
 
	mlo›back
;

81 
WUFE_löe_˛ock_ªc_∑øms
 *
	m˛ock_ªc_löe_∑øms
;

82 } 
	tWT_u„_löe_s⁄ë_∑øms
;

86 
	mWT_FLEXMUX_UFE_412_1_PORT_OC12
,

87 
	mWT_FLEXMUX_UFE_412_2_PORTS_OC3
,

88 
	mWT_FLEXMUX_UFE_412_4_PORTS_OC3
,

89 
	mWT_FLEXMUX_UFE_412_1_PORT_OC12_PLUS_1_PROTECTION
,

90 
	mWT_FLEXMUX_UFE_412_4_PORTS_OC3_PLUS_4_PROTECTION
,

91 
	mWT_FLEXMUX_UFE_448_4_PORTS_OC12
,

92 
	mWT_FLEXMUX_UFE_448_16_PORTS_OC3
,

93 
	mWT_FLEXMUX_UFE_448_4_PORTS_OC12_PLUS_4_PROTECTION
,

94 
	mWT_FLEXMUX_UFE_448_8_PORTS_OC3_PLUS_8_PROTECTION


95 }
	tWTI_Êexmux_physiˇl_c⁄f
;

99 
	mWT_FLEXMUX_NONE_LOOPBACK
,

100 
	mWT_FLEXMUX_SHALLOW_LINE_LOOPBACK
,

101 
	mWT_FLEXMUX_DEEP_LINE_LOOPBACK
,

102 
	mWT_FLEXMUX_SHALLOW_SYSTEM_LOOPBACK
,

103 
	mWT_FLEXMUX_DEEP_SYSTEM_LOOPBACK
,

104 }
	tWTI_Êexmux_lo›back_mode
;

108 
	mWT_FLEXMUX_LINE_PORT_OC3
,

109 
	mWT_FLEXMUX_LINE_PORT_OC12
,

110 
	mWT_FLEXMUX_LINE_PORT_STM1
,

111 
	mWT_FLEXMUX_LINE_PORT_STM4


112 }
	tWTI_Êexmux_löe_p‹t_mode
;

116 
	mWT_FLEXMUX_CONNECTION_TYPE_E1_UNFRAMED
,

117 
	mWT_FLEXMUX_CONNECTION_TYPE_E1_FRAMED
,

118 
	mWT_FLEXMUX_CONNECTION_TYPE_E1_FRAMED_CAS
,

119 
	mWT_FLEXMUX_CONNECTION_TYPE_T1_UNFRAMED
,

120 
	mWT_FLEXMUX_CONNECTION_TYPE_T1_FRAMED
,

121 
	mWT_FLEXMUX_CONNECTION_TYPE_T1_FRAMED_CAS
,

122 
	mWT_FLEXMUX_CONNECTION_TYPE_E3
,

123 
	mWT_FLEXMUX_CONNECTION_TYPE_DS3
,

124 
	mWT_FLEXMUX_CONNECTION_TYPE_VC11
,

125 
	mWT_FLEXMUX_CONNECTION_TYPE_VC12
,

126 
	mWT_FLEXMUX_CONNECTION_TYPE_VC3
,

127 
	mWT_FLEXMUX_CONNECTION_TYPE_VC4
,

128 
	mWT_FLEXMUX_CONNECTION_TYPE_VC4_4C
,

129 
	mWT_FLEXMUX_CONNECTION_TYPE_VT1_5
,

130 
	mWT_FLEXMUX_CONNECTION_TYPE_VT2
,

131 
	mWT_FLEXMUX_CONNECTION_TYPE_STS1_SPE
,

132 
	mWT_FLEXMUX_CONNECTION_TYPE_STS3
,

133 
	mWT_FLEXMUX_CONNECTION_TYPE_STS12
,

134 
	mWT_FLEXMUX_CONNECTION_TYPE_VCAT
,

135 }
	tWTI_Êexmux_c⁄√˘i⁄_ty≥
;

139 
WP_U8
 
	mÊexmux_id
;

140 
WTI_Êexmux_physiˇl_c⁄f
 
	mÊexmux_hw_c⁄fig
;

141 
WP_U8
 
	mÊexmux_buûd_≥rs⁄Æôy
;

142 
WP_U8
 
	mÊexmux_mode
;

143 
WTI_Êexmux_lo›back_mode
 
	mÊexmux_lo›back_mode
;

144 } 
	tWTI_FÀxmux_globÆ_£tup
;

148 
WP_boﬁón
 
	mis_öôülized
;

149 } 
	tWTI_FÀxmux_c⁄√˘i⁄_ªgi°ry
;

153 
WP_boﬁón
 
	mis_öôülized
;

154 
WP_U8
 
	mlöe_p‹t_mode
;

155 } 
	tWTI_FÀxmux_löe_p‹t_ªgi°ry
;

159 
WP_boﬁón
 
	mis_öôülized
;

160 
WTI_Êexmux_physiˇl_c⁄f
 
	mÊexmux_hw_c⁄fig
;

161 
WP_U8
 
	mÊexmux_buûd_≥rs⁄Æôy
;

162 
WP_U8
 
	mÊexmux_mode
;

163 
WP_U8
 
	mmax_löe_p‹ts
;

164 
WTI_FÀxmux_löe_p‹t_ªgi°ry
 
	mlöe_p‹ts_ªg
[
WTI_MAX_LINE_PORTS_PER_FLEXMUX_DEVICE
];

165 } 
	tWTI_FÀxmux_devi˚_ªgi°ry
;

167 
WTI_FÀxmux_devi˚_ªgi°ry
 
	gÊexmux_ªg
[
WTI_MAX_FLEXMUX_DEVICES_SUPPORTED_BY_DRIVER
];

169 
WP_S32
 
WTI_FÀxmuxInô
(
WP_U32
 
upi_ödex
,

170 
WP_U8
 
Êexmux_id
,

171 
WTI_Êexmux_physiˇl_c⁄f
 
Êexmux_hw_c⁄fig
,

172 
WP_U8
 
Êexmux_mode
,

173 
WPX_UFE_FRAMER_WUFE_löe_å™sf_ty≥
 
vc_3_4
,

174 
WTI_FÀxmux_globÆ_£tup
 *
Êexmux_cfg
);

176 
WP_S32
 
WTI_FÀxmuxLöeP‹tC⁄fig
(
WP_U8
 
Êexmux_id
,

177 
WP_U8
 
löe_p‹t_id
,

178 
WTI_Êexmux_löe_p‹t_mode
 
löe_p‹t_cfg
);

180 
WP_S32
 
WTI_FÀxmuxC⁄√˘i⁄Cª©e
(
WP_U8
 
Êexmux_id
,

181 
WP_U8
 
löe_p‹t_id
,

182 
WP_U32
 
˛õ¡_p‹t_id
,

183 
WTI_Êexmux_c⁄√˘i⁄_ty≥
 
ty≥
,

184 *
u„_löe_∑øms
);

186 
WP_S32
 
WTI_FÀxmuxC⁄√˘i⁄Dñëe
(
WP_U8
 
Êexmux_id
,

187 
WP_U32
 
˛õ¡_p‹t_id
,

188 *
u„_löe_∑øms
);

190 
WP_S32
 
WTI_FÀxmuxClõ¡P‹tIndexGë
(
WP_U32
 
u„_löe_ödex
, 
WUFE_löe_å™sf_ty≥
 
å™s„r_ty≥
);

192 
WP_S32
 
WTI_FÀxmuxLöeP‹tIndexGë
(
WP_U32
 
u„_löe_ödex
,WP_U32 
Êexmux_id
);

194 
WTI_FÀxmuxDi•œyVîsi⁄AndC⁄fig
(
WP_U32
 
Êexmux_id
);

196 
WP_U8
 
WTI_FÀxmuxE«bÀLo›back
(
U8
 
Êexmux_id
, 
WP_U32
 
löe_p‹t_id
, WP_U32 
˛õ¡_p‹t_id
, 
WTI_Êexmux_lo›back_mode
 
lo›back_ty≥
);

197 
WP_U8
 
WTI_FÀxmuxDißbÀLo›back
(
U8
 
Êexmux_id
, 
WP_U32
 
löe_p‹t_id
, WP_U32 
˛õ¡_p‹t_id
, 
WTI_Êexmux_lo›back_mode
 
lo›back_ty≥
);

198 
WP_U8
 
WTI_FÀxmuxGëLo›backSèã
(
U8
 
Êexmux_id
, 
WP_U32
 
löe_p‹t_id
, WP_U32 
˛õ¡_p‹t_id
, 
WTI_Êexmux_lo›back_mode
 
lo›back_ty≥
);

199 
WP_U8
 
WTI_FÀxmuxCheckPrbsResu…
(
U8
 
Êexmux_id
, 
WP_U32
 
˛õ¡_p‹t_id
, 
WUFE_un_‰amed
 
‰amög_mode
);

200 
WTI_FÀxmuxPDHOuçutClockSë
(
WP_U8
 
ouçut_£À˘
, 
WP_U32
 
löe_ödex
,
WUFE_löe_å™sf_ty≥
 
å™s„r_ty≥
,WP_U32 
˛ock_øã
);

	@xml_operation.c

5 
	~<°dlib.h
>

6 
	~<mÆloc.h
>

7 
	~<°dio.h
>

8 
	~"ex∑t.h
"

9 
	~<¨∑/öë.h
>

10 
	~"≈_comm⁄.h
"

11 
	~"wddi_log.h
"

12 
	~<as£π.h
>

13 
	~<glob.h
>

15 
g_logLevñ
;

17 #i‚de‡
IFNAMSIZ


18 
	#IFNAMSIZ
 16

	)

21 #i‚de‡
TRUE


22 
	#TRUE
 1

	)

25 #i‚de‡
FALSE


26 
	#FALSE
 0

	)

29 
	#CLI_ASSERT
(
x
Ë\

	)

31 i‡(
	gx
<0) \

33 
¥ötf
("\n%s", 
˛i_îr‹_°r
); \

34 
¥ötf
(("CLIássertÉrrorát File=%s,Line=%d\n", \

35 
__FILE__
,
__LINE__
)); \

36 
exô
(1); \

39 #i‚de‡
TYPE_DEF


40 
	#TYPE_DEF


	)

41 
	tu8
;

42 
	tu16
;

43 
	tu32
;

44 
	tu64
;

47 
	#ARGLIST_BUFLEN
 50

	)

48 
	#ARGV_MAX_CHARACTERS
 255

49 
	#STRING_LIST_MAX
 8192

	)

52 
	#PROGNAME_POS
 0

	)

53 
	#CLASS_POS
 1

	)

54 
	#METHOD_POS
 2

	)

55 
	#ATTRIBUTE_POS
 3

	)

57 
	#CLI_OPTION_U64
 4

	)

58 
	#CLI_OPTION_STRING
 5

	)

59 
	#CLI_OPTION_NAME_ONLY
 6

	)

60 
	#CLI_OPTION_ENUM
 7

	)

61 
	#CLI_OPTION_IPV4_ADDRESS
 8

	)

62 
	#CLI_OPTION_FLOAT
 9

	)

63 
	#CLI_OPTION_INT_LIST
 10

	)

64 
	#CLI_OPTION_IP_ENDPOINT_ADDRESS
 11

	)

65 
	#CLI_OPTION_STRING_LIST
 12

	)

66 
	#CLI_OPTION_BITMAP
 13

	)

67 
	#CLI_OPTION_S64
 14

	)

68 
	#CLI_OPTION_DNS_NAME
 15

	)

70 
	#CLI_OPTION_CALLBACK
 50

	)

73 
	#METHOD_ACCESSIBLE
 1

	)

74 
	#METHOD_NOT_ACCESSIBLE
 0

	)

76 
	#XML_PARSER_BUFFER_SIZE
 8192

	)

77 
	#IFNAME_MAX_LENGTH
 256

	)

78 
	#IP_ADDRESS_MAX_LENGTH
 12+3+1+2

	)

83 
	g_ex∑t_d©a


85 
	göside_˛ass
;

86 
	göside_©åibuã
;

87 
	g¨gc_loˇl
;

88 ** 
	g¨gv_loˇl
;

89 
XML_P¨£r
 
	g∑r£r
;

90 
STRU_SET_INITAIL_CONFIG
 *
	g≈_c⁄figuª_±r
;

91 } 
	tex∑t_d©a_t
;

94 
u16
 
	tn£i_t
;

95 
u16
 
	tgroupid_t
;

96 
u16
 
	tnsvci_t
;

97 
u16
 
	tbvci_t
;

98 
u32
 
	tƒi_t
;

99 
u32
 
	tudp_p‹t_t
;

100 
u32
 
	tù_addªss_t
;

104 c⁄° * 
	g«me
;

105 c⁄° * 
	gexã∫Æ_«me
;

106 } 
	t˛i_íum_ö°™˚_t
;

107 
	#END_OF_ENUM_INSTANCE
 {
NULL
,NULL}

	)

109 
	g_˛i_©åibuã_t


111 c⁄° * 
	g«me
;

112 
	gty≥
;

113 
	gvÆue
[256];

114 
u64
 
	gmö
;

115 
u64
 
	gmax
;

116 * 
	gdeÁu…_vÆue
;

117 
˛i_íum_ö°™˚_t
* 
	gli°_of_íums
;

118 (*
	gcom∂ëi⁄_h™dÀr
)(
_˛i_©åibuã_t
 *
	g¨gli°
);

119 * 
	gdes¸ùti⁄
;

120 } 
	t˛i_©åibuã_t
;

121 
	#EMPTY_CLI_ATTRIBUTE_VALUE
 ""

	)

122 
	#END_OF_CLI_ATTRIBUTE
 {
NULL
,0,
EMPTY_CLI_ATTRIBUTE_VALUE
,0,0,NULL,NULL,NULL,NULL}

	)

126 
	#SPP_MAX_STM1_PORT_NUM
 2

	)

127 
	#SPP_MAX_TRUNK_NUM
 63

	)

128 
	#SPP_MAX_GROUP_NUM
 32

	)

130 
	#SPP_MAX_ROUTE_NUM
 64

	)

132 
	gSTRU_E1_GROUP_INFO_TAG


134 
u8
 
	g¸c_ty≥
;

136 
u16
 
	gmax_‰ame_size
;

137 
u8
 
	ggroupVÆid
;

138 
u32
 
	g¶Ÿ_£À˘i⁄
;

140 }
	tSTRU_E1_GROUP_INFO
;

141 
	gSTRU_E1_TRUNK_INFO_TAG


143 
u8
 
	gåunkVÆid
;

144 
STRU_E1_GROUP_INFO
 
	ggroup_öfo
[
SPP_MAX_GROUP_NUM
];

145 
u32
 
	g˛ock_mode
;

147 }
	tSTRU_E1_TRUNK_INFO
;

149 
	gSTRU_STM1_CFG_INFO_TAG


151 
u8
 
	g°m1VÆid
;

152 
STRU_E1_TRUNK_INFO
 
	gåunk_öfo
[
SPP_MAX_TRUNK_NUM
];

154 
u32
 
	gE1T1ty≥
;

155 
u32
 
	gO±_Mode
;

156 }
	tSTRU_STM1_CFG_INFO
;

159 
	gSTRU_ROUTE_INFO_TAG


161 
u32
 
	gIpD°
;

162 
u32
 
	gG©ewayIP
;

163 }
	tSTRU_ROUTE_INFO
;

165 
	gSTRU_SET_INITAIL_CONFIG_TAG


167 
u32
 
	gVœnFœg
;

168 
u32
 
	gVœnTag
;

169 
u32
 
	gO±î©eMode
;

170 
u8
 
	gifMAC§c
[6];

171 
u32
 
	gifI∑ddr
;

172 
u32
 
	gifIpNëMask
;

173 
u32
 
	g°m1_num
;

174 
u32
 
	gNRI_bôLí
;

175 
u32
 
	gP‹tPoﬁSize
;

176 
STRU_STM1_CFG_INFO
 
	g°ru_°m1_cfg_öfo
[
SPP_MAX_STM1_PORT_NUM
];

177 
STRU_ROUTE_INFO
 
	grouãInfo
[
SPP_MAX_ROUTE_NUM
];

178 }
	tSTRU_SET_INITAIL_CONFIG
;

183 (*
	tmëhod_h™dÀr_t
)(
	t˛i_©åibuã_t
 *
	t¨gli°
,
	tSTRU_SET_INITAIL_CONFIG
 *
	t≈_c⁄figuª_±r
);

186 c⁄° * 
«me
;

187 
ac˚ssibÀ
;

188 
mëhod_h™dÀr_t
 
mëhod
;

189 ** 
m™d©‹y_¨gumíts
;

190 ** 
›ti⁄Æ_¨gumíts
;

191 * 
des¸ùti⁄
;

192 
	}
} 
	t˛i_mëhod_t
;

193 
	#END_OF_CLI_METHOD
 {
NULL
,0,NULL,NULL,NULL,NULL}

	)

198 c⁄° * 
	g«me
;

199 
˛i_mëhod_t
 *
	gmëhods
;

200 
˛i_©åibuã_t
 *
	g©åibuãs
;

201 * 
	gdes¸ùti⁄
;

202 } 
	t˛i_˛ass_t
;

210 * 
	m√xt_of_ßme_˛ass
;

211 
a˘iv©i⁄_°©us_t
 
	ma˘iv©i⁄_°©us
;

214 
	m˛ass_«me
[
CLASS_NAME_SIZE
];

215 
	m«me
[
NAME_SIZE
];

216 
	mc⁄√˘ed_to
[
NAME_SIZE
];

217 } 
	tobje˘_comm⁄_t
;

219 
	g_e1_p‹t


221 
obje˘_comm⁄_t
 
	gcomm⁄_∑øms
;

222 
u32
 
	gnumbî
;

223 
	gch™√lized
[
ENUM_NAME_SIZE
];

224 
	glöe_code
[
ENUM_NAME_SIZE
];

225 
	g˛ock_mode
[
ENUM_NAME_SIZE
];

226 
	gˇbÀ_im≥d™˚
[
ENUM_NAME_SIZE
];

227 } 
	t˛i_e1_p‹t_t
;

228 
	g_t1_p‹t


230 
obje˘_comm⁄_t
 
	gcomm⁄_∑øms
;

231 
u32
 
	gnumbî
;

232 
	glöe_code
[
ENUM_NAME_SIZE
];

233 
	g˛ock_mode
[
ENUM_NAME_SIZE
];

234 
	gˇbÀ_ch¨a˘îi°ics
[
ENUM_NAME_SIZE
];

235 
	g‰amög
[
ENUM_NAME_SIZE
];

236 } 
	t˛i_t1_p‹t_t
;

238 
	g_˛i_‰ame_ªœy_‰a˘i⁄


240 
obje˘_comm⁄_t
 
	gcomm⁄_∑øms
;

241 
u32
 
	g‰a˘i⁄_id
;

242 
	gtime¶Ÿs
[
INT_LIST_SIZE
];

243 
	göãrÁ˚_ty≥
[
ENUM_NAME_SIZE
];

244 
	glmi_°™d¨d
[
ENUM_NAME_SIZE
];

245 
u32
 
	gmax_‰ame_size
;

246 
u32
 
	gt391
;

247 
u32
 
	gt392
;

248 
u32
 
	gn391
;

249 
u32
 
	gn392
;

250 
u32
 
	gn393
;

251 
	g¸c_ty≥
[
ENUM_NAME_SIZE
];

252 } 
	t˛i_‰ame_ªœy_‰a˘i⁄_t
;

254 
	g_˛i_‰ame_ªœy_pvc


256 
obje˘_comm⁄_t
 
	gcomm⁄_∑øms
;

257 
u32
 
	gdlci
;

258 
u32
 
	gcú
;

259 
u32
 
	gbc
;

260 
u32
 
	gbe
;

261 } 
	t˛i_‰ame_ªœy_pvc_t
;

263 
	g_˛i_nsvc_t


265 
obje˘_comm⁄_t
 
	gcomm⁄_∑øms
;

266 
n£i_t
 
	gn£i
;

267 
nsvci_t
 
	gnsvci
;

268 
	gdïloyed_©
[
HOST_NAME_MAX
];

269 } 
	t˛i_nsvc_t
;

274 
obje˘_comm⁄_t
 
	gcomm⁄_∑øms
;

275 
n£i_t
 
	gn£i
;

276 
	gsg¢_poﬁ_‹_sg¢_«me
[
SGSN_NAME_SIZE
];

277 
u32
 
	gp‹t_ba£
;

278 
u32
 
	gn£_sg¢_n£i_ba£
;

279 
u32
 
	ggíîÆ_debug_Àvñ
;

280 
u32
 
	gåaffic_debug_Àvñ
;

281 } 
	t˛i_sg¢_poﬁ_¥oxy_£rvi˚_t
;

286 
obje˘_comm⁄_t
 
	gcomm⁄_∑øms
;

287 
groupid_t
 
	ggroup_id
;

288 
	gn£i_bsc_li°
[
NSE_GROUP_LIST_LEN
];

289 
u32
 
	gp‹t_ba£
;

290 
u32
 
	gn£_sg¢_n£i_ba£
;

291 } 
	t˛i_n£_group_t
;

296 
obje˘_comm⁄_t
 
	gcomm⁄_∑øms
;

297 
ƒi_t
 
	gƒi
;

298 
	gˇ∑côy
;

299 
	gadmöi°øtive_°©e
[
ENUM_NAME_SIZE
];

300 
	gù_ídpoöt_addªss
[
IP_ENDPOINT_STRING_LENGTH
];

301 } 
	t˛i_sg¢_t
;

305 
obje˘_comm⁄_t
 
	gcomm⁄_∑øms
;

306 
u8
 
	gƒi_size
;

307 
	gsg¢_li°
[
SGSN_LIST_STRING_LENGTH
];

308 } 
	t˛i_sg¢_poﬁ_t
;

312 
obje˘_comm⁄_t
 
	gcomm⁄_∑øms
;

313 
u8
 
	gt_ns_ª£t
;

314 
u8
 
	gt_ns_block
;

315 
u8
 
	gt_ns_Æive
;

316 
u8
 
	gt_ns_ã°
;

317 
u8
 
	gt_¢s_¥ov
;

318 } 
	t˛i_√tw‹k_£rvi˚_t
;

322 
obje˘_comm⁄_t
 
	gcomm⁄_∑øms
;

323 
n£i_t
 
	gn£i
;

324 
u8
 
	gÆlowed_„©uªs
;

325 
u8
 
	gt2_bvc_ª£t
;

326 
u8
 
	gt_˚Œ_≥riodic
;

327 } 
	t˛i_bssgp_£rvi˚_t
;

331 
obje˘_comm⁄_t
 
	gcomm⁄_∑øms
;

332 
	gsh‹t_«me
[
HOST_NAME_MAX
];

333 } 
	t˛i_node_t
;

337 
obje˘_comm⁄_t
 
	gcomm⁄_∑øms
;

338 
	g«me_£rvîs
[
IP_ADDRESS_LIST_MAX_LENGTH
];

339 
	g£¨ched_domaös
[
DNS_DOMAIN_NAME_MAX_LENGTH
];

340 } 
	t˛i_dns_˛õ¡_t
;

344 
obje˘_comm⁄_t
 
	gcomm⁄_∑øms
;

345 
	gtime_£rvîs
[
IP_ADDRESS_LIST_MAX_LENGTH
];

346 } 
	t˛i_¡p_˛õ¡_t
;

349 
obje˘_comm⁄_t
 
	gcomm⁄_∑øms
;

350 
	gde°ö©i⁄
[
IP_NETWORK_NAME_SIZE
];

351 
	gg©eway
[
IP_ADDRESS_MAX_LENGTH
];

352 
	göãrÁ˚
[
IFNAMSIZ
+1];

353 } 
	t˛i_ù_rouã_t
;

356 
obje˘_comm⁄_t
 
	gcomm⁄_∑øms
;

357 
u32
 
	gid
;

358 } 
	t˛i_vœn_ídpoöt_t
;

361 
obje˘_comm⁄_t
 
	gcomm⁄_∑øms
;

362 
ù_addªss_t
 
	gaddªss
;

363 
u8
 
	gmask
;

364 
	göãrÁ˚
[
IFNAMSIZ
+1];

366 } 
	t˛i_ù_t
;

371 
obje˘_comm⁄_t
 
	gcomm⁄_∑øms
;

372 
ù_addªss_t
 
	gaddªss
;

373 } 
	t˛i_lom_ù_t
;

377 
obje˘_comm⁄_t
 
	gcomm⁄_∑øms
;

378 
u8
 
	göãrÁ˚_id
;

379 
	g‰_ty≥
[
FR_TYPE_LENGTH
];

380 
u8
 
	gnum_of_p‹t
;

381 
	gp‹t_li°
[
PORT_LIST_LENGTH
];

382 } 
	t˛i_°m1_öãrÁ˚_t
;

390 
˛i_sg¢_poﬁ_¥oxy_£rvi˚_t
 *
	gsg¢_poﬁ_¥oxy_£rvi˚
;

391 
˛i_n£_group_t
 *
	gn£_group
;

392 
˛i_bssgp_£rvi˚_t
 *
	gbssgp_£rvi˚
;

393 
˛i_sg¢_t
 *
	gsg¢
;

394 
˛i_sg¢_poﬁ_t
 *
	gsg¢_poﬁ
;

395 
˛i_sg¢_poﬁ_¥oxy_£rvi˚_comm⁄_t
 *
	gsg¢_poﬁ_¥oxy_£rvi˚_comm⁄
;

396 
˛i_√tw‹k_£rvi˚_t
 *
	g√tw‹k_£rvi˚
;

397 
˛i_nsvc_t
 *
	gnsvc
;

398 
˛i_‰ame_ªœy_pvc_t
 *
	g‰ame_ªœy_pvc
;

399 
˛i_‰ame_ªœy_‰a˘i⁄_t
 *
	g‰ame_ªœy_‰a˘i⁄
;

400 
˛i_e1_p‹t_t
 *
	ge1_p‹t
;

401 
˛i_t1_p‹t_t
 *
	gt1_p‹t
;

402 
˛i_node_t
 *
	gnode
;

403 
˛i_dns_˛õ¡_t
 *
	gdns_˛õ¡
;

404 
˛i_¡p_˛õ¡_t
 *
	g¡p_˛õ¡
;

405 
˛i_ù_rouã_t
 *
	gù_rouã
;

406 
˛i_vœn_ídpoöt_t
 *
	gvœn_ídpoöt
;

407 
˛i_ù_t
 *
	gù
;

408 
˛i_lom_ù_t
 *
	glom_ù
;

409 
˛i_°m1_öãrÁ˚_t
 *
	g°m1_öãrÁ˚
;

410 } 
	tc⁄figuøti⁄_t
;

415 
˛i_e1_p‹t_¸óã_öã∫Æ
(
˛i_©åibuã_t
 *
¨gli°
,
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
);

416 
˛i_t1_p‹t_¸óã_öã∫Æ
(
˛i_©åibuã_t
 *
¨gli°
,
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
);

418 
˛i_‰ame_ªœy_‰a˘i⁄_¸óã_öã∫Æ
(
˛i_©åibuã_t
 *
¨gli°
,
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
);

419 
˛i_‰ame_ªœy_pvc_¸óã_öã∫Æ
(
˛i_©åibuã_t
 *
¨gli°
,
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
);

420 
˛i_sg¢_poﬁ_¸óã_öã∫Æ
(
˛i_©åibuã_t
 *
¨gli°
,
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
);

421 
˛i_ù_rouã_¸óã_öã∫Æ
(
˛i_©åibuã_t
 *
¨gli°
,
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
);

422 
˛i_vœn_ídpoöt_¸óã_öã∫Æ
(
˛i_©åibuã_t
 *
¨gli°
, 
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
);

423 
˛i_ù_¸óã_öã∫Æ
(
˛i_©åibuã_t
 *
¨gli°
,
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
);

426 
˛i_°m1_öãrÁ˚_¸óã_öã∫Æ
(
˛i_©åibuã_t
 *
¨gli°
,
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
);

428 
˛i_©åibuã_t
* 
gë_©åibuã_‰om_¨gli°
(˛i_©åibuã_à*
¨gli°
,c⁄° * 
©å_«me
);

430 
gë_Áu…_id_‰om_¨gli°
(
˛i_©åibuã_t
 *
¨gli°
,c⁄° * 
©å_«me
,
¨gli°_cou¡î
);

432 
gë_u32_‰om_¨gli°
(
˛i_©åibuã_t
 *
¨gli°
,* 
©å_«me
, 
u32
 *
öãgî
);

433 
gë_u16_‰om_¨gli°
(
˛i_©åibuã_t
 *
¨gli°
,* 
©å_«me
, 
u16
 *
öãgî
);

434 
gë_u8_‰om_¨gli°
(
˛i_©åibuã_t
 *
¨gli°
,* 
©å_«me
, 
u8
 *
öãgî
);

439 
gë_íum_‰om_¨gli°
(
˛i_©åibuã_t
 *
¨gli°
,* 
©å_«me
, 
°rög
[]);

440 
gë_°rög_‰om_¨gli°
(
˛i_©åibuã_t
 *
¨gli°
,* 
©å_«me
, * 
°rög
);

441 
gë_ù_addªss_‰om_¨gli°
(
˛i_©åibuã_t
 *
¨gli°
,* 
©å_«me
, 
ù_addªss_t
 *
ù_addªss
);

444 
	g˛i_îr‹_°r
[256];

445 
	g˛i_com∂ëi⁄_°r
[4096];

446 
u32
 
	gom_¨g_n£i_bsc
;

450 
	g∑r£_îr‹
;

451 
	gfûíame_cuºít
[64] = "";

452 * 
	gcuºít_fûíame
;

459 
˛i_íum_ö°™˚_t
 
	ge1_p‹t_ch™√lized_íums
[] =

473 
END_OF_ENUM_INSTANCE


475 
˛i_íum_ö°™˚_t
 
	ge1_p‹t_löe_code_íums
[] =

485 
END_OF_ENUM_INSTANCE


487 
˛i_íum_ö°™˚_t
 
	ge1_p‹t_˛ock_mode_íums
[] =

497 
END_OF_ENUM_INSTANCE


499 
˛i_íum_ö°™˚_t
 
	ge1_p‹t_ˇbÀ_im≥d™˚_íums
[] =

509 
END_OF_ENUM_INSTANCE


512 
˛i_©åibuã_t
 
	ge1_p‹t_©åibuã_èbÀ
[] =

516 
CLI_OPTION_U64
,

517 
EMPTY_CLI_ATTRIBUTE_VALUE
,

520 
NULL
,

521 
NULL
,

522 
NULL
,

528 
CLI_OPTION_NAME_ONLY
,

532 
NULL
,

533 
NULL
,

534 
NULL
,

541 
CLI_OPTION_ENUM
,

542 
EMPTY_CLI_ATTRIBUTE_VALUE
,

546 
e1_p‹t_ch™√lized_íums
,

547 
NULL
,

552 
CLI_OPTION_ENUM
,

553 
EMPTY_CLI_ATTRIBUTE_VALUE
,

557 
e1_p‹t_löe_code_íums
,

558 
NULL
,

565 
CLI_OPTION_ENUM
,

566 
EMPTY_CLI_ATTRIBUTE_VALUE
,

570 
e1_p‹t_˛ock_mode_íums
,

571 
NULL
,

576 
CLI_OPTION_ENUM
,

577 
EMPTY_CLI_ATTRIBUTE_VALUE
,

581 
e1_p‹t_ˇbÀ_im≥d™˚_íums
,

582 
NULL
,

585 
END_OF_CLI_ATTRIBUTE


589 
˛i_mëhod_t
 
	ge1_p‹t_mëhod_èbÀ
[] =

593 
METHOD_NOT_ACCESSIBLE
,

594 
˛i_e1_p‹t_¸óã_öã∫Æ
,

595 (*[]){"numbî","ch™√lized","löe_code","˛ock_mode","ˇbÀ_im≥d™˚",
NULL
},

596 
NULL
,

601 
METHOD_ACCESSIBLE
,

603 
NULL
,

604 
NULL
,

605 
NULL
,

608 
END_OF_CLI_METHOD


612 
˛i_íum_ö°™˚_t
 
	gt1_p‹t_löe_code_íums
[] =

622 
END_OF_ENUM_INSTANCE


624 
˛i_íum_ö°™˚_t
 
	gt1_p‹t_‰amög_íums
[] =

634 
END_OF_ENUM_INSTANCE


636 
˛i_íum_ö°™˚_t
 
	gt1_p‹t_˛ock_mode_íums
[] =

646 
END_OF_ENUM_INSTANCE


648 
˛i_íum_ö°™˚_t
 
	gt1_p‹t_ˇbÀ_ch¨a˘îi°ics_íums
[] =

690 
END_OF_ENUM_INSTANCE


693 
˛i_©åibuã_t
 
	gt1_p‹t_©åibuã_èbÀ
[] =

697 
CLI_OPTION_U64
,

698 
EMPTY_CLI_ATTRIBUTE_VALUE
,

701 
NULL
,

702 
NULL
,

703 
NULL
,

708 
CLI_OPTION_NAME_ONLY
,

712 
NULL
,

713 
NULL
,

714 
NULL
,

719 
CLI_OPTION_ENUM
,

720 
EMPTY_CLI_ATTRIBUTE_VALUE
,

724 
t1_p‹t_löe_code_íums
,

725 
NULL
,

730 
CLI_OPTION_ENUM
,

731 
EMPTY_CLI_ATTRIBUTE_VALUE
,

735 
t1_p‹t_‰amög_íums
,

736 
NULL
,

741 
CLI_OPTION_ENUM
,

742 
EMPTY_CLI_ATTRIBUTE_VALUE
,

746 
t1_p‹t_˛ock_mode_íums
,

747 
NULL
,

752 
CLI_OPTION_ENUM
,

753 
EMPTY_CLI_ATTRIBUTE_VALUE
,

757 
t1_p‹t_ˇbÀ_ch¨a˘îi°ics_íums
,

758 
NULL
,

761 
END_OF_CLI_ATTRIBUTE


765 
˛i_mëhod_t
 
	gt1_p‹t_mëhod_èbÀ
[] =

769 
METHOD_NOT_ACCESSIBLE
,

770 
˛i_t1_p‹t_¸óã_öã∫Æ
,

771 (*[]){"numbî","‰amög","löe_code","˛ock_mode","ˇbÀ_ch¨a˘îi°ics",
NULL
},

772 
NULL
,

777 
METHOD_ACCESSIBLE
,

779 
NULL
,

780 
NULL
,

781 
NULL
,

784 
END_OF_CLI_METHOD


789 
˛i_íum_ö°™˚_t
 
	g‰ame_ªœy_‰a˘i⁄_öãrÁ˚_ty≥_íums
[] =

799 
END_OF_ENUM_INSTANCE


801 
˛i_íum_ö°™˚_t
 
	g‰ame_ªœy_‰a˘i⁄_lmi_°™d¨d_íums
[] =

815 
END_OF_ENUM_INSTANCE


818 
˛i_íum_ö°™˚_t
 
	g‰ame_ªœy_‰a˘i⁄_¸c_ty≥_íums
[] =

828 
END_OF_ENUM_INSTANCE


831 
˛i_©åibuã_t
 
	g‰ame_ªœy_‰a˘i⁄_©åibuã_èbÀ
[] =

836 
CLI_OPTION_STRING
,

837 
EMPTY_CLI_ATTRIBUTE_VALUE
,

840 
NULL
,

841 
NULL
,

842 
NULL
,

848 
CLI_OPTION_U64
,

849 
EMPTY_CLI_ATTRIBUTE_VALUE
,

853 
NULL
,

854 
NULL
,

859 
CLI_OPTION_INT_LIST
,

860 
EMPTY_CLI_ATTRIBUTE_VALUE
,

863 
NULL
,

864 
NULL
,

865 
NULL
,

870 
CLI_OPTION_ENUM
,

871 
EMPTY_CLI_ATTRIBUTE_VALUE
,

875 
‰ame_ªœy_‰a˘i⁄_öãrÁ˚_ty≥_íums
,

876 
NULL
,

881 
CLI_OPTION_ENUM
,

882 
EMPTY_CLI_ATTRIBUTE_VALUE
,

886 
‰ame_ªœy_‰a˘i⁄_lmi_°™d¨d_íums
,

887 
NULL
,

892 
CLI_OPTION_U64
,

893 
EMPTY_CLI_ATTRIBUTE_VALUE
,

897 
NULL
,

898 
NULL
,

903 
CLI_OPTION_U64
,

904 
EMPTY_CLI_ATTRIBUTE_VALUE
,

908 
NULL
,

909 
NULL
,

914 
CLI_OPTION_U64
,

915 
EMPTY_CLI_ATTRIBUTE_VALUE
,

919 
NULL
,

920 
NULL
,

925 
CLI_OPTION_U64
,

926 
EMPTY_CLI_ATTRIBUTE_VALUE
,

930 
NULL
,

931 
NULL
,

936 
CLI_OPTION_U64
,

937 
EMPTY_CLI_ATTRIBUTE_VALUE
,

941 
NULL
,

942 
NULL
,

947 
CLI_OPTION_U64
,

948 
EMPTY_CLI_ATTRIBUTE_VALUE
,

952 
NULL
,

953 
NULL
,

958 
CLI_OPTION_ENUM
,

959 
EMPTY_CLI_ATTRIBUTE_VALUE
,

963 
‰ame_ªœy_‰a˘i⁄_¸c_ty≥_íums
,

964 
NULL
,

967 
END_OF_CLI_ATTRIBUTE


971 
˛i_mëhod_t
 
	g‰ame_ªœy_‰a˘i⁄_mëhod_èbÀ
[] =

975 
METHOD_NOT_ACCESSIBLE
,

976 
˛i_‰ame_ªœy_‰a˘i⁄_¸óã_öã∫Æ
,

978 "t391","t392","n391","n392","n393","¸c_ty≥",
NULL
},

979 
NULL
,

984 
METHOD_ACCESSIBLE
,

986 
NULL
,

987 
NULL
,

988 
NULL
,

991 
END_OF_CLI_METHOD


994 
˛i_©åibuã_t
 
	g‰ame_ªœy_pvc_©åibuã_èbÀ
[] =

999 
CLI_OPTION_STRING
,

1000 
EMPTY_CLI_ATTRIBUTE_VALUE
,

1003 
NULL
,

1004 
NULL
,

1005 
NULL
,

1010 
CLI_OPTION_U64
,

1011 
EMPTY_CLI_ATTRIBUTE_VALUE
,

1014 
NULL
,

1015 
NULL
,

1016 
NULL
,

1021 
CLI_OPTION_U64
,

1022 
EMPTY_CLI_ATTRIBUTE_VALUE
,

1025 
NULL
,

1026 
NULL
,

1027 
NULL
,

1032 
CLI_OPTION_U64
,

1033 
EMPTY_CLI_ATTRIBUTE_VALUE
,

1036 
NULL
,

1037 
NULL
,

1038 
NULL
,

1043 
CLI_OPTION_U64
,

1044 
EMPTY_CLI_ATTRIBUTE_VALUE
,

1047 
NULL
,

1048 
NULL
,

1049 
NULL
,

1052 
END_OF_CLI_ATTRIBUTE


1055 
˛i_mëhod_t
 
	g‰ame_ªœy_pvc_mëhod_èbÀ
[] =

1059 
METHOD_NOT_ACCESSIBLE
,

1061 
˛i_‰ame_ªœy_pvc_¸óã_öã∫Æ
,

1062 (*[]){"c⁄√˘ed_to","dlci","cú","bc","be",
NULL
},

1063 
NULL
,

1068 
METHOD_ACCESSIBLE
,

1070 
NULL
,

1071 
NULL
,

1072 
NULL
,

1075 
END_OF_CLI_METHOD


1080 
˛i_©åibuã_t
 
	gsg¢_poﬁ_©åibuã_èbÀ
[] =

1084 
CLI_OPTION_STRING
,

1085 
EMPTY_CLI_ATTRIBUTE_VALUE
,

1088 
NULL
,

1089 
NULL
,

1090 
NULL
,

1095 
CLI_OPTION_U64
,

1096 
EMPTY_CLI_ATTRIBUTE_VALUE
,

1100 
NULL
,

1101 
NULL
,

1107 
CLI_OPTION_STRING_LIST
,

1108 
EMPTY_CLI_ATTRIBUTE_VALUE
,

1111 
NULL
,

1112 
NULL
,

1113 
NULL
,

1117 
END_OF_CLI_ATTRIBUTE


1120 
˛i_mëhod_t
 
	gsg¢_poﬁ_mëhod_èbÀ
[] =

1124 
METHOD_NOT_ACCESSIBLE
,

1125 
˛i_sg¢_poﬁ_¸óã_öã∫Æ
,

1126 (*[]){"«me","ƒi_size","sg¢_li°",
NULL
},

1127 
NULL
,

1132 
METHOD_ACCESSIBLE
,

1134 
NULL
,

1135 
NULL
,

1136 
NULL
,

1139 
END_OF_CLI_METHOD


1144 
˛i_©åibuã_t
 
	gù_rouã_©åibuã_èbÀ
[] =

1148 
CLI_OPTION_STRING
,

1149 
EMPTY_CLI_ATTRIBUTE_VALUE
,

1151 
IP_ADDRESS_MAX_LENGTH
,

1152 
NULL
,

1153 
NULL
,

1154 
NULL
,

1159 
CLI_OPTION_STRING
,

1160 
EMPTY_CLI_ATTRIBUTE_VALUE
,

1162 
IP_ADDRESS_MAX_LENGTH
,

1163 
NULL
,

1164 
NULL
,

1165 
NULL
,

1171 
CLI_OPTION_STRING
,

1172 
EMPTY_CLI_ATTRIBUTE_VALUE
,

1174 
IFNAMSIZ
,

1175 
NULL
,

1176 
NULL
,

1177 
NULL
,

1181 
END_OF_CLI_ATTRIBUTE


1183 
˛i_mëhod_t
 
	gù_rouã_mëhod_èbÀ
[] =

1187 
METHOD_NOT_ACCESSIBLE
,

1188 
˛i_ù_rouã_¸óã_öã∫Æ
,

1189 
NULL
,

1190 
NULL
,

1195 
METHOD_ACCESSIBLE
,

1197 
NULL
,

1198 
NULL
,

1199 
NULL
,

1202 
END_OF_CLI_METHOD


1208 
˛i_©åibuã_t
 
	gvœn_ídpoöt_©åibuã_èbÀ
[] =

1212 
CLI_OPTION_U64
,

1213 
EMPTY_CLI_ATTRIBUTE_VALUE
,

1216 
NULL
,

1217 
NULL
,

1218 
NULL
,

1224 
CLI_OPTION_STRING
,

1225 
EMPTY_CLI_ATTRIBUTE_VALUE
,

1227 
IFNAMSIZ
,

1228 
NULL
,

1229 
NULL
,

1230 
NULL
,

1234 
END_OF_CLI_ATTRIBUTE


1237 
˛i_mëhod_t
 
	gvœn_ídpoöt_mëhod_èbÀ
[] =

1241 
METHOD_NOT_ACCESSIBLE
,

1242 
˛i_vœn_ídpoöt_¸óã_öã∫Æ
,

1243 
NULL
,

1244 
NULL
,

1249 
METHOD_ACCESSIBLE
,

1251 
NULL
,

1252 
NULL
,

1253 
NULL
,

1256 
END_OF_CLI_METHOD


1262 
˛i_©åibuã_t
 
	gù_©åibuã_èbÀ
[] =

1266 
CLI_OPTION_DNS_NAME
,

1267 
EMPTY_CLI_ATTRIBUTE_VALUE
,

1269 
IP_ADDRESS_MAX_LENGTH
,

1270 
NULL
,

1271 
NULL
,

1272 
NULL
,

1278 
CLI_OPTION_STRING
,

1279 
EMPTY_CLI_ATTRIBUTE_VALUE
,

1281 
IFNAMSIZ
,

1282 
NULL
,

1283 
NULL
,

1284 
NULL
,

1288 
END_OF_CLI_ATTRIBUTE


1290 
˛i_mëhod_t
 
	gù_mëhod_èbÀ
[] =

1294 
METHOD_NOT_ACCESSIBLE
,

1295 
˛i_ù_¸óã_öã∫Æ
,

1296 
NULL
,

1297 
NULL
,

1302 
METHOD_ACCESSIBLE
,

1304 
NULL
,

1305 
NULL
,

1306 
NULL
,

1309 
END_OF_CLI_METHOD


1313 
˛i_©åibuã_t
 
	g°m1_öãrÁ˚_©åibuã_èbÀ
[] =

1317 
CLI_OPTION_U64
,

1318 
EMPTY_CLI_ATTRIBUTE_VALUE
,

1321 
NULL
,

1322 
NULL
,

1323 
NULL
,

1328 
CLI_OPTION_STRING
,

1329 
EMPTY_CLI_ATTRIBUTE_VALUE
,

1332 
NULL
,

1333 
NULL
,

1334 
NULL
,

1339 
CLI_OPTION_STRING
,

1340 
EMPTY_CLI_ATTRIBUTE_VALUE
,

1343 
NULL
,

1344 
NULL
,

1345 
NULL
,

1350 
CLI_OPTION_U64
,

1351 
EMPTY_CLI_ATTRIBUTE_VALUE
,

1354 
NULL
,

1355 
NULL
,

1356 
NULL
,

1361 
CLI_OPTION_STRING
,

1362 
EMPTY_CLI_ATTRIBUTE_VALUE
,

1365 
NULL
,

1366 
NULL
,

1367 
NULL
,

1370 
END_OF_CLI_ATTRIBUTE


1375 
˛i_mëhod_t
 
	g°m1_öãrÁ˚_mëhod_èbÀ
[] =

1379 
METHOD_NOT_ACCESSIBLE
,

1380 
˛i_°m1_öãrÁ˚_¸óã_öã∫Æ
,

1381 (*[]){"öãrÁ˚_id","‰_ty≥","num_of_p‹t","p‹t_li°",
NULL
},

1382 
NULL
,

1387 
METHOD_ACCESSIBLE
,

1389 
NULL
,

1390 
NULL
,

1391 
NULL
,

1394 
END_OF_CLI_METHOD


1400 
˛i_˛ass_t
 
	g˛ass_èbÀ
[] =

1404 
e1_p‹t_mëhod_èbÀ
,

1405 
e1_p‹t_©åibuã_èbÀ
,

1410 
t1_p‹t_mëhod_èbÀ
,

1411 
t1_p‹t_©åibuã_èbÀ
,

1416 
‰ame_ªœy_‰a˘i⁄_mëhod_èbÀ
,

1417 
‰ame_ªœy_‰a˘i⁄_©åibuã_èbÀ
,

1422 
‰ame_ªœy_pvc_mëhod_èbÀ
,

1423 
‰ame_ªœy_pvc_©åibuã_èbÀ
,

1428 
sg¢_poﬁ_mëhod_èbÀ
,

1429 
sg¢_poﬁ_©åibuã_èbÀ
,

1434 
ù_rouã_mëhod_èbÀ
,

1435 
ù_rouã_©åibuã_èbÀ
,

1440 
vœn_ídpoöt_mëhod_èbÀ
,

1441 
vœn_ídpoöt_©åibuã_èbÀ
,

1446 
ù_mëhod_èbÀ
,

1447 
ù_©åibuã_èbÀ
,

1452 
°m1_öãrÁ˚_mëhod_èbÀ
,

1453 
°m1_öãrÁ˚_©åibuã_èbÀ
,

1457 
NULL
,

1458 
NULL
,

1459 
NULL
,

1460 
NULL


1464 
u32
 
	gg_°m1_id
,
	gg_åunk_id
,
	gg_group_id
,
	gg_dlci
;

1467 
˛i_e1_p‹t_¸óã_öã∫Æ
(
˛i_©åibuã_t
 *
¨gli°
,
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
)

1469 
STRU_SET_INITAIL_CONFIG
 *
	gp
 = 
≈_c⁄figuª_±r
;

1470 
u32
 
	g°m1_id
, 
	gåunk_id
;

1472 
	g˛ock_mode
[10],
	gc⁄√˘2°m
[8] = "";

1474 
gë_u32_‰om_¨gli°
(
¨gli°
,"numbî",&
åunk_id
);

1476 
as£π
(0 !
åunk_id
);

1477 
	gåunk_id
 -= 1;

1480 
gë_°rög_‰om_¨gli°
(
¨gli°
,"c⁄√˘ed_to",
c⁄√˘2°m
);

1482 if(!(
ssˇnf
(
c⁄√˘2°m
, "s%u", &
°m1_id
) == 1))

1484 
WDDI_ERR
("error cli_frame_relay_fraction_create_internal from connected_to ");

1489 
as£π
(0 !
°m1_id
);

1491 
	g°m1_id
 -= 1;

1493 if(
	g°m1_id
 <2)

1496 
	gp
->
	g°ru_°m1_cfg_öfo
[
°m1_id
].
	gåunk_öfo
[
åunk_id
].
	gåunkVÆid
 = 
NPU_VALID
;

1501 
WDDI_ERR
("îr‹ from c⁄√˘ed_to: stm1_id = %d. ",
°m1_id
);

1503 
	g›t_mode
[32];

1504 
gë_°rög_‰om_¨gli°
(
¨gli°
,"ch™√lized", 
›t_mode
);

1506 i‡(
°rcmp
((c⁄° *)
›t_mode
, "true_crc4") == 0)

1507 
p
->
°ru_°m1_cfg_öfo
[
°m1_id
].
åunk_öfo
[
åunk_id
].
O±_Mode

OPMODE_E1_TRUE_CRC4
;

1508 i‡(
°rcmp
((c⁄° *)
›t_mode
, "false") == 0)

1509 
p
->
°ru_°m1_cfg_öfo
[
°m1_id
].
åunk_öfo
[
åunk_id
].
O±_Mode
 = 
OPMODE_E1_FALSE
;

1512 
gë_íum_‰om_¨gli°
(
¨gli°
,"˛ock_mode",
˛ock_mode
);

1514 i‡(
°rcmp
((c⁄° *)
˛ock_mode
, "master") == 0)

1515 
p
->
°ru_°m1_cfg_öfo
[
°m1_id
].
åunk_öfo
[
åunk_id
].
˛ock_mode
 = 
NPU_E1T1_CLOCK_MASTER
;

1517 
	gp
->
	g°ru_°m1_cfg_öfo
[
°m1_id
].
	gåunk_öfo
[
åunk_id
].
	g˛ock_mode
 = 
NPU_E1T1_CLOCK_SLAVE
;

1526 
˛i_t1_p‹t_¸óã_öã∫Æ
(
˛i_©åibuã_t
 *
¨gli°
,
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
)

1528 
STRU_SET_INITAIL_CONFIG
 *
	gp
 = 
≈_c⁄figuª_±r
;

1529 
u32
 
	g°m1_id
, 
	gåunk_id
;

1531 
	g˛ock_mode
[10],
	gc⁄√˘2°m
[8] = "";

1533 
gë_u32_‰om_¨gli°
(
¨gli°
,"numbî",&
åunk_id
);

1535 
as£π
(0 !
åunk_id
);

1536 
	gåunk_id
 -= 1;

1539 
gë_°rög_‰om_¨gli°
(
¨gli°
,"c⁄√˘ed_to",
c⁄√˘2°m
);

1541 if(!(
ssˇnf
(
c⁄√˘2°m
, "s%u", &
°m1_id
) == 1))

1543 
WDDI_ERR
("error cli_frame_relay_fraction_create_internal from connected_to ");

1548 
as£π
(0 !
°m1_id
);

1550 
	g°m1_id
 -= 1;

1552 if(
	g°m1_id
 <2)

1555 
	gp
->
	g°ru_°m1_cfg_öfo
[
°m1_id
].
	gåunk_öfo
[
åunk_id
].
	gåunkVÆid
 = 
NPU_VALID
;

1560 
WDDI_ERR
("îr‹ from c⁄√˘ed_to: stm1_id = %d. ",
°m1_id
);

1562 
	g›t_mode
[32];

1563 
gë_°rög_‰om_¨gli°
(
¨gli°
,"‰amög", 
›t_mode
);

1565 i‡(
°rcmp
((c⁄° *)
›t_mode
, "esf") == 0)

1566 
p
->
°ru_°m1_cfg_öfo
[
°m1_id
].
åunk_öfo
[
åunk_id
].
O±_Mode

OPMODE_T1_ESF
;

1567 i‡(
°rcmp
((c⁄° *)
›t_mode
, "d4") == 0)

1568 
p
->
°ru_°m1_cfg_öfo
[
°m1_id
].
åunk_öfo
[
åunk_id
].
O±_Mode
 = 
OPMODE_T1_D4
;

1571 
gë_íum_‰om_¨gli°
(
¨gli°
,"˛ock_mode",
˛ock_mode
);

1573 i‡(
°rcmp
((c⁄° *)
˛ock_mode
, "master") == 0)

1574 
p
->
°ru_°m1_cfg_öfo
[
°m1_id
].
åunk_öfo
[
åunk_id
].
˛ock_mode
 = 
NPU_E1T1_CLOCK_MASTER
;

1576 
	gp
->
	g°ru_°m1_cfg_öfo
[
°m1_id
].
	gåunk_öfo
[
åunk_id
].
	g˛ock_mode
 = 
NPU_E1T1_CLOCK_SLAVE
;

1596 
˛i_‰ame_ªœy_‰a˘i⁄_¸óã_öã∫Æ
(
˛i_©åibuã_t
 *
¨gli°
, 
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
)

1598 
STRU_SET_INITAIL_CONFIG
 *
	gp
 = 
≈_c⁄figuª_±r
;

1600 
u16
 
	gmax_‰ame_size
;

1601 
	gtime¶Ÿ
[10],
	g¸c_ty≥
[10],
	gc⁄√˘2e1
[8] = "",
	gi
;

1602 
u32
 
	g°m1_id
, 
	gåunk_id
, 
	ggroup_id
;

1604 
gë_u32_‰om_¨gli°
(
¨gli°
,"‰a˘i⁄_id",&
group_id
);

1606 
gë_°rög_‰om_¨gli°
(
¨gli°
,"c⁄√˘ed_to", 
c⁄√˘2e1
);

1608 if(!(
ssˇnf
(
c⁄√˘2e1
,"s%up%u", &
°m1_id
, &
åunk_id
) == 2))

1610 
WDDI_ERR
("error cli_frame_relay_fraction_create_internal from connected_to ");

1613 
as£π
(
°m1_id
 && 
åunk_id
);

1616 
	g°m1_id
 -=1;

1617 
	gåunk_id
 -=1;

1620 
	gp
->
	g°ru_°m1_cfg_öfo
[
°m1_id
].
	gåunk_öfo
[
åunk_id
].
	ggroup_öfo
[
group_id
].
	ggroupVÆid
 = 
NPU_VALID
;

1624 
gë_°rög_‰om_¨gli°
(
¨gli°
,"time¶Ÿs", 
time¶Ÿ
);

1626 
	g¶Ÿ_°¨t
, 
	g¶Ÿ_íd
;

1627 *
	gp_¶Ÿ
 = 
NULL
,*
	gp_time¶Ÿ
 = 
time¶Ÿ
;

1631 
	gp_¶Ÿ
 = 
ödex
((c⁄° *)
p_time¶Ÿ
,'-');

1632 if(
	gNULL
 !
p_¶Ÿ
)

1634 *(
p_¶Ÿ
++) = '\0';

1635 
	g¶Ÿ_°¨t
 = 
©oi
((c⁄° *)
p_time¶Ÿ
);

1636 
	g¶Ÿ_íd
 = 
©oi
((c⁄° *)
p_¶Ÿ
);

1637 
	gp
->
	g°ru_°m1_cfg_öfo
[
°m1_id
].
	gåunk_öfo
[
åunk_id
].
	ggroup_öfo
[
group_id
].
	g¶Ÿ_£À˘i⁄
 = 0;

1638 
	gi
=
¶Ÿ_°¨t
; i<=
¶Ÿ_íd
;i++)

1640 
	gp
->
	g°ru_°m1_cfg_öfo
[
°m1_id
].
	gåunk_öfo
[
åunk_id
].
	ggroup_öfo
[
group_id
].
	g¶Ÿ_£À˘i⁄
 |0x1<<
i
;

1642 
	gp_time¶Ÿ
 = 
ödex
((c⁄° *)
p_¶Ÿ
,',');

1646 
	g¶Ÿ_°¨t
 = 
©oi
((c⁄° *)
p_time¶Ÿ
);

1647 
	gp
->
	g°ru_°m1_cfg_öfo
[
°m1_id
].
	gåunk_öfo
[
åunk_id
].
	ggroup_öfo
[
group_id
].
	g¶Ÿ_£À˘i⁄
 = 0;

1648 
	gp
->
	g°ru_°m1_cfg_öfo
[
°m1_id
].
	gåunk_öfo
[
åunk_id
].
	ggroup_öfo
[
group_id
].
	g¶Ÿ_£À˘i⁄
 |0x1<<
¶Ÿ_°¨t
;

1649 
	gp_time¶Ÿ
 = 
NULL
;

1651 }
	gNULL
 !
p_time¶Ÿ
++);

1654 
gë_u16_‰om_¨gli°
(
¨gli°
,"max_‰ame_size",&
max_‰ame_size
);

1656 
	gp
->
	g°ru_°m1_cfg_öfo
[
°m1_id
].
	gåunk_öfo
[
åunk_id
].
	ggroup_öfo
[
group_id
].
	gmax_‰ame_size
 = 
max_‰ame_size
;

1658 
gë_íum_‰om_¨gli°
(
¨gli°
,"¸c_ty≥",
¸c_ty≥
);

1660 i‡(
°rcmp
((c⁄° *)
¸c_ty≥
, "crc16") == 0)

1661 
p
->
°ru_°m1_cfg_öfo
[
°m1_id
].
åunk_öfo
[
åunk_id
].
group_öfo
[
group_id
].
¸c_ty≥
 = 
NPU_E1T1_CRC16
;

1663 
	gp
->
	g°ru_°m1_cfg_öfo
[
°m1_id
].
	gåunk_öfo
[
åunk_id
].
	ggroup_öfo
[
group_id
].
	g¸c_ty≥
 = 
NPU_E1T1_CRC32
;

1666 
¥ötf
("-------- frame_relay_fractionclass ---------\n");

1667 
¥ötf
("‰a˘i⁄_id = %d,Åime¶Ÿ = %s, max_‰ame_sizê%d, crc_ty≥ = %s\n",
group_id
,
time¶Ÿ
, 
max_‰ame_size
, 
¸c_ty≥
);

1669 
¥ötf
("°ru_°m1_cfg_öfo[%d].åunk_öfo[%d].group_öfo[%d].¸c_ty≥: %d \n",
°m1_id
,
åunk_id
,
group_id
, 
p
->
°ru_°m1_cfg_öfo
[°m1_id].
åunk_öfo
[åunk_id].
group_öfo
[group_id].
¸c_ty≥
);

1670 
¥ötf
("max_‰ame_size: %d \n", 
p
->
°ru_°m1_cfg_öfo
[
°m1_id
].
åunk_öfo
[
åunk_id
].
group_öfo
[
group_id
].
max_‰ame_size
);

1671 
	gg_°m1_id
 = 
°m1_id
;

1672 
	gg_åunk_id
 = 
åunk_id
;

1673 
	gg_group_id
 = 
group_id
;

1679 
˛i_‰ame_ªœy_pvc_¸óã_öã∫Æ
(
˛i_©åibuã_t
 *
¨gli°
, 
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
)

1681 
STRU_SET_INITAIL_CONFIG
 *
	gp
 = 
≈_c⁄figuª_±r
;

1682 
u32
 
	gdlci
, 
	gcú
, 
	gbc
, 
	gbe
;

1683 
u32
 
	g°m1_id
, 
	gåunk_id
, 
	ggroup_id
;

1684 
	gc⁄√˘2‰
[20] = "",
	gi
;

1686 
gë_°rög_‰om_¨gli°
(
¨gli°
,"c⁄√˘ed_to", 
c⁄√˘2‰
);

1689 if(!(
ssˇnf
(
c⁄√˘2‰
, "s%up%u‰%u",&
°m1_id
,&
åunk_id
,&
group_id
)== 3))

1691 
WDDI_ERR
("îr‹ cli_‰ame_ªœy_pvc_¸óã_öã∫Æ from c⁄√˘ed_tÿc⁄√˘2‰ = %s\n",
c⁄√˘2‰
);

1696 
as£π
(
°m1_id
 && 
åunk_id
);

1699 
	g°m1_id
 -=1;

1700 
	gåunk_id
 -=1;

1701 
	gg_°m1_id
 = 
°m1_id
;

1702 
	gg_åunk_id
 = 
åunk_id
;

1703 
	gg_group_id
 = 
group_id
;

1706 
gë_u32_‰om_¨gli°
(
¨gli°
,"dlci",&
dlci
);

1707 
	gg_dlci
 = 
dlci
;

1711 
gë_u32_‰om_¨gli°
(
¨gli°
,"cú",&
cú
);

1713 
	gp
->
	g°ru_°m1_cfg_öfo
[
°m1_id
].
	gåunk_öfo
[
åunk_id
].
	ggroup_öfo
[
group_id
].
	gPVCQos
[
dlci
].
	gcú
 = 
cú
;

1716 
gë_u32_‰om_¨gli°
(
¨gli°
,"bc",&
bc
);

1718 
	gp
->
	g°ru_°m1_cfg_öfo
[
°m1_id
].
	gåunk_öfo
[
åunk_id
].
	ggroup_öfo
[
group_id
].
	gPVCQos
[
dlci
].
	gbc
 = 
bc
;

1721 
gë_u32_‰om_¨gli°
(
¨gli°
,"be",&
be
);

1723 
	gp
->
	g°ru_°m1_cfg_öfo
[
°m1_id
].
	gåunk_öfo
[
åunk_id
].
	ggroup_öfo
[
group_id
].
	gPVCQos
[
dlci
].
	gbe
 = 
be
;

1737 
˛i_sg¢_poﬁ_¸óã_öã∫Æ
(
˛i_©åibuã_t
 *
¨gli°
, 
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
)

1739 
u32
 
	gƒi_size
;

1740 *
	gp_poﬁ
 = 
mÆloc
(100);

1741 *
	gp_poﬁ_bak
 = 
p_poﬁ
;

1743 
STRU_SET_INITAIL_CONFIG
 *
	gp
 = 
≈_c⁄figuª_±r
;

1747 
gë_u32_‰om_¨gli°
(
¨gli°
,"ƒi_size", &
p
->
NRI_bôLí
);

1750 
gë_°rög_‰om_¨gli°
(
¨gli°
,"sg¢_li°", 
p_poﬁ
);

1753 
	gp
->
	gP‹tPoﬁSize
 = 1;

1755 *
	gp_poﬁ
 != '\0')

1757 if(*
p_poﬁ
 == ',')

1759 
p
->
P‹tPoﬁSize
++;

1761 
	gp_poﬁ
++;

1764 
‰ì
(
p_poﬁ_bak
);

1767 
	grouã_num
 = 0;

1768 
˛i_ù_rouã_¸óã_öã∫Æ
(
˛i_©åibuã_t
 *
¨gli°
,
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
)

1771 
	gùaddr
[24], *
	gp_ùaddr
;

1772 
	gùmask
[24]= "" ;

1774 
STRU_SET_INITAIL_CONFIG
 *
	gp
 =
≈_c⁄figuª_±r
;

1775 
	göãrÁ˚FuŒName
[24];

1776 
	gi‚ame
[24] = {0};

1777 
gë_°rög_‰om_¨gli°
(
¨gli°
,"öãrÁ˚", 
öãrÁ˚FuŒName
);

1778 if(!(
ssˇnf
(
öãrÁ˚FuŒName
,"%[^.]",
i‚ame
) == 1) )

1782 if(
°rcmp
(
i‚ame
,
gë_i‚ame
()) == 0||strcmp(ifname,"enet0") == 0)

1784 
gë_°rög_‰om_¨gli°
(
¨gli°
,"de°ö©i⁄", 
ùaddr
);

1787 
	gp_ùaddr
 = 
ödex
((c⁄° *)
ùaddr
, '/');

1789 
u8
 
	gIpMaskVÆue
;

1790 if(
	gp_ùaddr
 !
NULL
)

1792 *
p_ùaddr
 = '\0';

1793 
	gIpMaskVÆue
 = 
©oi
((c⁄° *)++
p_ùaddr
);

1797 
¥ötf
("can't find mask,default 32\n");

1798 
	gIpMaskVÆue
 = 32;

1800 
	gi
;

1801 
u32
 
	gMask
 = 0;

1802 
	gi
 =0 ;ò< 
	gIpMaskVÆue
;i++)

1804 
	gMask
 |1<<(31-
i
);

1806 
•rötf
(
ùmask
,"%d.%d.%d.%d",
Mask
>>24&0xff,Mask>>16&0xff,Mask>>8&0xff,Mask&0xff);

1808 
öë_±⁄
(
AF_INET
, (c⁄° *)
ùaddr
 , &
p
->
rouãInfo
[
rouã_num
].
IpD°
);

1809 
öë_±⁄
(
AF_INET
, (c⁄° *)
ùmask
 , &
p
->
rouãInfo
[
rouã_num
].
mask
);

1810 
	gp
->
	grouãInfo
[
rouã_num
].
	gIpD°
 = 
¡ohl
(
p
->
rouãInfo
[rouã_num].
IpD°
);

1811 
	gp
->
	grouãInfo
[
rouã_num
].
	gmask

¡ohl
(
p
->
rouãInfo
[rouã_num].
mask
);

1816 
mem£t
(
ùaddr
, 0, (ipaddr));

1817 
gë_°rög_‰om_¨gli°
(
¨gli°
,"g©eway", 
ùaddr
);

1820 
öë_±⁄
(
AF_INET
, (c⁄° *)
ùaddr
 , &
p
->
rouãInfo
[
rouã_num
].
G©ewayIP
);

1821 
	gp
->
	grouãInfo
[
rouã_num
].
	gG©ewayIP
 = 
¡ohl
(
p
->
rouãInfo
[rouã_num].
G©ewayIP
);

1825 
	grouã_num
++;

1832 
˛i_vœn_ídpoöt_¸óã_öã∫Æ
(
˛i_©åibuã_t
 *
¨gli°
,
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
)

1834 
STRU_SET_INITAIL_CONFIG
 *
	gp
 = 
≈_c⁄figuª_±r
;

1835 
	gc⁄√˘To
[24];

1836 
gë_°rög_‰om_¨gli°
(
¨gli°
,"c⁄√˘ed_to", 
c⁄√˘To
);

1837 if(
°rcmp
(
c⁄√˘To
,
gë_i‚ame
()) == 0 || strcmp(connectTo,"enet0") == 0)

1839 
gë_u32_‰om_¨gli°
(
¨gli°
,"id", &
p
->
VœnTag
);

1840 if(
	gNPU_VLAN_DISABLE
 =
p
->
VœnFœg
)

1841 
p
->
VœnFœg
 = 
NPU_VLAN_ENABLE
;

1845 
˛i_ù_¸óã_öã∫Æ
(
˛i_©åibuã_t
 *
¨gli°
,
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
)

1847 
	gùaddr
[24], 
	gc⁄√˘To
[24], 
	gùmask
[24]"255.255.255.", *
	gp_ùaddr
;

1848 
STRU_SET_INITAIL_CONFIG
 *
	gp
 = 
≈_c⁄figuª_±r
;

1849 
gë_°rög_‰om_¨gli°
(
¨gli°
,"addªss", 
ùaddr
);

1850 
gë_°rög_‰om_¨gli°
(
¨gli°
,"c⁄√˘ed_to", 
c⁄√˘To
);

1851 
	gi‚ame
[24] = {0};

1852 if(!(
ssˇnf
(
c⁄√˘To
,"%[^.]",
i‚ame
) == 1) )

1854 
WDDI_ERR
("i‚amêi†îr‹ !\n",
i‚ame
);

1857 if(
°rcmp
(
i‚ame
,
gë_i‚ame
()) == 0 || strcmp(ifname,"enet0") == 0)

1859 i‡(
°rcmp
(
i‚ame
, 
gë_i‚ame
()) == 0)

1861 
STRU_SET_INITAIL_CONFIG
 *
p
 = 
≈_c⁄figuª_±r
;

1862 
	gp
->
	gO±î©eMode
 = 
NPU_MODE_FR
;

1864 
	gp_ùaddr
 = 
ödex
((c⁄° *)
ùaddr
, '/');

1866 
u8
 
	gIpMaskVÆue
;

1867 if(
	gp_ùaddr
 !
NULL
)

1869 *
p_ùaddr
 = '\0';

1870 
	gIpMaskVÆue
 = 
©oi
((c⁄° *)++
p_ùaddr
);

1874 
¥ötf
("can't find mask,default 32\n");

1875 
	gIpMaskVÆue
 = 32;

1877 
	gi
;

1878 
u32
 
	gMask
 = 0;

1879 
	gi
 =0 ;ò< 
	gIpMaskVÆue
;i++)

1881 
	gMask
 |1<<(31-
i
);

1883 
•rötf
(
ùmask
,"%d.%d.%d.%d",
Mask
>>24&0xff,Mask>>16&0xff,Mask>>8&0xff,Mask&0xff);

1887 
öë_±⁄
(
AF_INET
, (c⁄° *)
ùaddr
 , &
p
->
ifI∑ddr
);

1888 
öë_±⁄
(
AF_INET
, (c⁄° *)
ùmask
 , &
p
->
ifIpNëMask
);

1889 
	gp
->
	gifI∑ddr
 = 
¡ohl
(
p
->
ifI∑ddr
);

1890 
	gp
->
	gifIpNëMask
 = 
¡ohl
(
p
->
ifIpNëMask
);

1899 
˛i_°m1_öãrÁ˚_¸óã_öã∫Æ
(
˛i_©åibuã_t
 *
¨gli°
,
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
)

1901 
	g›t_mode
[32],
	g‰_ty≥
[32];

1902 
u32
 
	g°m1_id
;

1903 
STRU_SET_INITAIL_CONFIG
 *
	gp
 = 
≈_c⁄figuª_±r
;

1905 
	gp
->
	gO±î©eMode
 = 
NPU_MODE_FR
;

1909 
	gp
->
	g°m1_num
++;

1911 
gë_u32_‰om_¨gli°
(
¨gli°
,"öãrÁ˚_id", &
°m1_id
);

1913 
as£π
(0 !
°m1_id
);

1915 
	g°m1_id
 -=1;

1917 if(
	g°m1_id
 < 2)

1918 
	gp
->
	g°ru_°m1_cfg_öfo
[
°m1_id
].
	g°m1VÆid
 = 
NPU_VALID
;

1919 
	gg_°m1_id
 = 
°m1_id
;

1923 
gë_°rög_‰om_¨gli°
(
¨gli°
,"›î©e_mode", 
›t_mode
);

1925 i‡(
°rcmp
((c⁄° *)
›t_mode
, "d4") == 0)

1926 
p
->
°ru_°m1_cfg_öfo
[
°m1_id
].
O±_Mode
 = 
OPMODE_T1_D4
;

1927 i‡(
°rcmp
((c⁄° *)
›t_mode
, "t1_esf") == 0)

1928 
p
->
°ru_°m1_cfg_öfo
[
°m1_id
].
O±_Mode
 = 
OPMODE_T1_ESF
;

1929 i‡(
°rcmp
((c⁄° *)
›t_mode
, "e1_crc4") == 0)

1930 
p
->
°ru_°m1_cfg_öfo
[
°m1_id
].
O±_Mode
 = 
OPMODE_E1_TRUE_CRC4
;

1931 i‡(
°rcmp
((c⁄° *)
›t_mode
, "false") == 0)

1932 
p
->
°ru_°m1_cfg_öfo
[
°m1_id
].
O±_Mode
 = 
OPMODE_E1_FALSE
;

1936 
gë_°rög_‰om_¨gli°
(
¨gli°
,"‰_ty≥", 
‰_ty≥
);

1938 i‡(
°rcmp
((c⁄° *)
‰_ty≥
, "e1") == 0)

1939 
p
->
°ru_°m1_cfg_öfo
[
°m1_id
].
E1T1ty≥
 = 
NPU_MODE_E1
;

1940 i‡(
°rcmp
((c⁄° *)
‰_ty≥
, "t1") == 0)

1941 
p
->
°ru_°m1_cfg_öfo
[
°m1_id
].
E1T1ty≥
 = 
NPU_MODE_T1
;

1950 
	g˛i_©åibuã_t
*

1951 
gë_©åibuã_‰om_¨gli°
(
˛i_©åibuã_t
 *
¨gli°
,c⁄° * 
©å_«me
)

1953 
	g¨gli°_cou¡î
 = 0;

1954  
	g¨gli°
[
¨gli°_cou¡î
].
	g«me
 !
NULL
)

1956 i‡–! 
°rcmp
(
¨gli°
[
¨gli°_cou¡î
].
«me
,
©å_«me
) )

1957  &
¨gli°
[
¨gli°_cou¡î
];

1958 
	g¨gli°_cou¡î
++;

1960  (
	g˛i_©åibuã_t
*)
	gNULL
;

1963 
gë_u32_‰om_¨gli°
(
˛i_©åibuã_t
 *
¨gli°
,* 
©å_«me
, 
u32
 * 
öãgî
)

1965 
˛i_©åibuã_t
* 
	g©åibuã
;

1966 i‡–(
	g©åibuã
 = 
gë_©åibuã_‰om_¨gli°
(
¨gli°
,
©å_«me
)) )

1968 * 
	gïå
;

1970 *
	göãgî
 = 
°πﬁ
(
©åibuã
->
vÆue
, &
ïå
, 10);

1971 i‡(*
	gïå
 != '\0')

1974 
WDDI_ERR
("C™'àc⁄vîà¨gumíà%†‰omárgli°,íd ch¨ã∏%c",
©å_«me
,*
ïå
);

1981 
WDDI_ERR
("C™'àfödárgumíà%†‰omárgli°",
©å_«me
);

1986 
gë_u16_‰om_¨gli°
(
˛i_©åibuã_t
 *
¨gli°
,* 
©å_«me
, 
u16
 * 
öãgî
)

1988 
˛i_©åibuã_t
* 
	g©åibuã
;

1989 i‡–(
	g©åibuã
 = 
gë_©åibuã_‰om_¨gli°
(
¨gli°
,
©å_«me
)) )

1991 * 
	gïå
;

1992 *
	göãgî
 = 
°πﬁ
(
©åibuã
->
vÆue
, &
ïå
, 10);

1993 i‡(*
	gïå
 != '\0')

1995 
•rötf
(
˛i_îr‹_°r
,"C™'àc⁄vîà¨gumíà%†‰omárgli°\n",
©å_«me
);

1996 
WDDI_ERR
("C™'àc⁄vîà¨gumíà%†‰omárgli°",
©å_«me
);

2003 
WDDI_ERR
("C™'àfödárgumíà%†‰omárgli°",
©å_«me
);

2008 
gë_u8_‰om_¨gli°
(
˛i_©åibuã_t
 *
¨gli°
,* 
©å_«me
, 
u8
 * 
öãgî
)

2010 
˛i_©åibuã_t
* 
	g©åibuã
;

2011 i‡–(
	g©åibuã
 = 
gë_©åibuã_‰om_¨gli°
(
¨gli°
,
©å_«me
)) )

2013 * 
	gïå
;

2014 *
	göãgî
 = 
°πﬁ
(
©åibuã
->
vÆue
, &
ïå
, 10);

2015 i‡(*
	gïå
 != '\0')

2018 
WDDI_ERR
("C™'àc⁄vîà¨gumíà%†‰omárgli°",
©å_«me
);

2025 
WDDI_ERR
("C™'àfödárgumíà%†‰omárgli°",
©å_«me
);

2031 
gë_íum_‰om_¨gli°
(
˛i_©åibuã_t
 *
¨gli°
,* 
©å_«me
, 
°rög
[])

2033 
˛i_©åibuã_t
* 
	g©åibuã
;

2034 i‡–(
	g©åibuã
 = 
gë_©åibuã_‰om_¨gli°
(
¨gli°
,
©å_«me
)) )

2037 
°r˝y
(
°rög
, 
©åibuã
->
vÆue
);

2042 
WDDI_ERR
("C™'àfödárgumíà%†‰omárgli°",
©å_«me
);

2048 
gë_°rög_‰om_¨gli°
(
˛i_©åibuã_t
 *
¨gli°
,* 
©å_«me
, * 
°rög
)

2050 
˛i_©åibuã_t
* 
	g©åibuã
;

2051 i‡–(
	g©åibuã
 = 
gë_©åibuã_‰om_¨gli°
(
¨gli°
,
©å_«me
)) )

2054 
°r˝y
(
°rög
, 
©åibuã
->
vÆue
);

2058 
WDDI_ERR
("C™'àfödárgumíà%†‰omárgli°",
©å_«me
);

2062 
gë_ù_addªss_‰om_¨gli°
(
˛i_©åibuã_t
 *
¨gli°
,* 
©å_«me
, 
ù_addªss_t
 * 
ù_addªss
)

2064 
˛i_©åibuã_t
* 
	g©åibuã
;

2065 i‡–(
	g©åibuã
 = 
gë_©åibuã_‰om_¨gli°
(
¨gli°
,
©å_«me
)) )

2068 
	gªt
 = 
vÆid©e_ù_addªss_f‹m©
(
©åibuã
->
vÆue
);

2069 if(!
	gªt
)

2071 
Ârötf
(
°dîr
,"\¿îr‹ = {Ñós⁄ = 'thêù f‹m©(%sËf‹ %†o‡sg¢_poﬁ_¥oxy_£rvi˚_commom i†öc‹ª˘'}\n",
©åibuã
->
vÆue
,
©å_«me
);

2078 
	gù
;

2079 
	gù
 = 
öë_addr
(
©åibuã
->
vÆue
);

2080 i‡(
	gù
 == -1)

2082 
•rötf
(
˛i_îr‹_°r
,"C™'àc⁄vîà¨gumíà%†‰omárgli°\n",
©å_«me
);

2085 *
	gù_addªss
 = 
ù
;

2090 
•rötf
(
˛i_îr‹_°r
,"C™'àfödárgumíà%†‰omárgli°\n",
©å_«me
);

2097 
gë_©åibuã
(* 
∑ømëî
,
˛i_©åibuã_t
 *
©åibuãs
,˛i_©åibuã_à*
©åibuã
)

2099 
	g©åibuã_cou¡î
 = 0;

2103 *
	g©åibuã
 = 
©åibuãs
[
©åibuã_cou¡î
];

2104 i‡–(*
	g©åibuã
).
	g«me
 =
NULL
)

2107 
WDDI_ERR
("P¨amëî %†i†nŸá vÆidÖ¨amëî %d",
∑ømëî
,
©åibuã_cou¡î
);

2108  
	gFALSE
;

2110 i‡(!
°rcmp
(
∑ømëî
, (*
©åibuã
).
«me
))

2112  
	gTRUE
;

2114 
	g©åibuã_cou¡î
++;

2119 
gë_¨gli°
(
¨gc
,** 
¨gv
,
˛i_©åibuã_t
 *
¨gli°
,
˛i_mëhod_t
 *
mëhod
,˛i_©åibuã_à*
©åibuãs
)

2121 
	g¨gli°_cou¡î
 = 
ATTRIBUTE_POS
;

2122 
	g¨gv_cou¡î
 = 
ATTRIBUTE_POS
;

2123 
	gªt_vÆ
 = 
TRUE
;

2126 
	gi
 = 0;

2127  
	gi
 = 0 ; i < 
	gARGLIST_BUFLEN
; i++)

2129 
	g¨gli°
[
i
].
	g«me
 = 
NULL
;

2131 
	g¨gli°
[
PROGNAME_POS
].
	g«me
 = 
¨gv
[PROGNAME_POS];

2132 
	g¨gli°
[
CLASS_POS
].
	g«me
 = 
¨gv
[CLASS_POS];

2133 
	g¨gli°
[
METHOD_POS
].
	g«me
 = 
¨gv
[METHOD_POS];

2134 
	g∑ømëîs
[256];

2135 i‡–
	g¨gc
 =
METHOD_POS
+1 )

2137  
TRUE
;

2139 i‡–
	g©åibuãs
 =
NULL
 )

2142 
WDDI_ERR
("Nÿ∑ømëî†f‹ mëhod: %s",
¨gli°
[
METHOD_POS
].
«me
);

2143  
	gFALSE
;

2147 if(
	g©åibuãs
[1].
	g«me
 =
NULL
)

2148 
¥ötf
("The class_attribute_name = NULL!\n");

2150 
¥ötf
("Thê˛ass_©åibuã_«mê%s!\n",
©åibuãs
[0].
«me
);

2158 
	gªt_vÆ
 = 
gë_©åibuã
(
¨gv
[
¨gv_cou¡î
],
©åibuãs
,&
¨gli°
[
¨gli°_cou¡î
]);

2159 i‡–
	gªt_vÆ
 !
TRUE
 )

2170  
¨gli°
[
¨gli°_cou¡î
].
ty≥
 )

2172 
CLI_OPTION_U64
:

2173 i‡(
¨gv_cou¡î
 < 
¨gc
 -1 )

2176 
¨gv_cou¡î
++;

2182 i‡–
	g¨gli°
[
¨gli°_cou¡î
].
	gcom∂ëi⁄_h™dÀr
 !
NULL
)

2185 
WDDI_ERR
("VÆid o±i⁄†f‹ %s:",
¨gli°
[
¨gli°_cou¡î
].
«me
);

2186 (*
	g¨gli°
[
¨gli°_cou¡î
].
	gcom∂ëi⁄_h™dÀr
)(arglist);

2187 
	gªt_vÆ
 = 
FALSE
;

2191 
WDDI_ERR
("%†√ed†™árgumít!",
¨gli°
[
¨gli°_cou¡î
].
«me
);

2192 
	gªt_vÆ
 = 
FALSE
;

2195 
	gCLI_OPTION_STRING
:

2196 i‡(
¨gv_cou¡î
 < 
¨gc
 -1)

2199 
¨gv_cou¡î
++;

2205 i‡–
	g¨gli°
[
¨gli°_cou¡î
].
	gcom∂ëi⁄_h™dÀr
 !
NULL
)

2208 
WDDI_ERR
("VÆid o±i⁄†f‹ %s:",
¨gli°
[
¨gli°_cou¡î
].
«me
);

2209 (*
	g¨gli°
[
¨gli°_cou¡î
].
	gcom∂ëi⁄_h™dÀr
)(arglist);

2210 
	gªt_vÆ
 = 
FALSE
;

2214 
WDDI_ERR
("%†√ed†™árgumít!",
¨gli°
[
¨gli°_cou¡î
].
«me
);

2215 
	gªt_vÆ
 = 
FALSE
;

2218 
	gCLI_OPTION_ENUM
:

2219 i‡(
¨gv_cou¡î
 < 
¨gc
 -1)

2221 
¨gv_cou¡î
++;

2226 i‡–
	g¨gli°
[
¨gli°_cou¡î
].
	gcom∂ëi⁄_h™dÀr
 !
NULL
)

2229 
WDDI_ERR
("VÆid o±i⁄†f‹ %s:",
¨gli°
[
¨gli°_cou¡î
].
«me
);

2230 (*
	g¨gli°
[
¨gli°_cou¡î
].
	gcom∂ëi⁄_h™dÀr
)(arglist);

2231 
	gªt_vÆ
 = 
FALSE
;

2235 
WDDI_ERR
("%†√ed†™árgumít!",
¨gli°
[
¨gli°_cou¡î
].
«me
);

2236 
	gªt_vÆ
 = 
FALSE
;

2239 
	gCLI_OPTION_INT_LIST
:

2240 i‡(
¨gv_cou¡î
 < 
¨gc
 -1)

2242 
¨gv_cou¡î
++;

2247 i‡–
	g¨gli°
[
¨gli°_cou¡î
].
	gcom∂ëi⁄_h™dÀr
 !
NULL
)

2250 
WDDI_ERR
("VÆid o±i⁄†f‹ %s:",
¨gli°
[
¨gli°_cou¡î
].
«me
);

2251 (*
	g¨gli°
[
¨gli°_cou¡î
].
	gcom∂ëi⁄_h™dÀr
)(arglist);

2252 
	gªt_vÆ
 = 
FALSE
;

2256 
WDDI_ERR
("%†√ed†™árgumít!",
¨gli°
[
¨gli°_cou¡î
].
«me
);

2257 
	gªt_vÆ
 = 
FALSE
;

2260 
	gCLI_OPTION_IPV4_ADDRESS
:

2261 i‡(
¨gv_cou¡î
 < 
¨gc
 -1 )

2263 
¨gv_cou¡î
++;

2268 i‡–
	g¨gli°
[
¨gli°_cou¡î
].
	gcom∂ëi⁄_h™dÀr
 !
NULL
)

2271 
WDDI_ERR
("VÆid o±i⁄†f‹ %s:",
¨gli°
[
¨gli°_cou¡î
].
«me
);

2272 (*
	g¨gli°
[
¨gli°_cou¡î
].
	gcom∂ëi⁄_h™dÀr
)(arglist);

2273 
	gªt_vÆ
 = 
FALSE
;

2277 
WDDI_ERR
("%†√ed†™árgumít!",
¨gli°
[
¨gli°_cou¡î
].
«me
);

2278 
	gªt_vÆ
 = 
FALSE
;

2281 
	gCLI_OPTION_FLOAT
:

2282 i‡(
¨gv_cou¡î
 < 
¨gc
 -1 )

2284 
¨gv_cou¡î
++;

2289 i‡–
	g¨gli°
[
¨gli°_cou¡î
].
	gcom∂ëi⁄_h™dÀr
 !
NULL
)

2292 
WDDI_ERR
("VÆid o±i⁄†f‹ %s:",
¨gli°
[
¨gli°_cou¡î
].
«me
);

2293 (*
	g¨gli°
[
¨gli°_cou¡î
].
	gcom∂ëi⁄_h™dÀr
)(arglist);

2294 
	gªt_vÆ
 = 
FALSE
;

2298 
WDDI_ERR
("%†√ed†™árgumít!",
¨gli°
[
¨gli°_cou¡î
].
«me
);

2299 
	gªt_vÆ
 = 
FALSE
;

2302 
	gCLI_OPTION_IP_ENDPOINT_ADDRESS
:

2303 i‡(
¨gv_cou¡î
 < 
¨gc
 -1 )

2305 
¨gv_cou¡î
++;

2310 i‡–
	g¨gli°
[
¨gli°_cou¡î
].
	gcom∂ëi⁄_h™dÀr
 !
NULL
)

2313 
WDDI_ERR
("VÆid o±i⁄†f‹ %s:",
¨gli°
[
¨gli°_cou¡î
].
«me
);

2314 (*
	g¨gli°
[
¨gli°_cou¡î
].
	gcom∂ëi⁄_h™dÀr
)(arglist);

2315 
	gªt_vÆ
 = 
FALSE
;

2319 
WDDI_ERR
("%†√ed†™árgumít!",
¨gli°
[
¨gli°_cou¡î
].
«me
);

2320 
	gªt_vÆ
 = 
FALSE
;

2323 
	gCLI_OPTION_STRING_LIST
:

2324 i‡(
¨gv_cou¡î
 < 
¨gc
 -1 )

2326 
¨gv_cou¡î
++;

2331 i‡–
	g¨gli°
[
¨gli°_cou¡î
].
	gcom∂ëi⁄_h™dÀr
 !
NULL
)

2334 
WDDI_ERR
("VÆid o±i⁄†f‹ %s:",
¨gli°
[
¨gli°_cou¡î
].
«me
);

2335 (*
	g¨gli°
[
¨gli°_cou¡î
].
	gcom∂ëi⁄_h™dÀr
)(arglist);

2336 
	gªt_vÆ
 = 
FALSE
;

2340 
WDDI_ERR
("%†√ed†™árgumít!",
¨gli°
[
¨gli°_cou¡î
].
«me
);

2341 
	gªt_vÆ
 = 
FALSE
;

2344 
	gCLI_OPTION_BITMAP
:

2345 i‡(
¨gv_cou¡î
 < 
¨gc
 -1)

2347 
¨gv_cou¡î
++;

2352 i‡–
	g¨gli°
[
¨gli°_cou¡î
].
	gcom∂ëi⁄_h™dÀr
 !
NULL
)

2355 
WDDI_ERR
("VÆid o±i⁄†f‹ %s:",
¨gli°
[
¨gli°_cou¡î
].
«me
);

2356 (*
	g¨gli°
[
¨gli°_cou¡î
].
	gcom∂ëi⁄_h™dÀr
)(arglist);

2357 
	gªt_vÆ
 = 
FALSE
;

2361 
WDDI_ERR
("%†√ed†™árgumít!",
¨gli°
[
¨gli°_cou¡î
].
«me
);

2362 
	gªt_vÆ
 = 
FALSE
;

2365 
	gCLI_OPTION_DNS_NAME
:

2366 i‡(
¨gv_cou¡î
 < 
¨gc
 -1)

2369 
¨gv_cou¡î
++;

2376 i‡–
	g¨gli°
[
¨gli°_cou¡î
].
	gcom∂ëi⁄_h™dÀr
 !
NULL
)

2379 
WDDI_ERR
("VÆid o±i⁄†f‹ %s:",
¨gli°
[
¨gli°_cou¡î
].
«me
);

2380 (*
	g¨gli°
[
¨gli°_cou¡î
].
	gcom∂ëi⁄_h™dÀr
)(arglist);

2381 
	gªt_vÆ
 = 
FALSE
;

2385 
WDDI_ERR
("%†√ed†™árgumít!",
¨gli°
[
¨gli°_cou¡î
].
«me
);

2386 
	gªt_vÆ
 = 
FALSE
;

2389 
	gCLI_OPTION_NAME_ONLY
:

2390 
¨gv_cou¡î
++;

2391 
	gªt_vÆ
 = 
TRUE
;

2395 
WDDI_ERR
("InvÆidÖ¨amëî %†o‡ty≥: %d",
¨gli°
[
¨gli°_cou¡î
].
«me
,¨gli°[¨gli°_cou¡î].
ty≥
);

2396 
	gªt_vÆ
 = 
FALSE
;

2404 
°r˝y
(
¨gli°
[
¨gli°_cou¡î
].
vÆue
,
¨gv
[
¨gv_cou¡î
]);

2407 
	g¨gli°_cou¡î
++;

2408 
	g¨gv_cou¡î
++;

2409 i‡–
	gªt_vÆ
 !
TRUE
 )

2412 
¨gli°
[
¨gli°_cou¡î
].
«me
 = 
NULL
;

2413  
	gªt_vÆ
;

2415 i‡–
	g¨gv_cou¡î
 >
¨gc
 )

2418 i‡–
is_curs‹_bey⁄d_∑ømëî
(Ë!
TRUE
 )

2420 i‡–
¨gli°
[
¨gli°_cou¡î
-1].
com∂ëi⁄_h™dÀr
 !
NULL
 )

2421 (*
¨gli°
[
¨gli°_cou¡î
-1].
com∂ëi⁄_h™dÀr
)(arglist);

2425 
	g¨gli°
[
¨gli°_cou¡î
].
	g«me
 = 
NULL
;

2426  
	gªt_vÆ
;

2436 
is_˛ass
(c⁄° * 
«me
)

2438 
˛i_˛ass_t
 
	g˛ass
;

2439 
	g˛ass_ödex
 = -1;

2440 i‡(
	g«me
 =
NULL
 )

2441  
FALSE
;

2444 
	g˛ass
 = 
˛ass_èbÀ
[++
˛ass_ödex
];

2445 i‡(
	g˛ass
.
	g«me
 =
NULL
 )

2446  
FALSE
;

2447 i‡(
°rcmp
(
˛ass
.
«me
,name))

2449  
	gTRUE
;

2455 
˛i_föd_mëhod
(
¨gc
, ** 
¨gv
,
˛i_mëhod_t
 *
mëhod_èbÀ
, cli_mëhod_à*
mëhod
)

2457 * 
	gmëhod_«me
 = 
¨gv
[
METHOD_POS
];

2458 
˛i_mëhod_t
 
	gmëhod1
;

2459 
	gmëhod_ödex
 = -1;

2460 i‡(
	gmëhod_«me
 =
NULL
 )

2462 
•rötf
(
˛i_îr‹_°r
,"Available methods:\n");

2464  
	gFALSE
;

2468 
	gmëhod1
 = 
mëhod_èbÀ
[++
mëhod_ödex
];

2470 i‡(
	gmëhod1
.
	g«me
 =
NULL
 )

2473 
WDDI_ERR
(
˛i_îr‹_°r
,"MëhodÇamê%†nŸ found!\nAvaûabÀ mëhods:",
mëhod_«me
);

2475  
	gFALSE
;

2477 i‡(
°rcmp
(
mëhod1
.
«me
,
mëhod_«me
))

2481 *
	gmëhod
 = 
mëhod1
;

2483  
	gTRUE
;

2489 
˛i_föd_˛ass
(
¨gc_loˇl
, ** 
¨gv_loˇl
, 
˛i_˛ass_t
 *
˛ass
)

2491 * 
	g˛ass_«me
 = 
¨gv_loˇl
[
CLASS_POS
];

2492 
˛i_˛ass_t
 
	g˛ass1
;

2493 
	g˛ass_ödex
 = -1;

2494 i‡(
	g˛ass_«me
 =
NULL
 )

2496 
•rötf
(
˛i_îr‹_°r
,"Avaliable classes:\n");

2498  
	gFALSE
;

2502 
	g˛ass1
 = 
˛ass_èbÀ
[++
˛ass_ödex
];

2503 i‡(
	g˛ass1
.
	g«me
 =
NULL
 )

2505 
•rötf
(
˛i_îr‹_°r
,"Available classes:\n");

2507  
	gFALSE
;

2509 i‡(
°rcmp
(
˛ass1
.
«me
,
˛ass_«me
))

2513 *
	g˛ass
 = 
˛ass1
;

2515  
	gTRUE
;

2519 #i‚de‡
TEST


2520 
	#TEST


	)

2523 #ifde‡
TEST


2526 
ã°_¥öt_xml_∑r£
(
ex∑t_d©a_t
 *
ex∑t_d©a
, c⁄° *
ñemít
)

2528 ** 
	g¨gv_loˇl
 = 
ex∑t_d©a
->
¨gv_loˇl
;

2529 
	gi
 = 0;

2530 
¥ötf
("\√Àmít=%s\n",
ñemít
);

2531  
	gi
 < 
	gex∑t_d©a
->
	g¨gc_loˇl
 )

2533 
¥ötf
("%†",
¨gv_loˇl
[
i
]);

2534 
	gi
++;

2538 
¥ötf
("\n");

2544 
	$£rvî_°¨t_h™dÀr
(*
d©a
, c⁄° *
ñemít
, c⁄° **
©åibuã
)

2546 
ex∑t_d©a_t
 *
ex∑t_d©a
;

2547 
ex∑t_d©a
 = (
ex∑t_d©a_t
*Ë
d©a
;

2549 i‡–
ex∑t_d©a
->
öside_˛ass
 =
FALSE
 &&Éx∑t_d©a->
öside_©åibuã
 == FALSE )

2551 i‡–
	`is_˛ass
(
ñemít
) )

2553 
ex∑t_d©a
->
öside_˛ass
 = 
TRUE
;

2554 
i
;

2555 
i
=0 ; i < 
ARGLIST_BUFLEN
 ; i++)

2557 *
ex∑t_d©a
->
¨gv_loˇl
[
i
] = 0;

2559 
	`°r˝y
(
ex∑t_d©a
->
¨gv_loˇl
[
CLASS_POS
],
ñemít
);

2560 
	`°r˝y
(
ex∑t_d©a
->
¨gv_loˇl
[
METHOD_POS
],"create_internal");

2561 
ex∑t_d©a
->
¨gc_loˇl
 = 
METHOD_POS
+1;

2566 i‡–!(
	`°rcmp
(
ñemít
,"configuration_fragment") == 0 || strcmp(element,"model_version") == 0) )

2577 i‡–
ex∑t_d©a
->
öside_˛ass
 =
TRUE
 &&Éx∑t_d©a->
öside_©åibuã
 =
FALSE
 )

2579 i‡–
ex∑t_d©a
->
¨gc_loˇl
 >
ARGLIST_BUFLEN
)

2581 
	`Ârötf
(
°dîr
,"\nXMLÉlement overflow in file: %s beforeÜine=%ld\nPossiblyá missingÉndÅag?\n",

2582 
fûíame_cuºít
, 
	`XML_GëCuºítLöeNumbî
(
ex∑t_d©a
->
∑r£r
));

2583 
ex∑t_d©a
->
¨gc_loˇl
 = 
METHOD_POS
+1;

2584 
∑r£_îr‹
 = -1;

2587 
ex∑t_d©a
->
öside_©åibuã
 = 
TRUE
;

2589 
	`°r˝y
(
ex∑t_d©a
->
¨gv_loˇl
[ex∑t_d©a->
¨gc_loˇl
],
ñemít
);

2590 
ex∑t_d©a
->
¨gc_loˇl
++;

2594 
	}
}

2597 
	$£rvî_d©a_h™dÀr
(*
h™dÀr_d©a
, c⁄° *
xml_d©a
, 
Àngth
) {

2598 
ex∑t_d©a_t
 *
ex∑t_d©a
;

2599 
ex∑t_d©a
 = (
ex∑t_d©a_t
*)
h™dÀr_d©a
;

2600 i‡–
Àngth
 > 
ARGV_MAX_CHARACTERS
 )

2602 
∑r£_îr‹
 = -1;

2603 
	`Ârötf
(
°dîr
,"\nXML data overflow in file: %s beforeÜine=%ld\nDon'tállow XML dataÅoÜargerÅhan %u characters\n",

2604 
fûíame_cuºít
, 
	`XML_GëCuºítLöeNumbî
(
ex∑t_d©a
->
∑r£r
), 
ARGV_MAX_CHARACTERS
);

2608 i‡(
ex∑t_d©a
->
öside_©åibuã
 =
TRUE
 && 
xml_d©a
 !
NULL
 )

2610 i‡–
ex∑t_d©a
->
¨gc_loˇl
 >
ARGLIST_BUFLEN
)

2612 
∑r£_îr‹
 = -1;

2613 
	`Ârötf
(
°dîr
,"\nXMLÉlement overflow in file: %s beforeÜine=%ld\nPossiblyá missingÉndÅag?\n",

2614 
fûíame_cuºít
, 
	`XML_GëCuºítLöeNumbî
(
ex∑t_d©a
->
∑r£r
));

2615 
ex∑t_d©a
->
¨gc_loˇl
 = 
METHOD_POS
+1;

2623 
	`°∫ˇt
(
ex∑t_d©a
->
¨gv_loˇl
[ex∑t_d©a->
¨gc_loˇl
],
xml_d©a
,
Àngth
);

2628 
	}
}

2632 
£rvî_íd_h™dÀr
(*
d©a
, c⁄° *
ñemít
)

2634 
ex∑t_d©a_t
 *
	gex∑t_d©a
;

2635 
	gex∑t_d©a
 = (
ex∑t_d©a_t
*)
d©a
;

2636 **
	g¨gv_loˇl
=
ex∑t_d©a
->
¨gv_loˇl
;

2637 
	g¨gc_loˇl
 = 
ex∑t_d©a
->
¨gc_loˇl
;

2639 i‡–
	gex∑t_d©a
->
	göside_˛ass
 =
TRUE
 && 
ex∑t_d©a
->
öside_©åibuã
 =
FALSE
 )

2641 i‡–
is_˛ass
(
ñemít
) )

2643 
ex∑t_d©a
->
öside_˛ass
 = 
FALSE
;

2647 
˛i_˛ass_t
 
	g˛ass
;

2648 
˛i_mëhod_t
 
	gmëhod
;

2649 
˛i_©åibuã_t
 
	g¨gli°
[
ARGLIST_BUFLEN
];

2651 
°r˝y
(
˛i_îr‹_°r
,"");

2652 
°r˝y
(
˛i_com∂ëi⁄_°r
,"");

2654 i‡–
˛i_föd_˛ass
(
¨gc_loˇl
,
¨gv_loˇl
,&
˛ass
) &&

2655 
˛i_föd_mëhod
(
¨gc_loˇl
,
¨gv_loˇl
,
˛ass
.
mëhods
,&
mëhod
) &&

2656 
gë_¨gli°
(
¨gc_loˇl
,
¨gv_loˇl
,
¨gli°
,&
mëhod
,
˛ass
.
©åibuãs
)

2662 
¥öt_¨gli°
(
¨gli°
);

2665 (*
	gmëhod
.mëhod)(
	g¨gli°
,
	gex∑t_d©a
->
	g≈_c⁄figuª_±r
);

2666 
	gi
;

2667 
	gi
=0 ; i < 
	gARGLIST_BUFLEN
 ; i++)

2669 *
	g¨gv_loˇl
[
i
] = 0;

2674 
	g∑r£_îr‹
 = -1;

2675 
Ârötf
(
°dîr
,"\nEº‹ i¿fûe: %†bef‹êlöe=%ld",
fûíame_cuºít
, 
XML_GëCuºítLöeNumbî
(
ex∑t_d©a
->
∑r£r
));

2676 
Ârötf
(
°dîr
,
˛i_îr‹_°r
);

2677 
Ârötf
(
°dîr
,
˛i_com∂ëi⁄_°r
);

2678 
Ârötf
(
°dîr
,"\n");

2683 i‡–
	gex∑t_d©a
->
	göside_˛ass
 =
TRUE
 && 
ex∑t_d©a
->
öside_©åibuã
 == TRUE) {

2684 
ex∑t_d©a
->
öside_©åibuã
 = 
FALSE
;

2685 
	gex∑t_d©a
->
	g¨gc_loˇl
++;

2692 
‰ì_¨gv_loˇl
(** 
¨gv_loˇl
)

2694 
	gi
;

2695 
	gi
 = 0; i < 
	gARGLIST_BUFLEN
; i++ )

2697 i‡–
	g¨gv_loˇl
[
i
] !
NULL
 )

2699 
‰ì
 (
¨gv_loˇl
[
i
]);

2700 
	g¨gv_loˇl
[
i
] = 
NULL
;

2703 i‡–
	g¨gv_loˇl
 !
NULL
 )

2705 
‰ì
(
¨gv_loˇl
);

2706 
	g¨gv_loˇl
 = 
NULL
;

2710 
ex∑t_∑r£r
(* 
fûíame
,
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
)

2713 
ex∑t_d©a_t
 
	gex∑t_d©a
;

2714 
	gex∑t_d©a
.
	göside_˛ass
 = 0;

2715 
	gex∑t_d©a
.
	göside_©åibuã
 = 0;

2716 
	gex∑t_d©a
.
	g¨gc_loˇl
 = 
PROGNAME_POS
;

2718 
	gcuºít_fûíame
 = 
fûíame
;

2720 
	gex∑t_d©a
.
	g¨gv_loˇl
 = (**Ë
mÆloc
–(
ARGLIST_BUFLEN
+1) * (*));

2721 i‡–
	gex∑t_d©a
.
	g¨gv_loˇl
 =
NULL
 )  -1;

2722 
	gi
;

2723 
	gi
 = 0; i < 
	gARGLIST_BUFLEN
; i++ )

2725 
	gex∑t_d©a
.
	g¨gv_loˇl
[
i
] = 
mÆloc
–(
ARGV_MAX_CHARACTERS
+1)*());

2726 i‡–
	gex∑t_d©a
.
	g¨gv_loˇl
[
i
] =
NULL
 )  -1;

2728 
°r˝y
(
ex∑t_d©a
.
¨gv_loˇl
[
PROGNAME_POS
],"spp");

2730 
°r˝y
(
fûíame_cuºít
,
fûíame
);

2732 
XML_P¨£r
 
	g∑r£r
 = 
XML_P¨£rCª©e
(
NULL
);

2733 
	gex∑t_d©a
.
	g∑r£r
 = 
∑r£r
;

2734 
	gex∑t_d©a
.
	g≈_c⁄figuª_±r
 = 
≈_c⁄figuª_±r
;

2736 i‡(! 
	g∑r£r
 ) {

2737 
Ârötf
(
°dîr
, "îr‹ {ªas⁄='Couldn'àÆloˇã mem‹y f‹Ö¨£r',fûíame=%s}\n",
fûíame
);

2738 
‰ì_¨gv_loˇl
(
ex∑t_d©a
.
¨gv_loˇl
);

2742 
XML_SëEÀmítH™dÀr
(
∑r£r
, 
£rvî_°¨t_h™dÀr
, 
£rvî_íd_h™dÀr
);

2743 
XML_SëCh¨a˘îD©aH™dÀr
(
∑r£r
, 
£rvî_d©a_h™dÀr
);

2744 
XML_SëU£rD©a
(
∑r£r
,(*)&
ex∑t_d©a
);

2746 
FILE
 *
	gxml_fûe
;

2747 i‡–(
	gxml_fûe
 = 
f›í
(
fûíame
,"r"ËË=
NULL
 )

2749 
Ârötf
(
°dîr
,"îr‹ {ªas⁄='îr‹ o≥nög fûe',fûíame=%s}\n",
fûíame
);

2750 
‰ì_¨gv_loˇl
(
ex∑t_d©a
.
¨gv_loˇl
);

2754 
	gd⁄e
 = 0;

2755 
	gÀn
 = 0;

2757 
	gbuff
[
XML_PARSER_BUFFER_SIZE
 + 1] = "";

2760 
mem£t
(
buff
, '\0', 
XML_PARSER_BUFFER_SIZE
 + 1);

2761 
	gÀn
 = 
‰ód
(
buff
, 1, 
XML_PARSER_BUFFER_SIZE
, 
xml_fûe
);

2762 i‡(
„º‹
(
xml_fûe
)) {

2763 
Ârötf
(
°dîr
,"îr‹ {ªas⁄='îr‹Ñódög fûe',fûíame=%s}\n",
fûíame
);

2764 
XML_P¨£rFªe
(
∑r£r
);

2765 
‰ì_¨gv_loˇl
(
ex∑t_d©a
.
¨gv_loˇl
);

2766 
f˛o£
(
xml_fûe
);

2769 
	gd⁄e
 = 
„of
(
xml_fûe
);

2771 i‡(! 
XML_P¨£
(
∑r£r
, 
buff
, 
Àn
, 
d⁄e
)) {

2772 
Ârötf
(
°dîr
, "error {reason='errorÖarsing file',filename=%s,Üine=%ld, specific_reason=%s}\n",

2773 
fûíame
,

2774 
XML_GëCuºítLöeNumbî
(
∑r£r
),

2775 
XML_Eº‹Såög
(
XML_GëEº‹Code
(
∑r£r
)));

2776 
XML_P¨£rFªe
(
∑r£r
);

2777 
‰ì_¨gv_loˇl
(
ex∑t_d©a
.
¨gv_loˇl
);

2778 
f˛o£
(
xml_fûe
);

2781 i‡(
	gd⁄e
)

2785 
‰ì_¨gv_loˇl
(
ex∑t_d©a
.
¨gv_loˇl
);

2786 
XML_P¨£rFªe
(
∑r£r
);

2787 
f˛o£
(
xml_fûe
);

2793 
	g≈_c⁄figuª_±r
->
	gifMAC§c
[0] = 0x00;

2794 
	g≈_c⁄figuª_±r
->
	gifMAC§c
[1] = 0x01;

2795 
	g≈_c⁄figuª_±r
->
	gifMAC§c
[2] = 0x02;

2796 
	g≈_c⁄figuª_±r
->
	gifMAC§c
[3] = 0x03;

2797 
	g≈_c⁄figuª_±r
->
	gifMAC§c
[4] = 0x04;

2798 
	g≈_c⁄figuª_±r
->
	gifMAC§c
[5] = 0x05;

2803 
¥ötf
("------------- STRU_SET_INITAIL_CONFIG \n");

2804 
¥ötf
("°m1_id = %d,Årunk_id = %d, group_id = %d,\n", 
g_°m1_id
,
g_åunk_id
, 
g_group_id
);

2805 
¥ötf
("VœnFœg: %d \n", 
≈_c⁄figuª_±r
->
VœnFœg
);

2806 
¥ötf
("VœnTag: %d \n", 
≈_c⁄figuª_±r
->
VœnTag
);

2807 
¥ötf
("O±î©eMode: %d \n", 
≈_c⁄figuª_±r
->
O±î©eMode
);

2808 
	gi
 = 0;i<6;i++){

2809 
¥ötf
("ifMAC§c[%d]: %x \n", 
i
,
≈_c⁄figuª_±r
->
ifMAC§c
[i]);

2811 
¥ötf
("ifI∑ddr: %x \n", 
≈_c⁄figuª_±r
->
ifI∑ddr
);

2812 
¥ötf
("ifIpNëMask: %x \n", 
≈_c⁄figuª_±r
->
ifIpNëMask
);

2813 
¥ötf
("°m1_num: %d \n", 
≈_c⁄figuª_±r
->
°m1_num
);

2814 
¥ötf
("NRI_bôLí: %d \n", 
≈_c⁄figuª_±r
->
NRI_bôLí
);

2815 
¥ötf
("P‹tPoﬁSize: %d \n",
≈_c⁄figuª_±r
->
P‹tPoﬁSize
);

2816 
¥ötf
("STRU_STM1_CFG_INFO.E1T1ty≥: %d \n", 
≈_c⁄figuª_±r
->
°ru_°m1_cfg_öfo
[
g_°m1_id
].
E1T1ty≥
);

2818 
¥ötf
("°ru_°m1_cfg_öfo[%d].åunk_öfo[%d].O±_Mode: %d \n", 
g_°m1_id
,
g_åunk_id
,
≈_c⁄figuª_±r
->
°ru_°m1_cfg_öfo
[g_°m1_id].
åunk_öfo
[g_åunk_id].
O±_Mode
);

2819 
¥ötf
("°ru_°m1_cfg_öfo[%d].åunk_öfo[%d].˛ock_mode: %d \n", 
g_°m1_id
, 
g_åunk_id
, 
≈_c⁄figuª_±r
->
°ru_°m1_cfg_öfo
[g_°m1_id].
åunk_öfo
[g_åunk_id].
˛ock_mode
);

2820 
¥ötf
("°ru_°m1_cfg_öfo[%d].åunk_öfo[%d].group_öfo[%d].¸c_ty≥: %d \n",
g_°m1_id
,
g_åunk_id
,
g_group_id
, 
≈_c⁄figuª_±r
->
°ru_°m1_cfg_öfo
[g_°m1_id].
åunk_öfo
[g_åunk_id].
group_öfo
[g_group_id].
¸c_ty≥
);

2821 
¥ötf
("°ru_°m1_cfg_öfo[%d].åunk_öfo[%d].group_öfo[%d].¶Ÿ_£À˘i⁄: %x \n",
g_°m1_id
,
g_åunk_id
,
g_group_id
, 
≈_c⁄figuª_±r
->
°ru_°m1_cfg_öfo
[g_°m1_id].
åunk_öfo
[g_åunk_id].
group_öfo
[g_group_id].
¶Ÿ_£À˘i⁄
);

2822 
¥ötf
("°ru_°m1_cfg_öfo[%d].åunk_öfo[%d].group_öfo[%d].PVCQos[%d].cú: %d \n",
g_°m1_id
,
g_åunk_id
,
g_group_id
,
g_dlci
, 
≈_c⁄figuª_±r
->
°ru_°m1_cfg_öfo
[g_°m1_id].
åunk_öfo
[g_åunk_id].
group_öfo
[g_group_id].
PVCQos
[g_dlci].
cú
);

2823 
¥ötf
("°ru_°m1_cfg_öfo[%d].åunk_öfo[%d].group_öfo[%d].PVCQos[%d].be: %d \n",
g_°m1_id
,
g_åunk_id
,
g_group_id
,
g_dlci
, 
≈_c⁄figuª_±r
->
°ru_°m1_cfg_öfo
[g_°m1_id].
åunk_öfo
[g_åunk_id].
group_öfo
[g_group_id].
PVCQos
[g_dlci].
be
);

2824 
¥ötf
("max_‰ame_size: %d \n", 
≈_c⁄figuª_±r
->
°ru_°m1_cfg_öfo
[
g_°m1_id
].
åunk_öfo
[
g_åunk_id
].
group_öfo
[
g_group_id
].
max_‰ame_size
);

2825 
¥ötf
("p->rouãInfo[%d].IpD°: %x \n", 
rouã_num
-1, 
≈_c⁄figuª_±r
->
rouãInfo
[rouã_num-1].
IpD°
);

2826 
¥ötf
("p->rouãInfo[%d].G©ewayIP: %x \n", 
rouã_num
-1, 
≈_c⁄figuª_±r
->
rouãInfo
[rouã_num-1].
G©ewayIP
);

2827 
¥ötf
("------------- STRU_SET_INITAIL_CONFIG \n");

2834 
˛i_≠∂y_c⁄f_fûes
–
glob_t
 
glob_p
,
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
 )

2836 
	gfûe_cou¡î
;

2837 
	gªt
 = 0;

2839 
	gfûe_cou¡î
 = 
glob_p
.
gl_∑thc
;

2844 
	g≈_c⁄figuª_±r
->
	gO±î©eMode
 = 
NPU_MODE_IP
;

2845 
	g≈_c⁄figuª_±r
->
	g°m1_num
 = 0;

2846 
	g≈_c⁄figuª_±r
->
	gVœnFœg
 = 
NPU_VLAN_DISABLE
;

2847 
	grouã_num
 = 0;

2849  
	gfûe_cou¡î
 > 0 && 
	gªt
 >= 0)

2851 
ªt
 = 
ex∑t_∑r£r
(
glob_p
.
gl_∑thv
[
fûe_cou¡î
 -1], 
≈_c⁄figuª_±r
);

2852 i‡–
	gªt
 < 0 || 
	g∑r£_îr‹
 < 0 )

2854 
	gfûe_cou¡î
--;

2858 i‡–
	gªt
 < 0 || 
	g∑r£_îr‹
 < 0)

2867 
föd_c⁄figuøti⁄_fûes
(
glob_t
 *
pglob
, * 
dúe˘‹y
)

2869 
	gÊags
 = 0;

2870 
	gtmp_fûe
[
FILENAME_MAX
];

2871 i‡–
	gdúe˘‹y
 !
NULL
 )

2873 
•rötf
(
tmp_fûe
,"%s/*.xml",
dúe˘‹y
);

2874  
glob
(
tmp_fûe
,
Êags
,
NULL
,
pglob
);

2881 
˛i_≠∂y_c⁄figuøti⁄_fûes_‰om_dú
(* 
c⁄figuøti⁄_dú
,
STRU_SET_INITAIL_CONFIG
 *
≈_c⁄figuª_±r
)

2883 
glob_t
 
	gglob_p
;

2884 
	gªt
;

2886 
	gªt
 = 
föd_c⁄figuøti⁄_fûes
(&
glob_p
,
c⁄figuøti⁄_dú
);

2887 i‡(
	gªt
 != 0 )

2889 
glob‰ì
(&
glob_p
);

2890  
	gªt
;

2892 
¥ötf
("\¿födÅhêc‹ª˘ fûêö %s. \n",
c⁄figuøti⁄_dú
);

2893 
	gªt
 = 
˛i_≠∂y_c⁄f_fûes
(
glob_p
, 
≈_c⁄figuª_±r
);

2894 i‡(
	gªt
 < 0 )

2896 
glob‰ì
(&
glob_p
);

2897  
	gªt
;

2899 
glob‰ì
(&
glob_p
);

2900  
	gªt
;

	@xs_ioctl.h

1 #i‚de‡
__XS_IOCTL_H


2 
	#__XS_IOCTL_H


	)

4 
	#XS_IOCTL_OS_VALUE
(
x
Ë(0xAF + x)

	)

6 
	#MMAP_IOCTL_SUPPRESS_DUP_SIGNAL
 
	`XS_IOCTL_OS_VALUE
(1)

	)

7 
	#MMAP_IOCTL_ENABLE_BUS_ERR_SIG
 
	`XS_IOCTL_OS_VALUE
(3)

	)

8 
	#MMAP_IOCTL_KERNEL_BUS_ERR_REPORT
 
	`XS_IOCTL_OS_VALUE
(4)

	)

9 
	#MMAP_IOCTL_REPLACE_BUS_ERR_KERNEL_REPORT_WITH_SIGNAL
 
	`XS_IOCTL_OS_VALUE
(5)

	)

10 
	#MMAP_IOCTL_READ_BOARD_GEN_CONF
 
	`XS_IOCTL_OS_VALUE
(6)

	)

12 
	#XS_IOCTL_CONSOLE_WRITE
 
	`XS_IOCTL_OS_VALUE
(7)

	)

13 
	#XS_IOCTL_CONSOLE_READ
 
	`XS_IOCTL_OS_VALUE
(8)

	)

14 
	#XS_IOCTL_THERMO_READ
 
	`XS_IOCTL_OS_VALUE
(9)

	)

15 
	#XS_IOCTL_RESET
 
	`XS_IOCTL_OS_VALUE
(10)

	)

16 
	#XS_IOCTL_FW_VERSION
 
	`XS_IOCTL_OS_VALUE
(11)

	)

17 
	#XS_IOCTL_I2C_PROG
 
	`XS_IOCTL_OS_VALUE
(12)

	)

18 
	#XS_IOCTL_FLASH_PROG
 
	`XS_IOCTL_OS_VALUE
(13)

	)

19 
	#XS_IOCTL_ENV_GET
 
	`XS_IOCTL_OS_VALUE
(14)

	)

20 
	#XS_IOCTL_REV_GET
 
	`XS_IOCTL_OS_VALUE
(15)

	)

21 
	#XS_IOCTL_ENV_GET32
 
	`XS_IOCTL_OS_VALUE
(16)

22 

	)

23 
	#PCI_CONSOLE_SIZE
 256

	)

26 
	mbuf
[
PCI_CONSOLE_SIZE
];

27 
	mbufLí
;

28 } 
	tXS_CONSOLE_BUF_DESC
;

31 *
	mbuf
;

32 
	mÀn
;

33 } 
	tXS_FILE_DESC
;

36 
	mdevNo
;

37 
	mthîmNo
;

38 
	mªg
;

39 
	mvÆue
;

40 } 
	tXS_THERMO_DESC
;

43 
	mFu£0
;

44 
	mFu£1
;

45 } 
	tXS_REV_DESC
;

	@/usr/include/arpa/inet.h

19 #i‚de‡
_ARPA_INET_H


20 
	#_ARPA_INET_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<√töë/ö.h
>

26 #i‚de‡
__sockÀn_t_deföed


27 
__sockÀn_t
 
	tsockÀn_t
;

28 
	#__sockÀn_t_deföed


	)

31 
__BEGIN_DECLS


35 
ö_addr_t
 
	$öë_addr
 (
__c⁄°
 *
__˝
Ë
__THROW
;

38 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

42 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

43 
__THROW
;

46 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

50 
ö_addr_t
 
	$öë_√tw‹k
 (
__c⁄°
 *
__˝
Ë
__THROW
;

54 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

59 
	$öë_±⁄
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

60 *
__ª°ri˘
 
__buf
Ë
__THROW
;

65 
__c⁄°
 *
	$öë_¡›
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

66 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

67 
__THROW
;

71 #ifde‡
__USE_MISC


74 
	$öë_©⁄
 (
__c⁄°
 *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

78 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

83 *
	$öë_√t_¡›
 (
__af
, 
__c⁄°
 *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, 
__c⁄°
 *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (
__c⁄°
 *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, 
__c⁄°
 *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/assert.h

23 #ifdef 
_ASSERT_H


25 #unde‡
_ASSERT_H


26 #unde‡
as£π


27 #unde‡
__ASSERT_VOID_CAST


29 #ifdef 
__USE_GNU


30 #unde‡
as£π_≥º‹


35 
	#_ASSERT_H
 1

	)

36 
	~<„©uªs.h
>

38 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

39 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

41 
	#__ASSERT_VOID_CAST
 ()

	)

49 #ifdef 
NDEBUG


51 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

59 #ifdef 
__USE_GNU


60 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

65 
__BEGIN_DECLS


68 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

69 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

70 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

73 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

74 
__löe
,

75 
__c⁄°
 *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


87 
	#as£π
(
ex¥
) \

88 ((
ex¥
) \

89 ? 
	`__ASSERT_VOID_CAST
 (0) \

90 : (
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
), \

91 
	`__ASSERT_VOID_CAST
 (0)))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : (
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
), \

98 
	`__ASSERT_VOID_CAST
 (0)))

	)

106 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

107 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

109 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

110 
	#__ASSERT_FUNCTION
 
__func__


	)

112 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #ifde‡
__USE_XOPEN


38 
	~<sys/°©.h
>

41 #ifdef 
__USE_MISC


42 #i‚de‡
R_OK


45 
	#R_OK
 4

	)

46 
	#W_OK
 2

	)

47 
	#X_OK
 1

	)

48 
	#F_OK
 0

	)

53 #ifde‡
__USE_XOPEN


54 
	#SEEK_SET
 0

	)

55 
	#SEEK_CUR
 1

	)

56 
	#SEEK_END
 2

	)

59 #ifde‡
__USE_ATFILE


60 
	#AT_FDCWD
 -100

	)

63 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

64 
	#AT_REMOVEDIR
 0x200

	)

66 
	#AT_SYMLINK_FOLLOW
 0x400

	)

67 
	#AT_EACCESS
 0x200

	)

76 
f˙é
 (
__fd
, 
__cmd
, ...);

84 #i‚de‡
__USE_FILE_OFFSET64


85 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

87 #ifde‡
__REDIRECT


88 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

89 
	`__n⁄nuŒ
 ((1));

91 
	#›í
 
›í64


	)

94 #ifde‡
__USE_LARGEFILE64


95 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

98 #ifde‡
__USE_ATFILE


108 #i‚de‡
__USE_FILE_OFFSET64


109 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

110 
	`__n⁄nuŒ
 ((2));

112 #ifde‡
__REDIRECT


113 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

114 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

116 
	#›í©
 
›í©64


	)

120 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

121 
	`__n⁄nuŒ
 ((2));

129 #i‚de‡
__USE_FILE_OFFSET64


130 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

132 #ifde‡
__REDIRECT


133 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

134 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

136 
	#¸ót
 
¸ót64


	)

139 #ifde‡
__USE_LARGEFILE64


140 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

143 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

144 && !
deföed
 
__USE_POSIX
))

153 
	#F_ULOCK
 0

	)

154 
	#F_LOCK
 1

	)

155 
	#F_TLOCK
 2

	)

156 
	#F_TEST
 3

	)

158 #i‚de‡
__USE_FILE_OFFSET64


159 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

161 #ifde‡
__REDIRECT


162 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

164 
	#lockf
 
lockf64


	)

167 #ifde‡
__USE_LARGEFILE64


168 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

172 #ifde‡
__USE_XOPEN2K


175 #i‚de‡
__USE_FILE_OFFSET64


176 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

177 
__advi£
Ë
__THROW
;

179 #ifde‡
__REDIRECT_NTH


180 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

181 
__off64_t
 
__Àn
, 
__advi£
),

182 
posix_Ádvi£64
);

184 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

187 #ifde‡
__USE_LARGEFILE64


188 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

189 
__advi£
Ë
__THROW
;

197 #i‚de‡
__USE_FILE_OFFSET64


198 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

200 #ifde‡
__REDIRECT


201 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

202 
__off64_t
 
__Àn
),

203 
posix_ÁŒoˇã64
);

205 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

208 #ifde‡
__USE_LARGEFILE64


209 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

213 
__END_DECLS


	@/usr/include/glob.h

19 #i‚def 
_GLOB_H


20 
	#_GLOB_H
 1

	)

22 
	~<sys/cdefs.h
>

24 
	g__BEGIN_DECLS


27 #i‚de‡
__size_t


28 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

29 
__SIZE_TYPE__
 
	t__size_t
;

30 #ifde‡
__USE_XOPEN


31 
__SIZE_TYPE__
 
	tsize_t
;

34 
	~<°ddef.h
>

35 #i‚de‡
__size_t


36 
	#__size_t
 
size_t


	)

42 #unde‡
__size_t


43 
	#__size_t
 
size_t


	)

47 
	#GLOB_ERR
 (1 << 0)

	)

48 
	#GLOB_MARK
 (1 << 1)

	)

49 
	#GLOB_NOSORT
 (1 << 2)

	)

50 
	#GLOB_DOOFFS
 (1 << 3)

	)

51 
	#GLOB_NOCHECK
 (1 << 4)

	)

52 
	#GLOB_APPEND
 (1 << 5)

	)

53 
	#GLOB_NOESCAPE
 (1 << 6)

	)

54 
	#GLOB_PERIOD
 (1 << 7)

	)

56 #i‡!
deföed
 
__USE_POSIX2
 || deföed 
__USE_BSD
 || deföed 
__USE_GNU


57 
	#GLOB_MAGCHAR
 (1 << 8)

	)

58 
	#GLOB_ALTDIRFUNC
 (1 << 9)

	)

59 
	#GLOB_BRACE
 (1 << 10)

	)

60 
	#GLOB_NOMAGIC
 (1 << 11)

	)

61 
	#GLOB_TILDE
 (1 << 12)

	)

62 
	#GLOB_ONLYDIR
 (1 << 13)

	)

63 
	#GLOB_TILDE_CHECK
 (1 << 14)

	)

65 
	#__GLOB_FLAGS
 (
GLOB_ERR
|
GLOB_MARK
|
GLOB_NOSORT
|
GLOB_DOOFFS
| \

66 
GLOB_NOESCAPE
|
GLOB_NOCHECK
|
GLOB_APPEND
| \

67 
GLOB_PERIOD
|
GLOB_ALTDIRFUNC
|
GLOB_BRACE
| \

68 
GLOB_NOMAGIC
|
GLOB_TILDE
|
GLOB_ONLYDIR
|
GLOB_TILDE_CHECK
)

	)

70 
	#__GLOB_FLAGS
 (
GLOB_ERR
|
GLOB_MARK
|
GLOB_NOSORT
|
GLOB_DOOFFS
| \

71 
GLOB_NOESCAPE
|
GLOB_NOCHECK
|
GLOB_APPEND
| \

72 
GLOB_PERIOD
)

	)

76 
	#GLOB_NOSPACE
 1

	)

77 
	#GLOB_ABORTED
 2

	)

78 
	#GLOB_NOMATCH
 3

	)

79 
	#GLOB_NOSYS
 4

	)

80 #ifde‡
__USE_GNU


83 
	#GLOB_ABEND
 
GLOB_ABORTED


	)

87 #ifde‡
__USE_GNU


88 
	g°©
;

92 
__size_t
 
	mgl_∑thc
;

93 **
	mgl_∑thv
;

94 
__size_t
 
	mgl_offs
;

95 
	mgl_Êags
;

99 (*
	mgl_˛o£dú
) (*);

100 #ifde‡
__USE_GNU


101 
	mdúít
 *(*
	mgl_ªaddú
) (*);

103 *(*
	mgl_ªaddú
) (*);

105 *(*
	mgl_›ídú
Ë(
__c⁄°
 *);

106 #ifde‡
__USE_GNU


107 (*
	mgl_l°©
Ë(
__c⁄°
 *
	m__ª°ri˘
, 
°©
 *__restrict);

108 (*
	mgl_°©
Ë(
__c⁄°
 *
	m__ª°ri˘
, 
°©
 *__restrict);

110 (*
	mgl_l°©
Ë(
__c⁄°
 *
	m__ª°ri˘
, *__restrict);

111 (*
	mgl_°©
Ë(
__c⁄°
 *
	m__ª°ri˘
, *__restrict);

113 } 
	tglob_t
;

115 #ifde‡
__USE_LARGEFILE64


116 #ifde‡
__USE_GNU


117 
	g°©64
;

121 
__size_t
 
	mgl_∑thc
;

122 **
	mgl_∑thv
;

123 
__size_t
 
	mgl_offs
;

124 
	mgl_Êags
;

128 (*
	mgl_˛o£dú
) (*);

129 #ifde‡
__USE_GNU


130 
	mdúít64
 *(*
	mgl_ªaddú
) (*);

132 *(*
	mgl_ªaddú
) (*);

134 *(*
	mgl_›ídú
Ë(
__c⁄°
 *);

135 #ifde‡
__USE_GNU


136 (*
	mgl_l°©
Ë(
__c⁄°
 *
	m__ª°ri˘
, 
°©64
 *__restrict);

137 (*
	mgl_°©
Ë(
__c⁄°
 *
	m__ª°ri˘
, 
°©64
 *__restrict);

139 (*
	mgl_l°©
Ë(
__c⁄°
 *
	m__ª°ri˘
, *__restrict);

140 (*
	mgl_°©
Ë(
__c⁄°
 *
	m__ª°ri˘
, *__restrict);

142 } 
	tglob64_t
;

145 #i‡
__USE_FILE_OFFSET64
 && 
__GNUC__
 < 2

146 
	#glob
 
glob64


	)

147 
	#glob‰ì
 
glob‰ì64


	)

158 #i‡!
deföed
 
__USE_FILE_OFFSET64
 || 
__GNUC__
 < 2

159 
glob
 (
__c⁄°
 *
__ª°ri˘
 
__∑âîn
, 
__Êags
,

160 (*
__îrfunc
Ë(
__c⁄°
 *, ),

161 
glob_t
 *
__ª°ri˘
 
__pglob
Ë
__THROW
;

164 
	$glob‰ì
 (
glob_t
 *
__pglob
Ë
__THROW
;

166 
	`__REDIRECT_NTH
 (
glob
, (
__c⁄°
 *
__ª°ri˘
 
__∑âîn
,

167 
__Êags
,

168 (*
__îrfunc
Ë(
__c⁄°
 *, ),

169 
glob_t
 *
__ª°ri˘
 
__pglob
), 
glob64
);

171 
	`__REDIRECT_NTH
 (
glob‰ì
, (
glob_t
 *
__pglob
), 
glob‰ì64
);

174 #ifde‡
__USE_LARGEFILE64


175 
	`glob64
 (
__c⁄°
 *
__ª°ri˘
 
__∑âîn
, 
__Êags
,

176 (*
__îrfunc
Ë(
__c⁄°
 *, ),

177 
glob64_t
 *
__ª°ri˘
 
__pglob
Ë
__THROW
;

179 
	$glob‰ì64
 (
glob64_t
 *
__pglob
Ë
__THROW
;

183 #ifde‡
__USE_GNU


189 
	$glob_∑âîn_p
 (
__c⁄°
 *
__∑âîn
, 
__quŸe
Ë
__THROW
;

192 
__END_DECLS


	@/usr/include/libgen.h

19 #i‚de‡
_LIBGEN_H


20 
	#_LIBGEN_H
 1

	)

22 
	~<„©uªs.h
>

24 
__BEGIN_DECLS


27 *
	$dú«me
 (*
__∑th
Ë
__THROW
;

35 *
	$__xpg_ba£«me
 (*
__∑th
Ë
__THROW
;

36 
	#ba£«me
 
__xpg_ba£«me


	)

38 
__END_DECLS


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/if.h

19 #i‚de‡
_LINUX_IF_H


20 
	#_LINUX_IF_H


	)

22 
	~<löux/ty≥s.h
>

23 
	~<löux/sockë.h
>

25 
	#IFNAMSIZ
 16

	)

26 
	~<löux/hdlc/io˘l.h
>

29 
	#IFF_UP
 0x1

	)

30 
	#IFF_BROADCAST
 0x2

	)

31 
	#IFF_DEBUG
 0x4

	)

32 
	#IFF_LOOPBACK
 0x8

	)

33 
	#IFF_POINTOPOINT
 0x10

	)

34 
	#IFF_NOTRAILERS
 0x20

	)

35 
	#IFF_RUNNING
 0x40

	)

36 
	#IFF_NOARP
 0x80

	)

37 
	#IFF_PROMISC
 0x100

	)

38 
	#IFF_ALLMULTI
 0x200

	)

40 
	#IFF_MASTER
 0x400

	)

41 
	#IFF_SLAVE
 0x800

	)

43 
	#IFF_MULTICAST
 0x1000

	)

45 
	#IFF_PORTSEL
 0x2000

	)

46 
	#IFF_AUTOMEDIA
 0x4000

	)

47 
	#IFF_DYNAMIC
 0x8000

	)

49 
	#IFF_LOWER_UP
 0x10000

	)

50 
	#IFF_DORMANT
 0x20000

	)

52 
	#IFF_VOLATILE
 (
IFF_LOOPBACK
|
IFF_POINTOPOINT
|
IFF_BROADCAST
|\

53 
IFF_MASTER
|
IFF_SLAVE
|
IFF_RUNNING
|
IFF_LOWER_UP
|
IFF_DORMANT
)

	)

56 
	#IFF_802_1Q_VLAN
 0x1

	)

57 
	#IFF_EBRIDGE
 0x2

	)

58 
	#IFF_SLAVE_INACTIVE
 0x4

	)

59 
	#IFF_MASTER_8023AD
 0x8

	)

60 
	#IFF_MASTER_ALB
 0x10

	)

61 
	#IFF_BONDING
 0x20

	)

62 
	#IFF_SLAVE_NEEDARP
 0x40

	)

63 
	#IFF_EXTENDED
 0x80

	)

64 
	#IFF_MASTER_ARPMON
 0x100

	)

66 
	#IFF_IN_NETPOLL
 0x1000

	)

67 
	#IFF_DISABLE_NETPOLL
 0x2000

	)

69 
	#IFF_BRIDGE_PORT
 0x4000

	)

70 
	#IFF_TX_SKB_SHARING
 0x8000

	)

73 
	#IF_GET_IFACE
 0x0001

	)

74 
	#IF_GET_PROTO
 0x0002

	)

77 
	#IF_IFACE_V35
 0x1000

	)

78 
	#IF_IFACE_V24
 0x1001

	)

79 
	#IF_IFACE_X21
 0x1002

	)

80 
	#IF_IFACE_T1
 0x1003

	)

81 
	#IF_IFACE_E1
 0x1004

	)

82 
	#IF_IFACE_SYNC_SERIAL
 0x1005

	)

83 
	#IF_IFACE_X21D
 0x1006

	)

86 
	#IF_PROTO_HDLC
 0x2000

	)

87 
	#IF_PROTO_PPP
 0x2001

	)

88 
	#IF_PROTO_CISCO
 0x2002

	)

89 
	#IF_PROTO_FR
 0x2003

	)

90 
	#IF_PROTO_FR_ADD_PVC
 0x2004

	)

91 
	#IF_PROTO_FR_DEL_PVC
 0x2005

	)

92 
	#IF_PROTO_X25
 0x2006

	)

93 
	#IF_PROTO_HDLC_ETH
 0x2007

	)

94 
	#IF_PROTO_FR_ADD_ETH_PVC
 0x2008

	)

95 
	#IF_PROTO_FR_DEL_ETH_PVC
 0x2009

	)

96 
	#IF_PROTO_FR_PVC
 0x200A

	)

97 
	#IF_PROTO_FR_ETH_PVC
 0x200B

	)

98 
	#IF_PROTO_RAW
 0x200C

	)

102 
	mIF_OPER_UNKNOWN
,

103 
	mIF_OPER_NOTPRESENT
,

104 
	mIF_OPER_DOWN
,

105 
	mIF_OPER_LOWERLAYERDOWN
,

106 
	mIF_OPER_TESTING
,

107 
	mIF_OPER_DORMANT
,

108 
	mIF_OPER_UP
,

113 
	mIF_LINK_MODE_DEFAULT
,

114 
	mIF_LINK_MODE_DORMANT
,

127 
	sifm≠


129 
	mmem_°¨t
;

130 
	mmem_íd
;

131 
	mba£_addr
;

132 
	múq
;

133 
	mdma
;

134 
	mp‹t
;

138 
	sif_£âögs


140 
	mty≥
;

141 
	msize
;

144 
øw_hdlc_¥Ÿo
 *
	møw_hdlc
;

145 
cisco_¥Ÿo
 *
	mcisco
;

146 
‰_¥Ÿo
 *
	m‰
;

147 
‰_¥Ÿo_pvc
 *
	m‰_pvc
;

148 
‰_¥Ÿo_pvc_öfo
 *
	m‰_pvc_öfo
;

151 
sync_£rül_£âögs
 *
	msync
;

152 
ã1_£âögs
 *
	mã1
;

153 } 
	mifs_ifsu
;

163 
	si‰eq


165 
	#IFHWADDRLEN
 6

	)

168 
	mi‰n_«me
[
IFNAMSIZ
];

169 } 
	mi‰_i‰n
;

172 
sockaddr
 
	mi‰u_addr
;

173 
sockaddr
 
	mi‰u_d°addr
;

174 
sockaddr
 
	mi‰u_brﬂdaddr
;

175 
sockaddr
 
	mi‰u_√tmask
;

176 
sockaddr
 
	mi‰u_hwaddr
;

177 
	mi‰u_Êags
;

178 
	mi‰u_ivÆue
;

179 
	mi‰u_mtu
;

180 
ifm≠
 
	mi‰u_m≠
;

181 
	mi‰u_¶ave
[
IFNAMSIZ
];

182 
	mi‰u_√w«me
[
IFNAMSIZ
];

183 * 
	mi‰u_d©a
;

184 
if_£âögs
 
	mi‰u_£âögs
;

185 } 
	mi‰_i‰u
;

188 
	#i‰_«me
 
i‰_i‰n
.
i‰n_«me


	)

189 
	#i‰_hwaddr
 
i‰_i‰u
.
i‰u_hwaddr


	)

190 
	#i‰_addr
 
i‰_i‰u
.
i‰u_addr


	)

191 
	#i‰_d°addr
 
i‰_i‰u
.
i‰u_d°addr


	)

192 
	#i‰_brﬂdaddr
 
i‰_i‰u
.
i‰u_brﬂdaddr


	)

193 
	#i‰_√tmask
 
i‰_i‰u
.
i‰u_√tmask


	)

194 
	#i‰_Êags
 
i‰_i‰u
.
i‰u_Êags


	)

195 
	#i‰_mëric
 
i‰_i‰u
.
i‰u_ivÆue


	)

196 
	#i‰_mtu
 
i‰_i‰u
.
i‰u_mtu


	)

197 
	#i‰_m≠
 
i‰_i‰u
.
i‰u_m≠


	)

198 
	#i‰_¶ave
 
i‰_i‰u
.
i‰u_¶ave


	)

199 
	#i‰_d©a
 
i‰_i‰u
.
i‰u_d©a


	)

200 
	#i‰_ifödex
 
i‰_i‰u
.
i‰u_ivÆue


	)

201 
	#i‰_b™dwidth
 
i‰_i‰u
.
i‰u_ivÆue


	)

202 
	#i‰_qÀn
 
i‰_i‰u
.
i‰u_ivÆue


	)

203 
	#i‰_√w«me
 
i‰_i‰u
.
i‰u_√w«me


	)

204 
	#i‰_£âögs
 
i‰_i‰u
.
i‰u_£âögs


	)

213 
	sifc⁄f


215 
	mifc_Àn
;

218 *
	mifcu_buf
;

219 
i‰eq
 *
	mifcu_ªq
;

220 } 
	mifc_ifcu
;

222 
	#ifc_buf
 
ifc_ifcu
.
ifcu_buf


	)

223 
	#ifc_ªq
 
ifc_ifcu
.
ifcu_ªq


	)

	@/usr/include/linux/if_tun.h

18 #i‚de‡
__IF_TUN_H


19 
	#__IF_TUN_H


	)

26 
	#TUN_READQ_SIZE
 500

	)

29 
	#TUN_TUN_DEV
 0x0001

	)

30 
	#TUN_TAP_DEV
 0x0002

	)

31 
	#TUN_TYPE_MASK
 0x000f

	)

33 
	#TUN_FASYNC
 0x0010

	)

34 
	#TUN_NOCHECKSUM
 0x0020

	)

35 
	#TUN_NO_PI
 0x0040

	)

36 
	#TUN_ONE_QUEUE
 0x0080

	)

37 
	#TUN_PERSIST
 0x0100

	)

38 
	#TUN_VNET_HDR
 0x0200

	)

41 
	#TUNSETNOCSUM
 
	`_IOW
('T', 200, )

	)

42 
	#TUNSETDEBUG
 
	`_IOW
('T', 201, )

	)

43 
	#TUNSETIFF
 
	`_IOW
('T', 202, )

	)

44 
	#TUNSETPERSIST
 
	`_IOW
('T', 203, )

	)

45 
	#TUNSETOWNER
 
	`_IOW
('T', 204, )

	)

46 
	#TUNSETLINK
 
	`_IOW
('T', 205, )

	)

47 
	#TUNSETGROUP
 
	`_IOW
('T', 206, )

	)

48 
	#TUNGETFEATURES
 
	`_IOR
('T', 207, )

	)

49 
	#TUNSETOFFLOAD
 
	`_IOW
('T', 208, )

	)

50 
	#TUNGETIFF
 
	`_IOR
('T', 210, )

	)

51 
	#TUNGETSNDBUF
 
	`_IOR
('T', 211, )

	)

52 
	#TUNSETSNDBUF
 
	`_IOW
('T', 212, )

	)

55 
	#IFF_TUN
 0x0001

	)

56 
	#IFF_TAP
 0x0002

	)

57 
	#IFF_NO_PI
 0x1000

	)

58 
	#IFF_ONE_QUEUE
 0x2000

	)

59 
	#IFF_VNET_HDR
 0x4000

	)

62 
	#TUN_F_CSUM
 0x01

	)

63 
	#TUN_F_TSO4
 0x02

	)

64 
	#TUN_F_TSO6
 0x04

	)

65 
	#TUN_F_TSO_ECN
 0x08

	)

67 
	stun_pi
 {

68 
	mÊags
;

69 
	m¥Ÿo
;

71 
	#TUN_PKT_STRIP
 0x0001

	)

	@/usr/include/malloc.h

20 #i‚de‡
_MALLOC_H


21 
	#_MALLOC_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°ddef.h
>

25 
	#__mÆloc_±r_t
 *

	)

28 
	#__mÆloc_size_t
 
size_t


	)

29 
	#__mÆloc_±rdiff_t
 
±rdiff_t


	)

31 #ifde‡
__GNUC__


33 
	#__MALLOC_P
(
¨gs
Ë¨g†
__THROW


	)

36 
	#__MALLOC_PMT
(
¨gs
Ë
	)
args

40 
	#__MALLOC_P
(
¨gs
Ë
	)
args

41 
	#__MALLOC_PMT
(
¨gs
Ë
	)
args

46 
__BEGIN_DECLS


49 *
mÆloc
 
__MALLOC_P
 ((
size_t
 
__size
)Ë
__©åibuã_mÆloc__
 
__wur
;

52 *
ˇŒoc
 
__MALLOC_P
 ((
size_t
 
__nmemb
, size_à
__size
))

53 
__©åibuã_mÆloc__
 
__wur
;

57 *
ªÆloc
 
__MALLOC_P
 ((*
__±r
, 
size_t
 
__size
))

58 
__©åibuã_mÆloc__
 
__©åibuã_w¨n_unu£d_ªsu…__
;

61 
‰ì
 
__MALLOC_P
 ((*
__±r
));

64 
c‰ì
 
__MALLOC_P
 ((*
__±r
));

67 *
memÆign
 
__MALLOC_P
 ((
size_t
 
__Æignmít
, size_à
__size
))

68 
__©åibuã_mÆloc__
 
__wur
;

71 *
vÆloc
 
__MALLOC_P
 ((
size_t
 
__size
))

72 
__©åibuã_mÆloc__
 
__wur
;

76 * 
pvÆloc
 
__MALLOC_P
 ((
size_t
 
__size
))

77 
__©åibuã_mÆloc__
 
__wur
;

81 *(*
__m‹ec‹e
Ë
__MALLOC_PMT
 ((
±rdiff_t
 
__size
));

84 *
__deÁu…_m‹ec‹e
 
__MALLOC_P
 ((
±rdiff_t
 
__size
))

85 
__©åibuã_mÆloc__
;

89 
	smÆlöfo
 {

90 
	m¨ía
;

91 
	m‹dblks
;

92 
	msmblks
;

93 
	mhblks
;

94 
	mhblkhd
;

95 
	musmblks
;

96 
	mfsmblks
;

97 
	mu‹dblks
;

98 
	mf‹dblks
;

99 
	mkìpco°
;

103 
mÆlöfo
 mÆlöfÿ
__MALLOC_P
 (());

106 #i‚de‡
M_MXFAST


107 
	#M_MXFAST
 1

	)

109 #i‚de‡
M_NLBLKS


110 
	#M_NLBLKS
 2

	)

112 #i‚de‡
M_GRAIN


113 
	#M_GRAIN
 3

	)

115 #i‚de‡
M_KEEP


116 
	#M_KEEP
 4

	)

120 
	#M_TRIM_THRESHOLD
 -1

	)

121 
	#M_TOP_PAD
 -2

	)

122 
	#M_MMAP_THRESHOLD
 -3

	)

123 
	#M_MMAP_MAX
 -4

	)

124 
	#M_CHECK_ACTION
 -5

	)

125 
	#M_PERTURB
 -6

	)

126 
	#M_ARENA_TEST
 -7

	)

127 
	#M_ARENA_MAX
 -8

	)

130 
mÆl›t
 
__MALLOC_P
 ((
__∑øm
, 
__vÆ
));

134 
mÆloc_åim
 
__MALLOC_P
 ((
size_t
 
__∑d
));

138 
size_t
 
mÆloc_ußbÀ_size
 
__MALLOC_P
 ((*
__±r
));

141 
mÆloc_°©s
 
__MALLOC_P
 (());

144 *
mÆloc_gë_°©e
 
__MALLOC_P
 (());

148 
mÆloc_£t_°©e
 
__MALLOC_P
 ((*
__±r
));

153 (*
__mÆloc_öôülize_hook
Ë
	`__MALLOC_PMT
 (());

155 (*
__‰ì_hook
Ë
	`__MALLOC_PMT
 ((*
__±r
,

156 
__c⁄°
 
__mÆloc_±r_t
));

157 *(*
__mÆloc_hook
Ë
	`__MALLOC_PMT
 ((
size_t
 
__size
,

158 
__c⁄°
 
__mÆloc_±r_t
));

159 *(*
__ªÆloc_hook
Ë
	`__MALLOC_PMT
 ((*
__±r
, 
size_t
 
__size
,

160 
__c⁄°
 
__mÆloc_±r_t
));

161 *(*
__memÆign_hook
Ë
	`__MALLOC_PMT
 ((
size_t
 
__Æignmít
,

162 
size_t
 
__size
,

163 
__c⁄°
 
__mÆloc_±r_t
));

164 (*
__a·î_m‹ec‹e_hook
Ë
	`__MALLOC_PMT
 (());

167 
__mÆloc_check_öô
 
	`__MALLOC_P
 (());

170 
__END_DECLS


	@/usr/include/netinet/ether.h

20 #i‚de‡
_NETINET_ETHER_H


21 
	#_NETINET_ETHER_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<√töë/if_ëhî.h
>

28 
__BEGIN_DECLS


31 *
	$ëhî_¡ﬂ
 (
__c⁄°
 
ëhî_addr
 *
__addr
Ë
__THROW
;

32 *
	$ëhî_¡ﬂ_r
 (
__c⁄°
 
ëhî_addr
 *
__addr
, *
__buf
)

33 
__THROW
;

36 
ëhî_addr
 *
	$ëhî_©⁄
 (
__c⁄°
 *
__asc
Ë
__THROW
;

37 
ëhî_addr
 *
	$ëhî_©⁄_r
 (
__c⁄°
 *
__asc
,

38 
ëhî_addr
 *
__addr
Ë
__THROW
;

41 
	$ëhî_¡oho°
 (*
__ho°«me
, 
__c⁄°
 
ëhî_addr
 *
__addr
)

42 
__THROW
;

45 
	$ëhî_ho°t⁄
 (
__c⁄°
 *
__ho°«me
, 
ëhî_addr
 *
__addr
)

46 
__THROW
;

49 
	$ëhî_löe
 (
__c⁄°
 *
__löe
, 
ëhî_addr
 *
__addr
,

50 *
__ho°«me
Ë
__THROW
;

52 
__END_DECLS


	@/usr/include/netinet/in.h

19 #i‚def 
_NETINET_IN_H


20 
	#_NETINET_IN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°döt.h
>

24 
	~<sys/sockë.h
>

25 
	~<bôs/ty≥s.h
>

28 
__BEGIN_DECLS


33 
	mIPPROTO_IP
 = 0,

34 
	#IPPROTO_IP
 
IPPROTO_IP


	)

35 
	mIPPROTO_HOPOPTS
 = 0,

36 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

37 
	mIPPROTO_ICMP
 = 1,

38 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

39 
	mIPPROTO_IGMP
 = 2,

40 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

41 
	mIPPROTO_IPIP
 = 4,

42 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

43 
	mIPPROTO_TCP
 = 6,

44 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

45 
	mIPPROTO_EGP
 = 8,

46 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

47 
	mIPPROTO_PUP
 = 12,

48 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

49 
	mIPPROTO_UDP
 = 17,

50 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

51 
	mIPPROTO_IDP
 = 22,

52 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

53 
	mIPPROTO_TP
 = 29,

54 
	#IPPROTO_TP
 
IPPROTO_TP


	)

55 
	mIPPROTO_IPV6
 = 41,

56 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

57 
	mIPPROTO_ROUTING
 = 43,

58 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

59 
	mIPPROTO_FRAGMENT
 = 44,

60 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

61 
	mIPPROTO_RSVP
 = 46,

62 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

63 
	mIPPROTO_GRE
 = 47,

64 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

65 
	mIPPROTO_ESP
 = 50,

66 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

67 
	mIPPROTO_AH
 = 51,

68 
	#IPPROTO_AH
 
IPPROTO_AH


	)

69 
	mIPPROTO_ICMPV6
 = 58,

70 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

71 
	mIPPROTO_NONE
 = 59,

72 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

73 
	mIPPROTO_DSTOPTS
 = 60,

74 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

75 
	mIPPROTO_MTP
 = 92,

76 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

77 
	mIPPROTO_ENCAP
 = 98,

78 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

79 
	mIPPROTO_PIM
 = 103,

80 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

81 
	mIPPROTO_COMP
 = 108,

82 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

83 
	mIPPROTO_SCTP
 = 132,

84 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

85 
	mIPPROTO_RAW
 = 255,

86 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

87 
	mIPPROTO_MAX


92 
uöt16_t
 
	tö_p‹t_t
;

97 
	mIPPORT_ECHO
 = 7,

98 
	mIPPORT_DISCARD
 = 9,

99 
	mIPPORT_SYSTAT
 = 11,

100 
	mIPPORT_DAYTIME
 = 13,

101 
	mIPPORT_NETSTAT
 = 15,

102 
	mIPPORT_FTP
 = 21,

103 
	mIPPORT_TELNET
 = 23,

104 
	mIPPORT_SMTP
 = 25,

105 
	mIPPORT_TIMESERVER
 = 37,

106 
	mIPPORT_NAMESERVER
 = 42,

107 
	mIPPORT_WHOIS
 = 43,

108 
	mIPPORT_MTP
 = 57,

110 
	mIPPORT_TFTP
 = 69,

111 
	mIPPORT_RJE
 = 77,

112 
	mIPPORT_FINGER
 = 79,

113 
	mIPPORT_TTYLINK
 = 87,

114 
	mIPPORT_SUPDUP
 = 95,

117 
	mIPPORT_EXECSERVER
 = 512,

118 
	mIPPORT_LOGINSERVER
 = 513,

119 
	mIPPORT_CMDSERVER
 = 514,

120 
	mIPPORT_EFSSERVER
 = 520,

123 
	mIPPORT_BIFFUDP
 = 512,

124 
	mIPPORT_WHOSERVER
 = 513,

125 
	mIPPORT_ROUTESERVER
 = 520,

128 
	mIPPORT_RESERVED
 = 1024,

131 
	mIPPORT_USERRESERVED
 = 5000

136 
uöt32_t
 
	tö_addr_t
;

137 
	sö_addr


139 
ö_addr_t
 
	ms_addr
;

148 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

149 
	#IN_CLASSA_NET
 0xff000000

	)

150 
	#IN_CLASSA_NSHIFT
 24

	)

151 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

152 
	#IN_CLASSA_MAX
 128

	)

154 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

155 
	#IN_CLASSB_NET
 0xffff0000

	)

156 
	#IN_CLASSB_NSHIFT
 16

	)

157 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

158 
	#IN_CLASSB_MAX
 65536

	)

160 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

161 
	#IN_CLASSC_NET
 0xffffff00

	)

162 
	#IN_CLASSC_NSHIFT
 8

	)

163 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

165 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

166 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

168 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

169 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

172 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

174 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

176 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

179 
	#IN_LOOPBACKNET
 127

	)

181 #i‚de‡
INADDR_LOOPBACK


182 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

186 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

187 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

188 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

189 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

193 
	sö6_addr


197 
uöt8_t
 
	mu6_addr8
[16];

198 
uöt16_t
 
	mu6_addr16
[8];

199 
uöt32_t
 
	mu6_addr32
[4];

200 } 
	mö6_u
;

201 
	#s6_addr
 
ö6_u
.
u6_addr8


	)

202 
	#s6_addr16
 
ö6_u
.
u6_addr16


	)

203 
	#s6_addr32
 
ö6_u
.
u6_addr32


	)

206 c⁄° 
ö6_addr
 
ö6addr_™y
;

207 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

208 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

209 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

211 
	#INET_ADDRSTRLEN
 16

	)

212 
	#INET6_ADDRSTRLEN
 46

	)

215 
	~<bôs/sockë.h
>

219 
	ssockaddr_ö


221 
__SOCKADDR_COMMON
 (
sö_
);

222 
ö_p‹t_t
 
	msö_p‹t
;

223 
ö_addr
 
	msö_addr
;

226 
	msö_zîo
[ (
sockaddr
) -

227 
__SOCKADDR_COMMON_SIZE
 -

228  (
ö_p‹t_t
) -

229  (
ö_addr
)];

233 
	ssockaddr_ö6


235 
__SOCKADDR_COMMON
 (
sö6_
);

236 
ö_p‹t_t
 
	msö6_p‹t
;

237 
uöt32_t
 
	msö6_Êowöfo
;

238 
ö6_addr
 
	msö6_addr
;

239 
uöt32_t
 
	msö6_sc›e_id
;

244 
	sù_mªq


247 
ö_addr
 
	mimr_mu…üddr
;

250 
ö_addr
 
	mimr_öãrÁ˚
;

253 
	sù_mªq_sour˚


256 
ö_addr
 
	mimr_mu…üddr
;

259 
ö_addr
 
	mimr_öãrÁ˚
;

262 
ö_addr
 
	mimr_sour˚addr
;

266 
	sùv6_mªq


269 
ö6_addr
 
	mùv6mr_mu…üddr
;

272 
	mùv6mr_öãrÁ˚
;

277 
	sgroup_ªq


280 
uöt32_t
 
	mgr_öãrÁ˚
;

283 
sockaddr_°‹age
 
	mgr_group
;

286 
	sgroup_sour˚_ªq


289 
uöt32_t
 
	mg§_öãrÁ˚
;

292 
sockaddr_°‹age
 
	mg§_group
;

295 
sockaddr_°‹age
 
	mg§_sour˚
;

300 
	sù_msfûãr


303 
ö_addr
 
	mimsf_mu…üddr
;

306 
ö_addr
 
	mimsf_öãrÁ˚
;

309 
uöt32_t
 
	mimsf_fmode
;

312 
uöt32_t
 
	mimsf_num§c
;

314 
ö_addr
 
	mimsf_¶i°
[1];

317 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

318 -  (
ö_addr
) \

319 + (
num§c
Ë*  (
ö_addr
))

	)

321 
	sgroup_fûãr


324 
uöt32_t
 
	mgf_öãrÁ˚
;

327 
sockaddr_°‹age
 
	mgf_group
;

330 
uöt32_t
 
	mgf_fmode
;

333 
uöt32_t
 
	mgf_num§c
;

335 
sockaddr_°‹age
 
	mgf_¶i°
[1];

338 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

339 -  (
sockaddr_°‹age
) \

340 + ((
num§c
) \

341 *  (
sockaddr_°‹age
)))

	)

345 
	~<bôs/ö.h
>

354 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

355 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

356 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

357 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

358 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

359 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

360 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

362 
	~<ídün.h
>

365 
	~<bôs/byãsw≠.h
>

367 #ifde‡
__OPTIMIZE__


371 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


374 
	#¡ohl
(
x
Ë(x)

	)

375 
	#¡ohs
(
x
Ë(x)

	)

376 
	#ht⁄l
(
x
Ë(x)

	)

377 
	#ht⁄s
(
x
Ë(x)

	)

379 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


380 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

381 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

382 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

383 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

388 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

389 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

390 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

391 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

392 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

394 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

395 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

396 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

397 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

398 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

400 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

402 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

403 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

404 =
	`ht⁄l
 (0x„800000))

	)

406 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

407 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

408 =
	`ht⁄l
 (0x„c00000))

	)

410 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

411 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

412 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

413 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

415 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

416 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

417 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

418 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

419 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

421 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

422 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

423 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

424 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

425 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

428 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

431 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

432 
__THROW
;

435 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

436 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

437 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

439 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

440 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

441 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

443 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

444 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

445 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

447 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

448 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

449 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

451 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

452 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

453 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

456 
	sö6_pktöfo


458 
ö6_addr
 
ùi6_addr
;

459 
ùi6_ifödex
;

463 
	sù6_mtuöfo


465 
sockaddr_ö6
 
ù6m_addr
;

466 
uöt32_t
 
ù6m_mtu
;

470 #ifde‡
__USE_GNU


472 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

473 
__THROW
 
__©åibuã_dïªˇãd__
;

474 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

475 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

476 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

477 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

478 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

479 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

480 
__mu…x
, 
__∂usy
)

481 
__THROW
 
__©åibuã_dïªˇãd__
;

482 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

483 
uöt8_t
 **
__çåp
)

484 
__THROW
 
__©åibuã_dïªˇãd__
;

485 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

486 
uöt8_t
 **
__çåp
, 
__ty≥
)

487 
__THROW
 
__©åibuã_dïªˇãd__
;

491 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

492 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

493 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

494 **
__d©abuÂ
Ë
__THROW
;

495 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

496 
__THROW
;

497 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

498 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

499 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

500 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

501 **
__d©abuÂ
Ë
__THROW
;

502 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

503 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

504 **
__d©abuÂ
Ë
__THROW
;

505 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

506 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

510 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

511 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

512 
__£gmíts
Ë
__THROW
;

513 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

514 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

515 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

516 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

517 
__THROW
;

523 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

524 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

525 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

526 
__THROW
;

529 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

530 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

531 
uöt32_t
 
__num§c
,

532 
__c⁄°
 
ö_addr
 *
__¶i°
)

533 
__THROW
;

537 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

538 
__c⁄°
 
sockaddr
 *
__group
,

539 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

540 
uöt32_t
 *
__num§c
,

541 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

544 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

545 
__c⁄°
 
sockaddr
 *
__group
,

546 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

547 
uöt32_t
 
__num§c
,

548 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

551 
__END_DECLS


	@/usr/include/pthread.h

19 #i‚de‡
_PTHREAD_H


20 
	#_PTHREAD_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<ídün.h
>

24 
	~<sched.h
>

25 
	~<time.h
>

27 
	#__√ed_sig£t_t


	)

28 
	~<sig«l.h
>

29 
	~<bôs/±hªadty≥s.h
>

30 
	~<bôs/£tjmp.h
>

31 
	~<bôs/w‹dsize.h
>

37 
	mPTHREAD_CREATE_JOINABLE
,

38 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

39 
	mPTHREAD_CREATE_DETACHED


40 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

47 
	mPTHREAD_MUTEX_TIMED_NP
,

48 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

49 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

50 
	mPTHREAD_MUTEX_ADAPTIVE_NP


51 #ifde‡
__USE_UNIX98


53 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

54 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

55 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

56 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


58 #ifde‡
__USE_GNU


60 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


65 #ifde‡
__USE_GNU


69 
	mPTHREAD_MUTEX_STALLED_NP
,

70 
	mPTHREAD_MUTEX_ROBUST_NP


75 #ifde‡
__USE_UNIX98


79 
	mPTHREAD_PRIO_NONE
,

80 
	mPTHREAD_PRIO_INHERIT
,

81 
	mPTHREAD_PRIO_PROTECT


87 #i‡
__WORDSIZE
 == 64

88 
	#PTHREAD_MUTEX_INITIALIZER
 \

89 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

90 #ifde‡
__USE_GNU


91 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

92 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

93 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

94 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

95 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

96 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

99 
	#PTHREAD_MUTEX_INITIALIZER
 \

100 { { 0, 0, 0, 0, 0, { 0 } } }

	)

101 #ifde‡
__USE_GNU


102 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

103 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

104 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

105 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

106 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

107 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

113 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


116 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

117 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

119 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


123 
	#PTHREAD_RWLOCK_INITIALIZER
 \

124 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

125 #ifde‡
__USE_GNU


126 #i‡
__WORDSIZE
 == 64

127 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

129 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

131 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


132 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

133 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

134 0, 0, 0, 0 } }

	)

136 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

137 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

138 0 } }

	)

148 
	mPTHREAD_INHERIT_SCHED
,

149 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

150 
	mPTHREAD_EXPLICIT_SCHED


151 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

158 
	mPTHREAD_SCOPE_SYSTEM
,

159 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

160 
	mPTHREAD_SCOPE_PROCESS


161 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

168 
	mPTHREAD_PROCESS_PRIVATE
,

169 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

170 
	mPTHREAD_PROCESS_SHARED


171 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

177 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

181 
	s_±hªad_˛ónup_buf„r


183 (*
	m__routöe
) (*);

184 *
	m__¨g
;

185 
	m__ˇn˚…y≥
;

186 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

192 
	mPTHREAD_CANCEL_ENABLE
,

193 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

194 
	mPTHREAD_CANCEL_DISABLE


195 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

199 
	mPTHREAD_CANCEL_DEFERRED
,

200 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

201 
	mPTHREAD_CANCEL_ASYNCHRONOUS


202 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

204 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

208 
	#PTHREAD_ONCE_INIT
 0

	)

211 #ifde‡
__USE_XOPEN2K


215 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

219 
__BEGIN_DECLS


224 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

225 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

226 *(*
__°¨t_routöe
) (*),

227 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

233 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

241 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

243 #ifde‡
__USE_GNU


246 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

254 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

255 
__c⁄°
 
time•ec
 *
__ab°ime
);

262 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

266 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

269 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

277 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

280 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1));

284 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

285 *
__dëach°©e
)

286 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

289 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

290 
__dëach°©e
)

291 
__THROW
 
	`__n⁄nuŒ
 ((1));

295 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

296 
size_t
 *
__gu¨dsize
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

300 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

301 
size_t
 
__gu¨dsize
)

302 
__THROW
 
	`__n⁄nuŒ
 ((1));

306 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


307 
__©å
,

308 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

309 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

312 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

313 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


314 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

317 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


318 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

319 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

322 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

323 
__THROW
 
	`__n⁄nuŒ
 ((1));

326 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


327 
__©å
, *
__ª°ri˘
 
__öhîô
)

328 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

331 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

332 
__öhîô
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1));

337 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

338 *
__ª°ri˘
 
__sc›e
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

342 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

343 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


347 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

354 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

355 *
__°ackaddr
)

356 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

359 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


360 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

366 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

367 
size_t
 
__°acksize
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1));

370 #ifde‡
__USE_XOPEN2K


372 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

373 **
__ª°ri˘
 
__°ackaddr
,

374 
size_t
 *
__ª°ri˘
 
__°acksize
)

375 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

380 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

381 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

384 #ifde‡
__USE_GNU


387 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

388 
size_t
 
__˝u£tsize
,

389 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

394 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

395 
size_t
 
__˝u£tsize
,

396 
˝u_£t_t
 *
__˝u£t
)

397 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

403 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

404 
__THROW
 
	`__n⁄nuŒ
 ((2));

412 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

413 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

414 
__THROW
 
	`__n⁄nuŒ
 ((3));

417 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

418 *
__ª°ri˘
 
__pﬁicy
,

419 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

420 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

423 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

424 
__THROW
;

427 #ifde‡
__USE_UNIX98


429 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

432 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

435 #ifde‡
__USE_GNU


440 
	$±hªad_yõld
 (Ë
__THROW
;

445 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

446 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

447 
__THROW
 
	`__n⁄nuŒ
 ((3));

450 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

451 
˝u_£t_t
 *
__˝u£t
)

452 
__THROW
 
	`__n⁄nuŒ
 ((3));

465 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

466 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

477 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

481 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

484 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

489 
	`±hªad_ã°ˇn˚l
 ();

498 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

499 
__mask_was_ßved
;

500 } 
__ˇn˚l_jmp_buf
[1];

501 *
__∑d
[4];

502 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

505 #i‚de‡
__˛ónup_f˘_©åibuã


506 
	#__˛ónup_f˘_©åibuã


	)

511 
	s__±hªad_˛ónup_‰ame


513 (*
__ˇn˚l_routöe
) (*);

514 *
__ˇn˚l_¨g
;

515 
__do_ô
;

516 
__ˇn˚l_ty≥
;

519 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


520 #ifde‡
__˝lu•lus


522 ˛as†
	c__±hªad_˛ónup_˛ass


524 (*
__ˇn˚l_routöe
) (*);

525 *
__ˇn˚l_¨g
;

526 
__do_ô
;

527 
__ˇn˚l_ty≥
;

529 
public
:

530 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

531 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	`__do_ô
 (1) { }

532 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

533 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

534 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

535 &
__ˇn˚l_ty≥
); 
	}
}

536 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

546 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

548 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

552 
	#±hªad_˛ónup_p›
(
execuã
) \

553 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

554 } 0)

	)

556 #ifde‡
__USE_GNU


560 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

562 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

563 
__˛‰ame
.
	`__de„r
 ()

	)

568 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

569 
__˛‰ame
.
	`__ª°‹e
 (); \

570 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

571 } 0)

	)

578 
__ölöe
 

579 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

581 i‡(
__‰ame
->
__do_ô
)

582 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

583 
	}
}

592 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

594 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

595 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

596 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

597 .
__do_ô
 = 1 };

	)

601 
	#±hªad_˛ónup_p›
(
execuã
) \

602 
__˛‰ame
.
__do_ô
 = (
execuã
); \

603 } 0)

	)

605 #ifde‡
__USE_GNU


609 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

611 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

612 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

613 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

614 .
__do_ô
 = 1 }; \

615 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

616 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

621 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

622 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

623 
__˛‰ame
.
__do_ô
 = (
execuã
); \

624 } 0)

	)

635 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

637 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

638 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

639 *
__ˇn˚l_¨g
 = (
¨g
); \

640 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) \

641 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

642 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

644 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

645 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

649 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

650 dÿ{

	)

651 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

652 
__˛ónup_f˘_©åibuã
;

656 
	#±hªad_˛ónup_p›
(
execuã
) \

658 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

659 i‡(
execuã
) \

660 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

661 } 0)

	)

662 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

663 
__˛ónup_f˘_©åibuã
;

665 #ifde‡
__USE_GNU


669 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

671 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

672 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

673 *
__ˇn˚l_¨g
 = (
¨g
); \

674 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) \

675 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

676 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

678 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

679 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

683 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

684 dÿ{

	)

685 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

686 
__˛ónup_f˘_©åibuã
;

691 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

693 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

694 i‡(
execuã
) \

695 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

696 
	}
} 0)

	)

697 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

698 
__˛ónup_f˘_©åibuã
;

702 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

703 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

704 #i‚de‡
SHARED


705 
	`__©åibuã__
 ((
__wók__
))

711 
__jmp_buf_èg
;

712 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

718 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

719 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

720 
__THROW
 
	`__n⁄nuŒ
 ((1));

723 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1));

727 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

728 
__THROW
 
	`__n⁄nuŒ
 ((1));

731 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

732 
__THROW
 
	`__n⁄nuŒ
 ((1));

734 #ifde‡
__USE_XOPEN2K


736 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

737 
__c⁄°
 
time•ec
 *
__ª°ri˘


738 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

742 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROW
 
	`__n⁄nuŒ
 ((1));

746 #ifde‡
__USE_UNIX98


748 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

749 
__ª°ri˘
 
__muãx
,

750 *
__ª°ri˘
 
__¥io˚ûög
)

751 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

755 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

756 
__¥io˚ûög
,

757 *
__ª°ri˘
 
__ﬁd_˚ûög
)

758 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

762 #ifde‡
__USE_GNU


764 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1));

773 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

774 
__THROW
 
	`__n⁄nuŒ
 ((1));

777 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

781 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

782 
__ª°ri˘
 
__©å
,

783 *
__ª°ri˘
 
__psh¨ed
)

784 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

787 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

788 
__psh¨ed
)

789 
__THROW
 
	`__n⁄nuŒ
 ((1));

791 #ifde‡
__USE_UNIX98


793 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


794 
__©å
, *
__ª°ri˘
 
__köd
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

800 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1));

804 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

805 
__ª°ri˘
 
__©å
,

806 *
__ª°ri˘
 
__¥Ÿocﬁ
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

811 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

812 
__¥Ÿocﬁ
)

813 
__THROW
 
	`__n⁄nuŒ
 ((1));

816 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

817 
__ª°ri˘
 
__©å
,

818 *
__ª°ri˘
 
__¥io˚ûög
)

819 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

822 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

823 
__¥io˚ûög
)

824 
__THROW
 
	`__n⁄nuŒ
 ((1));

827 #ifde‡
__USE_GNU


829 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

830 *
__robu°√ss
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

834 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

835 
__robu°√ss
)

836 
__THROW
 
	`__n⁄nuŒ
 ((1));

840 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


845 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

846 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


847 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

850 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

851 
__THROW
 
	`__n⁄nuŒ
 ((1));

854 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

855 
__THROW
 
	`__n⁄nuŒ
 ((1));

858 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

859 
__THROW
 
	`__n⁄nuŒ
 ((1));

861 #ifde‡
__USE_XOPEN2K


863 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

864 
__c⁄°
 
time•ec
 *
__ª°ri˘


865 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

869 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

870 
__THROW
 
	`__n⁄nuŒ
 ((1));

873 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

876 #ifde‡
__USE_XOPEN2K


878 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

879 
__c⁄°
 
time•ec
 *
__ª°ri˘


880 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

884 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

891 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

892 
__THROW
 
	`__n⁄nuŒ
 ((1));

895 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

896 
__THROW
 
	`__n⁄nuŒ
 ((1));

899 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

900 
__ª°ri˘
 
__©å
,

901 *
__ª°ri˘
 
__psh¨ed
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

905 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

906 
__psh¨ed
)

907 
__THROW
 
	`__n⁄nuŒ
 ((1));

910 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

911 
__ª°ri˘
 
__©å
,

912 *
__ª°ri˘
 
__¥ef
)

913 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

916 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

917 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

925 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

926 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


927 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

930 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

931 
__THROW
 
	`__n⁄nuŒ
 ((1));

934 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

935 
__THROW
 
	`__n⁄nuŒ
 ((1));

938 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

939 
__THROW
 
	`__n⁄nuŒ
 ((1));

946 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

947 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

948 
	`__n⁄nuŒ
 ((1, 2));

957 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

958 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

959 
__c⁄°
 
time•ec
 *
__ª°ri˘


960 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

965 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

966 
__THROW
 
	`__n⁄nuŒ
 ((1));

969 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

970 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

974 
__ª°ri˘
 
__©å
,

975 *
__ª°ri˘
 
__psh¨ed
)

976 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

979 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

980 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

982 #ifde‡
__USE_XOPEN2K


984 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

985 
__ª°ri˘
 
__©å
,

986 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

987 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

990 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

991 
__˛ockid_t
 
__˛ock_id
)

992 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 #ifde‡
__USE_XOPEN2K


1001 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1002 
__THROW
 
	`__n⁄nuŒ
 ((1));

1005 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1010 
__THROW
 
	`__n⁄nuŒ
 ((1));

1013 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1));

1017 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1018 
__THROW
 
	`__n⁄nuŒ
 ((1));

1025 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1026 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1027 
__©å
, 
__cou¡
)

1028 
__THROW
 
	`__n⁄nuŒ
 ((1));

1031 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1032 
__THROW
 
	`__n⁄nuŒ
 ((1));

1035 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1036 
__THROW
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1048 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1049 
__ª°ri˘
 
__©å
,

1050 *
__ª°ri˘
 
__psh¨ed
)

1051 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1054 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1055 
__psh¨ed
)

1056 
__THROW
 
	`__n⁄nuŒ
 ((1));

1068 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1069 (*
__de°r_fun˘i⁄
) (*))

1070 
__THROW
 
	`__n⁄nuŒ
 ((1));

1073 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1076 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1079 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1080 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1083 #ifde‡
__USE_XOPEN2K


1085 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1086 
__˛ockid_t
 *
__˛ock_id
)

1087 
__THROW
 
	`__n⁄nuŒ
 ((2));

1102 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1103 (*
__∑ª¡
) (),

1104 (*
__chûd
Ë()Ë
__THROW
;

1107 #ifde‡
__USE_EXTERN_INLINES


1109 
__ölöe
 

1110 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1112  
__thªad1
 =
__thªad2
;

1113 
	}
}

1116 
__END_DECLS


	@/usr/include/search.h

20 #i‚de‡
_SEARCH_H


21 
	#_SEARCH_H
 1

	)

23 
	~<„©uªs.h
>

25 
	#__√ed_size_t


	)

26 
	~<°ddef.h
>

28 
	g__BEGIN_DECLS


30 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


34 #ifde‡
__USE_GNU


35 
	sqñem


37 
qñem
 *
	mq_f‹w
;

38 
qñem
 *
	mq_back
;

39 
	mq_d©a
[1];

45 
	$ösque
 (*
__ñem
, *
__¥ev
Ë
__THROW
;

48 
	$ªmque
 (*
__ñem
Ë
__THROW
;

53 #i‚de‡
__COMPAR_FN_T


54 
	#__COMPAR_FN_T


	)

55 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

57 #ifdef 
__USE_GNU


58 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

65 
FIND
,

66 
ENTER


68 
	tACTION
;

70 
	síåy


72 *
key
;

73 *
d©a
;

75 
	tENTRY
;

78 
_ENTRY
;

88 
ENTRY
 *
	$h£¨ch
 (
ENTRY
 
__ôem
, 
ACTION
 
__a˘i⁄
Ë
__THROW
;

91 
	$h¸óã
 (
size_t
 
__√l
Ë
__THROW
;

94 
	$hde°roy
 (Ë
__THROW
;

96 #ifde‡
__USE_GNU


98 
	sh£¨ch_d©a


100 
_ENTRY
 *
èbÀ
;

101 
size
;

102 
fûÀd
;

107 
	$h£¨ch_r
 (
ENTRY
 
__ôem
, 
ACTION
 
__a˘i⁄
, ENTRY **
__ªtvÆ
,

108 
h£¨ch_d©a
 *
__hèb
Ë
__THROW
;

109 
	$h¸óã_r
 (
size_t
 
__√l
, 
h£¨ch_d©a
 *
__hèb
Ë
__THROW
;

110 
	$hde°roy_r
 (
h£¨ch_d©a
 *
__hèb
Ë
__THROW
;

121 
¥e‹dî
,

122 
po°‹dî
,

123 
íd‹dî
,

124 
Àaf


126 
	tVISIT
;

130 *
	`t£¨ch
 (
__c⁄°
 *
__key
, **
__roŸp
,

131 
__com∑r_‚_t
 
__com∑r
);

135 *
	`tföd
 (
__c⁄°
 *
__key
, *__c⁄° *
__roŸp
,

136 
__com∑r_‚_t
 
__com∑r
);

139 *
	`tdñëe
 (
__c⁄°
 *
__ª°ri˘
 
__key
,

140 **
__ª°ri˘
 
__roŸp
,

141 
__com∑r_‚_t
 
__com∑r
);

143 #i‚de‡
__ACTION_FN_T


144 
	#__ACTION_FN_T


	)

145 (*
	t__a˘i⁄_‚_t
Ë(
	t__c⁄°
 *
	t__nodï
, 
	tVISIT
 
	t__vÆue
,

146 
	t__Àvñ
);

151 
	`twÆk
 (
__c⁄°
 *
__roŸ
, 
__a˘i⁄_‚_t
 
__a˘i⁄
);

153 #ifde‡
__USE_GNU


156 (*
	t__‰ì_‚_t
Ë(*
	t__nodï
);

159 
	`tde°roy
 (*
__roŸ
, 
__‰ì_‚_t
 
__‰ìf˘
);

165 *
	`lföd
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

166 
size_t
 *
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
);

170 *
	`l£¨ch
 (
__c⁄°
 *
__key
, *
__ba£
,

171 
size_t
 *
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
);

173 
__END_DECLS


	@/usr/include/semaphore.h

19 #i‚de‡
_SEMAPHORE_H


20 
	#_SEMAPHORE_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sys/ty≥s.h
>

24 #ifde‡
__USE_XOPEN2K


25 
	#__√ed_time•ec


	)

26 
	~<time.h
>

30 
	~<bôs/£m≠h‹e.h
>

33 
__BEGIN_DECLS


37 
	$£m_öô
 (
£m_t
 *
__£m
, 
__psh¨ed
, 
__vÆue
)

38 
__THROW
;

40 
	$£m_de°roy
 (
£m_t
 *
__£m
Ë
__THROW
;

43 
£m_t
 *
	$£m_›í
 (
__c⁄°
 *
__«me
, 
__oÊag
, ...Ë
__THROW
;

46 
	$£m_˛o£
 (
£m_t
 *
__£m
Ë
__THROW
;

49 
	$£m_u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
;

55 
	`£m_waô
 (
£m_t
 *
__£m
);

57 #ifde‡
__USE_XOPEN2K


62 
	`£m_timedwaô
 (
£m_t
 *
__ª°ri˘
 
__£m
,

63 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__ab°ime
);

67 
	$£m_åywaô
 (
£m_t
 *
__£m
Ë
__THROW
;

70 
	$£m_po°
 (
£m_t
 *
__£m
Ë
__THROW
;

73 
	$£m_gëvÆue
 (
£m_t
 *
__ª°ri˘
 
__£m
, *__ª°ri˘ 
__svÆ
)

74 
__THROW
;

77 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

75 (*
	t__sigh™dÀr_t
) ();

80 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

82 #ifde‡
__USE_GNU


83 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

84 
__THROW
;

90 
__BEGIN_NAMESPACE_STD


91 #ifde‡
__USE_BSD


92 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

96 #ifde‡
__REDIRECT_NTH


97 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

98 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

99 
__sysv_sig«l
);

101 
	#sig«l
 
__sysv_sig«l


	)

104 
__END_NAMESPACE_STD


106 #ifde‡
__USE_XOPEN


109 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

110 
__THROW
;

116 #ifde‡
__USE_POSIX


117 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

120 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


124 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

127 
__BEGIN_NAMESPACE_STD


129 
	$øi£
 (
__sig
Ë
__THROW
;

130 
__END_NAMESPACE_STD


132 #ifde‡
__USE_SVID


134 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

135 
__THROW
;

136 
	$gsig«l
 (
__sig
Ë
__THROW
;

139 #ifde‡
__USE_MISC


141 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

155 #ifde‡
__FAVOR_BSD


158 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

160 #ifde‡
__USE_XOPEN


161 #ifde‡
__GNUC__


162 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

165 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

171 #ifde‡
__USE_BSD


178 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

181 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

184 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

187 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

191 #ifde‡
__USE_MISC


192 
	#NSIG
 
_NSIG


	)

195 #ifde‡
__USE_GNU


196 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

200 #ifde‡
__USE_BSD


201 
__sigh™dÀr_t
 
	tsig_t
;

204 #ifde‡
__USE_POSIX


206 #ifde‡
__USE_POSIX199309


208 
	#__√ed_time•ec


	)

209 
	~<time.h
>

212 
	~<bôs/sigöfo.h
>

216 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

229 
__THROW
 
	`__n⁄nuŒ
 ((1));

231 #ifde‡
__USE_GNU


233 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

236 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

237 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

240 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

241 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	~<bôs/siga˘i⁄.h
>

249 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

250 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

257 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

260 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

261 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

264 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

271 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 #ifde‡
__USE_POSIX199309


279 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

280 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

287 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

288 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

289 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

290 
	`__n⁄nuŒ
 ((1));

294 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

295 
__THROW
;

300 #ifde‡
__USE_BSD


304 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

305 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

308 
	ssigvec


310 
__sigh™dÀr_t
 
sv_h™dÀr
;

311 
sv_mask
;

313 
sv_Êags
;

314 
	#sv_⁄°ack
 
sv_Êags


	)

318 
	#SV_ONSTACK
 (1 << 0)

	)

319 
	#SV_INTERRUPT
 (1 << 1)

	)

320 
	#SV_RESETHAND
 (1 << 2)

	)

328 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

329 
sigvec
 *
__ovec
Ë
__THROW
;

333 
	~<bôs/sigc⁄ãxt.h
>

336 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

341 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


346 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

348 
	~<bôs/sig°ack.h
>

349 #ifde‡
__USE_XOPEN


351 
	~<sys/uc⁄ãxt.h
>

357 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

358 
__THROW
 
__©åibuã_dïªˇãd__
;

362 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

363 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

367 #ifde‡
__USE_XOPEN_EXTENDED


371 
	$sighﬁd
 (
__sig
Ë
__THROW
;

374 
	$sigªl£
 (
__sig
Ë
__THROW
;

377 
	$sigign‹e
 (
__sig
Ë
__THROW
;

380 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

383 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


386 
	~<bôs/±hªadty≥s.h
>

387 
	~<bôs/sigthªad.h
>

394 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

396 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

400 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
__BEGIN_NAMESPACE_STD


46 
_IO_FILE
 
	tFILE
;

47 
	g__END_NAMESPACE_STD


48 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

49 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

50 || 
deföed
 
__USE_POSIX2


51 
	$__USING_NAMESPACE_STD
(
FILE
)

54 
	#__FILE_deföed
 1

	)

56 #unde‡
__√ed_FILE


59 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


62 
_IO_FILE
 
	t__FILE
;

64 
	#____FILE_deföed
 1

	)

66 #unde‡
__√ed___FILE


69 #ifdef 
_STDIO_H


70 
	#_STDIO_USES_IOSTREAM


	)

72 
	~<libio.h
>

74 #ifde‡
__USE_XOPEN


75 #ifde‡
__GNUC__


76 #i‚de‡
_VA_LIST_DEFINED


77 
_G_va_li°
 
	tva_li°
;

78 
	#_VA_LIST_DEFINED


	)

81 
	~<°d¨g.h
>

86 
__BEGIN_NAMESPACE_STD


87 #i‚de‡
__USE_FILE_OFFSET64


88 
_G_Âos_t
 
	tÂos_t
;

90 
_G_Âos64_t
 
	tÂos_t
;

92 
__END_NAMESPACE_STD


93 #ifde‡
__USE_LARGEFILE64


94 
_G_Âos64_t
 
	tÂos64_t
;

98 
	#_IOFBF
 0

	)

99 
	#_IOLBF
 1

	)

100 
	#_IONBF
 2

	)

104 #i‚de‡
BUFSIZ


105 
	#BUFSIZ
 
_IO_BUFSIZ


	)

111 #i‚de‡
EOF


112 
	#EOF
 (-1)

	)

118 
	#SEEK_SET
 0

	)

119 
	#SEEK_CUR
 1

	)

120 
	#SEEK_END
 2

	)

123 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


125 
	#P_tmpdú
 "/tmp"

	)

138 
	~<bôs/°dio_lim.h
>

142 
_IO_FILE
 *
°dö
;

143 
_IO_FILE
 *
°dout
;

144 
_IO_FILE
 *
°dîr
;

145 #ifde‡
__STDC__


147 
	#°dö
 
°dö


	)

148 
	#°dout
 
°dout


	)

149 
	#°dîr
 
°dîr


	)

152 
__BEGIN_NAMESPACE_STD


154 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

156 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_ATFILE


161 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

162 
__c⁄°
 *
__√w
Ë
__THROW
;

165 
__BEGIN_NAMESPACE_STD


170 #i‚de‡
__USE_FILE_OFFSET64


171 
FILE
 *
	`tmpfûe
 ();

173 #ifde‡
__REDIRECT


174 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
);

176 
	#tmpfûe
 
tmpfûe64


	)

180 #ifde‡
__USE_LARGEFILE64


181 
FILE
 *
	`tmpfûe64
 ();

185 *
	$tm≤am
 (*
__s
Ë
__THROW
;

186 
__END_NAMESPACE_STD


188 #ifde‡
__USE_MISC


191 *
	$tm≤am_r
 (*
__s
Ë
__THROW
;

195 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


203 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

204 
__THROW
 
__©åibuã_mÆloc__
;

208 
__BEGIN_NAMESPACE_STD


213 
	`f˛o£
 (
FILE
 *
__°ªam
);

218 
	`fÊush
 (
FILE
 *
__°ªam
);

219 
__END_NAMESPACE_STD


221 #ifde‡
__USE_MISC


228 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

231 #ifde‡
__USE_GNU


238 
	`f˛o£Æl
 ();

242 
__BEGIN_NAMESPACE_STD


243 #i‚de‡
__USE_FILE_OFFSET64


248 
FILE
 *
	`f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

249 
__c⁄°
 *
__ª°ri˘
 
__modes
);

254 
FILE
 *
	`‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

255 
__c⁄°
 *
__ª°ri˘
 
__modes
,

256 
FILE
 *
__ª°ri˘
 
__°ªam
);

258 #ifde‡
__REDIRECT


259 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

260 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
);

261 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

262 
__c⁄°
 *
__ª°ri˘
 
__modes
,

263 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
);

265 
	#f›í
 
f›í64


	)

266 
	#‰e›í
 
‰e›í64


	)

269 
__END_NAMESPACE_STD


270 #ifde‡
__USE_LARGEFILE64


271 
FILE
 *
	`f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

272 
__c⁄°
 *
__ª°ri˘
 
__modes
);

273 
FILE
 *
	`‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

274 
__c⁄°
 *
__ª°ri˘
 
__modes
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
);

278 #ifdef 
__USE_POSIX


280 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
;

283 #ifdef 
__USE_GNU


286 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

287 
__c⁄°
 *
__ª°ri˘
 
__modes
,

288 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
;

291 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
Ë
__THROW
;

296 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

300 
__BEGIN_NAMESPACE_STD


303 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

307 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

308 
__modes
, 
size_t
 
__n
Ë
__THROW
;

309 
__END_NAMESPACE_STD


311 #ifdef 
__USE_BSD


314 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

315 
size_t
 
__size
Ë
__THROW
;

318 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

322 
__BEGIN_NAMESPACE_STD


327 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

328 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

333 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

335 
	$•rötf
 (*
__ª°ri˘
 
__s
,

336 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

342 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

343 
_G_va_li°
 
__¨g
);

348 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

350 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

351 
_G_va_li°
 
__¨g
Ë
__THROW
;

352 
__END_NAMESPACE_STD


354 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


355 
__BEGIN_NAMESPACE_C99


357 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

358 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

359 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

361 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

362 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

363 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

364 
__END_NAMESPACE_C99


367 #ifde‡
__USE_GNU


370 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

371 
_G_va_li°
 
__¨g
)

372 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

373 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

374 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

375 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

376 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

377 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

378 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

386 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

387 
_G_va_li°
 
__¨g
)

388 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

389 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

390 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

394 
__BEGIN_NAMESPACE_STD


399 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

400 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

405 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

407 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

408 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

409 
__END_NAMESPACE_STD


411 #ifdef 
__USE_ISOC99


412 
__BEGIN_NAMESPACE_C99


417 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

418 
_G_va_li°
 
__¨g
)

419 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

425 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

426 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

429 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

430 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

431 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

432 
__END_NAMESPACE_C99


436 
__BEGIN_NAMESPACE_STD


441 
	`fgëc
 (
FILE
 *
__°ªam
);

442 
	`gëc
 (
FILE
 *
__°ªam
);

448 
	`gëch¨
 ();

449 
__END_NAMESPACE_STD


453 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

455 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


460 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

461 
	`gëch¨_u∆ocked
 ();

464 #ifde‡
__USE_MISC


471 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

475 
__BEGIN_NAMESPACE_STD


483 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

484 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

490 
	`putch¨
 (
__c
);

491 
__END_NAMESPACE_STD


495 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

497 #ifde‡
__USE_MISC


504 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

507 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


512 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

513 
	`putch¨_u∆ocked
 (
__c
);

517 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

518 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

520 
	`gëw
 (
FILE
 *
__°ªam
);

523 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

527 
__BEGIN_NAMESPACE_STD


532 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

533 
__wur
;

540 *
	$gës
 (*
__s
Ë
__wur
;

541 
__END_NAMESPACE_STD


543 #ifde‡
__USE_GNU


550 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

551 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

555 #ifdef 
__USE_GNU


566 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

567 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

568 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

569 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

570 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

571 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

579 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

580 
size_t
 *
__ª°ri˘
 
__n
,

581 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

585 
__BEGIN_NAMESPACE_STD


590 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

596 
	`puts
 (
__c⁄°
 *
__s
);

603 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

610 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

611 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

616 
size_t
 
	$fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

617 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
__wur
;

618 
__END_NAMESPACE_STD


620 #ifde‡
__USE_GNU


627 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

628 
FILE
 *
__ª°ri˘
 
__°ªam
);

631 #ifde‡
__USE_MISC


638 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

639 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

640 
size_t
 
	$fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

641 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

645 
__BEGIN_NAMESPACE_STD


650 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

655 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

660 
	`ªwöd
 (
FILE
 *
__°ªam
);

661 
__END_NAMESPACE_STD


668 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


669 #i‚de‡
__USE_FILE_OFFSET64


674 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

679 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

681 #ifde‡
__REDIRECT


682 
	`__REDIRECT
 (
f£eko
,

683 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

684 
f£eko64
);

685 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

687 
	#f£eko
 
f£eko64


	)

688 
	#·ñlo
 
·ñlo64


	)

693 
__BEGIN_NAMESPACE_STD


694 #i‚de‡
__USE_FILE_OFFSET64


699 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

704 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

708 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

709 
	`__REDIRECT
 (
f£ços
,

710 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

712 
	#fgëpos
 
fgëpos64


	)

713 
	#f£ços
 
f£ços64


	)

716 
__END_NAMESPACE_STD


718 #ifde‡
__USE_LARGEFILE64


719 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

720 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

721 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

722 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

725 
__BEGIN_NAMESPACE_STD


727 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

729 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

731 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

732 
__END_NAMESPACE_STD


734 #ifde‡
__USE_MISC


736 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

737 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

738 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

742 
__BEGIN_NAMESPACE_STD


747 
	`≥º‹
 (
__c⁄°
 *
__s
);

748 
__END_NAMESPACE_STD


754 
	~<bôs/sys_îæi°.h
>

757 #ifdef 
__USE_POSIX


759 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

762 #ifde‡
__USE_MISC


764 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

768 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

769 
deföed
 
__USE_MISC
)

774 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

780 
	`p˛o£
 (
FILE
 *
__°ªam
);

784 #ifdef 
__USE_POSIX


786 *
	$˘îmid
 (*
__s
Ë
__THROW
;

790 #ifde‡
__USE_XOPEN


792 *
	`cu£rid
 (*
__s
);

796 #ifdef 
__USE_GNU


797 
ob°ack
;

800 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

801 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

802 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

803 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

804 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

805 
_G_va_li°
 
__¨gs
)

806 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

810 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


814 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

818 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

821 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

824 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


828 
	#__√ed_gë›t


	)

829 
	~<gë›t.h
>

834 #ifde‡
__USE_EXTERN_INLINES


835 
	~<bôs/°dio.h
>

837 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


838 
	~<bôs/°dio2.h
>

840 #ifde‡
__LDBL_COMPAT


841 
	~<bôs/°dio-ldbl.h
>

844 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 ({ uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; } 
__u
; \

53 
__u
.
__ö
 = (
°©us
); __u.
__i
; }))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
(
	`__WAIT_INT
(°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
(
	`__WAIT_INT
(°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
(
	`__WAIT_INT
(°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
(
	`__WAIT_INT
(°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
(
	`__WAIT_INT
(°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
(
	`__WAIT_INT
(°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
(
	`__WAIT_INT
(°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

279 
	$__°πod_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

280 **
__ª°ri˘
 
__íd±r
, 
__group
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

282 
	$__°πof_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

283 **
__ª°ri˘
 
__íd±r
, 
__group
)

284 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

285 
	$__°πﬁd_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

286 **
__ª°ri˘
 
__íd±r
,

287 
__group
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

289 #i‚de‡
__°πﬁ_öã∫Æ_deföed


290 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

291 **
__ª°ri˘
 
__íd±r
,

292 
__ba£
, 
__group
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

294 
	#__°πﬁ_öã∫Æ_deföed
 1

	)

296 #i‚de‡
__°πoul_öã∫Æ_deföed


297 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
,

299 
__ba£
, 
__group
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

301 
	#__°πoul_öã∫Æ_deföed
 1

	)

303 #i‡
deföed
 
__GNUC__
 || deföed 
__USE_ISOC99


304 #i‚de‡
__°πﬁl_öã∫Æ_deföed


305 
__exãnsi⁄__


306 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

307 **
__ª°ri˘
 
__íd±r
,

308 
__ba£
, 
__group
)

309 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

310 
	#__°πﬁl_öã∫Æ_deföed
 1

	)

312 #i‚de‡
__°πouŒ_öã∫Æ_deföed


313 
__exãnsi⁄__


314 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

315 
__ª°ri˘
 
__≈å
,

316 **
__ª°ri˘
 
__íd±r
,

317 
__ba£
, 
__group
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 
	#__°πouŒ_öã∫Æ_deföed
 1

	)

323 #ifde‡
__USE_EXTERN_INLINES


326 
__BEGIN_NAMESPACE_STD


327 
__ölöe
 

328 
	`__NTH
 (
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
))

330  
	`__°πod_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

331 
	}
}

332 
__ölöe
 

333 
__NTH
 (
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

334 
__ba£
))

336  
	`__°πﬁ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

337 
	}
}

338 
__ölöe
 

339 
__NTH
 (
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

340 
__ba£
))

342  
	`__°πoul_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

343 
	}
}

344 
__END_NAMESPACE_STD


346 #ifde‡
__USE_ISOC99


347 
__BEGIN_NAMESPACE_C99


348 
__ölöe
 

349 
__NTH
 (
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
))

351  
	`__°πof_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

352 
	}
}

353 #i‚de‡
__LDBL_COMPAT


354 
__ölöe
 

355 
__NTH
 (
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
))

357  
	`__°πﬁd_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

358 
	}
}

360 
__END_NAMESPACE_C99


363 #ifde‡
__USE_BSD


364 
__exãnsi⁄__
 
__ölöe
 

365 
__NTH
 (
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

366 
__ba£
))

368  
	`__°πﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

369 
	}
}

370 
__exãnsi⁄__
 
__ölöe
 

371 
__NTH
 (
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

372 
__ba£
))

374  
	`__°πouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

375 
	}
}

378 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


379 
__BEGIN_NAMESPACE_C99


380 
__exãnsi⁄__
 
__ölöe
 

381 
__NTH
 (
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

382 
__ba£
))

384  
	`__°πﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

385 
	}
}

386 
__exãnsi⁄__
 
__ölöe
 

387 
__NTH
 (
	$°πouŒ
 (
__c⁄°
 * 
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

388 
__ba£
))

390  
	`__°πouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

391 
	}
}

392 
__END_NAMESPACE_C99


395 
__BEGIN_NAMESPACE_STD


396 
__ölöe
 

397 
__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

399  
	`°πod
 (
__≈å
, (**Ë
NULL
);

400 
	}
}

401 
__ölöe
 

402 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

404  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

405 
	}
}

406 
__ölöe
 

407 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

409  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

410 
	}
}

411 
__END_NAMESPACE_STD


413 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


414 
__BEGIN_NAMESPACE_C99


415 
__exãnsi⁄__
 
__ölöe
 

416 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

418  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

419 
	}
}

420 
__END_NAMESPACE_C99


425 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


429 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

432 
	$a64l
 (
__c⁄°
 *
__s
)

433 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

437 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


438 
	~<sys/ty≥s.h
>

445 
	$øndom
 (Ë
__THROW
;

448 
	$§™dom
 (
__£ed
Ë
__THROW
;

454 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

455 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

459 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 #ifde‡
__USE_MISC


467 
	søndom_d©a


469 
öt32_t
 *
Âå
;

470 
öt32_t
 *
Ωå
;

471 
öt32_t
 *
°©e
;

472 
ønd_ty≥
;

473 
ønd_deg
;

474 
ønd_£p
;

475 
öt32_t
 *
íd_±r
;

478 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

479 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

481 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

482 
__THROW
 
	`__n⁄nuŒ
 ((2));

484 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

485 
size_t
 
__°©ñí
,

486 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

487 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

489 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

490 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

491 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

496 
__BEGIN_NAMESPACE_STD


498 
	$ønd
 (Ë
__THROW
;

500 
	$§™d
 (
__£ed
Ë
__THROW
;

501 
__END_NAMESPACE_STD


503 #ifde‡
__USE_POSIX


505 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

509 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


513 
	$dønd48
 (Ë
__THROW
;

514 
	`î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

517 
	$Ã™d48
 (Ë
__THROW
;

518 
	`ƒ™d48
 (
__xsubi
[3])

519 
__THROW
 
	`__n⁄nuŒ
 ((1));

522 
	$mønd48
 (Ë
__THROW
;

523 
	`jønd48
 (
__xsubi
[3])

524 
__THROW
 
	`__n⁄nuŒ
 ((1));

527 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

528 *
	`£ed48
 (
__£ed16v
[3])

529 
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
	`lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

532 #ifde‡
__USE_MISC


536 
	sdønd48_d©a


538 
__x
[3];

539 
__ﬁd_x
[3];

540 
__c
;

541 
__öô
;

542 
__a
;

546 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

547 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

548 
	`î™d48_r
 (
__xsubi
[3],

549 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

550 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

553 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

554 *
__ª°ri˘
 
__ªsu…
)

555 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

556 
	`ƒ™d48_r
 (
__xsubi
[3],

557 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

558 *
__ª°ri˘
 
__ªsu…
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

563 *
__ª°ri˘
 
__ªsu…
)

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

565 
	`jønd48_r
 (
__xsubi
[3],

566 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

567 *
__ª°ri˘
 
__ªsu…
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

572 
__THROW
 
	`__n⁄nuŒ
 ((2));

574 
	`£ed48_r
 (
__£ed16v
[3],

575 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 
	`lc⁄g48_r
 (
__∑øm
[7],

578 
dønd48_d©a
 *
__buf„r
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


586 
	#__mÆloc_™d_ˇŒoc_deföed


	)

587 
__BEGIN_NAMESPACE_STD


589 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

591 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

592 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

593 
__END_NAMESPACE_STD


596 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


597 
__BEGIN_NAMESPACE_STD


600 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

601 
__THROW
 
__©åibuã_mÆloc__
 
__©åibuã_w¨n_unu£d_ªsu…__
;

603 
	$‰ì
 (*
__±r
Ë
__THROW
;

604 
__END_NAMESPACE_STD


606 #ifdef 
__USE_MISC


608 
	$c‰ì
 (*
__±r
Ë
__THROW
;

611 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


612 
	~<Æloˇ.h
>

615 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


617 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

620 #ifde‡
__USE_XOPEN2K


622 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

623 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
__BEGIN_NAMESPACE_STD


628 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

632 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

633 
__END_NAMESPACE_STD


635 #ifdef 
__USE_MISC


638 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

639 
__THROW
 
	`__n⁄nuŒ
 ((1));

642 
__BEGIN_NAMESPACE_STD


646 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

647 
__END_NAMESPACE_STD


649 #ifde‡
__USE_ISOC99


650 
__BEGIN_NAMESPACE_C99


653 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

654 
__END_NAMESPACE_C99


658 
__BEGIN_NAMESPACE_STD


660 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

661 
__END_NAMESPACE_STD


665 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

666 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

668 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


672 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

675 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


678 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

679 
__THROW
 
	`__n⁄nuŒ
 ((2));

682 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

685 #ifdef 
__USE_MISC


689 
	$˛óªnv
 (Ë
__THROW
;

693 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


698 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

708 #i‚de‡
__USE_FILE_OFFSET64


709 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 #ifde‡
__REDIRECT


712 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

713 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

715 
	#mk°emp
 
mk°emp64


	)

718 #ifde‡
__USE_LARGEFILE64


719 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

723 #ifde‡
__USE_BSD


729 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

733 
__BEGIN_NAMESPACE_STD


738 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

739 
__END_NAMESPACE_STD


742 #ifdef 
__USE_GNU


746 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

747 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

750 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


756 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

757 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

762 #i‚de‡
__COMPAR_FN_T


763 
	#__COMPAR_FN_T


	)

764 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

766 #ifdef 
__USE_GNU


767 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

771 
__BEGIN_NAMESPACE_STD


774 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

775 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

776 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

780 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

781 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

785 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

786 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
__END_NAMESPACE_STD


789 #ifde‡
__USE_ISOC99


790 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

795 
__BEGIN_NAMESPACE_STD


799 
div_t
 
	$div
 (
__numî
, 
__díom
)

800 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

801 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

802 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

803 
__END_NAMESPACE_STD


805 #ifde‡
__USE_ISOC99


806 
__BEGIN_NAMESPACE_C99


807 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

808 
__díom
)

809 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

810 
__END_NAMESPACE_C99


814 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


821 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

822 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

827 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

828 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

837 #ifde‡
__USE_MISC


839 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

840 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

841 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

842 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

843 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

844 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

845 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

846 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

851 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

852 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

853 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

854 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

855 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

856 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

858 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

859 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

860 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

861 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

862 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

863 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

864 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

865 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

870 
__BEGIN_NAMESPACE_STD


873 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

876 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

877 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

880 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

884 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

885 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

887 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

888 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

889 
__THROW
;

890 
__END_NAMESPACE_STD


893 #ifde‡
__USE_SVID


898 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

902 #ifde‡
__USE_XOPEN_EXTENDED


909 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

910 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

911 **
__ª°ri˘
 
__vÆuï
)

912 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

916 #ifde‡
__USE_XOPEN


918 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

924 #ifde‡
__USE_XOPEN2K


926 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

929 #ifde‡
__USE_XOPEN


934 
	$gø¡±
 (
__fd
Ë
__THROW
;

938 
	$u∆ock±
 (
__fd
Ë
__THROW
;

943 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

946 #ifde‡
__USE_GNU


950 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

951 
__THROW
 
	`__n⁄nuŒ
 ((2));

954 
	`gë±
 ();

957 #ifde‡
__USE_BSD


961 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

962 
__THROW
 
	`__n⁄nuŒ
 ((1));

967 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


968 
	~<bôs/°dlib.h
>

970 #ifde‡
__LDBL_COMPAT


971 
	~<bôs/°dlib-ldbl.h
>

975 #unde‡
__√ed_mÆloc_™d_ˇŒoc


977 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 
__BEGIN_NAMESPACE_STD


38 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

39 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

40 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

43 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

44 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

45 
__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


51 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

52 
__c
, 
size_t
 
__n
)

53 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

57 
__BEGIN_NAMESPACE_STD


59 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

62 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

63 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

66 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

67 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

68 
__END_NAMESPACE_STD


70 #ifde‡
__USE_GNU


73 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

74 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

82 
__BEGIN_NAMESPACE_STD


84 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

85 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

87 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

88 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

89 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

92 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

93 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

95 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

96 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

99 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

100 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

102 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

106 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

109 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

110 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

111 
__THROW
 
	`__n⁄nuŒ
 ((2));

112 
__END_NAMESPACE_STD


114 #ifde‡
__USE_GNU


118 
	~<xloˇÀ.h
>

121 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

124 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

125 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

128 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


130 *
	$°rdup
 (
__c⁄°
 *
__s
)

131 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

137 #i‡
deföed
 
__USE_GNU


138 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

139 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

142 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


144 
	#°rdu∑
(
s
) \

145 (
__exãnsi⁄__
 \

147 
__c⁄°
 *
__ﬁd
 = (
s
); \

148 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

149 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

150 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

151 
	}
}))

	)

154 
	#°∫du∑
(
s
, 
n
) \

155 (
__exãnsi⁄__
 \

157 
__c⁄°
 *
__ﬁd
 = (
s
); \

158 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

159 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

160 
__√w
[
__Àn
] = '\0'; \

161 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

162 }))

	)

165 
__BEGIN_NAMESPACE_STD


167 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

168 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

170 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

171 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

172 
__END_NAMESPACE_STD


174 #ifde‡
__USE_GNU


177 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

178 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

181 
__BEGIN_NAMESPACE_STD


184 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

185 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

188 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

189 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

191 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

192 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

194 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

195 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

199 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

200 
__THROW
 
	`__n⁄nuŒ
 ((2));

201 
__END_NAMESPACE_STD


205 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

206 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

207 **
__ª°ri˘
 
__ßve_±r
)

208 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

209 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


210 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

211 **
__ª°ri˘
 
__ßve_±r
)

212 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

215 #ifde‡
__USE_GNU


217 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

218 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

221 #ifde‡
__USE_GNU


225 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

226 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

227 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

231 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

232 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

233 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

234 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

235 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

236 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

240 
__BEGIN_NAMESPACE_STD


242 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

243 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__END_NAMESPACE_STD


246 #ifdef 
__USE_GNU


249 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

250 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

254 
__BEGIN_NAMESPACE_STD


256 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

257 
__END_NAMESPACE_STD


258 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


266 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


269 #ifde‡
__REDIRECT_NTH


270 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

271 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

272 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

274 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

275 
__THROW
 
	`__n⁄nuŒ
 ((2));

276 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

281 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

282 
__THROW
 
	`__n⁄nuŒ
 ((2));

288 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_BSD


292 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

296 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

300 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

303 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

304 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

307 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

308 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

312 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

316 #ifdef 
__USE_GNU


317 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

318 #ifde‡
__GNUC__


319 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

320 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

325 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

326 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

329 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

330 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

333 #ifdef 
__USE_GNU


336 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

337 
__loˇÀ_t
 
__loc
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

340 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

341 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

345 #ifdef 
__USE_BSD


348 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

349 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

350 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

353 #ifdef 
__USE_GNU


355 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

356 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

359 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

362 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

364 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

365 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

369 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

370 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

373 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

377 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

380 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

382 #i‚de‡
ba£«me


387 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

392 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

393 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

394 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


414 
	~<bôs/°rög.h
>

417 
	~<bôs/°rög2.h
>

420 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


422 
	~<bôs/°rög3.h
>

426 
__END_DECLS


	@/usr/include/sys/ioctl.h

19 #i‚def 
_SYS_IOCTL_H


20 
	#_SYS_IOCTL_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


27 
	~<bôs/io˘ls.h
>

30 
	~<bôs/io˘l-ty≥s.h
>

37 
	~<sys/âydeÁu…s.h
>

42 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

44 
__END_DECLS


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 *  (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/socket.h

20 #i‚def 
_SYS_SOCKET_H


21 
	#_SYS_SOCKET_H
 1

	)

23 
	~<„©uªs.h
>

25 
	g__BEGIN_DECLS


27 
	~<sys/uio.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

35 
	~<bôs/sockë.h
>

37 #ifde‡
__USE_BSD


40 
	sosockaddr


42 
	mß_Ámûy
;

43 
	mß_d©a
[14];

51 
	mSHUT_RD
 = 0,

52 
	#SHUT_RD
 
SHUT_RD


	)

53 
	mSHUT_WR
,

54 
	#SHUT_WR
 
SHUT_WR


	)

55 
	mSHUT_RDWR


56 
	#SHUT_RDWR
 
SHUT_RDWR


	)

65 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


66 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

67 
	#__CONST_SOCKADDR_ARG
 
__c⁄°
 
sockaddr
 *

	)

71 
	#__SOCKADDR_ALLTYPES
 \

72 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

73 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

74 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

75 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

76 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

86 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

87 uni⁄ { 
	m__SOCKADDR_ALLTYPES


88 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

89 #unde‡
__SOCKADDR_ONETYPE


90 
	#__SOCKADDR_ONETYPE
(
ty≥
Ë
__c⁄°
 ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

91 uni⁄ { 
	m__SOCKADDR_ALLTYPES


92 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

93 #unde‡
__SOCKADDR_ONETYPE


100 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

106 
	`sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

107 
__fds
[2]Ë
__THROW
;

110 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

111 
__THROW
;

114 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

115 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

124 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

128 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

129 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

136 
ssize_t
 
	`£nd
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
, 
__Êags
);

143 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

150 
ssize_t
 
	`£ndto
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

151 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

152 
sockÀn_t
 
__addr_Àn
);

161 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

162 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

163 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

171 
ssize_t
 
	`£ndmsg
 (
__fd
, 
__c⁄°
 
msghdr
 *
__mesßge
,

172 
__Êags
);

179 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

185 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

186 *
__ª°ri˘
 
__›tvÆ
,

187 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

192 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

193 
__c⁄°
 *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

199 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

209 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

210 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

218 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

221 #ifde‡
__USE_XOPEN2K


223 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

227 #ifde‡
__USE_MISC


231 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

236 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


237 
	~<bôs/sockë2.h
>

240 
__END_DECLS


	@/usr/include/sys/stat.h

23 #i‚def 
_SYS_STAT_H


24 
	#_SYS_STAT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_MISC


31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


32 
	#__√ed_time_t


	)

34 #ifde‡
__USE_MISC


35 
	#__√ed_time•ec


	)

37 
	~<time.h
>

40 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


43 #i‚de‡
__dev_t_deföed


44 
__dev_t
 
	tdev_t
;

45 
	#__dev_t_deföed


	)

48 #i‚de‡
__gid_t_deföed


49 
__gid_t
 
	tgid_t
;

50 
	#__gid_t_deföed


	)

53 #i‚de‡
__öo_t_deföed


54 #i‚de‡
__USE_FILE_OFFSET64


55 
__öo_t
 
	töo_t
;

57 
__öo64_t
 
	töo_t
;

59 
	#__öo_t_deföed


	)

62 #i‚de‡
__mode_t_deföed


63 
__mode_t
 
	tmode_t
;

64 
	#__mode_t_deföed


	)

67 #i‚de‡
__∆ök_t_deföed


68 
__∆ök_t
 
	t∆ök_t
;

69 
	#__∆ök_t_deföed


	)

72 #i‚de‡
__off_t_deföed


73 #i‚de‡
__USE_FILE_OFFSET64


74 
__off_t
 
	toff_t
;

76 
__off64_t
 
	toff_t
;

78 
	#__off_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

87 #ifde‡
__USE_UNIX98


88 #i‚de‡
__blk˙t_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__blk˙t_t
 
	tblk˙t_t
;

92 
__blk˙t64_t
 
	tblk˙t_t
;

94 
	#__blk˙t_t_deföed


	)

97 #i‚de‡
__blksize_t_deföed


98 
__blksize_t
 
	tblksize_t
;

99 
	#__blksize_t_deföed


	)

103 
	g__BEGIN_DECLS


105 
	~<bôs/°©.h
>

107 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


108 
	#S_IFMT
 
__S_IFMT


	)

109 
	#S_IFDIR
 
__S_IFDIR


	)

110 
	#S_IFCHR
 
__S_IFCHR


	)

111 
	#S_IFBLK
 
__S_IFBLK


	)

112 
	#S_IFREG
 
__S_IFREG


	)

113 #ifde‡
__S_IFIFO


114 
	#S_IFIFO
 
__S_IFIFO


	)

116 #ifde‡
__S_IFLNK


117 
	#S_IFLNK
 
__S_IFLNK


	)

119 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

120 && 
deföed
 
	g__S_IFSOCK


121 
	#S_IFSOCK
 
__S_IFSOCK


	)

127 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

129 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

130 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

131 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

132 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

133 #ifde‡
__S_IFIFO


134 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

136 #ifde‡
__S_IFLNK


137 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

140 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


141 
	#S_ISLNK
(
mode
Ë0

	)

144 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
) \

145 && 
deföed
 
	g__S_IFSOCK


146 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

153 #ifdef 
__USE_POSIX199309


154 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

155 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

156 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

162 
	#S_ISUID
 
__S_ISUID


	)

163 
	#S_ISGID
 
__S_ISGID


	)

165 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


167 
	#S_ISVTX
 
__S_ISVTX


	)

170 
	#S_IRUSR
 
__S_IREAD


	)

171 
	#S_IWUSR
 
__S_IWRITE


	)

172 
	#S_IXUSR
 
__S_IEXEC


	)

174 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

176 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


177 
	#S_IREAD
 
S_IRUSR


	)

178 
	#S_IWRITE
 
S_IWUSR


	)

179 
	#S_IEXEC
 
S_IXUSR


	)

182 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

183 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

184 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

186 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

188 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

189 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

190 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

192 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

195 #ifdef 
__USE_BSD


197 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

198 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

199 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

201 
	#S_BLKSIZE
 512

	)

205 #i‚de‡
__USE_FILE_OFFSET64


207 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

208 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

212 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

214 #ifde‡
__REDIRECT_NTH


215 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

216 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

217 
	`__n⁄nuŒ
 ((1, 2));

218 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

219 
	`__n⁄nuŒ
 ((2));

221 
	#°©
 
°©64


	)

222 
	#f°©
 
f°©64


	)

225 #ifde‡
__USE_LARGEFILE64


226 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

227 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

228 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

231 #ifde‡
__USE_ATFILE


235 #i‚de‡
__USE_FILE_OFFSET64


236 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

237 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

238 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

240 #ifde‡
__REDIRECT_NTH


241 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

242 
°©
 *
__ª°ri˘
 
__buf
,

243 
__Êag
),

244 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

246 
	#f°©©
 
f°©©64


	)

250 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

251 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

252 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

255 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


256 #i‚de‡
__USE_FILE_OFFSET64


259 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

260 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

262 #ifde‡
__REDIRECT_NTH


263 
	`__REDIRECT_NTH
 (
l°©
,

264 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

265 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

266 
	`__n⁄nuŒ
 ((1, 2));

268 
	#l°©
 
l°©64


	)

271 #ifde‡
__USE_LARGEFILE64


272 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

273 
°©64
 *
__ª°ri˘
 
__buf
)

274 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

280 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1));

283 #ifde‡
__USE_BSD


287 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


293 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

296 #ifde‡
__USE_ATFILE


299 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
mode
, 
__Êag
)

300 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

307 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

309 #ifdef 
__USE_GNU


312 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

316 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

317 
__THROW
 
	`__n⁄nuŒ
 ((1));

319 #ifde‡
__USE_ATFILE


323 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

324 
__THROW
 
	`__n⁄nuŒ
 ((2));

330 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


331 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

332 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 #ifde‡
__USE_ATFILE


339 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

340 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

346 
__THROW
 
	`__n⁄nuŒ
 ((1));

348 #ifde‡
__USE_ATFILE


352 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

353 
__THROW
 
	`__n⁄nuŒ
 ((2));

371 #i‚de‡
_STAT_VER


372 
	#_STAT_VER
 0

	)

374 #i‚de‡
_MKNOD_VER


375 
	#_MKNOD_VER
 0

	)

379 #i‚de‡
__USE_FILE_OFFSET64


380 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

381 
__THROW
 
	`__n⁄nuŒ
 ((3));

382 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

383 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

384 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

385 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

386 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

387 
°©
 *
__°©_buf
, 
__Êag
)

388 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

390 #ifde‡
__REDIRECT_NTH


391 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

392 
°©
 *
__°©_buf
), 
__fx°©64
)

393 
	`__n⁄nuŒ
 ((3));

394 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

395 
°©
 *
__°©_buf
), 
__x°©64
)

396 
	`__n⁄nuŒ
 ((2, 3));

397 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

398 
°©
 *
__°©_buf
), 
__lx°©64
)

399 
	`__n⁄nuŒ
 ((2, 3));

400 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

401 
__c⁄°
 *
__fûíame
,

402 
°©
 *
__°©_buf
, 
__Êag
),

403 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

406 
	#__fx°©
 
__fx°©64


	)

407 
	#__x°©
 
__x°©64


	)

408 
	#__lx°©
 
__lx°©64


	)

412 #ifde‡
__USE_LARGEFILE64


413 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

414 
__THROW
 
	`__n⁄nuŒ
 ((3));

415 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

416 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

417 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

418 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

419 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

420 
°©64
 *
__°©_buf
, 
__Êag
)

421 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

423 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

424 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

426 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

427 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

428 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

430 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

433 
__ölöe__
 

434 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

436  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

437 
	}
}

439 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


440 
__ölöe__
 

441 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

443  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

444 
	}
}

447 
__ölöe__
 

448 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

450  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

451 
	}
}

453 #ifde‡
__USE_ATFILE


454 
__ölöe__
 

455 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

456 
__Êag
))

458  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

459 
	}
}

462 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


463 
__ölöe__
 

464 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

466  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

467 
	}
}

470 #ifde‡
__USE_ATFILE


471 
__ölöe__
 

472 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

473 
__dev_t
 
__dev
))

475  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

476 
	}
}

479 #i‡
deföed
 
__USE_LARGEFILE64
 \

480 && (! 
deföed
 
__USE_FILE_OFFSET64
 \

481 || (
deföed
 
__REDIRECT_NTH
 && deföed 
__OPTIMIZE__
))

482 
__ölöe__
 

483 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

485  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

486 
	}
}

488 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


489 
__ölöe__
 

490 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

492  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

493 
	}
}

496 
__ölöe__
 

497 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

499  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

500 
	}
}

502 #ifde‡
__USE_GNU


503 
__ölöe__
 

504 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

505 
__Êag
))

507  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

508 
	}
}

515 
__END_DECLS


	@/usr/include/sys/syscall.h

19 #i‚de‡
_SYSCALL_H


20 
	#_SYSCALL_H
 1

	)

25 
	~<asm/uni°d.h
>

27 #i‚de‡
_LIBC


32 
	~<bôs/sysˇŒ.h
>

	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	`utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	`lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	`futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_ATFILE


156 
	`futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/syslog.h

1 
	~<sys/sy¶og.h
>

	@/usr/include/time.h

24 #i‚def 
_TIME_H


26 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

27 ! 
deföed
 
	g__√ed_time•ec
)

28 
	#_TIME_H
 1

	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 #ifdef 
_TIME_H


37 
	#__√ed_size_t


	)

38 
	#__√ed_NULL


	)

39 
	~<°ddef.h
>

43 
	~<bôs/time.h
>

46 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


47 #i‚de‡
CLK_TCK


48 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

54 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

55 
	#__˛ock_t_deföed
 1

	)

57 
	~<bôs/ty≥s.h
>

59 
__BEGIN_NAMESPACE_STD


61 
__˛ock_t
 
	t˛ock_t
;

62 
	g__END_NAMESPACE_STD


63 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


64 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

68 #unde‡
__√ed_˛ock_t


70 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

71 
	#__time_t_deföed
 1

	)

73 
	~<bôs/ty≥s.h
>

75 
__BEGIN_NAMESPACE_STD


77 
__time_t
 
	ttime_t
;

78 
__END_NAMESPACE_STD


79 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


80 
	$__USING_NAMESPACE_STD
(
time_t
)

84 #unde‡
__√ed_time_t


86 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

87 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

88 
	#__˛ockid_t_deföed
 1

	)

90 
	~<bôs/ty≥s.h
>

93 
__˛ockid_t
 
	t˛ockid_t
;

96 #unde‡
__˛ockid_time_t


98 #i‡!
deföed
 
__timî_t_deföed
 && \

99 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

100 
	#__timî_t_deföed
 1

	)

102 
	~<bôs/ty≥s.h
>

105 
__timî_t
 
	ttimî_t
;

108 #unde‡
__√ed_timî_t


111 #i‡!
deföed
 
__time•ec_deföed
 && \

112 ((
deföed
 
_TIME_H
 && \

113 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

114 
deföed
 
__√ed_time•ec
)

115 
	#__time•ec_deföed
 1

	)

117 
	~<bôs/ty≥s.h
>

121 
	stime•ec


123 
__time_t
 
tv_£c
;

124 
tv_n£c
;

128 #unde‡
__√ed_time•ec


131 #ifdef 
_TIME_H


132 
__BEGIN_NAMESPACE_STD


134 
	stm


136 
tm_£c
;

137 
tm_mö
;

138 
tm_hour
;

139 
tm_mday
;

140 
tm_m⁄
;

141 
tm_yór
;

142 
tm_wday
;

143 
tm_yday
;

144 
tm_isd°
;

146 #ifdef 
__USE_BSD


147 
tm_gmtoff
;

148 
__c⁄°
 *
tm_z⁄e
;

150 
__tm_gmtoff
;

151 
__c⁄°
 *
__tm_z⁄e
;

154 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


156 
	$__USING_NAMESPACE_STD
(
tm
)

160 #ifde‡
__USE_POSIX199309


162 
	sôimî•ec


164 
time•ec
 
ô_öãrvÆ
;

165 
time•ec
 
ô_vÆue
;

169 
sigevít
;

173 #ifde‡
__USE_XOPEN2K


174 #i‚de‡
__pid_t_deföed


175 
__pid_t
 
	tpid_t
;

176 
	#__pid_t_deföed


	)

181 
__BEGIN_NAMESPACE_STD


184 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

187 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

190 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

191 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

194 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

200 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

201 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

202 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

203 
__END_NAMESPACE_STD


205 #ifde‡
__USE_XOPEN


208 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

209 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

210 
__THROW
;

213 #ifde‡
__USE_GNU


216 
	~<xloˇÀ.h
>

218 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

219 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

220 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

221 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

224 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

225 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 
__BEGIN_NAMESPACE_STD


232 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

236 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
__END_NAMESPACE_STD


239 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


242 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

243 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

247 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

248 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

251 
__BEGIN_NAMESPACE_STD


254 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

257 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

258 
__END_NAMESPACE_STD


260 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


265 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

266 *
__ª°ri˘
 
__buf
Ë
__THROW
;

269 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

270 *
__ª°ri˘
 
__buf
Ë
__THROW
;

275 *
__tz«me
[2];

276 
__daylight
;

277 
__timez⁄e
;

280 #ifdef 
__USE_POSIX


282 *
tz«me
[2];

286 
	$tz£t
 (Ë
__THROW
;

289 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


290 
daylight
;

291 
timez⁄e
;

294 #ifde‡
__USE_SVID


297 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

303 
	#__i¶óp
(
yór
) \

304 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

307 #ifde‡
__USE_MISC


312 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

315 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

318 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

322 #ifde‡
__USE_POSIX199309


327 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

328 
time•ec
 *
__ªmaöög
);

332 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

335 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

338 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

339 
__THROW
;

341 #ifde‡
__USE_XOPEN2K


346 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

347 
__c⁄°
 
time•ec
 *
__ªq
,

348 
time•ec
 *
__ªm
);

351 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

356 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

357 
sigevít
 *
__ª°ri˘
 
__evp
,

358 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

361 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

364 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

365 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

366 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

369 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

370 
__THROW
;

373 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

377 #ifde‡
__USE_XOPEN_EXTENDED


389 
gëd©e_îr
;

398 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

401 #ifde‡
__USE_GNU


412 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

413 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

416 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


34 
	#_POSIX_VERSION
 200112L

	)

40 
	#_POSIX2_VERSION
 200112L

	)

44 
	#_POSIX2_C_BIND
 200112L

	)

48 
	#_POSIX2_C_DEV
 200112L

	)

52 
	#_POSIX2_SW_DEV
 200112L

	)

56 
	#_POSIX2_LOCALEDEF
 200112L

	)

59 #ifde‡
__USE_XOPEN2K


60 
	#_XOPEN_VERSION
 600

	)

61 #ñi‡
deföed
 
__USE_UNIX98


62 
	#_XOPEN_VERSION
 500

	)

64 
	#_XOPEN_VERSION
 4

	)

68 
	#_XOPEN_XCU_VERSION
 4

	)

71 
	#_XOPEN_XPG2
 1

	)

72 
	#_XOPEN_XPG3
 1

	)

73 
	#_XOPEN_XPG4
 1

	)

76 
	#_XOPEN_UNIX
 1

	)

79 
	#_XOPEN_CRYPT
 1

	)

83 
	#_XOPEN_ENH_I18N
 1

	)

86 
	#_XOPEN_LEGACY
 1

	)

173 
	~<bôs/posix_›t.h
>

176 #ifde‡
__USE_UNIX98


177 
	~<bôs/ívú⁄míts.h
>

181 
	#STDIN_FILENO
 0

	)

182 
	#STDOUT_FILENO
 1

	)

183 
	#STDERR_FILENO
 2

	)

188 
	~<bôs/ty≥s.h
>

190 #i‚def 
__ssize_t_deföed


191 
__ssize_t
 
	tssize_t
;

192 
	#__ssize_t_deföed


	)

195 
	#__√ed_size_t


	)

196 
	#__√ed_NULL


	)

197 
	~<°ddef.h
>

199 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


202 #i‚de‡
__gid_t_deföed


203 
__gid_t
 
	tgid_t
;

204 
	#__gid_t_deföed


	)

207 #i‚de‡
__uid_t_deföed


208 
__uid_t
 
	tuid_t
;

209 
	#__uid_t_deföed


	)

212 #i‚de‡
__off_t_deföed


213 #i‚de‡
__USE_FILE_OFFSET64


214 
__off_t
 
	toff_t
;

216 
__off64_t
 
	toff_t
;

218 
	#__off_t_deföed


	)

220 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


221 
__off64_t
 
	toff64_t
;

222 
	#__off64_t_deföed


	)

225 #i‚de‡
__u£c⁄ds_t_deföed


226 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

227 
	#__u£c⁄ds_t_deföed


	)

230 #i‚de‡
__pid_t_deföed


231 
__pid_t
 
	tpid_t
;

232 
	#__pid_t_deföed


	)

236 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


237 #i‚de‡
__öçå_t_deföed


238 
__öçå_t
 
	töçå_t
;

239 
	#__öçå_t_deföed


	)

243 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


244 #i‚de‡
__sockÀn_t_deföed


245 
__sockÀn_t
 
	tsockÀn_t
;

246 
	#__sockÀn_t_deföed


	)

252 
	#R_OK
 4

	)

253 
	#W_OK
 2

	)

254 
	#X_OK
 1

	)

255 
	#F_OK
 0

	)

258 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

260 #ifde‡
__USE_GNU


263 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

264 
__THROW
 
	`__n⁄nuŒ
 ((1));

267 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

268 
__THROW
 
	`__n⁄nuŒ
 ((1));

271 #ifde‡
__USE_ATFILE


275 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

276 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

281 #i‚def 
_STDIO_H


282 
	#SEEK_SET
 0

	)

283 
	#SEEK_CUR
 1

	)

284 
	#SEEK_END
 2

	)

287 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


289 
	#L_SET
 
SEEK_SET


	)

290 
	#L_INCR
 
SEEK_CUR


	)

291 
	#L_XTND
 
SEEK_END


	)

300 #i‚de‡
__USE_FILE_OFFSET64


301 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

303 #ifde‡
__REDIRECT_NTH


304 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

305 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

306 
l£ek64
);

308 
	#l£ek
 
l£ek64


	)

311 #ifde‡
__USE_LARGEFILE64


312 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

313 
__THROW
;

320 
	`˛o£
 (
__fd
);

327 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

333 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

335 #ifde‡
__USE_UNIX98


336 #i‚de‡
__USE_FILE_OFFSET64


343 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

344 
__off_t
 
__off£t
Ë
__wur
;

351 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

352 
__off_t
 
__off£t
Ë
__wur
;

354 #ifde‡
__REDIRECT


355 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

356 
__off64_t
 
__off£t
),

357 
¥ód64
Ë
__wur
;

358 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

359 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

360 
pwrôe64
Ë
__wur
;

362 
	#¥ód
 
¥ód64


	)

363 
	#pwrôe
 
pwrôe64


	)

367 #ifde‡
__USE_LARGEFILE64


371 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

372 
__off64_t
 
__off£t
Ë
__wur
;

375 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

376 
__off64_t
 
__off£t
Ë
__wur
;

384 
	`pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

393 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

405 
	`¶ìp
 (
__£c⁄ds
);

407 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


412 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

413 
__THROW
;

420 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

429 
	`∑u£
 ();

433 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

434 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

436 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


438 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

443 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

444 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

448 #ifde‡
__USE_ATFILE


451 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

452 
__gid_t
 
__group
, 
__Êag
)

453 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

457 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

459 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


461 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

471 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

473 #ifdef 
__USE_GNU


477 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

480 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


484 *
	$gëwd
 (*
__buf
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

490 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

493 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

496 **
__ívú⁄
;

497 #ifde‡
__USE_GNU


498 **
ívú⁄
;

504 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

505 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

507 #ifde‡
__USE_GNU


510 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

511 
__THROW
;

516 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

517 
__THROW
 
	`__n⁄nuŒ
 ((1));

521 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

522 
__THROW
 
	`__n⁄nuŒ
 ((1));

526 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

527 
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

532 
__THROW
 
	`__n⁄nuŒ
 ((1));

537 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

538 
__THROW
 
	`__n⁄nuŒ
 ((1));

541 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


543 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

548 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
	~<bôs/c⁄‚ame.h
>

557 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

558 
__THROW
 
	`__n⁄nuŒ
 ((1));

561 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

564 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

566 #ifdef 
__USE_POSIX2


568 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

573 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

576 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

580 #i‚de‡
__FAVOR_BSD


581 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

583 #ifde‡
__REDIRECT_NTH


584 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

586 
	#gëpgΩ
 
__gëpgid


	)

591 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

592 #ifde‡
__USE_XOPEN_EXTENDED


593 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

600 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

602 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


613 #i‚de‡
__FAVOR_BSD


617 
	$£çgΩ
 (Ë
__THROW
;

622 #ifde‡
__REDIRECT_NTH


623 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

625 
	#£çgΩ
 
£çgid


	)

634 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

636 #ifde‡
__USE_XOPEN_EXTENDED


638 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

642 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

645 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

648 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

651 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

656 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

658 #ifdef 
__USE_GNU


660 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

667 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

669 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


672 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

675 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


677 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

684 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

686 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


689 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

692 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


694 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

697 #ifde‡
__USE_GNU


700 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

701 
__THROW
;

705 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

706 
__THROW
;

710 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

711 
__THROW
;

715 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

716 
__THROW
;

723 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


730 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

736 *
	$ây«me
 (
__fd
Ë
__THROW
;

740 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

741 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

745 
	$ißây
 (
__fd
Ë
__THROW
;

747 #i‡
deföed
 
__USE_BSD
 \

748 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

751 
	$ây¶Ÿ
 (Ë
__THROW
;

756 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

757 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

759 #ifde‡
__USE_ATFILE


762 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

763 
__c⁄°
 *
__to
, 
__Êags
)

764 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

767 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


769 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

770 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

775 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

776 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

777 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

780 #ifde‡
__USE_ATFILE


782 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

783 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

786 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

787 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

788 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

792 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

794 #ifde‡
__USE_ATFILE


796 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

797 
__THROW
 
	`__n⁄nuŒ
 ((2));

801 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

805 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

808 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

815 *
	`gëlogö
 ();

816 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


823 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

826 #ifdef 
__USE_BSD


828 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

832 #ifdef 
__USE_POSIX2


836 
	#__√ed_gë›t


	)

837 
	~<gë›t.h
>

841 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


845 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

849 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

852 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

853 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

857 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

863 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

865 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

866 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

872 
	$vh™gup
 (Ë
__THROW
;

875 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

883 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

884 
size_t
 
__off£t
, 
__sˇÀ
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

891 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

895 *
	$gëu£rshñl
 (Ë
__THROW
;

896 
	$ídu£rshñl
 (Ë
__THROW
;

897 
	$£tu£rshñl
 (Ë
__THROW
;

903 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

907 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

910 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

914 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

918 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


923 
	`fsync
 (
__fd
);

927 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


930 
	`gëho°id
 ();

933 
	$sync
 (Ë
__THROW
;

938 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

943 
	$gëdèbÀsize
 (Ë
__THROW
;

947 #i‚de‡
__USE_FILE_OFFSET64


948 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

951 #ifde‡
__REDIRECT_NTH


952 
	`__REDIRECT_NTH
 (
åunˇã
,

953 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

954 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

956 
	#åunˇã
 
åunˇã64


	)

959 #ifde‡
__USE_LARGEFILE64


960 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


969 #i‚de‡
__USE_FILE_OFFSET64


970 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

972 #ifde‡
__REDIRECT_NTH


973 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

974 
·runˇã64
Ë
__wur
;

976 
	#·runˇã
 
·runˇã64


	)

979 #ifde‡
__USE_LARGEFILE64


980 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

986 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


990 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

996 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1000 #ifde‡
__USE_MISC


1011 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1016 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1028 
	#F_ULOCK
 0

	)

1029 
	#F_LOCK
 1

	)

1030 
	#F_TLOCK
 2

	)

1031 
	#F_TEST
 3

	)

1033 #i‚de‡
__USE_FILE_OFFSET64


1034 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1036 #ifde‡
__REDIRECT


1037 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1038 
lockf64
Ë
__wur
;

1040 
	#lockf
 
lockf64


	)

1043 #ifde‡
__USE_LARGEFILE64


1044 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1049 #ifde‡
__USE_GNU


1054 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1055 (
__exãnsi⁄__
 \

1056 ({ 
__ªsu…
; \

1057 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1058 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1059 
__ªsu…
; 
	}
}))

	)

1062 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1065 
fd©async
 (
__fûdes
);

1071 #ifdef 
__USE_XOPEN


1073 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1074 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1078 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1085 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1086 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1092 #ifde‡
__USE_XOPEN


1094 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1099 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


1100 
	~<bôs/uni°d.h
>

1103 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/asm/unistd.h

1 #i‚de‡
_ASM_I386_UNISTD_H_


2 
	#_ASM_I386_UNISTD_H_


	)

8 
	#__NR_ª°¨t_sysˇŒ
 0

	)

9 
	#__NR_exô
 1

	)

10 
	#__NR_f‹k
 2

	)

11 
	#__NR_ªad
 3

	)

12 
	#__NR_wrôe
 4

	)

13 
	#__NR_›í
 5

	)

14 
	#__NR_˛o£
 6

	)

15 
	#__NR_waôpid
 7

	)

16 
	#__NR_¸ót
 8

	)

17 
	#__NR_lök
 9

	)

18 
	#__NR_u∆ök
 10

	)

19 
	#__NR_execve
 11

	)

20 
	#__NR_chdú
 12

	)

21 
	#__NR_time
 13

	)

22 
	#__NR_mknod
 14

	)

23 
	#__NR_chmod
 15

	)

24 
	#__NR_lchown
 16

	)

25 
	#__NR_bªak
 17

	)

26 
	#__NR_ﬁd°©
 18

	)

27 
	#__NR_l£ek
 19

	)

28 
	#__NR_gëpid
 20

	)

29 
	#__NR_mou¡
 21

	)

30 
	#__NR_umou¡
 22

	)

31 
	#__NR_£tuid
 23

	)

32 
	#__NR_gëuid
 24

	)

33 
	#__NR_°ime
 25

	)

34 
	#__NR_±ø˚
 26

	)

35 
	#__NR_Æ¨m
 27

	)

36 
	#__NR_ﬁdf°©
 28

	)

37 
	#__NR_∑u£
 29

	)

38 
	#__NR_utime
 30

	)

39 
	#__NR_°ty
 31

	)

40 
	#__NR_gây
 32

	)

41 
	#__NR_ac˚ss
 33

	)

42 
	#__NR_ni˚
 34

	)

43 
	#__NR_·ime
 35

	)

44 
	#__NR_sync
 36

	)

45 
	#__NR_kûl
 37

	)

46 
	#__NR_ª«me
 38

	)

47 
	#__NR_mkdú
 39

	)

48 
	#__NR_rmdú
 40

	)

49 
	#__NR_dup
 41

	)

50 
	#__NR_pùe
 42

	)

51 
	#__NR_times
 43

	)

52 
	#__NR_¥of
 44

	)

53 
	#__NR_brk
 45

	)

54 
	#__NR_£tgid
 46

	)

55 
	#__NR_gëgid
 47

	)

56 
	#__NR_sig«l
 48

	)

57 
	#__NR_gëeuid
 49

	)

58 
	#__NR_gëegid
 50

	)

59 
	#__NR_ac˘
 51

	)

60 
	#__NR_umou¡2
 52

	)

61 
	#__NR_lock
 53

	)

62 
	#__NR_io˘l
 54

	)

63 
	#__NR_f˙é
 55

	)

64 
	#__NR_mpx
 56

	)

65 
	#__NR_£çgid
 57

	)

66 
	#__NR_ulimô
 58

	)

67 
	#__NR_ﬁdﬁdu«me
 59

	)

68 
	#__NR_umask
 60

	)

69 
	#__NR_chroŸ
 61

	)

70 
	#__NR_u°©
 62

	)

71 
	#__NR_dup2
 63

	)

72 
	#__NR_gëµid
 64

	)

73 
	#__NR_gëpgΩ
 65

	)

74 
	#__NR_£tsid
 66

	)

75 
	#__NR_siga˘i⁄
 67

	)

76 
	#__NR_sgëmask
 68

	)

77 
	#__NR_s£tmask
 69

	)

78 
	#__NR_£åeuid
 70

	)

79 
	#__NR_£åegid
 71

	)

80 
	#__NR_sigsu•íd
 72

	)

81 
	#__NR_sig≥ndög
 73

	)

82 
	#__NR_£tho°«me
 74

	)

83 
	#__NR_£ålimô
 75

	)

84 
	#__NR_gëæimô
 76

	)

85 
	#__NR_gërußge
 77

	)

86 
	#__NR_gëtimeofday
 78

	)

87 
	#__NR_£âimeofday
 79

	)

88 
	#__NR_gëgroups
 80

	)

89 
	#__NR_£tgroups
 81

	)

90 
	#__NR_£À˘
 82

	)

91 
	#__NR_symlök
 83

	)

92 
	#__NR_ﬁdl°©
 84

	)

93 
	#__NR_ªadlök
 85

	)

94 
	#__NR_u£lib
 86

	)

95 
	#__NR_sw≠⁄
 87

	)

96 
	#__NR_ªboŸ
 88

	)

97 
	#__NR_ªaddú
 89

	)

98 
	#__NR_mm≠
 90

	)

99 
	#__NR_munm≠
 91

	)

100 
	#__NR_åunˇã
 92

	)

101 
	#__NR_·runˇã
 93

	)

102 
	#__NR_fchmod
 94

	)

103 
	#__NR_fchown
 95

	)

104 
	#__NR_gë¥i‹ôy
 96

	)

105 
	#__NR_£çri‹ôy
 97

	)

106 
	#__NR_¥ofû
 98

	)

107 
	#__NR_°©fs
 99

	)

108 
	#__NR_f°©fs
 100

	)

109 
	#__NR_i›îm
 101

	)

110 
	#__NR_sockëˇŒ
 102

	)

111 
	#__NR_sy¶og
 103

	)

112 
	#__NR_£tôimî
 104

	)

113 
	#__NR_gëôimî
 105

	)

114 
	#__NR_°©
 106

	)

115 
	#__NR_l°©
 107

	)

116 
	#__NR_f°©
 108

	)

117 
	#__NR_ﬁdu«me
 109

	)

118 
	#__NR_i›l
 110

	)

119 
	#__NR_vh™gup
 111

	)

120 
	#__NR_idÀ
 112

	)

121 
	#__NR_vm86ﬁd
 113

	)

122 
	#__NR_waô4
 114

	)

123 
	#__NR_sw≠off
 115

	)

124 
	#__NR_sysöfo
 116

	)

125 
	#__NR_ùc
 117

	)

126 
	#__NR_fsync
 118

	)

127 
	#__NR_sigªtu∫
 119

	)

128 
	#__NR_˛⁄e
 120

	)

129 
	#__NR_£tdomaö«me
 121

	)

130 
	#__NR_u«me
 122

	)

131 
	#__NR_modify_ldt
 123

	)

132 
	#__NR_adjtimex
 124

	)

133 
	#__NR_m¥Ÿe˘
 125

	)

134 
	#__NR_sig¥ocmask
 126

	)

135 
	#__NR_¸óã_moduÀ
 127

	)

136 
	#__NR_öô_moduÀ
 128

	)

137 
	#__NR_dñëe_moduÀ
 129

	)

138 
	#__NR_gë_kî√l_syms
 130

	)

139 
	#__NR_quŸa˘l
 131

	)

140 
	#__NR_gëpgid
 132

	)

141 
	#__NR_fchdú
 133

	)

142 
	#__NR_bdÊush
 134

	)

143 
	#__NR_sysfs
 135

	)

144 
	#__NR_≥rs⁄Æôy
 136

	)

145 
	#__NR_afs_sysˇŒ
 137

	)

146 
	#__NR_£tfsuid
 138

	)

147 
	#__NR_£tfsgid
 139

	)

148 
	#__NR__Œ£ek
 140

	)

149 
	#__NR_gëdíts
 141

	)

150 
	#__NR__√w£À˘
 142

	)

151 
	#__NR_Êock
 143

	)

152 
	#__NR_msync
 144

	)

153 
	#__NR_ªadv
 145

	)

154 
	#__NR_wrôev
 146

	)

155 
	#__NR_gësid
 147

	)

156 
	#__NR_fd©async
 148

	)

157 
	#__NR__sys˘l
 149

	)

158 
	#__NR_mlock
 150

	)

159 
	#__NR_mu∆ock
 151

	)

160 
	#__NR_mlockÆl
 152

	)

161 
	#__NR_mu∆ockÆl
 153

	)

162 
	#__NR_sched_£ç¨am
 154

	)

163 
	#__NR_sched_gë∑øm
 155

	)

164 
	#__NR_sched_£tscheduÀr
 156

	)

165 
	#__NR_sched_gëscheduÀr
 157

	)

166 
	#__NR_sched_yõld
 158

	)

167 
	#__NR_sched_gë_¥i‹ôy_max
 159

	)

168 
	#__NR_sched_gë_¥i‹ôy_mö
 160

	)

169 
	#__NR_sched_º_gë_öãrvÆ
 161

	)

170 
	#__NR_«no¶ìp
 162

	)

171 
	#__NR_mªm≠
 163

	)

172 
	#__NR_£åesuid
 164

	)

173 
	#__NR_gëªsuid
 165

	)

174 
	#__NR_vm86
 166

	)

175 
	#__NR_quîy_moduÀ
 167

	)

176 
	#__NR_pﬁl
 168

	)

177 
	#__NR_nfs£rv˘l
 169

	)

178 
	#__NR_£åesgid
 170

	)

179 
	#__NR_gëªsgid
 171

	)

180 
	#__NR_¥˘l
 172

	)

181 
	#__NR_π_sigªtu∫
 173

	)

182 
	#__NR_π_siga˘i⁄
 174

	)

183 
	#__NR_π_sig¥ocmask
 175

	)

184 
	#__NR_π_sig≥ndög
 176

	)

185 
	#__NR_π_sigtimedwaô
 177

	)

186 
	#__NR_π_sigqueueöfo
 178

	)

187 
	#__NR_π_sigsu•íd
 179

	)

188 
	#__NR_¥ód64
 180

	)

189 
	#__NR_pwrôe64
 181

	)

190 
	#__NR_chown
 182

	)

191 
	#__NR_gëcwd
 183

	)

192 
	#__NR_ˇpgë
 184

	)

193 
	#__NR_ˇp£t
 185

	)

194 
	#__NR_sigÆt°ack
 186

	)

195 
	#__NR_£ndfûe
 187

	)

196 
	#__NR_gëpmsg
 188

	)

197 
	#__NR_puçmsg
 189

	)

198 
	#__NR_vf‹k
 190

	)

199 
	#__NR_ugëæimô
 191

	)

200 
	#__NR_mm≠2
 192

	)

201 
	#__NR_åunˇã64
 193

	)

202 
	#__NR_·runˇã64
 194

	)

203 
	#__NR_°©64
 195

	)

204 
	#__NR_l°©64
 196

	)

205 
	#__NR_f°©64
 197

	)

206 
	#__NR_lchown32
 198

	)

207 
	#__NR_gëuid32
 199

	)

208 
	#__NR_gëgid32
 200

	)

209 
	#__NR_gëeuid32
 201

	)

210 
	#__NR_gëegid32
 202

	)

211 
	#__NR_£åeuid32
 203

	)

212 
	#__NR_£åegid32
 204

	)

213 
	#__NR_gëgroups32
 205

	)

214 
	#__NR_£tgroups32
 206

	)

215 
	#__NR_fchown32
 207

	)

216 
	#__NR_£åesuid32
 208

	)

217 
	#__NR_gëªsuid32
 209

	)

218 
	#__NR_£åesgid32
 210

	)

219 
	#__NR_gëªsgid32
 211

	)

220 
	#__NR_chown32
 212

	)

221 
	#__NR_£tuid32
 213

	)

222 
	#__NR_£tgid32
 214

	)

223 
	#__NR_£tfsuid32
 215

	)

224 
	#__NR_£tfsgid32
 216

	)

225 
	#__NR_pivŸ_roŸ
 217

	)

226 
	#__NR_möc‹e
 218

	)

227 
	#__NR_madvi£
 219

	)

228 
	#__NR_madvi£1
 219

	)

229 
	#__NR_gëdíts64
 220

	)

230 
	#__NR_f˙é64
 221

	)

232 
	#__NR_gëtid
 224

	)

233 
	#__NR_ªadahód
 225

	)

234 
	#__NR_£tx©å
 226

	)

235 
	#__NR_l£tx©å
 227

	)

236 
	#__NR_f£tx©å
 228

	)

237 
	#__NR_gëx©å
 229

	)

238 
	#__NR_lgëx©å
 230

	)

239 
	#__NR_fgëx©å
 231

	)

240 
	#__NR_li°x©å
 232

	)

241 
	#__NR_Œi°x©å
 233

	)

242 
	#__NR_Êi°x©å
 234

	)

243 
	#__NR_ªmovex©å
 235

	)

244 
	#__NR_Ãemovex©å
 236

	)

245 
	#__NR_‰emovex©å
 237

	)

246 
	#__NR_tkûl
 238

	)

247 
	#__NR_£ndfûe64
 239

	)

248 
	#__NR_fuãx
 240

	)

249 
	#__NR_sched_£èfföôy
 241

	)

250 
	#__NR_sched_gëafföôy
 242

	)

251 
	#__NR_£t_thªad_¨ó
 243

	)

252 
	#__NR_gë_thªad_¨ó
 244

	)

253 
	#__NR_io_£tup
 245

	)

254 
	#__NR_io_de°roy
 246

	)

255 
	#__NR_io_gëevíts
 247

	)

256 
	#__NR_io_submô
 248

	)

257 
	#__NR_io_ˇn˚l
 249

	)

258 
	#__NR_Ádvi£64
 250

	)

260 
	#__NR_exô_group
 252

	)

261 
	#__NR_lookup_dcookõ
 253

	)

262 
	#__NR_ïﬁl_¸óã
 254

	)

263 
	#__NR_ïﬁl_˘l
 255

	)

264 
	#__NR_ïﬁl_waô
 256

	)

265 
	#__NR_ªm≠_fûe_∑ges
 257

	)

266 
	#__NR_£t_tid_addªss
 258

	)

267 
	#__NR_timî_¸óã
 259

	)

268 
	#__NR_timî_£âime
 (
__NR_timî_¸óã
+1)

	)

269 
	#__NR_timî_gëtime
 (
__NR_timî_¸óã
+2)

	)

270 
	#__NR_timî_gëovîrun
 (
__NR_timî_¸óã
+3)

	)

271 
	#__NR_timî_dñëe
 (
__NR_timî_¸óã
+4)

	)

272 
	#__NR_˛ock_£âime
 (
__NR_timî_¸óã
+5)

	)

273 
	#__NR_˛ock_gëtime
 (
__NR_timî_¸óã
+6)

	)

274 
	#__NR_˛ock_gëªs
 (
__NR_timî_¸óã
+7)

	)

275 
	#__NR_˛ock_«no¶ìp
 (
__NR_timî_¸óã
+8)

	)

276 
	#__NR_°©fs64
 268

	)

277 
	#__NR_f°©fs64
 269

	)

278 
	#__NR_tgkûl
 270

	)

279 
	#__NR_utimes
 271

	)

280 
	#__NR_Ádvi£64_64
 272

	)

281 
	#__NR_v£rvî
 273

	)

282 
	#__NR_mböd
 274

	)

283 
	#__NR_gë_mempﬁicy
 275

	)

284 
	#__NR_£t_mempﬁicy
 276

	)

285 
	#__NR_mq_›í
 277

	)

286 
	#__NR_mq_u∆ök
 (
__NR_mq_›í
+1)

	)

287 
	#__NR_mq_timed£nd
 (
__NR_mq_›í
+2)

	)

288 
	#__NR_mq_timedª˚ive
 (
__NR_mq_›í
+3)

	)

289 
	#__NR_mq_nŸify
 (
__NR_mq_›í
+4)

	)

290 
	#__NR_mq_gë£èâr
 (
__NR_mq_›í
+5)

	)

291 
	#__NR_kexec_lﬂd
 283

	)

292 
	#__NR_waôid
 284

	)

294 
	#__NR_add_key
 286

	)

295 
	#__NR_ªque°_key
 287

	)

296 
	#__NR_key˘l
 288

	)

297 
	#__NR_i›rio_£t
 289

	)

298 
	#__NR_i›rio_gë
 290

	)

299 
	#__NR_öŸify_öô
 291

	)

300 
	#__NR_öŸify_add_w©ch
 292

	)

301 
	#__NR_öŸify_rm_w©ch
 293

	)

302 
	#__NR_migøã_∑ges
 294

	)

303 
	#__NR_›í©
 295

	)

304 
	#__NR_mkdú©
 296

	)

305 
	#__NR_mknod©
 297

	)

306 
	#__NR_fchow«t
 298

	)

307 
	#__NR_futimeßt
 299

	)

308 
	#__NR_f°©©64
 300

	)

309 
	#__NR_u∆ök©
 301

	)

310 
	#__NR_ª«mót
 302

	)

311 
	#__NR_lök©
 303

	)

312 
	#__NR_symlök©
 304

	)

313 
	#__NR_ªadlök©
 305

	)

314 
	#__NR_fchmod©
 306

	)

315 
	#__NR_Ác˚sßt
 307

	)

316 
	#__NR_p£À˘6
 308

	)

317 
	#__NR_µﬁl
 309

	)

318 
	#__NR_unsh¨e
 310

	)

319 
	#__NR_£t_robu°_li°
 311

	)

320 
	#__NR_gë_robu°_li°
 312

	)

321 
	#__NR_•li˚
 313

	)

322 
	#__NR_sync_fûe_ønge
 314

	)

323 
	#__NR_ãe
 315

	)

324 
	#__NR_vm•li˚
 316

	)

325 
	#__NR_move_∑ges
 317

	)

326 
	#__NR_gë˝u
 318

	)

331 
	#__NR_evítfd
 323

	)

332 
	#__NR_ÁŒoˇã
 324

	)

345 
	#__NR_ªcvmmsg
 337

	)

	@/usr/include/bits/byteswap.h

20 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H


24 #i‚de‡
_BITS_BYTESWAP_H


25 
	#_BITS_BYTESWAP_H
 1

	)

28 
	#__bsw≠_c⁄°™t_16
(
x
) \

29 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

31 #ifde‡
__GNUC__


32 #i‡
__GNUC__
 >= 2

33 
	#__bsw≠_16
(
x
) \

34 (
__exãnsi⁄__
 \

35 ({ 
__v
, 
__x
 = (
x
); \

36 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

37 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

39 
	`__asm__
 ("rorw $8, %w0" \

40 : "Ù" (
__v
) \

41 : "0" (
__x
) \

43 
__v
; }))

	)

46 
	#__bsw≠_16
(
x
) \

47 (
__exãnsi⁄__
 \

48 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

51 
__ölöe
 

52 
	$__bsw≠_16
 (
__bsx
)

54  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

55 
	}
}

59 
	#__bsw≠_c⁄°™t_32
(
x
) \

60 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

61 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

63 #ifde‡
__GNUC__


64 #i‡
__GNUC__
 >= 2

67 #i‡!
deföed
 
__i486__
 && !deföed 
__≥¡ium__
 && !deföed 
__≥¡ium¥o__
 \

68 && !
deföed
 
	g__≥¡ium4__
 && !deföed 
	g__k8__
 && !deföed 
	g__©hl⁄__
 \

69 && !
deföed
 
	g__k6__
 && !deföed 
	g__noc⁄a__
 && !deföed 
	g__c‹e2__
 \

70 && !
deföed
 
	g__geode__
 && !deföed 
	g__amdÁm10__


71 
	#__bsw≠_32
(
x
) \

72 (
__exãnsi⁄__
 \

73 ({ 
__v
, 
__x
 = (
x
); \

74 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

75 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

77 
	`__asm__
 ("rorw $8, %w0;" \

80 : "Ù" (
__v
) \

81 : "0" (
__x
) \

83 
__v
; }))

	)

85 
	#__bsw≠_32
(
x
) \

86 (
__exãnsi⁄__
 \

87 ({ 
__v
, 
__x
 = (
x
); \

88 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

89 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

91 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

92 
__v
; }))

	)

95 
	#__bsw≠_32
(
x
) \

96 (
__exãnsi⁄__
 \

97 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

100 
__ölöe
 

101 
	$__bsw≠_32
 (
__bsx
)

103  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

104 
	}
}

108 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

110 
	#__bsw≠_c⁄°™t_64
(
x
) \

111 ((((
x
) & 0xff00000000000000ull) >> 56) \

112 | (((
x
) & 0x00ff000000000000ull) >> 40) \

113 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

114 | (((
x
) & 0x000000ff00000000ull) >> 8) \

115 | (((
x
) & 0x00000000ff000000ull) << 8) \

116 | (((
x
) & 0x0000000000ff0000ull) << 24) \

117 | (((
x
) & 0x000000000000ff00ull) << 40) \

118 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS


502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

508 
	m_CS_PATH
,

509 
	#_CS_PATH
 
_CS_PATH


	)

511 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

512 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

514 
	m_CS_GNU_LIBC_VERSION
,

515 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

516 
	m_CS_GNU_LIBPTHREAD_VERSION
,

517 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

519 
	m_CS_LFS_CFLAGS
 = 1000,

520 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

521 
	m_CS_LFS_LDFLAGS
,

522 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

523 
	m_CS_LFS_LIBS
,

524 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

525 
	m_CS_LFS_LINTFLAGS
,

526 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

527 
	m_CS_LFS64_CFLAGS
,

528 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

529 
	m_CS_LFS64_LDFLAGS
,

530 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

531 
	m_CS_LFS64_LIBS
,

532 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

533 
	m_CS_LFS64_LINTFLAGS
,

534 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

536 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

537 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

538 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

539 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

540 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

541 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

542 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

543 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

544 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

545 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

546 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

547 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

548 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

549 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

550 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

551 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

552 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

553 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

554 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

555 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

556 
	m_CS_XBS5_LP64_OFF64_LIBS
,

557 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

558 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

559 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

560 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

561 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

562 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

563 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

564 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

565 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

566 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

567 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

569 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

570 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

571 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

572 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

573 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

574 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

575 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

576 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

577 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

578 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

579 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

580 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

581 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

582 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

583 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

584 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

585 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

586 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

587 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

588 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

589 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

590 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

591 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

592 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

593 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

594 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

595 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

596 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

597 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

598 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

599 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


600 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


41 
	#_POSIX_V6_ILP32_OFF32
 1

	)

42 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

43 
	#_XBS5_ILP32_OFF32
 1

	)

44 
	#_XBS5_ILP32_OFFBIG
 1

	)

57 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

58 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

59 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

60 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

61 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

62 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
__ASSEMBLER__


43 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

45 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


47 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

52 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


56 
	#EDOM
 33

	)

57 
	#EILSEQ
 84

	)

58 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

21 #i‚def 
_FCNTL_H


25 
	~<sys/ty≥s.h
>

26 #ifde‡
__USE_GNU


27 
	~<bôs/uio.h
>

33 
	#O_ACCMODE
 0003

	)

34 
	#O_RDONLY
 00

	)

35 
	#O_WRONLY
 01

	)

36 
	#O_RDWR
 02

	)

37 
	#O_CREAT
 0100

	)

38 
	#O_EXCL
 0200

	)

39 
	#O_NOCTTY
 0400

	)

40 
	#O_TRUNC
 01000

	)

41 
	#O_APPEND
 02000

	)

42 
	#O_NONBLOCK
 04000

	)

43 
	#O_NDELAY
 
O_NONBLOCK


	)

44 
	#O_SYNC
 010000

	)

45 
	#O_FSYNC
 
O_SYNC


	)

46 
	#O_ASYNC
 020000

	)

48 #ifde‡
__USE_GNU


49 
	#O_DIRECT
 040000

	)

50 
	#O_DIRECTORY
 0200000

	)

51 
	#O_NOFOLLOW
 0400000

	)

52 
	#O_NOATIME
 01000000

	)

58 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


59 
	#O_DSYNC
 
O_SYNC


	)

60 
	#O_RSYNC
 
O_SYNC


	)

63 #ifde‡
__USE_LARGEFILE64


64 
	#O_LARGEFILE
 0100000

	)

68 
	#F_DUPFD
 0

	)

69 
	#F_GETFD
 1

	)

70 
	#F_SETFD
 2

	)

71 
	#F_GETFL
 3

	)

72 
	#F_SETFL
 4

	)

73 #i‚de‡
__USE_FILE_OFFSET64


74 
	#F_GETLK
 5

	)

75 
	#F_SETLK
 6

	)

76 
	#F_SETLKW
 7

	)

78 
	#F_GETLK
 
F_GETLK64


	)

79 
	#F_SETLK
 
F_SETLK64


	)

80 
	#F_SETLKW
 
F_SETLKW64


	)

82 
	#F_GETLK64
 12

	)

83 
	#F_SETLK64
 13

	)

84 
	#F_SETLKW64
 14

	)

86 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


87 
	#F_SETOWN
 8

	)

88 
	#F_GETOWN
 9

	)

91 #ifde‡
__USE_GNU


92 
	#F_SETSIG
 10

	)

93 
	#F_GETSIG
 11

	)

96 #ifde‡
__USE_GNU


97 
	#F_SETLEASE
 1024

	)

98 
	#F_GETLEASE
 1025

	)

99 
	#F_NOTIFY
 1026

	)

103 
	#FD_CLOEXEC
 1

	)

106 
	#F_RDLCK
 0

	)

107 
	#F_WRLCK
 1

	)

108 
	#F_UNLCK
 2

	)

111 
	#F_EXLCK
 4

	)

112 
	#F_SHLCK
 8

	)

114 #ifde‡
__USE_BSD


116 
	#LOCK_SH
 1

	)

117 
	#LOCK_EX
 2

	)

118 
	#LOCK_NB
 4

	)

120 
	#LOCK_UN
 8

	)

123 #ifde‡
__USE_GNU


124 
	#LOCK_MAND
 32

	)

125 
	#LOCK_READ
 64

	)

126 
	#LOCK_WRITE
 128

	)

127 
	#LOCK_RW
 192

	)

130 #ifde‡
__USE_GNU


132 
	#DN_ACCESS
 0x00000001

	)

133 
	#DN_MODIFY
 0x00000002

	)

134 
	#DN_CREATE
 0x00000004

	)

135 
	#DN_DELETE
 0x00000008

	)

136 
	#DN_RENAME
 0x00000010

	)

137 
	#DN_ATTRIB
 0x00000020

	)

138 
	#DN_MULTISHOT
 0x80000000

	)

141 
	sÊock


143 
	ml_ty≥
;

144 
	ml_whí˚
;

145 #i‚de‡
__USE_FILE_OFFSET64


146 
__off_t
 
	ml_°¨t
;

147 
__off_t
 
	ml_Àn
;

149 
__off64_t
 
	ml_°¨t
;

150 
__off64_t
 
	ml_Àn
;

152 
__pid_t
 
	ml_pid
;

155 #ifde‡
__USE_LARGEFILE64


156 
	sÊock64


158 
	ml_ty≥
;

159 
	ml_whí˚
;

160 
__off64_t
 
	ml_°¨t
;

161 
__off64_t
 
	ml_Àn
;

162 
__pid_t
 
	ml_pid
;

168 #ifdef 
__USE_BSD


169 
	#FAPPEND
 
O_APPEND


	)

170 
	#FFSYNC
 
O_FSYNC


	)

171 
	#FASYNC
 
O_ASYNC


	)

172 
	#FNONBLOCK
 
O_NONBLOCK


	)

173 
	#FNDELAY
 
O_NDELAY


	)

177 #ifde‡
__USE_XOPEN2K


178 
	#POSIX_FADV_NORMAL
 0

	)

179 
	#POSIX_FADV_RANDOM
 1

	)

180 
	#POSIX_FADV_SEQUENTIAL
 2

	)

181 
	#POSIX_FADV_WILLNEED
 3

	)

182 
	#POSIX_FADV_DONTNEED
 4

	)

183 
	#POSIX_FADV_NOREUSE
 5

	)

187 #ifde‡
__USE_GNU


189 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

192 
	#SYNC_FILE_RANGE_WRITE
 2

	)

195 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

200 
	#SPLICE_F_MOVE
 1

	)

201 
	#SPLICE_F_NONBLOCK
 2

	)

204 
	#SPLICE_F_MORE
 4

	)

205 
	#SPLICE_F_GIFT
 8

	)

208 
	g__BEGIN_DECLS


210 #ifde‡
__USE_GNU


213 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

214 
__THROW
;

218 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__‰om
, __off64_à
__to
,

219 
__Êags
);

223 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
, 
size_t
 
__cou¡
,

224 
__Êags
);

227 
	$•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

228 
__off64_t
 *
__offout
, 
size_t
 
__Àn
, 
__Êags
)

229 
__THROW
;

232 
	$ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
, 
__Êags
)

233 
__THROW
;

237 
__END_DECLS


	@/usr/include/bits/in.h

21 #i‚de‡
_NETINET_IN_H


28 
	#IP_OPTIONS
 4

	)

29 
	#IP_HDRINCL
 3

	)

30 
	#IP_TOS
 1

	)

31 
	#IP_TTL
 2

	)

32 
	#IP_RECVOPTS
 6

	)

34 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

35 
	#IP_RETOPTS
 7

	)

36 
	#IP_MULTICAST_IF
 32

	)

37 
	#IP_MULTICAST_TTL
 33

	)

38 
	#IP_MULTICAST_LOOP
 34

	)

39 
	#IP_ADD_MEMBERSHIP
 35

	)

40 
	#IP_DROP_MEMBERSHIP
 36

	)

41 
	#IP_UNBLOCK_SOURCE
 37

	)

42 
	#IP_BLOCK_SOURCE
 38

	)

43 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

44 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

45 
	#IP_MSFILTER
 41

	)

46 
	#MCAST_JOIN_GROUP
 42

	)

47 
	#MCAST_BLOCK_SOURCE
 43

	)

48 
	#MCAST_UNBLOCK_SOURCE
 44

	)

49 
	#MCAST_LEAVE_GROUP
 45

	)

50 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

51 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

52 
	#MCAST_MSFILTER
 48

	)

54 
	#MCAST_EXCLUDE
 0

	)

55 
	#MCAST_INCLUDE
 1

	)

57 
	#IP_ROUTER_ALERT
 5

	)

58 
	#IP_PKTINFO
 8

	)

59 
	#IP_PKTOPTIONS
 9

	)

60 
	#IP_PMTUDISC
 10

	)

61 
	#IP_MTU_DISCOVER
 10

	)

62 
	#IP_RECVERR
 11

	)

63 
	#IP_RECVTTL
 12

	)

64 
	#IP_RECVTOS
 13

	)

68 
	#IP_PMTUDISC_DONT
 0

	)

69 
	#IP_PMTUDISC_WANT
 1

	)

70 
	#IP_PMTUDISC_DO
 2

	)

73 
	#SOL_IP
 0

	)

75 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

76 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

77 
	#IP_MAX_MEMBERSHIPS
 20

	)

82 
	sù_›ts


84 
ö_addr
 
	mù_d°
;

85 
	mù_›ts
[40];

89 
	sù_mªqn


91 
ö_addr
 
	mimr_mu…üddr
;

92 
ö_addr
 
	mimr_addªss
;

93 
	mimr_ifödex
;

97 
	sö_pktöfo


99 
	mùi_ifödex
;

100 
ö_addr
 
	mùi_•ec_d°
;

101 
ö_addr
 
	mùi_addr
;

107 
	#IPV6_ADDRFORM
 1

	)

108 
	#IPV6_2292PKTINFO
 2

	)

109 
	#IPV6_2292HOPOPTS
 3

	)

110 
	#IPV6_2292DSTOPTS
 4

	)

111 
	#IPV6_2292RTHDR
 5

	)

112 
	#IPV6_2292PKTOPTIONS
 6

	)

113 
	#IPV6_CHECKSUM
 7

	)

114 
	#IPV6_2292HOPLIMIT
 8

	)

116 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

118 
	#IPV6_NEXTHOP
 9

	)

119 
	#IPV6_AUTHHDR
 10

	)

120 
	#IPV6_UNICAST_HOPS
 16

	)

121 
	#IPV6_MULTICAST_IF
 17

	)

122 
	#IPV6_MULTICAST_HOPS
 18

	)

123 
	#IPV6_MULTICAST_LOOP
 19

	)

124 
	#IPV6_JOIN_GROUP
 20

	)

125 
	#IPV6_LEAVE_GROUP
 21

	)

126 
	#IPV6_ROUTER_ALERT
 22

	)

127 
	#IPV6_MTU_DISCOVER
 23

	)

128 
	#IPV6_MTU
 24

	)

129 
	#IPV6_RECVERR
 25

	)

130 
	#IPV6_V6ONLY
 26

	)

131 
	#IPV6_JOIN_ANYCAST
 27

	)

132 
	#IPV6_LEAVE_ANYCAST
 28

	)

133 
	#IPV6_IPSEC_POLICY
 34

	)

134 
	#IPV6_XFRM_POLICY
 35

	)

136 
	#IPV6_RECVPKTINFO
 49

	)

137 
	#IPV6_PKTINFO
 50

	)

138 
	#IPV6_RECVHOPLIMIT
 51

	)

139 
	#IPV6_HOPLIMIT
 52

	)

140 
	#IPV6_RECVHOPOPTS
 53

	)

141 
	#IPV6_HOPOPTS
 54

	)

142 
	#IPV6_RTHDRDSTOPTS
 55

	)

143 
	#IPV6_RECVRTHDR
 56

	)

144 
	#IPV6_RTHDR
 57

	)

145 
	#IPV6_RECVDSTOPTS
 58

	)

146 
	#IPV6_DSTOPTS
 59

	)

148 
	#IPV6_RECVTCLASS
 66

	)

149 
	#IPV6_TCLASS
 67

	)

152 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

153 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

154 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

155 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

158 
	#IPV6_PMTUDISC_DONT
 0

	)

159 
	#IPV6_PMTUDISC_WANT
 1

	)

160 
	#IPV6_PMTUDISC_DO
 2

	)

163 
	#SOL_IPV6
 41

	)

164 
	#SOL_ICMPV6
 58

	)

167 
	#IPV6_RTHDR_LOOSE
 0

	)

168 
	#IPV6_RTHDR_STRICT
 1

	)

170 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/ioctl-types.h

20 #i‚de‡
_SYS_IOCTL_H


25 
	~<asm/io˘ls.h
>

28 
	swösize


30 
	mws_row
;

31 
	mws_cﬁ
;

32 
	mws_xpixñ
;

33 
	mws_ypixñ
;

36 
	#NCC
 8

	)

37 
	sãrmio


39 
	mc_iÊag
;

40 
	mc_oÊag
;

41 
	mc_cÊag
;

42 
	mc_lÊag
;

43 
	mc_löe
;

44 
	mc_cc
[
NCC
];

48 
	#TIOCM_LE
 0x001

	)

49 
	#TIOCM_DTR
 0x002

	)

50 
	#TIOCM_RTS
 0x004

	)

51 
	#TIOCM_ST
 0x008

	)

52 
	#TIOCM_SR
 0x010

	)

53 
	#TIOCM_CTS
 0x020

	)

54 
	#TIOCM_CAR
 0x040

	)

55 
	#TIOCM_RNG
 0x080

	)

56 
	#TIOCM_DSR
 0x100

	)

57 
	#TIOCM_CD
 
TIOCM_CAR


	)

58 
	#TIOCM_RI
 
TIOCM_RNG


	)

63 
	#N_TTY
 0

	)

64 
	#N_SLIP
 1

	)

65 
	#N_MOUSE
 2

	)

66 
	#N_PPP
 3

	)

67 
	#N_STRIP
 4

	)

68 
	#N_AX25
 5

	)

69 
	#N_X25
 6

	)

70 
	#N_6PACK
 7

	)

71 
	#N_MASC
 8

	)

72 
	#N_R3964
 9

	)

73 
	#N_PROFIBUS_FDL
 10

	)

74 
	#N_IRDA
 11

	)

75 
	#N_SMSBLOCK
 12

	)

76 
	#N_HDLC
 13

	)

77 
	#N_SYNC_PPP
 14

	)

78 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	#SIOCADDRT
 0x890B

	)

28 
	#SIOCDELRT
 0x890C

	)

29 
	#SIOCRTMSG
 0x890D

	)

32 
	#SIOCGIFNAME
 0x8910

	)

33 
	#SIOCSIFLINK
 0x8911

	)

34 
	#SIOCGIFCONF
 0x8912

	)

35 
	#SIOCGIFFLAGS
 0x8913

	)

36 
	#SIOCSIFFLAGS
 0x8914

	)

37 
	#SIOCGIFADDR
 0x8915

	)

38 
	#SIOCSIFADDR
 0x8916

	)

39 
	#SIOCGIFDSTADDR
 0x8917

	)

40 
	#SIOCSIFDSTADDR
 0x8918

	)

41 
	#SIOCGIFBRDADDR
 0x8919

	)

42 
	#SIOCSIFBRDADDR
 0x891®

	)

43 
	#SIOCGIFNETMASK
 0x891b

	)

44 
	#SIOCSIFNETMASK
 0x891¯

	)

45 
	#SIOCGIFMETRIC
 0x891d

	)

46 
	#SIOCSIFMETRIC
 0x891ê

	)

47 
	#SIOCGIFMEM
 0x891‡

	)

48 
	#SIOCSIFMEM
 0x8920

	)

49 
	#SIOCGIFMTU
 0x8921

	)

50 
	#SIOCSIFMTU
 0x8922

	)

51 
	#SIOCSIFNAME
 0x8923

	)

52 
	#SIOCSIFHWADDR
 0x8924

	)

53 
	#SIOCGIFENCAP
 0x8925

	)

54 
	#SIOCSIFENCAP
 0x8926

	)

55 
	#SIOCGIFHWADDR
 0x8927

	)

56 
	#SIOCGIFSLAVE
 0x8929

	)

57 
	#SIOCSIFSLAVE
 0x8930

	)

58 
	#SIOCADDMULTI
 0x8931

	)

59 
	#SIOCDELMULTI
 0x8932

	)

60 
	#SIOCGIFINDEX
 0x8933

	)

61 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

62 
	#SIOCSIFPFLAGS
 0x8934

	)

63 
	#SIOCGIFPFLAGS
 0x8935

	)

64 
	#SIOCDIFADDR
 0x8936

	)

65 
	#SIOCSIFHWBROADCAST
 0x8937

	)

66 
	#SIOCGIFCOUNT
 0x8938

	)

68 
	#SIOCGIFBR
 0x8940

	)

69 
	#SIOCSIFBR
 0x8941

	)

71 
	#SIOCGIFTXQLEN
 0x8942

	)

72 
	#SIOCSIFTXQLEN
 0x8943

	)

77 
	#SIOCDARP
 0x8953

	)

78 
	#SIOCGARP
 0x8954

	)

79 
	#SIOCSARP
 0x8955

	)

82 
	#SIOCDRARP
 0x8960

	)

83 
	#SIOCGRARP
 0x8961

	)

84 
	#SIOCSRARP
 0x8962

	)

88 
	#SIOCGIFMAP
 0x8970

	)

89 
	#SIOCSIFMAP
 0x8971

	)

93 
	#SIOCADDDLCI
 0x8980

	)

94 
	#SIOCDELDLCI
 0x8981

	)

103 
	#SIOCDEVPRIVATE
 0x89F0

	)

109 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

95 
	#_POSIX_PATH_MAX
 256

	)

98 
	#_POSIX_PIPE_BUF
 512

	)

102 
	#_POSIX_RE_DUP_MAX
 255

	)

105 
	#_POSIX_RTSIG_MAX
 8

	)

108 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

111 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

114 
	#_POSIX_SIGQUEUE_MAX
 32

	)

117 
	#_POSIX_SSIZE_MAX
 32767

	)

120 
	#_POSIX_STREAM_MAX
 8

	)

123 
	#_POSIX_SYMLINK_MAX
 255

	)

127 
	#_POSIX_SYMLOOP_MAX
 8

	)

130 
	#_POSIX_TIMER_MAX
 32

	)

133 
	#_POSIX_TTY_NAME_MAX
 9

	)

136 
	#_POSIX_TZNAME_MAX
 6

	)

139 
	#_POSIX_QLIMIT
 1

	)

143 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

146 
	#_POSIX_UIO_MAXIOV
 16

	)

149 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

153 
	~<bôs/loˇl_lim.h
>

156 #i‚def 
SSIZE_MAX


157 
	#SSIZE_MAX
 
LONG_MAX


	)

164 #i‚def 
NGROUPS_MAX


165 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_POSIX_OPT_H


21 
	#_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200112L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200112L

	)

36 
	#_POSIX_FSYNC
 200112L

	)

39 
	#_POSIX_MAPPED_FILES
 200112L

	)

42 
	#_POSIX_MEMLOCK
 200112L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200112L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200112L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 1

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200112L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200112L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200112L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200112L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200112L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200112L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200112L

	)

93 
	#_POSIX_SEMAPHORES
 200112L

	)

96 
	#_POSIX_REALTIME_SIGNALS
 200112L

	)

99 
	#_POSIX_ASYNCHRONOUS_IO
 200112L

	)

100 
	#_POSIX_ASYNC_IO
 1

	)

102 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

104 
	#_POSIX_PRIORITIZED_IO
 200112L

	)

107 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

110 
	#_LFS_LARGEFILE
 1

	)

111 
	#_LFS64_LARGEFILE
 1

	)

112 
	#_LFS64_STDIO
 1

	)

115 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200112L

	)

118 
	#_POSIX_CPUTIME
 0

	)

121 
	#_POSIX_THREAD_CPUTIME
 0

	)

124 
	#_POSIX_REGEXP
 1

	)

127 
	#_POSIX_READER_WRITER_LOCKS
 200112L

	)

130 
	#_POSIX_SHELL
 1

	)

133 
	#_POSIX_TIMEOUTS
 200112L

	)

136 
	#_POSIX_SPIN_LOCKS
 200112L

	)

139 
	#_POSIX_SPAWN
 200112L

	)

142 
	#_POSIX_TIMERS
 200112L

	)

145 
	#_POSIX_BARRIERS
 200112L

	)

148 
	#_POSIX_MESSAGE_PASSING
 200112L

	)

151 
	#_POSIX_THREAD_PROCESS_SHARED
 200112L

	)

154 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

157 
	#_POSIX_CLOCK_SELECTION
 200112L

	)

160 
	#_POSIX_ADVISORY_INFO
 200112L

	)

163 
	#_POSIX_IPV6
 200112L

	)

166 
	#_POSIX_RAW_SOCKETS
 200112L

	)

169 
	#_POSIX2_CHAR_TERM
 200112L

	)

172 
	#_POSIX_SPORADIC_SERVER
 -1

	)

173 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

176 
	#_POSIX_TRACE
 -1

	)

177 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

178 
	#_POSIX_TRACE_INHERIT
 -1

	)

179 
	#_POSIX_TRACE_LOG
 -1

	)

182 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_H


20 
	#_BITS_PTHREADTYPES_H
 1

	)

22 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

23 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

24 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

25 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

26 
	#__SIZEOF_PTHREAD_COND_COMPAT_T
 12

	)

27 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

29 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

30 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

31 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	t±hªad_t
;

41 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

42 
	m__Æign
;

43 } 
	t±hªad_©å_t
;

46 
	s__±hªad_öã∫Æ_¶i°


48 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

49 } 
	t__±hªad_¶i°_t
;

56 
	s__±hªad_muãx_s


58 
	m__lock
;

59 
	m__cou¡
;

60 
	m__ow√r
;

63 
	m__köd
;

64 
	m__nu£rs
;

65 
__exãnsi⁄__
 union

67 
	m__•ös
;

68 
__±hªad_¶i°_t
 
	m__li°
;

70 } 
	m__d©a
;

71 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

72 
	m__Æign
;

73 } 
	t±hªad_muãx_t
;

77 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

78 
	m__Æign
;

79 } 
	t±hªad_muãx©å_t
;

88 
	m__lock
;

89 
	m__fuãx
;

90 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

91 
__exãnsi⁄__
 
	m__wakeup_£q
;

92 
__exãnsi⁄__
 
	m__wokí_£q
;

93 *
	m__muãx
;

94 
	m__nwaôîs
;

95 
	m__brﬂdˇ°_£q
;

96 } 
	m__d©a
;

97 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

98 
__exãnsi⁄__
 
	m__Æign
;

99 } 
	t±hªad_c⁄d_t
;

103 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

104 
	m__Æign
;

105 } 
	t±hªad_c⁄d©å_t
;

109 
	t±hªad_key_t
;

113 
	t±hªad_⁄˚_t
;

116 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


123 
	m__lock
;

124 
	m__ƒ_ªadîs
;

125 
	m__ªadîs_wakeup
;

126 
	m__wrôî_wakeup
;

127 
	m__ƒ_ªadîs_queued
;

128 
	m__ƒ_wrôîs_queued
;

131 
	m__Êags
;

132 
	m__sh¨ed
;

133 
	m__∑d1
;

134 
	m__∑d2
;

135 
	m__wrôî
;

136 } 
	m__d©a
;

137 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

138 
	m__Æign
;

139 } 
	t±hªad_rwlock_t
;

143 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

144 
	m__Æign
;

145 } 
	t±hªad_rwlock©å_t
;

149 #ifde‡
__USE_XOPEN2K


151 vﬁ©ûê
	t±hªad_•ölock_t
;

158 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

159 
	m__Æign
;

160 } 
	t±hªad_b¨rõr_t
;

164 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

165 
	m__Æign
;

166 } 
	t±hªad_b¨rõøâr_t
;

171 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


24 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

26 
	#__FD_ZERO
(
fd•
) \

28 
__d0
, 
__d1
; \

29 
__asm__
 
	`__vﬁ©ûe__
 ("cld;Ñep; stosl" \

30 : "=c" (
__d0
), "=D" (
__d1
) \

31 : "a" (0), "0" ( (
fd_£t
) \

32 /  (
__fd_mask
)), \

33 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

35 } 0)

	)

37 
	#__FD_SET
(
fd
, 
fd•
) \

38 
__asm__
 
	`__vﬁ©ûe__
 ("btsl %1,%0" \

39 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

40 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

41 : "cc","mem‹y")

	)

42 
	#__FD_CLR
(
fd
, 
fd•
) \

43 
__asm__
 
	`__vﬁ©ûe__
 ("btrl %1,%0" \

44 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

45 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

46 : "cc","mem‹y")

	)

47 
	#__FD_ISSET
(
fd
, 
fd•
) \

48 (
__exãnsi⁄__
 \

49 ({
__ªsu…
; \

50 
__asm__
 
	`__vﬁ©ûe__
 ("btl %1,%2 ; setcb %b0" \

51 : "=q" (
__ªsu…
) \

52 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
), \

53 "m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

55 
__ªsu…
; }))

	)

61 
	#__FD_ZERO
(
£t
) \

63 
__i
; \

64 
fd_£t
 *
__¨r
 = (
£t
); \

65 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

66 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

67 } 0)

	)

68 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

69 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

70 
	#__FD_ISSET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] & 
	`__FDMASK
 (d))

	)

	@/usr/include/bits/semaphore.h

20 #i‚de‡
_SEMAPHORE_H


25 
	#__SIZEOF_SEM_T
 16

	)

29 
	#SEM_FAILED
 ((
£m_t
 *Ë0)

	)

32 
	#SEM_VALUE_MAX
 (2147483647)

	)

37 
	m__size
[
__SIZEOF_SEM_T
];

38 
	m__Æign
;

39 } 
	t£m_t
;

	@/usr/include/bits/setjmp.h

21 #i‚de‡
_BITS_SETJMP_H


22 
	#_BITS_SETJMP_H
 1

	)

24 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


28 #i‚def 
_ASM


29 
	t__jmp_buf
[6];

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


23 #i‚de‡
sigc⁄ãxt_°ru˘


26 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

28 
	~<asm/sigc⁄ãxt.h
>

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

20 #i‚def 
_SIGSET_H_ty≥s


21 
	#_SIGSET_H_ty≥s
 1

	)

23 
	t__sig_©omic_t
;

27 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

30 
	m__vÆ
[
_SIGSET_NWORDS
];

31 } 
	t__sig£t_t
;

42 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


43 
	#_SIGSET_H_‚s
 1

	)

45 #i‚de‡
_EXTERN_INLINE


46 
	#_EXTERN_INLINE
 
__ölöe


	)

50 
	#__sigmask
(
sig
) \

51 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

54 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

56 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

57 
	#__sigem±y£t
(
£t
) \

58 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

59 
sig£t_t
 *
__£t
 = (
£t
); \

60 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

61 0; }))

	)

62 
	#__sigfûl£t
(
£t
) \

63 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

64 
sig£t_t
 *
__£t
 = (
£t
); \

65 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

66 0; }))

	)

68 #ifde‡
__USE_GNU


72 
	#__sigi£m±y£t
(
£t
) \

73 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

74 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

75 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

76 !
__ªt
 && --
__˙t
 >= 0) \

77 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

78 
__ªt
 =0; }))

	)

79 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

80 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

81 
sig£t_t
 *
__de°
 = (
de°
); \

82 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

83 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

84 --
__˙t
 >= 0) \

85 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

86 & 
__right
->
__vÆ
[
__˙t
]); \

87 0; }))

	)

88 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

89 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

90 
sig£t_t
 *
__de°
 = (
de°
); \

91 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

92 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

93 --
__˙t
 >= 0) \

94 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

95 | 
__right
->
__vÆ
[
__˙t
]); \

96 0; }))

	)

103 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

104 
__sigadd£t
 (
__sig£t_t
 *, );

105 
__sigdñ£t
 (
__sig£t_t
 *, );

107 #ifde‡
__USE_EXTERN_INLINES


108 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

109 
_EXTERN_INLINE
 \

110 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

112 
__mask
 = 
	`__sigmask
 (
__sig
); \

113 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

114  
BODY
; \

115 }

	)

117 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

118 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

119 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

121 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

	@/usr/include/bits/socket.h

20 #i‚de‡
__BITS_SOCKET_H


21 
	#__BITS_SOCKET_H


	)

23 #i‡!
deföed
 
_SYS_SOCKET_H
 && !deföed 
_NETINET_IN_H


27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

31 
	~<limôs.h
>

32 
	~<sys/ty≥s.h
>

35 #i‚de‡
__sockÀn_t_deföed


36 
__sockÀn_t
 
	tsockÀn_t
;

37 
	#__sockÀn_t_deföed


	)

41 
	e__sockë_ty≥


43 
	mSOCK_STREAM
 = 1,

45 
	#SOCK_STREAM
 
SOCK_STREAM


	)

46 
	mSOCK_DGRAM
 = 2,

48 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

49 
	mSOCK_RAW
 = 3,

50 
	#SOCK_RAW
 
SOCK_RAW


	)

51 
	mSOCK_RDM
 = 4,

52 
	#SOCK_RDM
 
SOCK_RDM


	)

53 
	mSOCK_SEQPACKET
 = 5,

55 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

56 
	mSOCK_PACKET
 = 10

59 
	#SOCK_PACKET
 
SOCK_PACKET


	)

63 
	#PF_UNSPEC
 0

	)

64 
	#PF_LOCAL
 1

	)

65 
	#PF_UNIX
 
PF_LOCAL


	)

66 
	#PF_FILE
 
PF_LOCAL


	)

67 
	#PF_INET
 2

	)

68 
	#PF_AX25
 3

	)

69 
	#PF_IPX
 4

	)

70 
	#PF_APPLETALK
 5

	)

71 
	#PF_NETROM
 6

	)

72 
	#PF_BRIDGE
 7

	)

73 
	#PF_ATMPVC
 8

	)

74 
	#PF_X25
 9

	)

75 
	#PF_INET6
 10

	)

76 
	#PF_ROSE
 11

	)

77 
	#PF_DEC√t
 12

	)

78 
	#PF_NETBEUI
 13

	)

79 
	#PF_SECURITY
 14

	)

80 
	#PF_KEY
 15

	)

81 
	#PF_NETLINK
 16

	)

82 
	#PF_ROUTE
 
PF_NETLINK


	)

83 
	#PF_PACKET
 17

	)

84 
	#PF_ASH
 18

	)

85 
	#PF_ECONET
 19

	)

86 
	#PF_ATMSVC
 20

	)

87 
	#PF_SNA
 22

	)

88 
	#PF_IRDA
 23

	)

89 
	#PF_PPPOX
 24

	)

90 
	#PF_WANPIPE
 25

	)

91 
	#PF_BLUETOOTH
 31

	)

92 
	#PF_MAX
 32

	)

95 
	#AF_UNSPEC
 
PF_UNSPEC


	)

96 
	#AF_LOCAL
 
PF_LOCAL


	)

97 
	#AF_UNIX
 
PF_UNIX


	)

98 
	#AF_FILE
 
PF_FILE


	)

99 
	#AF_INET
 
PF_INET


	)

100 
	#AF_AX25
 
PF_AX25


	)

101 
	#AF_IPX
 
PF_IPX


	)

102 
	#AF_APPLETALK
 
PF_APPLETALK


	)

103 
	#AF_NETROM
 
PF_NETROM


	)

104 
	#AF_BRIDGE
 
PF_BRIDGE


	)

105 
	#AF_ATMPVC
 
PF_ATMPVC


	)

106 
	#AF_X25
 
PF_X25


	)

107 
	#AF_INET6
 
PF_INET6


	)

108 
	#AF_ROSE
 
PF_ROSE


	)

109 
	#AF_DEC√t
 
PF_DEC√t


	)

110 
	#AF_NETBEUI
 
PF_NETBEUI


	)

111 
	#AF_SECURITY
 
PF_SECURITY


	)

112 
	#AF_KEY
 
PF_KEY


	)

113 
	#AF_NETLINK
 
PF_NETLINK


	)

114 
	#AF_ROUTE
 
PF_ROUTE


	)

115 
	#AF_PACKET
 
PF_PACKET


	)

116 
	#AF_ASH
 
PF_ASH


	)

117 
	#AF_ECONET
 
PF_ECONET


	)

118 
	#AF_ATMSVC
 
PF_ATMSVC


	)

119 
	#AF_SNA
 
PF_SNA


	)

120 
	#AF_IRDA
 
PF_IRDA


	)

121 
	#AF_PPPOX
 
PF_PPPOX


	)

122 
	#AF_WANPIPE
 
PF_WANPIPE


	)

123 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

124 
	#AF_MAX
 
PF_MAX


	)

130 
	#SOL_RAW
 255

	)

131 
	#SOL_DECNET
 261

	)

132 
	#SOL_X25
 262

	)

133 
	#SOL_PACKET
 263

	)

134 
	#SOL_ATM
 264

	)

135 
	#SOL_AAL
 265

	)

136 
	#SOL_IRDA
 266

	)

139 
	#SOMAXCONN
 128

	)

142 
	~<bôs/sockaddr.h
>

145 
	ssockaddr


147 
__SOCKADDR_COMMON
 (
ß_
);

148 
	mß_d©a
[14];

154 #i‡
ULONG_MAX
 > 0xffffffff

155 
	#__ss_Æig¡y≥
 
__uöt64_t


	)

157 
	#__ss_Æig¡y≥
 
__uöt32_t


	)

159 
	#_SS_SIZE
 128

	)

160 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

162 
	ssockaddr_°‹age


164 
__SOCKADDR_COMMON
 (
ss_
);

165 
__ss_Æig¡y≥
 
	m__ss_Æign
;

166 
	m__ss_∑ddög
[
_SS_PADSIZE
];

173 
	mMSG_OOB
 = 0x01,

174 
	#MSG_OOB
 
MSG_OOB


	)

175 
	mMSG_PEEK
 = 0x02,

176 
	#MSG_PEEK
 
MSG_PEEK


	)

177 
	mMSG_DONTROUTE
 = 0x04,

178 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

179 #ifde‡
__USE_GNU


181 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

182 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

184 
	mMSG_CTRUNC
 = 0x08,

185 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

186 
	mMSG_PROXY
 = 0x10,

187 
	#MSG_PROXY
 
MSG_PROXY


	)

188 
	mMSG_TRUNC
 = 0x20,

189 
	#MSG_TRUNC
 
MSG_TRUNC


	)

190 
	mMSG_DONTWAIT
 = 0x40,

191 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

192 
	mMSG_EOR
 = 0x80,

193 
	#MSG_EOR
 
MSG_EOR


	)

194 
	mMSG_WAITALL
 = 0x100,

195 
	#MSG_WAITALL
 
MSG_WAITALL


	)

196 
	mMSG_FIN
 = 0x200,

197 
	#MSG_FIN
 
MSG_FIN


	)

198 
	mMSG_SYN
 = 0x400,

199 
	#MSG_SYN
 
MSG_SYN


	)

200 
	mMSG_CONFIRM
 = 0x800,

201 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

202 
	mMSG_RST
 = 0x1000,

203 
	#MSG_RST
 
MSG_RST


	)

204 
	mMSG_ERRQUEUE
 = 0x2000,

205 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

206 
	mMSG_NOSIGNAL
 = 0x4000,

207 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

208 
	mMSG_MORE
 = 0x8000

209 
	#MSG_MORE
 
MSG_MORE


	)

215 
	smsghdr


217 *
	mmsg_«me
;

218 
sockÀn_t
 
	mmsg_«mñí
;

220 
iovec
 *
	mmsg_iov
;

221 
size_t
 
	mmsg_iovÀn
;

223 *
	mmsg_c⁄åﬁ
;

224 
size_t
 
	mmsg_c⁄åﬁÀn
;

229 
	mmsg_Êags
;

233 
	scmsghdr


235 
size_t
 
	mcmsg_Àn
;

240 
	mcmsg_Àvñ
;

241 
	mcmsg_ty≥
;

242 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

243 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

248 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

249 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

251 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

253 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

254 
	#CMSG_FIRSTHDR
(
mhdr
) \

255 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

256 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë
NULL
)

	)

257 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

258 & (
size_t
Ë~( (size_tË- 1))

	)

259 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

260 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

261 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

263 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

264 
cmsghdr
 *
__cmsg
Ë
__THROW
;

265 #ifde‡
__USE_EXTERN_INLINES


266 #i‚de‡
_EXTERN_INLINE


267 
	#_EXTERN_INLINE
 
__ölöe


	)

269 
_EXTERN_INLINE
 
cmsghdr
 *

270 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

272 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

276 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

277 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

278 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


279 + 
__mhdr
->
msg_c⁄åﬁÀn
)

280 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

281 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

284  
__cmsg
;

285 
	}
}

292 
SCM_RIGHTS
 = 0x01

293 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

294 #ifde‡
__USE_BSD


295 , 
SCM_CREDENTIALS
 = 0x02

296 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

302 
	su¸ed


304 
pid_t
 
	mpid
;

305 
uid_t
 
	muid
;

306 
gid_t
 
	mgid
;

310 
	~<asm/sockë.h
>

314 
	slögî


316 
	ml_⁄off
;

317 
	ml_lögî
;

	@/usr/include/bits/socket2.h

20 #i‚de‡
_SYS_SOCKET_H


24 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

25 
__Êags
);

26 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

27 
__Êags
), 
ªcv
);

29 
__Æways_ölöe
 
ssize_t


30 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

32 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

33 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos0
 (
__buf
)))

34  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

35  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

36 
	}
}

38 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

39 
size_t
 
__buÊí
, 
__Êags
,

40 
__SOCKADDR_ARG
 
__addr
,

41 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

42 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

43 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

44 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

45 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

47 
__Æways_ölöe
 
ssize_t


48 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

49 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

51 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

52 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos0
 (
__buf
)))

53  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

54 
__addr
, 
__addr_Àn
);

55  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

56 
	}
}

	@/usr/include/bits/stat.h

19 #i‚de‡
_SYS_STAT_H


24 
	#_STAT_VER_LINUX_OLD
 1

	)

25 
	#_STAT_VER_KERNEL
 1

	)

26 
	#_STAT_VER_SVR4
 2

	)

27 
	#_STAT_VER_LINUX
 3

	)

28 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

31 
	#_MKNOD_VER_LINUX
 1

	)

32 
	#_MKNOD_VER_SVR4
 2

	)

33 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

36 
	s°©


38 
__dev_t
 
	m°_dev
;

39 
	m__∑d1
;

40 #i‚de‡
__USE_FILE_OFFSET64


41 
__öo_t
 
	m°_öo
;

43 
__öo_t
 
	m__°_öo
;

45 
__mode_t
 
	m°_mode
;

46 
__∆ök_t
 
	m°_∆ök
;

47 
__uid_t
 
	m°_uid
;

48 
__gid_t
 
	m°_gid
;

49 
__dev_t
 
	m°_rdev
;

50 
	m__∑d2
;

51 #i‚de‡
__USE_FILE_OFFSET64


52 
__off_t
 
	m°_size
;

54 
__off64_t
 
	m°_size
;

56 
__blksize_t
 
	m°_blksize
;

58 #i‚de‡
__USE_FILE_OFFSET64


59 
__blk˙t_t
 
	m°_blocks
;

61 
__blk˙t64_t
 
	m°_blocks
;

63 #ifde‡
__USE_MISC


70 
time•ec
 
	m°_©im
;

71 
time•ec
 
	m°_mtim
;

72 
time•ec
 
	m°_˘im
;

73 
	#°_©ime
 
°_©im
.
tv_£c


	)

74 
	#°_mtime
 
°_mtim
.
tv_£c


	)

75 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

77 
__time_t
 
	m°_©ime
;

78 
	m°_©imí£c
;

79 
__time_t
 
	m°_mtime
;

80 
	m°_mtimí£c
;

81 
__time_t
 
	m°_˘ime
;

82 
	m°_˘imí£c
;

84 #i‚de‡
__USE_FILE_OFFSET64


85 
	m__unu£d4
;

86 
	m__unu£d5
;

88 
__öo64_t
 
	m°_öo
;

92 #ifde‡
__USE_LARGEFILE64


93 
	s°©64


95 
__dev_t
 
	m°_dev
;

96 
	m__∑d1
;

98 
__öo_t
 
	m__°_öo
;

99 
__mode_t
 
	m°_mode
;

100 
__∆ök_t
 
	m°_∆ök
;

101 
__uid_t
 
	m°_uid
;

102 
__gid_t
 
	m°_gid
;

103 
__dev_t
 
	m°_rdev
;

104 
	m__∑d2
;

105 
__off64_t
 
	m°_size
;

106 
__blksize_t
 
	m°_blksize
;

108 
__blk˙t64_t
 
	m°_blocks
;

109 #ifde‡
__USE_MISC


116 
time•ec
 
	m°_©im
;

117 
time•ec
 
	m°_mtim
;

118 
time•ec
 
	m°_˘im
;

120 
__time_t
 
	m°_©ime
;

121 
	m°_©imí£c
;

122 
__time_t
 
	m°_mtime
;

123 
	m°_mtimí£c
;

124 
__time_t
 
	m°_˘ime
;

125 
	m°_˘imí£c
;

127 
__öo64_t
 
	m°_öo
;

132 
	#_STATBUF_ST_BLKSIZE


	)

133 
	#_STATBUF_ST_RDEV


	)

135 
	#_STATBUF_ST_NSEC


	)

139 
	#__S_IFMT
 0170000

	)

142 
	#__S_IFDIR
 0040000

	)

143 
	#__S_IFCHR
 0020000

	)

144 
	#__S_IFBLK
 0060000

	)

145 
	#__S_IFREG
 0100000

	)

146 
	#__S_IFIFO
 0010000

	)

147 
	#__S_IFLNK
 0120000

	)

148 
	#__S_IFSOCK
 0140000

	)

152 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

153 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

154 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

158 
	#__S_ISUID
 04000

	)

159 
	#__S_ISGID
 02000

	)

160 
	#__S_ISVTX
 01000

	)

161 
	#__S_IREAD
 0400

	)

162 
	#__S_IWRITE
 0200

	)

163 
	#__S_IEXEC
 0100

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

32 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

33 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

34 
__END_NAMESPACE_STD


36 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


37 
__BEGIN_NAMESPACE_C99


38 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

39 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

40 
__END_NAMESPACE_C99


43 #ifdef 
__USE_ISOC99


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

46 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

47 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

48 
__END_NAMESPACE_C99


51 #ifde‡
__USE_GNU


52 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

53 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

54 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

55 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

56 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

57 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

58 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

61 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


62 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

63 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

64 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


65 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

66 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #ifde‡
__˝lu•lus


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


33 
__STDIO_INLINE
 

34 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

36  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

37 
	}
}

40 
__STDIO_INLINE
 

41 
	$gëch¨
 ()

43  
	`_IO_gëc
 (
°dö
);

44 
	}
}

47 #ifde‡
__USE_MISC


49 
__STDIO_INLINE
 

50 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

52  
	`_IO_gëc_u∆ocked
 (
__Â
);

53 
	}
}

57 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


59 
__STDIO_INLINE
 

60 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

62  
	`_IO_gëc_u∆ocked
 (
__Â
);

63 
	}
}

66 
__STDIO_INLINE
 

67 
	$gëch¨_u∆ocked
 ()

69  
	`_IO_gëc_u∆ocked
 (
°dö
);

70 
	}
}

75 
__STDIO_INLINE
 

76 
	$putch¨
 (
__c
)

78  
	`_IO_putc
 (
__c
, 
°dout
);

79 
	}
}

82 #ifde‡
__USE_MISC


84 
__STDIO_INLINE
 

85 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

87  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

88 
	}
}

92 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


94 
__STDIO_INLINE
 

95 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

97  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

98 
	}
}

101 
__STDIO_INLINE
 

102 
	$putch¨_u∆ocked
 (
__c
)

104  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

105 
	}
}

109 #ifdef 
__USE_GNU


111 
__STDIO_INLINE
 
_IO_ssize_t


112 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

114  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

115 
	}
}

119 #ifde‡
__USE_MISC


121 
__STDIO_INLINE
 

122 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

124  
	`_IO_„of_u∆ocked
 (
__°ªam
);

125 
	}
}

128 
__STDIO_INLINE
 

129 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

131  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

132 
	}
}

138 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__


140 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

141 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

142 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

143 && (
size_t
Ë(
size
) != 0) \

144 ? ({ *
__±r
 = (*Ë(
±r
); \

145 
FILE
 *
__°ªam
 = (
°ªam
); \

146 
size_t
 
__˙t
; \

147 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

148 
__˙t
 > 0; --__cnt) \

150 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

151 i‡(
__c
 =
EOF
) \

153 *
__±r
++ = 
__c
; \

155 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

156 / (
size_t
Ë(
size
); }) \

157 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

158 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

160 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

161 (Ë(
n
), (
size_t
) 0) \

162 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

164 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

165 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

166 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

167 && (
size_t
Ë(
size
) != 0) \

168 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

169 
FILE
 *
__°ªam
 = (
°ªam
); \

170 
size_t
 
__˙t
; \

171 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

172 
__˙t
 > 0; --__cnt) \

173 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

175 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

176 / (
size_t
Ë(
size
); }) \

177 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

178 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

180 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

181 (Ë(
n
), (
size_t
) 0) \

182 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

186 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 
	#•rötf
(
°r
, ...) \

31 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

32 
__VA_ARGS__
)

	)

33 
	#v•rötf
(
°r
, 
fmt
, 
≠
) \

34 
	`__buûtö___v•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (°r), 
fmt
, 
≠
)

	)

36 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


38 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

39 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

40 ...Ë
__THROW
;

41 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

42 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

43 
_G_va_li°
 
__≠
Ë
__THROW
;

45 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

46 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

47 
__VA_ARGS__
)

	)

48 
	#v¢¥ötf
(
°r
, 
Àn
, 
fmt
, 
≠
) \

49 
	`__buûtö___v¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

50 
fmt
, 
≠
)

	)

54 #i‡
__USE_FORTIFY_LEVEL
 > 1

56 
	`__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

57 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

58 
	`__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

59 
	`__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

60 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

61 
	`__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

62 
_G_va_li°
 
__≠
);

64 #i‡
	`__GNUC_PREREQ
 (4, 0)

65 
	#¥ötf
(...) \

66 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

67 
	#Ârötf
(
°ªam
, ...) \

68 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

69 
	#v¥ötf
(
f‹m©
, 
≠
) \

70 
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

71 
	#vÂrötf
(
°ªam
, 
f‹m©
, 
≠
) \

72 
	`__vÂrötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

74 
	#¥ötf
(...) \

75 
	`__buûtö___¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

76 
	#Ârötf
(
°ªam
, ...) \

77 
	`__buûtö___Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

78 
	#v¥ötf
(
f‹m©
, 
≠
) \

79 
	`__buûtö___v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

80 
	#vÂrötf
(
°ªam
, 
f‹m©
, 
≠
) \

81 
	`__buûtö___vÂrötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

86 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

87 *
	`__REDIRECT
 (
__gës_Æüs
, (*
__°r
), 
gës
Ë
__wur
;

89 
__Æways_ölöe
 
__wur
 *

90 
	$gës
 (*
__°r
)

92 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

93  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

94  
	`__gës_Æüs
 (
__°r
);

95 
	}
}

97 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

98 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

99 *
	`__REDIRECT
 (
__fgës_Æüs
,

100 (*
__ª°ri˘
 
__s
, 
__n
,

101 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

103 
__Æways_ölöe
 
__wur
 *

104 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

106 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1

107 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| (
size_t
Ë__¿> 
	`__bos
 (
__s
)))

108  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

109  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

110 
	}
}

112 #ifde‡
__USE_GNU


113 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

114 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

115 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

116 (*
__ª°ri˘
 
__s
, 
__n
,

117 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

119 
__Æways_ölöe
 
__wur
 *

120 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

122 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1

123 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| (
size_t
Ë__¿> 
	`__bos
 (
__s
)))

124  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

125  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

126 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 
	#L_cu£rid
 9

	)

34 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


35 #unde‡
FOPEN_MAX


36 
	#FOPEN_MAX
 16

	)

39 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


40 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 
	$__LDBL_REDIR1_DECL
 (
__°πﬁd_öã∫Æ
, 
__°πod_öã∫Æ
)

36 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


37 #ifde‡
__USE_MISC


38 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

40 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

41 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

42 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

31 
__Æways_ölöe
 
__wur
 *

32 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

34 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

35  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

37  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

38 
	}
}

41 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

42 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

43 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

44 
size_t
 
__buÊí
), 
±¢ame_r
)

45 
	`__n⁄nuŒ
 ((2));

47 
__Æways_ölöe
 

48 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

50 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

51 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

52  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

53  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

54 
	}
}

57 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

58 
__THROW
 
__wur
;

59 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

60 
w˘omb
Ë
__wur
;

62 
__Æways_ölöe
 
__wur
 

63 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

68 
	#__STDLIB_MB_LEN_MAX
 16

	)

69 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


72 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

73  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

74  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

75 
	}
}

78 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

79 
__c⁄°
 *
__ª°ri˘
 
__§c
,

80 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

81 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

82 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

83 
__c⁄°
 *
__ª°ri˘
 
__§c
,

84 
size_t
 
__Àn
), 
mb°owcs
);

86 
__Æways_ölöe
 
size_t


87 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

88 
size_t
 
__Àn
))

90 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

91 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
)

92 || 
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
)))

93  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

94 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

95  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

96 
	}
}

99 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

100 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

103 (*
__ª°ri˘
 
__d°
,

104 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
wc°ombs
);

107 
__Æways_ölöe
 
size_t


108 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

109 
size_t
 
__Àn
))

111 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

112 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__d°
)))

113  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

114  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

115 
	}
}

	@/usr/include/bits/string.h

21 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

31 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

32 && 
deföed
 
	g__GNUC__
 && __GNUC__ >2 && !
__BOUNDED_POINTERS__


34 #i‚de‡
__STRING_INLINE


35 #ifde‡
__˝lu•lus


36 
	#__STRING_INLINE
 
ölöe


	)

38 
	#__STRING_INLINE
 
__ölöe


	)

43 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

44 ((((
__c⁄°
 *Ë(
§c
))[
idx
 + 1] << 8) \

45 | ((
__c⁄°
 *Ë(
§c
))[
idx
])

	)

46 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

47 (((((
__c⁄°
 *Ë(
§c
))[
idx
 + 3] << 8 \

48 | ((
__c⁄°
 *Ë(
§c
))[
idx
 + 2]) << 8 \

49 | ((
__c⁄°
 *Ë(
§c
))[
idx
 + 1]) << 8 \

50 | ((
__c⁄°
 *Ë(
§c
))[
idx
])

	)

54 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

55 
	#mem˝y
(
de°
, 
§c
, 
n
) \

56 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

57 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

58 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

59 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

60 ((
n
) == 0 \

61 ? (
de°
) \

62 : (((
n
) % 4 == 0) \

63 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

64 : (((
n
) % 2 == 0) \

65 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

66 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

68 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
,

69 
size_t
 
__n
);

71 
__STRING_INLINE
 *

72 
	$__mem˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

74 
__d0
, 
__d1
;

75 *
__tmp
 = 
__de°
;

76 
__asm__
 
__vﬁ©ûe__


84 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

85 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

87  
__de°
;

88 
	}
}

90 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
,

91 
size_t
 
__n
);

93 
__STRING_INLINE
 *

94 
	$__mem˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

96 
__d0
, 
__d1
;

97 *
__tmp
 = 
__de°
;

98 
__asm__
 
__vﬁ©ûe__


111 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

112 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

114  
__de°
;

115 
	}
}

117 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
,

118 
size_t
 
__n
);

120 
__STRING_INLINE
 *

121 
	$__mem˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

123 
__d0
, 
__d1
, 
__d2
;

124 *
__tmp
 = 
__de°
;

125 
__asm__
 
__vﬁ©ûe__


136 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

137 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

138 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

139 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

141  
__de°
;

142 
	}
}

144 
	#_HAVE_STRING_ARCH_memmove
 1

	)

145 #i‚de‡
_FORCE_INLINES


148 
__STRING_INLINE
 *

149 
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

151 
__d0
, 
__d1
, 
__d2
;

152 *
__tmp
 = 
__de°
;

153 i‡(
__de°
 < 
__§c
)

154 
__asm__
 
__vﬁ©ûe__


157 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

158 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

159 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

160 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

162 
__asm__
 
__vﬁ©ûe__


166 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

167 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

168 : "0" (
__n
), "1" (__¿- 1 + (
__c⁄°
 *Ë
__§c
),

169 "2" (
__n
 - 1 + (*Ë
__tmp
),

170 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

171  
__de°
;

172 
	}
}

176 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

177 #i‚de‡
_FORCE_INLINES


178 #i‚de‡
__PIC__


180 
__STRING_INLINE
 

181 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

183 
__d0
, 
__d1
, 
__d2
;

184 
__ªs
;

185 
__asm__
 
__vﬁ©ûe__


193 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

194 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

195 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

196 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

198  
__ªs
;

199 
	}
}

204 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

205 
	#_USE_STRING_ARCH_mem£t
 1

	)

206 
	#mem£t
(
s
, 
c
, 
n
) \

207 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

208 ? ((
n
) == 1 \

209 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

210 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

211 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

212 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

213 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

214 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

215 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

216 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

217 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

219 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

220 *((*Ë
__s
Ë(Ë(
c
); \

221 
__s
; })

	)

223 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

224 ({ *
__s
 = (
s
); \

226 
__ui
; \

227 
__usi
; \

228 
__uc
; \

229 } *
__u
 = 
__s
; \

230 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

236 i‡((
n
) == 3 || (n) >= 5) \

237 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

240 
n
) \

243 
__u
->
__ui
 = 
__c
; \

244 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

246 
__u
->
__ui
 = 
__c
; \

247 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

249 
__u
->
__ui
 = 
__c
; \

250 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

252 
__u
->
__usi
 = (Ë
__c
; \

253 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

254 
__u
->
__uc
 = (Ë
__c
; \

258 
__u
->
__ui
 = 
__c
; \

259 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

261 
__u
->
__ui
 = 
__c
; \

262 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

264 
__u
->
__ui
 = 
__c
; \

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

267 
__u
->
__usi
 = (Ë
__c
; \

271 
__u
->
__ui
 = 
__c
; \

272 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

274 
__u
->
__ui
 = 
__c
; \

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

277 
__u
->
__ui
 = 
__c
; \

278 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

280 
__u
->
__uc
 = (Ë
__c
; \

284 
__u
->
__ui
 = 
__c
; \

285 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

287 
__u
->
__ui
 = 
__c
; \

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

290 
__u
->
__ui
 = 
__c
; \

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

293 
__u
->
__ui
 = 
__c
; \

298 
__s
; })

	)

300 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

301 (((
n
) % 4 == 0) \

302 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

303 
n
) \

304 : (((
n
) % 2 == 0) \

305 ? 
	`__mem£t_c˙_by2
 (
s
, \

306 ((Ë((Ë(
c
))) * 0x01010101,\

307 
n
) \

308 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

310 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

311 
size_t
 
__n
);

313 
__STRING_INLINE
 *

314 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

316 *
__tmp
 = 
__s
;

317 
__d0
;

318 #ifde‡
__i686__


319 
__asm__
 
__vﬁ©ûe__


322 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

323 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

324 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

327 
__asm__
 
__vﬁ©ûe__


333 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

334 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

335 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

338  
__s
;

339 
	}
}

341 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

342 
size_t
 
__n
);

344 
__STRING_INLINE
 *

345 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

347 
__d0
, 
__d1
;

348 *
__tmp
 = 
__s
;

349 #ifde‡
__i686__


350 
__asm__
 
__vﬁ©ûe__


354 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

355 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

356 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

359 
__asm__
 
__vﬁ©ûe__


365 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

366 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

367 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

370  
__s
;

371 
	}
}

373 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

374 (((
n
) % 4 == 0) \

375 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

376 : (((
n
) % 2 == 0) \

377 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

378 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

380 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

382 
__STRING_INLINE
 *

383 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

385 *
__tmp
 = 
__s
;

386 
__d0
;

387 
__asm__
 
__vﬁ©ûe__


397 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

398 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

399 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

401  
__s
;

402 
	}
}

404 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

406 
__STRING_INLINE
 *

407 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

409 
__d0
, 
__d1
;

410 *
__tmp
 = 
__s
;

411 
__asm__
 
__vﬁ©ûe__


422 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

423 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

424 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

426  
__s
;

427 
	}
}

431 
	#_HAVE_STRING_ARCH_memchr
 1

	)

432 #i‚de‡
_FORCE_INLINES


433 
__STRING_INLINE
 *

434 
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

436 
__d0
;

437 #ifde‡
__i686__


438 
__d1
;

440 *
__ªs
;

441 i‡(
__n
 == 0)

442  
NULL
;

443 #ifde‡
__i686__


444 
__asm__
 
__vﬁ©ûe__


448 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

449 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

450 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

453 
__asm__
 
__vﬁ©ûe__


459 : "=D" (
__ªs
), "=&c" (
__d0
)

460 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

461 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

464  
__ªs
 - 1;

465 
	}
}

468 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

469 #i‚de‡
_FORCE_INLINES


470 
__STRING_INLINE
 *
__memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
);

472 
__STRING_INLINE
 *

473 
	$__memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

475 
__d0
;

476 #ifde‡
__i686__


477 
__d1
;

479 *
__ªs
;

480 i‡(
__n
 == 0)

481  
NULL
;

482 #ifde‡
__i686__


483 
__asm__
 
__vﬁ©ûe__


489 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

490 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

491 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

494 
__asm__
 
__vﬁ©ûe__


501 : "=D" (
__ªs
), "=&c" (
__d0
)

502 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

503 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

506  
__ªs
;

507 
	}
}

508 #ifde‡
__USE_GNU


509 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

514 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

515 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

517 #i‚de‡
_FORCE_INLINES


518 
__STRING_INLINE
 *

519 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

521 
__d0
;

522 *
__ªs
;

523 
__asm__
 
__vﬁ©ûe__


526 : "=D" (
__ªs
), "=&c" (
__d0
)

527 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

528 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

530  
__ªs
 - 1;

531 
	}
}

532 #ifde‡
__USE_GNU


533 
__STRING_INLINE
 *

534 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

536  
	`__øwmemchr
 (
__s
, 
__c
);

537 
	}
}

543 
	#_HAVE_STRING_ARCH_°æí
 1

	)

544 
	#°æí
(
°r
) \

545 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

546 ? 
	`__buûtö_°æí
 (
°r
) \

547 : 
	`__°æí_g
 (
°r
)))

	)

548 
__STRING_INLINE
 
size_t
 
__°æí_g
 (
__c⁄°
 *
__°r
);

550 
__STRING_INLINE
 
size_t


551 
	$__°æí_g
 (
__c⁄°
 *
__°r
)

553 
__dummy
;

554 
__c⁄°
 *
__tmp
 = 
__°r
;

555 
__asm__
 
__vﬁ©ûe__


561 : "Ù" (
__tmp
), "=&q" (
__dummy
)

562 : "0" (
__°r
),

563 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

565  
__tmp
 - 
__°r
 - 1;

566 
	}
}

570 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

571 
	#°r˝y
(
de°
, 
§c
) \

572 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

573 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

574 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

575 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

576 (
__c⁄°
 *Ë(
§c
), \

577 
	`°æí
 (
§c
) + 1)) \

578 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

580 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

581 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

583 
__ui
; \

584 
__usi
; \

585 
__uc
; \

586 
__c
; \

587 } *
__u
 = (*Ë
__de°
; \

588 
§˛í
) \

591 
__u
->
__uc
 = '\0'; \

594 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

597 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

598 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

599 
__u
->
__uc
 = '\0'; \

602 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

605 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

606 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

607 
__u
->
__uc
 = '\0'; \

610 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

611 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

612 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

615 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

616 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

617 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

618 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

619 
__u
->
__uc
 = '\0'; \

622 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

623 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

624 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

627 (*Ë
__de°
; }))

	)

629 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

631 
__STRING_INLINE
 *

632 
	$__°r˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

634 *
__tmp
 = 
__de°
;

635 
__dummy
;

636 
__asm__
 
__vﬁ©ûe__


645 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

646 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

647 : "0" (
__§c
), "1" (
__tmp
),

648 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

650  
__de°
;

651 
	}
}

654 #ifde‡
__USE_GNU


655 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

657 
	#__°p˝y
(
de°
, 
§c
) \

658 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

659 ? (
	`°æí
 (
§c
) + 1 <= 8 \

660 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

661 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

662 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

663 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

664 ((
§˛í
) % 4 == 0 \

665 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

666 : ((
§˛í
) % 2 == 0 \

667 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

668 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

671 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

673 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

674 (
	`__exãnsi⁄__
 ({ union { \

675 
__ui
; \

676 
__usi
; \

677 
__uc
; \

678 
__c
; \

679 } *
__u
 = (*Ë(
de°
); \

680 
§˛í
) \

683 
__u
->
__uc
 = '\0'; \

686 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

687 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

690 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

691 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

692 
__u
->
__uc
 = '\0'; \

695 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

696 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

699 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

700 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

701 
__u
->
__uc
 = '\0'; \

704 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

705 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

706 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

707 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

710 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

711 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

712 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

713 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

714 
__u
->
__uc
 = '\0'; \

717 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

718 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

719 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

720 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

723 (*Ë
__u
; }))

	)

725 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
,

726 
size_t
 
__§˛í
);

728 
__STRING_INLINE
 *

729 
	$__memp˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

731 *
__tmp
 = 
__de°
;

732 
__d0
, 
__d1
;

733 
__asm__
 
__vﬁ©ûe__


741 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

742 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

744  
__tmp
;

745 
	}
}

747 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
,

748 
size_t
 
__§˛í
);

750 
__STRING_INLINE
 *

751 
	$__memp˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

753 *
__tmp
 = 
__de°
;

754 
__d0
, 
__d1
;

755 
__asm__
 
__vﬁ©ûe__


768 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

769 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

770 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

771 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

773  
__tmp
 + 2;

774 
	}
}

776 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, 
__c⁄°
 *
__§c
,

777 
size_t
 
__§˛í
);

779 
__STRING_INLINE
 *

780 
	$__memp˝y_byn
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

782 
__d0
, 
__d1
;

783 *
__tmp
 = 
__de°
;

784 
__asm__
 
__vﬁ©ûe__


795 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

796 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

797 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

798 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

800  
__tmp
;

801 
	}
}

803 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

805 
__STRING_INLINE
 *

806 
	$__°p˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

808 *
__tmp
 = 
__de°
;

809 
__dummy
;

810 
__asm__
 
__vﬁ©ûe__


819 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

820 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

821 : "0" (
__§c
), "1" (
__tmp
),

822 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

824  
__tmp
 - 1;

825 
	}
}

830 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

831 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

832 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

833 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

834 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

835 (
__c⁄°
 *Ë(
§c
), 
n
) \

836 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

837 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

838 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

839 (((
§˛í
) % 4 == 0) \

840 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

841 : (((
§˛í
) % 2 == 0) \

842 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

843 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

845 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, 
__c⁄°
 
__§c
[],

846 
size_t
 
__§˛í
, size_à
__n
);

848 
__STRING_INLINE
 *

849 
	$__°∫˝y_by4
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

851 *
__tmp
 = 
__de°
;

852 
__dummy1
, 
__dummy2
;

853 
__asm__
 
__vﬁ©ûe__


861 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

862 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

863 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

864 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

866 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

867  
__de°
;

868 
	}
}

870 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, 
__c⁄°
 
__§c
[],

871 
size_t
 
__§˛í
, size_à
__n
);

873 
__STRING_INLINE
 *

874 
	$__°∫˝y_by2
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

876 *
__tmp
 = 
__de°
;

877 
__dummy1
, 
__dummy2
;

878 
__asm__
 
__vﬁ©ûe__


891 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

892 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

893 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

894 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

896 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

897  
__de°
;

898 
	}
}

900 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, 
__c⁄°
 
__§c
[],

901 
size_t
 
__§˛í
, size_à
__n
);

903 
__STRING_INLINE
 *

904 
	$__°∫˝y_byn
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

906 
__d0
, 
__d1
;

907 *
__tmp
 = 
__de°
;

908 
__asm__
 
__vﬁ©ûe__


919 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

920 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

921 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

922 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

924 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

925  
__de°
;

926 
	}
}

928 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, 
__c⁄°
 *
__§c
,

929 
size_t
 
__n
);

931 
__STRING_INLINE
 *

932 
	$__°∫˝y_gg
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

934 *
__tmp
 = 
__de°
;

935 
__dummy
;

936 i‡(
__n
 > 0)

937 
__asm__
 
__vﬁ©ûe__


953 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

954 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

957  
__de°
;

958 
	}
}

962 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

963 
	#°rˇt
(
de°
, 
§c
) \

964 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

965 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

966 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

968 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, 
__c⁄°
 
__§c
[],

969 
size_t
 
__§˛í
);

971 
__STRING_INLINE
 *

972 
	$__°rˇt_c
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
)

974 #ifde‡
__i686__


975 
__d0
;

976 *
__tmp
;

977 
__asm__
 
__vﬁ©ûe__


979 : "=D" (
__tmp
), "=&c" (
__d0
),

980 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

981 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

982 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

984 --
__tmp
;

986 *
__tmp
 = 
__de°
 - 1;

987 
__asm__
 
__vﬁ©ûe__


992 : "Ù" (
__tmp
),

993 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

994 : "0" (
__tmp
),

995 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

998 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

999  
__de°
;

1000 
	}
}

1002 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

1004 
__STRING_INLINE
 *

1005 
	$__°rˇt_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

1007 *
__tmp
 = 
__de°
 - 1;

1008 
__dummy
;

1009 
__asm__
 
__vﬁ©ûe__


1021 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1022 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1023 : "1" (
__tmp
), "2" (
__§c
),

1024 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1026  
__de°
;

1027 
	}
}

1031 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1032 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1033 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1034 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1035 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1036 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1037 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1038 (
__c⁄°
 *Ë(
§c
), \

1039 (
n
)Ë0, 
__de°
)) \

1040 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1042 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, 
__c⁄°
 
__§c
[],

1043 
size_t
 
__n
);

1045 
__STRING_INLINE
 *

1046 
	$__°∫ˇt_g
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__n
)

1048 *
__tmp
 = 
__de°
;

1049 
__dummy
;

1050 #ifde‡
__i686__


1051 
__asm__
 
__vﬁ©ûe__


1065 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1066 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1069 --
__tmp
;

1070 
__asm__
 
__vﬁ©ûe__


1087 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1088 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1091  
__de°
;

1092 
	}
}

1096 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1097 
	#°rcmp
(
s1
, 
s2
) \

1098 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1099 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1100 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1101 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

1102 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1103 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1104 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1105 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1106 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1107 ? 
	`__°rcmp_cc
 ((
__c⁄°
 *Ë(
s1
), \

1108 (
__c⁄°
 *Ë(
s2
), \

1109 
	`°æí
 (
s1
)) \

1110 : 
	`__°rcmp_cg
 ((
__c⁄°
 *Ë(
s1
), \

1111 (
__c⁄°
 *Ë(
s2
), \

1112 
	`°æí
 (
s1
))) \

1113 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1114 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1115 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1116 ? 
	`__°rcmp_cc
 ((
__c⁄°
 *Ë(
s1
), \

1117 (
__c⁄°
 *Ë(
s2
), \

1118 
	`°æí
 (
s2
)) \

1119 : 
	`__°rcmp_gc
 ((
__c⁄°
 *Ë(
s1
), \

1120 (
__c⁄°
 *Ë(
s2
), \

1121 
	`°æí
 (
s2
))) \

1122 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1124 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1125 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1126 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1128 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1129 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1131 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1132 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1133 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1136 
__ªsu…
; }))

	)

1138 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1139 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = (
s2
); \

1140 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1141 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1143 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1144 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1146 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1147 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1148 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1151 
__ªsu…
; }))

	)

1153 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1154 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = (
s1
); \

1155 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1156 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1158 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1159 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1161 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1162 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1163 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1166 
__ªsu…
; }))

	)

1168 
__STRING_INLINE
 
__°rcmp_gg
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
);

1170 
__STRING_INLINE
 

1171 
	$__°rcmp_gg
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

1173 
__ªs
;

1174 
__asm__
 
__vﬁ©ûe__


1190 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1191 : "1" (
__s1
), "2" (
__s2
),

1192 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1193 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1195  
__ªs
;

1196 
	}
}

1200 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1201 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1202 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1203 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1204 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1205 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1206 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1208 
__STRING_INLINE
 
__°∫cmp_g
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

1209 
size_t
 
__n
);

1211 
__STRING_INLINE
 

1212 
	$__°∫cmp_g
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

1214 
__ªs
;

1215 
__asm__
 
__vﬁ©ûe__


1234 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1235 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1236 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1237 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1239  
__ªs
;

1240 
	}
}

1244 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1245 
	#_USE_STRING_ARCH_°rchr
 1

	)

1246 
	#°rchr
(
s
, 
c
) \

1247 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1248 ? ((
c
) == '\0' \

1249 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1250 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1251 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1253 
__STRING_INLINE
 *
__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1255 
__STRING_INLINE
 *

1256 
	$__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1258 
__d0
;

1259 *
__ªs
;

1260 
__asm__
 
__vﬁ©ûe__


1270 : "Ù" (
__ªs
), "=&a" (
__d0
)

1271 : "0" (
__s
), "1" (
__c
),

1272 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1274  
__ªs
;

1275 
	}
}

1277 
__STRING_INLINE
 *
__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1279 
__STRING_INLINE
 *

1280 
	$__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1282 
__d0
;

1283 *
__ªs
;

1284 
__asm__
 
__vﬁ©ûe__


1295 : "Ù" (
__ªs
), "=&a" (
__d0
)

1296 : "0" (
__s
), "1" (
__c
),

1297 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1299  
__ªs
;

1300 
	}
}

1304 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1305 
	#__°rch∫ul
(
s
, 
c
) \

1306 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1307 ? ((
c
) == '\0' \

1308 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1309 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1310 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1312 
__STRING_INLINE
 *
__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
);

1314 
__STRING_INLINE
 *

1315 
	$__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
)

1317 
__d0
;

1318 *
__ªs
;

1319 
__asm__
 
__vﬁ©ûe__


1329 : "Ù" (
__ªs
), "=&a" (
__d0
)

1330 : "0" (
__s
), "1" (
__c
),

1331 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1333  
__ªs
;

1334 
	}
}

1336 
__STRING_INLINE
 *
__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
);

1338 
__STRING_INLINE
 *

1339 
	$__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
)

1341 
__d0
;

1342 *
__ªs
;

1343 
__asm__
 
__vﬁ©ûe__


1354 : "Ù" (
__ªs
), "=&a" (
__d0
)

1355 : "0" (
__s
), "1" (
__c
),

1356 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1358  
__ªs
;

1359 
	}
}

1360 #ifde‡
__USE_GNU


1361 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1365 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1367 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1368 
	#ödex
(
s
, 
c
) \

1369 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1370 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1371 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1376 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1377 
	#°ºchr
(
s
, 
c
) \

1378 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1379 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1380 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1382 #ifde‡
__i686__


1383 
__STRING_INLINE
 *
__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1385 
__STRING_INLINE
 *

1386 
	$__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1388 
__d0
, 
__d1
;

1389 *
__ªs
;

1390 
__asm__
 
__vﬁ©ûe__


1398 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1399 : "0" (1), "1" (
__s
), "2" (
__c
),

1400 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1402  
__ªs
 - 1;

1403 
	}
}

1405 
__STRING_INLINE
 *
__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1407 
__STRING_INLINE
 *

1408 
	$__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1410 
__d0
, 
__d1
;

1411 *
__ªs
;

1412 
__asm__
 
__vﬁ©ûe__


1421 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1422 : "0" (1), "1" (
__s
), "2" (
__c
),

1423 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1425  
__ªs
 - 1;

1426 
	}
}

1428 
__STRING_INLINE
 *
__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1430 
__STRING_INLINE
 *

1431 
	$__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1433 
__d0
, 
__d1
;

1434 *
__ªs
;

1435 
__asm__
 
__vﬁ©ûe__


1445 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1446 : "0" (0), "1" (
__s
), "2" (
__c
),

1447 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1449  
__ªs
;

1450 
	}
}

1452 
__STRING_INLINE
 *
__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1454 
__STRING_INLINE
 *

1455 
	$__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1457 
__d0
, 
__d1
;

1458 *
__ªs
;

1459 
__asm__
 
__vﬁ©ûe__


1470 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1471 : "0" (0), "1" (
__s
), "2" (
__c
),

1472 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1474  
__ªs
;

1475 
	}
}

1479 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1481 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1482 
	#rödex
(
s
, 
c
) \

1483 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1484 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1485 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1491 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1492 
	#°rc•n
(
s
, 
ªje˘
) \

1493 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1494 ? ((
ªje˘
)[0] == '\0' \

1495 ? 
	`°æí
 (
s
) \

1496 : ((
ªje˘
)[1] == '\0' \

1497 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1498 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1499 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1501 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

1503 #i‚de‡
_FORCE_INLINES


1504 
__STRING_INLINE
 
size_t


1505 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

1507 
__d0
;

1508 *
__ªs
;

1509 
__asm__
 
__vﬁ©ûe__


1518 : "Ù" (
__ªs
), "=&a" (
__d0
)

1519 : "0" (
__s
), "1" (
__ªje˘
),

1520 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1522  (
__ªs
 - 1Ë- 
__s
;

1523 
	}
}

1526 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ªje˘
[],

1527 
size_t
 
__ªje˘_Àn
);

1529 
__STRING_INLINE
 
size_t


1530 
	$__°rc•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1532 
__d0
, 
__d1
, 
__d2
;

1533 
__c⁄°
 *
__ªs
;

1534 
__asm__
 
__vﬁ©ûe__


1545 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1546 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1548  (
__ªs
 - 1Ë- 
__s
;

1549 
	}
}

1551 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
);

1552 #ifde‡
__PIC__


1554 
__STRING_INLINE
 
size_t


1555 
	$__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

1557 
__d0
, 
__d1
, 
__d2
;

1558 
__c⁄°
 *
__ªs
;

1559 
__asm__
 
__vﬁ©ûe__


1576 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1577 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1579  (
__ªs
 - 1Ë- 
__s
;

1580 
	}
}

1582 
__STRING_INLINE
 
size_t


1583 
	$__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

1585 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1586 
__c⁄°
 *
__ªs
;

1587 
__asm__
 
__vﬁ©ûe__


1601 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1602 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1605  (
__ªs
 - 1Ë- 
__s
;

1606 
	}
}

1612 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1613 
	#°r•n
(
s
, 
ac˚±
) \

1614 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1615 ? ((
ac˚±
)[0] == '\0' \

1616 ? ((Ë(
s
), 0) \

1617 : ((
ac˚±
)[1] == '\0' \

1618 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1619 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1620 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1622 #i‚de‡
_FORCE_INLINES


1623 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1625 
__STRING_INLINE
 
size_t


1626 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1628 
__d0
;

1629 *
__ªs
;

1631 
__asm__
 
__vﬁ©ûe__


1637 : "Ù" (
__ªs
), "=&q" (
__d0
)

1638 : "0" (
__s
), "1" (
__ac˚±
),

1639 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1641  (
__ªs
 - 1Ë- 
__s
;

1642 
	}
}

1645 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[],

1646 
size_t
 
__ac˚±_Àn
);

1648 
__STRING_INLINE
 
size_t


1649 
	$__°r•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1651 
__d0
, 
__d1
, 
__d2
;

1652 
__c⁄°
 *
__ªs
;

1653 
__asm__
 
__vﬁ©ûe__


1664 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1665 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1668 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1669 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1671  (
__ªs
 - 1Ë- 
__s
;

1672 
	}
}

1674 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
);

1675 #ifde‡
__PIC__


1677 
__STRING_INLINE
 
size_t


1678 
	$__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1680 
__d0
, 
__d1
, 
__d2
;

1681 
__c⁄°
 *
__ªs
;

1682 
__asm__
 
__vﬁ©ûe__


1698 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1699 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1701  (
__ªs
 - 1Ë- 
__s
;

1702 
	}
}

1704 
__STRING_INLINE
 
size_t


1705 
	$__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1707 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1708 
__c⁄°
 *
__ªs
;

1709 
__asm__
 
__vﬁ©ûe__


1723 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1724 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1726  (
__ªs
 - 1Ë- 
__s
;

1727 
	}
}

1732 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1733 
	#°Ωbrk
(
s
, 
ac˚±
) \

1734 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1735 ? ((
ac˚±
)[0] == '\0' \

1736 ? ((Ë(
s
), (*) 0) \

1737 : ((
ac˚±
)[1] == '\0' \

1738 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1739 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1740 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1742 
__STRING_INLINE
 *
__°Ωbrk_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[],

1743 
size_t
 
__ac˚±_Àn
);

1745 
__STRING_INLINE
 *

1746 
	$__°Ωbrk_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1748 
__d0
, 
__d1
, 
__d2
;

1749 *
__ªs
;

1750 
__asm__
 
__vﬁ©ûe__


1765 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1766 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1768  
__ªs
;

1769 
	}
}

1771 
__STRING_INLINE
 *
__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
);

1772 #ifde‡
__PIC__


1774 
__STRING_INLINE
 *

1775 
	$__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1777 
__d0
, 
__d1
, 
__d2
;

1778 *
__ªs
;

1779 
__asm__
 
__vﬁ©ûe__


1800 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1801 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1803  
__ªs
;

1804 
	}
}

1806 
__STRING_INLINE
 *

1807 
	$__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1809 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1810 *
__ªs
;

1811 
__asm__
 
__vﬁ©ûe__


1830 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1831 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1833  
__ªs
;

1834 
	}
}

1839 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1840 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1841 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1842 ? ((
√edÀ
)[0] == '\0' \

1843 ? (
hay°ack
) \

1844 : ((
√edÀ
)[1] == '\0' \

1845 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1846 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1847 
	`°æí
 (
√edÀ
)))) \

1848 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1852 
__STRING_INLINE
 *
__°r°r_cg
 (
__c⁄°
 *
__hay°ack
, __c⁄° 
__√edÀ
[],

1853 
size_t
 
__√edÀ_Àn
);

1855 
__STRING_INLINE
 *

1856 
	$__°r°r_cg
 (
__c⁄°
 *
__hay°ack
, __c⁄° 
__√edÀ
[],

1857 
size_t
 
__√edÀ_Àn
)

1859 
__d0
, 
__d1
, 
__d2
;

1860 *
__ªs
;

1861 
__asm__
 
__vﬁ©ûe__


1874 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1875 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1877  
__ªs
;

1878 
	}
}

1880 
__STRING_INLINE
 *
__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
);

1881 #ifde‡
__PIC__


1883 
__STRING_INLINE
 *

1884 
	$__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

1886 
__d0
, 
__d1
, 
__d2
;

1887 *
__ªs
;

1888 
__asm__
 
__vﬁ©ûe__


1907 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1908 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1909 "d" (
__√edÀ
)

1911  
__ªs
;

1912 
	}
}

1914 
__STRING_INLINE
 *

1915 
	$__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

1917 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1918 *
__ªs
;

1919 
__asm__
 
__vﬁ©ûe__


1936 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1937 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1938 "b" (
__√edÀ
)

1940  
__ªs
;

1941 
	}
}

1947 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1948 #ifde‡
__i686__


1949 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1950 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1951 ? 
	`__buûtö_ffs
 (
w‹d
) \

1952 : ({ 
__˙t
, 
__tmp
; \

1953 
__asm__
 
__vﬁ©ûe__
 \

1956 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1957 : "rm" (
w‹d
), "1" (-1)); \

1958 
__˙t
 + 1; }))

	)

1960 #i‚de‡
ff¶


1961 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1966 #i‚de‡
_FORCE_INLINES


1967 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 ? (((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)) \

1170 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1173 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1174 
__STRING_INLINE
 *

1175 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1177 *
__ªsu…
;

1178 i‡(
__s
 =
NULL
)

1179 
__s
 = *
__√xç
;

1180 *
__s
 =
__£p
)

1181 ++
__s
;

1182 
__ªsu…
 = 
NULL
;

1183 i‡(*
__s
 != '\0')

1185 
__ªsu…
 = 
__s
++;

1186 *
__s
 != '\0')

1187 i‡(*
__s
++ =
__£p
)

1189 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1194  
__ªsu…
;

1195 
	}
}

1196 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1197 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1202 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1203 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1205 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1206 
	#__°r£p
(
s
, 
ªje˘
) \

1207 
__exãnsi⁄__
 \

1208 ({ 
__r0
, 
__r1
, 
__r2
; \

1209 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1210 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1211 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1212 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1213 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1214 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1215 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1216 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1217 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1218 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1220 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1223 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1224 
__STRING_INLINE
 *

1225 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1227 *
__ªtvÆ
 = *
__s
;

1228 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1229 *(*
__s
)++ = '\0';

1230  
__ªtvÆ
;

1231 
	}
}

1233 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1234 
__STRING_INLINE
 *

1235 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1237 *
__ªtvÆ
 = *
__s
;

1238 i‡(
__ªtvÆ
 !
NULL
)

1240 *
__˝
 = 
__ªtvÆ
;

1243 i‡(*
__˝
 == '\0')

1245 
__˝
 = 
NULL
;

1248 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1250 *
__˝
++ = '\0';

1253 ++
__˝
;

1255 *
__s
 = 
__˝
;

1257  
__ªtvÆ
;

1258 
	}
}

1260 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1261 
__ªje˘3
);

1262 
__STRING_INLINE
 *

1263 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1265 *
__ªtvÆ
 = *
__s
;

1266 i‡(
__ªtvÆ
 !
NULL
)

1268 *
__˝
 = 
__ªtvÆ
;

1271 i‡(*
__˝
 == '\0')

1273 
__˝
 = 
NULL
;

1276 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1278 *
__˝
++ = '\0';

1281 ++
__˝
;

1283 *
__s
 = 
__˝
;

1285  
__ªtvÆ
;

1286 
	}
}

1287 #ifde‡
__USE_BSD


1288 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1295 #ifde‡
__USE_MISC


1297 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1298 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1299 
	~<°dlib.h
>

1302 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1304 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1305 
	#__°rdup
(
s
) \

1306 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1307 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1308 ? (*Ë
	`ˇŒoc
 (1, 1) \

1309 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1310 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1311 i‡(
__ªtvÆ
 !
NULL
) \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1313 
__ªtvÆ
; 
	}
})) \

1314 : 
	`__°rdup
 (
s
)))

	)

1316 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1317 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1321 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1323 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1324 
__THROW
 
__©åibuã_mÆloc__
;

1325 
	#__°∫dup
(
s
, 
n
) \

1326 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1327 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1328 ? (*Ë
	`ˇŒoc
 (1, 1) \

1329 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1330 
size_t
 
__n
 = (
n
); \

1331 *
__ªtvÆ
; \

1332 i‡(
__n
 < 
__Àn
) \

1333 
__Àn
 = 
__n
 + 1; \

1334 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1335 i‡(
__ªtvÆ
 !
NULL
) \

1337 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1338 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1339 
__Àn
 - 1); \

1341 
__ªtvÆ
; 
	}
})) \

1342 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1344 #ifde‡
__USE_GNU


1345 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1351 #i‚de‡
_FORCE_INLINES


1352 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


26 #unde‡
mem˝y


27 #unde‡
memmove


28 #unde‡
mem£t


29 #unde‡
°rˇt


30 #unde‡
°r˝y


31 #unde‡
°∫ˇt


32 #unde‡
°∫˝y


33 #ifde‡
__USE_GNU


34 #unde‡
memp˝y


35 #unde‡
°p˝y


37 #ifde‡
__USE_BSD


38 #unde‡
bc›y


39 #unde‡
bzîo


43 
	#mem˝y
(
de°
, 
§c
, 
Àn
) \

44 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

45 ? 
	`__buûtö___mem˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

46 : 
	`__mem˝y_ichk
 (
de°
, 
§c
, 
Àn
))

	)

47 
__Æways_ölöe
 *

48 
__NTH
 (
	$__mem˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

49 
size_t
 
__Àn
))

51  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

52 
	}
}

55 
	#memmove
(
de°
, 
§c
, 
Àn
) \

56 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

57 ? 
	`__buûtö___memmove_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

58 : 
	`__memmove_ichk
 (
de°
, 
§c
, 
Àn
))

	)

59 
__Æways_ölöe
 *

60 
__NTH
 (
	$__memmove_ichk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

62  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

63 
	}
}

66 #ifde‡
__USE_GNU


67 
	#memp˝y
(
de°
, 
§c
, 
Àn
) \

68 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

69 ? 
	`__buûtö___memp˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

70 : 
	`__memp˝y_ichk
 (
de°
, 
§c
, 
Àn
))

	)

71 
__Æways_ölöe
 *

72 
__NTH
 (
	$__memp˝y_ichk
 (*
__ª°ri˘
 
__de°
,

73 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
))

75  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

76 
	}
}

85 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

87 
	#mem£t
(
de°
, 
ch
, 
Àn
) \

88 (
	`__buûtö_c⁄°™t_p
 (
Àn
) && (len) == 0 \

89 ? (
	`__w¨n_mem£t_zîo_Àn
 (), (Ë(
ch
), (Ë(
Àn
), (*Ë(
de°
)) \

90 : ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

91 ? 
	`__buûtö___mem£t_chk
 (
de°
, 
ch
, 
Àn
, 
	`__bos0
 (dest)) \

92 : 
	`__mem£t_ichk
 (
de°
, 
ch
, 
Àn
)))

	)

93 
__Æways_ölöe
 *

94 
__NTH
 (
	$__mem£t_ichk
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

96  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

97 
	}
}

99 #ifde‡
__USE_BSD


100 
	#bc›y
(
§c
, 
de°
, 
Àn
) (() \

101 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

102 ? 
	`__buûtö___memmove_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

103 : 
	`__memmove_ichk
 (
de°
, 
§c
, 
Àn
)))

	)

104 
	#bzîo
(
de°
, 
Àn
) (() \

105 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

106 ? 
	`__buûtö___mem£t_chk
 (
de°
, '\0', 
Àn
, 
	`__bos0
 (dest)) \

107 : 
	`__mem£t_ichk
 (
de°
, '\0', 
Àn
)))

	)

111 
	#°r˝y
(
de°
, 
§c
) \

112 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

113 ? 
	`__buûtö___°r˝y_chk
 (
de°
, 
§c
, 
	`__bos
 (dest)) \

114 : 
	`__°r˝y_ichk
 (
de°
, 
§c
))

	)

115 
__Æways_ölöe
 *

116 
__NTH
 (
	$__°r˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

118  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

119 
	}
}

122 #ifde‡
__USE_GNU


123 
	#°p˝y
(
de°
, 
§c
) \

124 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

125 ? 
	`__buûtö___°p˝y_chk
 (
de°
, 
§c
, 
	`__bos
 (dest)) \

126 : 
	`__°p˝y_ichk
 (
de°
, 
§c
))

	)

127 
__Æways_ölöe
 *

128 
__NTH
 (
	$__°p˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

130  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

131 
	}
}

135 
	#°∫˝y
(
de°
, 
§c
, 
Àn
) \

136 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

137 ? 
	`__buûtö___°∫˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos
 (dest)) \

138 : 
	`__°∫˝y_ichk
 (
de°
, 
§c
, 
Àn
))

	)

139 
__Æways_ölöe
 *

140 
__NTH
 (
	$__°∫˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

141 
size_t
 
__Àn
))

143  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

144 
	}
}

148 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

149 
size_t
 
__de°Àn
Ë
__THROW
;

150 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

151 
__c⁄°
 *
__§c
,

152 
size_t
 
__n
), 
°≤˝y
);

154 
__Æways_ölöe
 *

155 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

158 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

159  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

160  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

161 
	}
}

164 
	#°rˇt
(
de°
, 
§c
) \

165 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

166 ? 
	`__buûtö___°rˇt_chk
 (
de°
, 
§c
, 
	`__bos
 (dest)) \

167 : 
	`__°rˇt_ichk
 (
de°
, 
§c
))

	)

168 
__Æways_ölöe
 *

169 
__NTH
 (
	$__°rˇt_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

171  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

172 
	}
}

175 
	#°∫ˇt
(
de°
, 
§c
, 
Àn
) \

176 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

177 ? 
	`__buûtö___°∫ˇt_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos
 (dest)) \

178 : 
	`__°∫ˇt_ichk
 (
de°
, 
§c
, 
Àn
))

	)

179 
__Æways_ölöe
 *

180 
__NTH
 (
	$__°∫ˇt_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

181 
size_t
 
__Àn
))

183  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

184 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/syscall.h

3 #i‚de‡
_SYSCALL_H


7 
	#SYS__Œ£ek
 
__NR__Œ£ek


	)

8 
	#SYS__√w£À˘
 
__NR__√w£À˘


	)

9 
	#SYS__sys˘l
 
__NR__sys˘l


	)

10 
	#SYS_ac˚ss
 
__NR_ac˚ss


	)

11 
	#SYS_ac˘
 
__NR_ac˘


	)

12 
	#SYS_add_key
 
__NR_add_key


	)

13 
	#SYS_adjtimex
 
__NR_adjtimex


	)

14 
	#SYS_afs_sysˇŒ
 
__NR_afs_sysˇŒ


	)

15 
	#SYS_Æ¨m
 
__NR_Æ¨m


	)

16 
	#SYS_bdÊush
 
__NR_bdÊush


	)

17 
	#SYS_bªak
 
__NR_bªak


	)

18 
	#SYS_brk
 
__NR_brk


	)

19 
	#SYS_ˇpgë
 
__NR_ˇpgë


	)

20 
	#SYS_ˇp£t
 
__NR_ˇp£t


	)

21 
	#SYS_chdú
 
__NR_chdú


	)

22 
	#SYS_chmod
 
__NR_chmod


	)

23 
	#SYS_chown
 
__NR_chown


	)

24 
	#SYS_chown32
 
__NR_chown32


	)

25 
	#SYS_chroŸ
 
__NR_chroŸ


	)

26 
	#SYS_˛ock_gëªs
 
__NR_˛ock_gëªs


	)

27 
	#SYS_˛ock_gëtime
 
__NR_˛ock_gëtime


	)

28 
	#SYS_˛ock_«no¶ìp
 
__NR_˛ock_«no¶ìp


	)

29 
	#SYS_˛ock_£âime
 
__NR_˛ock_£âime


	)

30 
	#SYS_˛⁄e
 
__NR_˛⁄e


	)

31 
	#SYS_˛o£
 
__NR_˛o£


	)

32 
	#SYS_¸ót
 
__NR_¸ót


	)

33 
	#SYS_¸óã_moduÀ
 
__NR_¸óã_moduÀ


	)

34 
	#SYS_dñëe_moduÀ
 
__NR_dñëe_moduÀ


	)

35 
	#SYS_dup
 
__NR_dup


	)

36 
	#SYS_dup2
 
__NR_dup2


	)

37 
	#SYS_ïﬁl_¸óã
 
__NR_ïﬁl_¸óã


	)

38 
	#SYS_ïﬁl_˘l
 
__NR_ïﬁl_˘l


	)

39 
	#SYS_ïﬁl_waô
 
__NR_ïﬁl_waô


	)

40 
	#SYS_evítfd
 
__NR_evítfd


	)

41 
	#SYS_execve
 
__NR_execve


	)

42 
	#SYS_exô
 
__NR_exô


	)

43 
	#SYS_exô_group
 
__NR_exô_group


	)

44 
	#SYS_Ác˚sßt
 
__NR_Ác˚sßt


	)

45 
	#SYS_Ádvi£64
 
__NR_Ádvi£64


	)

46 
	#SYS_Ádvi£64_64
 
__NR_Ádvi£64_64


	)

47 
	#SYS_ÁŒoˇã
 
__NR_ÁŒoˇã


	)

48 
	#SYS_fchdú
 
__NR_fchdú


	)

49 
	#SYS_fchmod
 
__NR_fchmod


	)

50 
	#SYS_fchmod©
 
__NR_fchmod©


	)

51 
	#SYS_fchown
 
__NR_fchown


	)

52 
	#SYS_fchown32
 
__NR_fchown32


	)

53 
	#SYS_fchow«t
 
__NR_fchow«t


	)

54 
	#SYS_f˙é
 
__NR_f˙é


	)

55 
	#SYS_f˙é64
 
__NR_f˙é64


	)

56 
	#SYS_fd©async
 
__NR_fd©async


	)

57 
	#SYS_fgëx©å
 
__NR_fgëx©å


	)

58 
	#SYS_Êi°x©å
 
__NR_Êi°x©å


	)

59 
	#SYS_Êock
 
__NR_Êock


	)

60 
	#SYS_f‹k
 
__NR_f‹k


	)

61 
	#SYS_‰emovex©å
 
__NR_‰emovex©å


	)

62 
	#SYS_f£tx©å
 
__NR_f£tx©å


	)

63 
	#SYS_f°©
 
__NR_f°©


	)

64 
	#SYS_f°©64
 
__NR_f°©64


	)

65 
	#SYS_f°©©64
 
__NR_f°©©64


	)

66 
	#SYS_f°©fs
 
__NR_f°©fs


	)

67 
	#SYS_f°©fs64
 
__NR_f°©fs64


	)

68 
	#SYS_fsync
 
__NR_fsync


	)

69 
	#SYS_·ime
 
__NR_·ime


	)

70 
	#SYS_·runˇã
 
__NR_·runˇã


	)

71 
	#SYS_·runˇã64
 
__NR_·runˇã64


	)

72 
	#SYS_fuãx
 
__NR_fuãx


	)

73 
	#SYS_futimeßt
 
__NR_futimeßt


	)

74 
	#SYS_gë_kî√l_syms
 
__NR_gë_kî√l_syms


	)

75 
	#SYS_gë_mempﬁicy
 
__NR_gë_mempﬁicy


	)

76 
	#SYS_gë_robu°_li°
 
__NR_gë_robu°_li°


	)

77 
	#SYS_gë_thªad_¨ó
 
__NR_gë_thªad_¨ó


	)

78 
	#SYS_gë˝u
 
__NR_gë˝u


	)

79 
	#SYS_gëcwd
 
__NR_gëcwd


	)

80 
	#SYS_gëdíts
 
__NR_gëdíts


	)

81 
	#SYS_gëdíts64
 
__NR_gëdíts64


	)

82 
	#SYS_gëegid
 
__NR_gëegid


	)

83 
	#SYS_gëegid32
 
__NR_gëegid32


	)

84 
	#SYS_gëeuid
 
__NR_gëeuid


	)

85 
	#SYS_gëeuid32
 
__NR_gëeuid32


	)

86 
	#SYS_gëgid
 
__NR_gëgid


	)

87 
	#SYS_gëgid32
 
__NR_gëgid32


	)

88 
	#SYS_gëgroups
 
__NR_gëgroups


	)

89 
	#SYS_gëgroups32
 
__NR_gëgroups32


	)

90 
	#SYS_gëôimî
 
__NR_gëôimî


	)

91 
	#SYS_gëpgid
 
__NR_gëpgid


	)

92 
	#SYS_gëpgΩ
 
__NR_gëpgΩ


	)

93 
	#SYS_gëpid
 
__NR_gëpid


	)

94 
	#SYS_gëpmsg
 
__NR_gëpmsg


	)

95 
	#SYS_gëµid
 
__NR_gëµid


	)

96 
	#SYS_gë¥i‹ôy
 
__NR_gë¥i‹ôy


	)

97 
	#SYS_gëªsgid
 
__NR_gëªsgid


	)

98 
	#SYS_gëªsgid32
 
__NR_gëªsgid32


	)

99 
	#SYS_gëªsuid
 
__NR_gëªsuid


	)

100 
	#SYS_gëªsuid32
 
__NR_gëªsuid32


	)

101 
	#SYS_gëæimô
 
__NR_gëæimô


	)

102 
	#SYS_gërußge
 
__NR_gërußge


	)

103 
	#SYS_gësid
 
__NR_gësid


	)

104 
	#SYS_gëtid
 
__NR_gëtid


	)

105 
	#SYS_gëtimeofday
 
__NR_gëtimeofday


	)

106 
	#SYS_gëuid
 
__NR_gëuid


	)

107 
	#SYS_gëuid32
 
__NR_gëuid32


	)

108 
	#SYS_gëx©å
 
__NR_gëx©å


	)

109 
	#SYS_gây
 
__NR_gây


	)

110 
	#SYS_idÀ
 
__NR_idÀ


	)

111 
	#SYS_öô_moduÀ
 
__NR_öô_moduÀ


	)

112 
	#SYS_öŸify_add_w©ch
 
__NR_öŸify_add_w©ch


	)

113 
	#SYS_öŸify_öô
 
__NR_öŸify_öô


	)

114 
	#SYS_öŸify_rm_w©ch
 
__NR_öŸify_rm_w©ch


	)

115 
	#SYS_io_ˇn˚l
 
__NR_io_ˇn˚l


	)

116 
	#SYS_io_de°roy
 
__NR_io_de°roy


	)

117 
	#SYS_io_gëevíts
 
__NR_io_gëevíts


	)

118 
	#SYS_io_£tup
 
__NR_io_£tup


	)

119 
	#SYS_io_submô
 
__NR_io_submô


	)

120 
	#SYS_io˘l
 
__NR_io˘l


	)

121 
	#SYS_i›îm
 
__NR_i›îm


	)

122 
	#SYS_i›l
 
__NR_i›l


	)

123 
	#SYS_i›rio_gë
 
__NR_i›rio_gë


	)

124 
	#SYS_i›rio_£t
 
__NR_i›rio_£t


	)

125 
	#SYS_ùc
 
__NR_ùc


	)

126 
	#SYS_kexec_lﬂd
 
__NR_kexec_lﬂd


	)

127 
	#SYS_key˘l
 
__NR_key˘l


	)

128 
	#SYS_kûl
 
__NR_kûl


	)

129 
	#SYS_lchown
 
__NR_lchown


	)

130 
	#SYS_lchown32
 
__NR_lchown32


	)

131 
	#SYS_lgëx©å
 
__NR_lgëx©å


	)

132 
	#SYS_lök
 
__NR_lök


	)

133 
	#SYS_lök©
 
__NR_lök©


	)

134 
	#SYS_li°x©å
 
__NR_li°x©å


	)

135 
	#SYS_Œi°x©å
 
__NR_Œi°x©å


	)

136 
	#SYS_lock
 
__NR_lock


	)

137 
	#SYS_lookup_dcookõ
 
__NR_lookup_dcookõ


	)

138 
	#SYS_Ãemovex©å
 
__NR_Ãemovex©å


	)

139 
	#SYS_l£ek
 
__NR_l£ek


	)

140 
	#SYS_l£tx©å
 
__NR_l£tx©å


	)

141 
	#SYS_l°©
 
__NR_l°©


	)

142 
	#SYS_l°©64
 
__NR_l°©64


	)

143 
	#SYS_madvi£
 
__NR_madvi£


	)

144 
	#SYS_madvi£1
 
__NR_madvi£1


	)

145 
	#SYS_mböd
 
__NR_mböd


	)

146 
	#SYS_migøã_∑ges
 
__NR_migøã_∑ges


	)

147 
	#SYS_möc‹e
 
__NR_möc‹e


	)

148 
	#SYS_mkdú
 
__NR_mkdú


	)

149 
	#SYS_mkdú©
 
__NR_mkdú©


	)

150 
	#SYS_mknod
 
__NR_mknod


	)

151 
	#SYS_mknod©
 
__NR_mknod©


	)

152 
	#SYS_mlock
 
__NR_mlock


	)

153 
	#SYS_mlockÆl
 
__NR_mlockÆl


	)

154 
	#SYS_mm≠
 
__NR_mm≠


	)

155 
	#SYS_mm≠2
 
__NR_mm≠2


	)

156 
	#SYS_modify_ldt
 
__NR_modify_ldt


	)

157 
	#SYS_mou¡
 
__NR_mou¡


	)

158 
	#SYS_move_∑ges
 
__NR_move_∑ges


	)

159 
	#SYS_m¥Ÿe˘
 
__NR_m¥Ÿe˘


	)

160 
	#SYS_mpx
 
__NR_mpx


	)

161 
	#SYS_mq_gë£èâr
 
__NR_mq_gë£èâr


	)

162 
	#SYS_mq_nŸify
 
__NR_mq_nŸify


	)

163 
	#SYS_mq_›í
 
__NR_mq_›í


	)

164 
	#SYS_mq_timedª˚ive
 
__NR_mq_timedª˚ive


	)

165 
	#SYS_mq_timed£nd
 
__NR_mq_timed£nd


	)

166 
	#SYS_mq_u∆ök
 
__NR_mq_u∆ök


	)

167 
	#SYS_mªm≠
 
__NR_mªm≠


	)

168 
	#SYS_msync
 
__NR_msync


	)

169 
	#SYS_mu∆ock
 
__NR_mu∆ock


	)

170 
	#SYS_mu∆ockÆl
 
__NR_mu∆ockÆl


	)

171 
	#SYS_munm≠
 
__NR_munm≠


	)

172 
	#SYS_«no¶ìp
 
__NR_«no¶ìp


	)

173 
	#SYS_nfs£rv˘l
 
__NR_nfs£rv˘l


	)

174 
	#SYS_ni˚
 
__NR_ni˚


	)

175 
	#SYS_ﬁdf°©
 
__NR_ﬁdf°©


	)

176 
	#SYS_ﬁdl°©
 
__NR_ﬁdl°©


	)

177 
	#SYS_ﬁdﬁdu«me
 
__NR_ﬁdﬁdu«me


	)

178 
	#SYS_ﬁd°©
 
__NR_ﬁd°©


	)

179 
	#SYS_ﬁdu«me
 
__NR_ﬁdu«me


	)

180 
	#SYS_›í
 
__NR_›í


	)

181 
	#SYS_›í©
 
__NR_›í©


	)

182 
	#SYS_∑u£
 
__NR_∑u£


	)

183 
	#SYS_≥rs⁄Æôy
 
__NR_≥rs⁄Æôy


	)

184 
	#SYS_pùe
 
__NR_pùe


	)

185 
	#SYS_pivŸ_roŸ
 
__NR_pivŸ_roŸ


	)

186 
	#SYS_pﬁl
 
__NR_pﬁl


	)

187 
	#SYS_µﬁl
 
__NR_µﬁl


	)

188 
	#SYS_¥˘l
 
__NR_¥˘l


	)

189 
	#SYS_¥ód64
 
__NR_¥ód64


	)

190 
	#SYS_¥of
 
__NR_¥of


	)

191 
	#SYS_¥ofû
 
__NR_¥ofû


	)

192 
	#SYS_p£À˘6
 
__NR_p£À˘6


	)

193 
	#SYS_±ø˚
 
__NR_±ø˚


	)

194 
	#SYS_puçmsg
 
__NR_puçmsg


	)

195 
	#SYS_pwrôe64
 
__NR_pwrôe64


	)

196 
	#SYS_quîy_moduÀ
 
__NR_quîy_moduÀ


	)

197 
	#SYS_quŸa˘l
 
__NR_quŸa˘l


	)

198 
	#SYS_ªad
 
__NR_ªad


	)

199 
	#SYS_ªadahód
 
__NR_ªadahód


	)

200 
	#SYS_ªaddú
 
__NR_ªaddú


	)

201 
	#SYS_ªadlök
 
__NR_ªadlök


	)

202 
	#SYS_ªadlök©
 
__NR_ªadlök©


	)

203 
	#SYS_ªadv
 
__NR_ªadv


	)

204 
	#SYS_ªboŸ
 
__NR_ªboŸ


	)

205 
	#SYS_ªcvmmsg
 
__NR_ªcvmmsg


	)

206 
	#SYS_ªm≠_fûe_∑ges
 
__NR_ªm≠_fûe_∑ges


	)

207 
	#SYS_ªmovex©å
 
__NR_ªmovex©å


	)

208 
	#SYS_ª«me
 
__NR_ª«me


	)

209 
	#SYS_ª«mót
 
__NR_ª«mót


	)

210 
	#SYS_ªque°_key
 
__NR_ªque°_key


	)

211 
	#SYS_ª°¨t_sysˇŒ
 
__NR_ª°¨t_sysˇŒ


	)

212 
	#SYS_rmdú
 
__NR_rmdú


	)

213 
	#SYS_π_siga˘i⁄
 
__NR_π_siga˘i⁄


	)

214 
	#SYS_π_sig≥ndög
 
__NR_π_sig≥ndög


	)

215 
	#SYS_π_sig¥ocmask
 
__NR_π_sig¥ocmask


	)

216 
	#SYS_π_sigqueueöfo
 
__NR_π_sigqueueöfo


	)

217 
	#SYS_π_sigªtu∫
 
__NR_π_sigªtu∫


	)

218 
	#SYS_π_sigsu•íd
 
__NR_π_sigsu•íd


	)

219 
	#SYS_π_sigtimedwaô
 
__NR_π_sigtimedwaô


	)

220 
	#SYS_sched_gë_¥i‹ôy_max
 
__NR_sched_gë_¥i‹ôy_max


	)

221 
	#SYS_sched_gë_¥i‹ôy_mö
 
__NR_sched_gë_¥i‹ôy_mö


	)

222 
	#SYS_sched_gëafföôy
 
__NR_sched_gëafföôy


	)

223 
	#SYS_sched_gë∑øm
 
__NR_sched_gë∑øm


	)

224 
	#SYS_sched_gëscheduÀr
 
__NR_sched_gëscheduÀr


	)

225 
	#SYS_sched_º_gë_öãrvÆ
 
__NR_sched_º_gë_öãrvÆ


	)

226 
	#SYS_sched_£èfföôy
 
__NR_sched_£èfföôy


	)

227 
	#SYS_sched_£ç¨am
 
__NR_sched_£ç¨am


	)

228 
	#SYS_sched_£tscheduÀr
 
__NR_sched_£tscheduÀr


	)

229 
	#SYS_sched_yõld
 
__NR_sched_yõld


	)

230 
	#SYS_£À˘
 
__NR_£À˘


	)

231 
	#SYS_£ndfûe
 
__NR_£ndfûe


	)

232 
	#SYS_£ndfûe64
 
__NR_£ndfûe64


	)

233 
	#SYS_£t_mempﬁicy
 
__NR_£t_mempﬁicy


	)

234 
	#SYS_£t_robu°_li°
 
__NR_£t_robu°_li°


	)

235 
	#SYS_£t_thªad_¨ó
 
__NR_£t_thªad_¨ó


	)

236 
	#SYS_£t_tid_addªss
 
__NR_£t_tid_addªss


	)

237 
	#SYS_£tdomaö«me
 
__NR_£tdomaö«me


	)

238 
	#SYS_£tfsgid
 
__NR_£tfsgid


	)

239 
	#SYS_£tfsgid32
 
__NR_£tfsgid32


	)

240 
	#SYS_£tfsuid
 
__NR_£tfsuid


	)

241 
	#SYS_£tfsuid32
 
__NR_£tfsuid32


	)

242 
	#SYS_£tgid
 
__NR_£tgid


	)

243 
	#SYS_£tgid32
 
__NR_£tgid32


	)

244 
	#SYS_£tgroups
 
__NR_£tgroups


	)

245 
	#SYS_£tgroups32
 
__NR_£tgroups32


	)

246 
	#SYS_£tho°«me
 
__NR_£tho°«me


	)

247 
	#SYS_£tôimî
 
__NR_£tôimî


	)

248 
	#SYS_£çgid
 
__NR_£çgid


	)

249 
	#SYS_£çri‹ôy
 
__NR_£çri‹ôy


	)

250 
	#SYS_£åegid
 
__NR_£åegid


	)

251 
	#SYS_£åegid32
 
__NR_£åegid32


	)

252 
	#SYS_£åesgid
 
__NR_£åesgid


	)

253 
	#SYS_£åesgid32
 
__NR_£åesgid32


	)

254 
	#SYS_£åesuid
 
__NR_£åesuid


	)

255 
	#SYS_£åesuid32
 
__NR_£åesuid32


	)

256 
	#SYS_£åeuid
 
__NR_£åeuid


	)

257 
	#SYS_£åeuid32
 
__NR_£åeuid32


	)

258 
	#SYS_£ålimô
 
__NR_£ålimô


	)

259 
	#SYS_£tsid
 
__NR_£tsid


	)

260 
	#SYS_£âimeofday
 
__NR_£âimeofday


	)

261 
	#SYS_£tuid
 
__NR_£tuid


	)

262 
	#SYS_£tuid32
 
__NR_£tuid32


	)

263 
	#SYS_£tx©å
 
__NR_£tx©å


	)

264 
	#SYS_sgëmask
 
__NR_sgëmask


	)

265 
	#SYS_siga˘i⁄
 
__NR_siga˘i⁄


	)

266 
	#SYS_sigÆt°ack
 
__NR_sigÆt°ack


	)

267 
	#SYS_sig«l
 
__NR_sig«l


	)

268 
	#SYS_sig≥ndög
 
__NR_sig≥ndög


	)

269 
	#SYS_sig¥ocmask
 
__NR_sig¥ocmask


	)

270 
	#SYS_sigªtu∫
 
__NR_sigªtu∫


	)

271 
	#SYS_sigsu•íd
 
__NR_sigsu•íd


	)

272 
	#SYS_sockëˇŒ
 
__NR_sockëˇŒ


	)

273 
	#SYS_•li˚
 
__NR_•li˚


	)

274 
	#SYS_s£tmask
 
__NR_s£tmask


	)

275 
	#SYS_°©
 
__NR_°©


	)

276 
	#SYS_°©64
 
__NR_°©64


	)

277 
	#SYS_°©fs
 
__NR_°©fs


	)

278 
	#SYS_°©fs64
 
__NR_°©fs64


	)

279 
	#SYS_°ime
 
__NR_°ime


	)

280 
	#SYS_°ty
 
__NR_°ty


	)

281 
	#SYS_sw≠off
 
__NR_sw≠off


	)

282 
	#SYS_sw≠⁄
 
__NR_sw≠⁄


	)

283 
	#SYS_symlök
 
__NR_symlök


	)

284 
	#SYS_symlök©
 
__NR_symlök©


	)

285 
	#SYS_sync
 
__NR_sync


	)

286 
	#SYS_sync_fûe_ønge
 
__NR_sync_fûe_ønge


	)

287 
	#SYS_sysfs
 
__NR_sysfs


	)

288 
	#SYS_sysöfo
 
__NR_sysöfo


	)

289 
	#SYS_sy¶og
 
__NR_sy¶og


	)

290 
	#SYS_ãe
 
__NR_ãe


	)

291 
	#SYS_tgkûl
 
__NR_tgkûl


	)

292 
	#SYS_time
 
__NR_time


	)

293 
	#SYS_timî_¸óã
 
__NR_timî_¸óã


	)

294 
	#SYS_timî_dñëe
 
__NR_timî_dñëe


	)

295 
	#SYS_timî_gëovîrun
 
__NR_timî_gëovîrun


	)

296 
	#SYS_timî_gëtime
 
__NR_timî_gëtime


	)

297 
	#SYS_timî_£âime
 
__NR_timî_£âime


	)

298 
	#SYS_times
 
__NR_times


	)

299 
	#SYS_tkûl
 
__NR_tkûl


	)

300 
	#SYS_åunˇã
 
__NR_åunˇã


	)

301 
	#SYS_åunˇã64
 
__NR_åunˇã64


	)

302 
	#SYS_ugëæimô
 
__NR_ugëæimô


	)

303 
	#SYS_ulimô
 
__NR_ulimô


	)

304 
	#SYS_umask
 
__NR_umask


	)

305 
	#SYS_umou¡
 
__NR_umou¡


	)

306 
	#SYS_umou¡2
 
__NR_umou¡2


	)

307 
	#SYS_u«me
 
__NR_u«me


	)

308 
	#SYS_u∆ök
 
__NR_u∆ök


	)

309 
	#SYS_u∆ök©
 
__NR_u∆ök©


	)

310 
	#SYS_unsh¨e
 
__NR_unsh¨e


	)

311 
	#SYS_u£lib
 
__NR_u£lib


	)

312 
	#SYS_u°©
 
__NR_u°©


	)

313 
	#SYS_utime
 
__NR_utime


	)

314 
	#SYS_utimes
 
__NR_utimes


	)

315 
	#SYS_vf‹k
 
__NR_vf‹k


	)

316 
	#SYS_vh™gup
 
__NR_vh™gup


	)

317 
	#SYS_vm86
 
__NR_vm86


	)

318 
	#SYS_vm86ﬁd
 
__NR_vm86ﬁd


	)

319 
	#SYS_vm•li˚
 
__NR_vm•li˚


	)

320 
	#SYS_v£rvî
 
__NR_v£rvî


	)

321 
	#SYS_waô4
 
__NR_waô4


	)

322 
	#SYS_waôid
 
__NR_waôid


	)

323 
	#SYS_waôpid
 
__NR_waôpid


	)

324 
	#SYS_wrôe
 
__NR_wrôe


	)

325 
	#SYS_wrôev
 
__NR_wrôev


	)

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

30 
	#__√ed_size_t


	)

31 
	~<°ddef.h
>

34 
	t__u_ch¨
;

35 
	t__u_sh‹t
;

36 
	t__u_öt
;

37 
	t__u_l⁄g
;

40 sig√d 
	t__öt8_t
;

41 
	t__uöt8_t
;

42 sig√d 
	t__öt16_t
;

43 
	t__uöt16_t
;

44 sig√d 
	t__öt32_t
;

45 
	t__uöt32_t
;

46 #i‡
__WORDSIZE
 == 64

47 sig√d 
	t__öt64_t
;

48 
	t__uöt64_t
;

49 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


50 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

51 
__exãnsi⁄__
 
	t__uöt64_t
;

55 #i‡
__WORDSIZE
 == 64

56 
	t__quad_t
;

57 
	t__u_quad_t
;

58 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


59 
__exãnsi⁄__
 
	t__quad_t
;

60 
__exãnsi⁄__
 
	t__u_quad_t
;

64 
	m__vÆ
[2];

65 } 
	t__quad_t
;

68 
__u_l⁄g
 
	m__vÆ
[2];

69 } 
	t__u_quad_t
;

102 
	#__S16_TYPE
 

	)

103 
	#__U16_TYPE
 

	)

104 
	#__S32_TYPE
 

	)

105 
	#__U32_TYPE
 

	)

106 
	#__SLONGWORD_TYPE
 

	)

107 
	#__ULONGWORD_TYPE
 

	)

108 #i‡
__WORDSIZE
 == 32

109 
	#__SQUAD_TYPE
 
__quad_t


	)

110 
	#__UQUAD_TYPE
 
__u_quad_t


	)

111 
	#__SWORD_TYPE
 

	)

112 
	#__UWORD_TYPE
 

	)

113 
	#__SLONG32_TYPE
 

	)

114 
	#__ULONG32_TYPE
 

	)

115 
	#__S64_TYPE
 
__quad_t


	)

116 
	#__U64_TYPE
 
__u_quad_t


	)

119 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

120 #ñi‡
__WORDSIZE
 == 64

121 
	t__SQUAD_TYPE
 

	)

122 
	t__UQUAD_TYPE
 

	)

123 
	t__SWORD_TYPE
 

	)

124 
	t__UWORD_TYPE
 

	)

125 
	t__SLONG32_TYPE
 

	)

126 
	t__ULONG32_TYPE
 

	)

127 
	t__S64_TYPE
 

	)

128 
	t__U64_TYPE
 

	)

130 
	t__STD_TYPE
 

	)

134 
	~<bôs/ty≥sizes.h
>

137 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

138 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

139 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

140 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

141 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

142 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

143 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

144 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

145 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

146 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

147 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

148 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

149 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

150 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

151 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

152 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

153 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

154 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

156 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

157 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

158 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

161 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

164 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

167 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

172 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

173 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

176 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

177 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

180 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

181 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

183 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

187 
__off64_t
 
	t__loff_t
;

188 
__quad_t
 *
	t__qaddr_t
;

189 *
	t__ˇddr_t
;

192 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

195 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

198 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

29 
__Æways_ölöe
 
__wur
 
ssize_t


30 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

32 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

33 && (!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
Ë|| __nbyã†> 
	`__bos0
 (
__buf
)))

34  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

35  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

36 
	}
}

38 #ifde‡
__USE_UNIX98


39 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

40 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

41 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

42 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

43 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

44 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

45 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

46 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

47 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

48 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
__Æways_ölöe
 
__wur
 
ssize_t


52 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

54 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

55 && (!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
Ë|| __nbyã†> 
	`__bos0
 (
__buf
)))

56  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

57  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

58 
	}
}

60 
__Æways_ölöe
 
__wur
 
ssize_t


61 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

63 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

64 && (!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
Ë|| __nbyã†> 
	`__bos0
 (
__buf
)))

65  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

66  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

67 
	}
}

70 #ifde‡
__USE_LARGEFILE64


71 
__Æways_ölöe
 
__wur
 
ssize_t


72 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

75 && (!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
Ë|| __nbyã†> 
	`__bos0
 (
__buf
)))

76  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

77  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

78 
	}
}

82 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


83 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

84 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

85 
size_t
 
__buÊí
)

86 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

87 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

88 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

89 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

90 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

92 
__Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


93 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

94 
size_t
 
__Àn
))

96 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

97 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__buf
)))

98  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

99  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

100 
	}
}

103 #ifde‡
__USE_ATFILE


104 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

105 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

106 
size_t
 
__buÊí
)

107 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

108 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

109 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

110 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

111 
ªadlök©
)

112 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

114 
__Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


115 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

116 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

118 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

119 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__buf
)))

120  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

121  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

122 
	}
}

125 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

126 
__THROW
 
__wur
;

127 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

128 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

130 
__Æways_ölöe
 
__wur
 *

131 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

133 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

134 && (!
	`__buûtö_c⁄°™t_p
 (
__size
Ë|| __sizê> 
	`__bos
 (
__buf
)))

135  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

136  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

137 
	}
}

139 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


140 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

141 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

142 *
	`__REDIRECT_NTH
 (
__gëwd_Æüs
, (*
__buf
), 
gëwd
)

143 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

145 
__Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

146 
	`__NTH
 (
	$gëwd
 (*
__buf
))

148 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

149  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

150  
	`__gëwd_Æüs
 (
__buf
);

151 
	}
}

154 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

155 
size_t
 
__buÊí
Ë
__THROW
;

156 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

157 
size_t
 
__Àn
), 
c⁄f°r
);

159 
__Æways_ölöe
 
size_t


160 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

162 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

163 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| 
	`__bos
 (
__buf
) < __len))

164  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

165  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

166 
	}
}

169 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
li°Àn
)

170 
__THROW
 
__wur
;

171 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

172 
gëgroups
Ë
__wur
;

174 
__Æways_ölöe
 

175 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

177 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1

178 && (!
	`__buûtö_c⁄°™t_p
 (
__size
)

179 || 
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
)))

180  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

181  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

182 
	}
}

185 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

186 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

187 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

188 
size_t
 
__buÊí
), 
ây«me_r
)

189 
	`__n⁄nuŒ
 ((2));

191 
__Æways_ölöe
 

192 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

194 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

195 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

196  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

197  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

198 
	}
}

201 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


202 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

203 
	`__n⁄nuŒ
 ((1));

204 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

205 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

207 
__Æways_ölöe
 

208 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

210 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

211 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

212  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

213  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

214 
	}
}

218 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


219 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

220 
__THROW
 
	`__n⁄nuŒ
 ((1));

221 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

222 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

224 
__Æways_ölöe
 

225 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

227 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

228 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

229  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

230  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

231 
	}
}

235 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

236 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

237 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

238 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

239 
size_t
 
__buÊí
),

240 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

242 
__Æways_ölöe
 

243 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

245 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

246 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

247  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

248  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

249 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wordsize.h

19 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

93 #unde‡
__USE_ISOC99


94 #unde‡
__USE_POSIX


95 #unde‡
__USE_POSIX2


96 #unde‡
__USE_POSIX199309


97 #unde‡
__USE_POSIX199506


98 #unde‡
__USE_XOPEN


99 #unde‡
__USE_XOPEN_EXTENDED


100 #unde‡
__USE_UNIX98


101 #unde‡
__USE_XOPEN2K


102 #unde‡
__USE_LARGEFILE


103 #unde‡
__USE_LARGEFILE64


104 #unde‡
__USE_FILE_OFFSET64


105 #unde‡
__USE_BSD


106 #unde‡
__USE_SVID


107 #unde‡
__USE_MISC


108 #unde‡
__USE_ATFILE


109 #unde‡
__USE_GNU


110 #unde‡
__USE_REENTRANT


111 #unde‡
__USE_FORTIFY_LEVEL


112 #unde‡
__FAVOR_BSD


113 #unde‡
__KERNEL_STRICT_NAMES


117 #i‚de‡
_LOOSE_KERNEL_NAMES


118 
	#__KERNEL_STRICT_NAMES


	)

122 
	#__USE_ANSI
 1

	)

131 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


132 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

133 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

135 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

140 #i‡
deföed
 
_BSD_SOURCE
 && \

141 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

142 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

143 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

144 
	#__FAVOR_BSD
 1

	)

148 #ifde‡
_GNU_SOURCE


149 #unde‡
_ISOC99_SOURCE


150 
	#_ISOC99_SOURCE
 1

	)

151 #unde‡
_POSIX_SOURCE


152 
	#_POSIX_SOURCE
 1

	)

153 #unde‡
_POSIX_C_SOURCE


154 
	#_POSIX_C_SOURCE
 200112L

	)

155 #unde‡
_XOPEN_SOURCE


156 
	#_XOPEN_SOURCE
 600

	)

157 #unde‡
_XOPEN_SOURCE_EXTENDED


158 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

159 #unde‡
_LARGEFILE64_SOURCE


160 
	#_LARGEFILE64_SOURCE
 1

	)

161 #unde‡
_BSD_SOURCE


162 
	#_BSD_SOURCE
 1

	)

163 #unde‡
_SVID_SOURCE


164 
	#_SVID_SOURCE
 1

	)

165 #unde‡
_ATFILE_SOURCE


166 
	#_ATFILE_SOURCE
 1

	)

171 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

172 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

173 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

174 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

175 
	#_BSD_SOURCE
 1

	)

176 
	#_SVID_SOURCE
 1

	)

183 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

184 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

185 
	#__USE_ISOC99
 1

	)

190 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

191 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

192 
	#_POSIX_SOURCE
 1

	)

193 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

194 
	#_POSIX_C_SOURCE
 2

	)

195 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

196 
	#_POSIX_C_SOURCE
 199506L

	)

198 
	#_POSIX_C_SOURCE
 200112L

	)

202 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


203 
	#__USE_POSIX
 1

	)

206 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


207 
	#__USE_POSIX2
 1

	)

210 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

211 
	#__USE_POSIX199309
 1

	)

214 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

215 
	#__USE_POSIX199506
 1

	)

218 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

219 
	#__USE_XOPEN2K
 1

	)

222 #ifdef 
_XOPEN_SOURCE


223 
	#__USE_XOPEN
 1

	)

224 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

225 
	#__USE_XOPEN_EXTENDED
 1

	)

226 
	#__USE_UNIX98
 1

	)

227 #unde‡
_LARGEFILE_SOURCE


228 
	#_LARGEFILE_SOURCE
 1

	)

229 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

230 
	#__USE_XOPEN2K
 1

	)

231 #unde‡
__USE_ISOC99


232 
	#__USE_ISOC99
 1

	)

235 #ifde‡
_XOPEN_SOURCE_EXTENDED


236 
	#__USE_XOPEN_EXTENDED
 1

	)

241 #ifde‡
_LARGEFILE_SOURCE


242 
	#__USE_LARGEFILE
 1

	)

245 #ifde‡
_LARGEFILE64_SOURCE


246 
	#__USE_LARGEFILE64
 1

	)

249 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

250 
	#__USE_FILE_OFFSET64
 1

	)

253 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


254 
	#__USE_MISC
 1

	)

257 #ifdef 
_BSD_SOURCE


258 
	#__USE_BSD
 1

	)

261 #ifdef 
_SVID_SOURCE


262 
	#__USE_SVID
 1

	)

265 #ifdef 
_ATFILE_SOURCE


266 
	#__USE_ATFILE
 1

	)

269 #ifdef 
_GNU_SOURCE


270 
	#__USE_GNU
 1

	)

273 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


274 
	#__USE_REENTRANT
 1

	)

277 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

278 && 
deföed
 
__OPTIMIZE__
 && __OPTIMIZE__ > 0 \

279 && (
__GNUC_PREREQ
 (4, 1) \

280 || (
deföed
 
	g__GNUC_RH_RELEASE__
 && 
__GNUC_PREREQ
 (4, 0)) \

281 || (
deföed
 
	g__GNUC_RH_RELEASE__
 && 
__GNUC_PREREQ
 (3, 4) \

282 && 
	g__GNUC_MINOR__
 == 4 \

283 && (
__GNUC_PATCHLEVEL__
 > 2 \

284 || (
__GNUC_PATCHLEVEL__
 =2 && 
__GNUC_RH_RELEASE__
 >= 8))))

285 #i‡
_FORTIFY_SOURCE
 > 1

286 
	#__USE_FORTIFY_LEVEL
 2

	)

288 
	#__USE_FORTIFY_LEVEL
 1

	)

291 
	#__USE_FORTIFY_LEVEL
 0

	)

295 
	#__STDC_IEC_559__
 1

	)

296 
	#__STDC_IEC_559_COMPLEX__
 1

	)

299 
	#__STDC_ISO_10646__
 200009L

	)

307 #unde‡
__GNU_LIBRARY__


308 
	#__GNU_LIBRARY__
 6

	)

312 
	#__GLIBC__
 2

	)

313 
	#__GLIBC_MINOR__
 5

	)

315 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

316 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

319 #i‡
deföed
 
__GNUC__
 \

320 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

321 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

322 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

323 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

327 #i‚de‡
__ASSEMBLER__


328 #i‚de‡
_SYS_CDEFS_H


329 
	~<sys/cdefs.h
>

334 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


335 
	#__USE_LARGEFILE
 1

	)

336 
	#__USE_LARGEFILE64
 1

	)

342 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

343 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__


344 
	#__USE_EXTERN_INLINES
 1

	)

352 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 
gë›t
 ();

158 #i‚de‡
__√ed_gë›t


159 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
,

161 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

162 
__THROW
;

163 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
,

165 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

166 
__THROW
;

170 #ifdef 
__˝lu•lus


175 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

148 
	#_IO_SKIPWS
 01

	)

149 
	#_IO_LEFT
 02

	)

150 
	#_IO_RIGHT
 04

	)

151 
	#_IO_INTERNAL
 010

	)

152 
	#_IO_DEC
 020

	)

153 
	#_IO_OCT
 040

	)

154 
	#_IO_HEX
 0100

	)

155 
	#_IO_SHOWBASE
 0200

	)

156 
	#_IO_SHOWPOINT
 0400

	)

157 
	#_IO_UPPERCASE
 01000

	)

158 
	#_IO_SHOWPOS
 02000

	)

159 
	#_IO_SCIENTIFIC
 04000

	)

160 
	#_IO_FIXED
 010000

	)

161 
	#_IO_UNITBUF
 020000

	)

162 
	#_IO_STDIO
 040000

	)

163 
	#_IO_DONT_CLOSE
 0100000

	)

164 
	#_IO_BOOLALPHA
 0200000

	)

167 
_IO_jump_t
; 
	g_IO_FILE
;

170 #ifde‡
_IO_MTSAFE_IO


171 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

172 
	~<bôs/°dio-lock.h
>

177 
	t_IO_lock_t
;

183 
	s_IO_m¨kî
 {

184 
_IO_m¨kî
 *
	m_√xt
;

185 
_IO_FILE
 *
	m_sbuf
;

189 
	m_pos
;

191 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

192 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

193 
	mpublic
:

194 
°ªamm¨kî
(
°ªambuf
 *
sb
);

195 ~
°ªamm¨kî
();

196 
ßvög
(Ë{  
	m_•os
 == -2; }

197 
dñè
(
°ªamm¨kî
&);

198 
dñè
();

203 
	e__codecvt_ªsu…


205 
	m__codecvt_ok
,

206 
	m__codecvt_∑πül
,

207 
	m__codecvt_îr‹
,

208 
	m__codecvt_noc⁄v


211 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


214 
	s_IO_codecvt


216 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

217 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

218 
	m__mb°©e_t
 *,

219 c⁄° 
	mwch¨_t
 *,

220 c⁄° 
	mwch¨_t
 *,

221 c⁄° 
	mwch¨_t
 **, *,

223 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

224 
	m__mb°©e_t
 *, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *,

229 c⁄° **, 
	mwch¨_t
 *,

230 
	mwch¨_t
 *, wchar_t **);

231 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

232 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

233 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

234 c⁄° *, c⁄° *, 
	m_IO_size_t
);

235 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

237 
_IO_ic⁄v_t
 
	m__cd_ö
;

238 
_IO_ic⁄v_t
 
	m__cd_out
;

242 
	s_IO_wide_d©a


244 
wch¨_t
 *
	m_IO_ªad_±r
;

245 
wch¨_t
 *
	m_IO_ªad_íd
;

246 
wch¨_t
 *
	m_IO_ªad_ba£
;

247 
wch¨_t
 *
	m_IO_wrôe_ba£
;

248 
wch¨_t
 *
	m_IO_wrôe_±r
;

249 
wch¨_t
 *
	m_IO_wrôe_íd
;

250 
wch¨_t
 *
	m_IO_buf_ba£
;

251 
wch¨_t
 *
	m_IO_buf_íd
;

253 
wch¨_t
 *
	m_IO_ßve_ba£
;

254 
wch¨_t
 *
	m_IO_backup_ba£
;

256 
wch¨_t
 *
	m_IO_ßve_íd
;

258 
__mb°©e_t
 
	m_IO_°©e
;

259 
__mb°©e_t
 
	m_IO_œ°_°©e
;

260 
_IO_codecvt
 
	m_codecvt
;

262 
wch¨_t
 
	m_sh‹tbuf
[1];

264 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

268 
	s_IO_FILE
 {

269 
	m_Êags
;

270 
	#_IO_fûe_Êags
 
_Êags


	)

274 * 
	m_IO_ªad_±r
;

275 * 
	m_IO_ªad_íd
;

276 * 
	m_IO_ªad_ba£
;

277 * 
	m_IO_wrôe_ba£
;

278 * 
	m_IO_wrôe_±r
;

279 * 
	m_IO_wrôe_íd
;

280 * 
	m_IO_buf_ba£
;

281 * 
	m_IO_buf_íd
;

283 *
	m_IO_ßve_ba£
;

284 *
	m_IO_backup_ba£
;

285 *
	m_IO_ßve_íd
;

287 
_IO_m¨kî
 *
	m_m¨kîs
;

289 
_IO_FILE
 *
	m_chaö
;

291 
	m_fûío
;

293 
	m_blksize
;

295 
	m_Êags2
;

297 
_IO_off_t
 
	m_ﬁd_off£t
;

299 
	#__HAVE_COLUMN


	)

301 
	m_cur_cﬁumn
;

302 sig√d 
	m_vèbÀ_off£t
;

303 
	m_sh‹tbuf
[1];

307 
_IO_lock_t
 *
	m_lock
;

308 #ifde‡
_IO_USE_OLD_IO_FILE


311 
	s_IO_FILE_com∂ëe


313 
_IO_FILE
 
	m_fûe
;

315 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

316 
_IO_off64_t
 
	m_off£t
;

317 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


319 
_IO_codecvt
 *
	m_codecvt
;

320 
_IO_wide_d©a
 *
	m_wide_d©a
;

321 
_IO_FILE
 *
	m_‰ìªs_li°
;

322 *
	m_‰ìªs_buf
;

323 
size_t
 
	m_‰ìªs_size
;

325 *
	m__∑d1
;

326 *
	m__∑d2
;

327 *
	m__∑d3
;

328 *
	m__∑d4
;

329 
size_t
 
	m__∑d5
;

331 
	m_mode
;

333 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

337 #i‚de‡
__˝lu•lus


338 
_IO_FILE
 
	t_IO_FILE
;

341 
	g_IO_FILE_∂us
;

343 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

344 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

345 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

346 #i‚de‡
_LIBC


347 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

348 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

349 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

351 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

352 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

353 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

361 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

369 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

370 
	tsize_t
 
	t__n
);

378 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

381 
	t__io_˛o£_‚
 (*
	t__cookõ
);

384 #ifde‡
_GNU_SOURCE


386 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

387 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

388 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

389 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

394 
__io_ªad_‚
 *
	mªad
;

395 
__io_wrôe_‚
 *
	mwrôe
;

396 
__io_£ek_‚
 *
	m£ek
;

397 
__io_˛o£_‚
 *
	m˛o£
;

398 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

399 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

401 
	g_IO_cookõ_fûe
;

404 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

405 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

409 #ifde‡
__˝lu•lus


413 
__undîÊow
 (
_IO_FILE
 *);

414 
__uÊow
 (
_IO_FILE
 *);

415 
__ovîÊow
 (
_IO_FILE
 *, );

416 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

417 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

418 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

420 #i‡ 
__GNUC__
 >= 3

421 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

423 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

426 
	#_IO_gëc_u∆ocked
(
_Â
) \

427 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

428 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

429 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

430 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

431 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

432 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

433 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

435 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

436 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

438 
	#_IO_gëwc_u∆ocked
(
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 >(_Â)->_wide_d©a->
_IO_ªad_íd
,\

441 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

442 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

443 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

444 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
, 0) \

445 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

446 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

448 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

449 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

451 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

452 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

453 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

454 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

456 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

459 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

460 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

462 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

463 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

464 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

466 #ifde‡
_IO_MTSAFE_IO


467 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

468 
	#_IO_Êockfûe
(
_Â
) \

469 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

470 
	#_IO_fu∆ockfûe
(
_Â
) \

471 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

473 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

474 
	#_IO_Êockfûe
(
_Â
Ë

	)

475 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

476 
	#_IO_·rylockfûe
(
_Â
Ë

	)

477 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

478 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

481 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

482 
_IO_va_li°
, *
__ª°ri˘
);

483 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

484 
_IO_va_li°
);

485 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

486 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

488 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

489 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

491 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

493 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


494 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

495 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

496 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

497 #i‡
__GNUC__
 >= 2

500 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


501 
	~<shlib-com∑t.h
>

502 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

503 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

504 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

505 c⁄° 
_IO_°dö_u£d
;

506 
wók_exã∫
 (
_IO_°dö_u£d
);

509 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


510 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

514 
	#_IO_fwide
(
__Â
, 
__mode
) \

515 ({ 
__ªsu…
 = (
__mode
); \

516 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

518 i‡((
__Â
)->
_mode
 == 0) \

520 (
__Â
)->
_mode
 = -1; \

521 
__ªsu…
 = (
__Â
)->
_mode
; \

523 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

524 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

526 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

527 
__ªsu…
; })

	)

530 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

531 
_IO_va_li°
, *
__ª°ri˘
);

532 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

533 
_IO_va_li°
);

534 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

535 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

538 #ifde‡
__LDBL_COMPAT


539 
	~<bôs/libio-ldbl.h
>

542 #ifde‡
__˝lu•lus


	@/usr/include/linux/hdlc/ioctl.h

1 #i‚de‡
__HDLC_IOCTL_H__


2 
	#__HDLC_IOCTL_H__


	)

5 
	m˛ock_øã
;

6 
	m˛ock_ty≥
;

7 
	mlo›back
;

8 } 
	tsync_£rül_£âögs
;

11 
	m˛ock_øã
;

12 
	m˛ock_ty≥
;

13 
	mlo›back
;

14 
	m¶Ÿ_m≠
;

15 } 
	tã1_£âögs
;

18 
	mícodög
;

19 
	m∑rôy
;

20 } 
	tøw_hdlc_¥Ÿo
;

23 
	mt391
;

24 
	mt392
;

25 
	mn391
;

26 
	mn392
;

27 
	mn393
;

28 
	mlmi
;

29 
	md˚
;

30 } 
	t‰_¥Ÿo
;

33 
	mdlci
;

34 } 
	t‰_¥Ÿo_pvc
;

37 
	mdlci
;

38 
	mma°î
[
IFNAMSIZ
];

39 }
	t‰_¥Ÿo_pvc_öfo
;

42 
	möãrvÆ
;

43 
	mtimeout
;

44 } 
	tcisco_¥Ÿo
;

	@/usr/include/linux/socket.h

1 #i‚de‡
_LINUX_SOCKET_H


2 
	#_LINUX_SOCKET_H


	)

7 
	#_K_SS_MAXSIZE
 128

	)

8 
	#_K_SS_ALIGNSIZE
 (
	`__Æignof__
 (
sockaddr
 *))

	)

11 
	s__kî√l_sockaddr_°‹age
 {

12 
	mss_Ámûy
;

14 
	m__d©a
[
_K_SS_MAXSIZE
 - ()];

17 } 
__©åibuã__
 ((
Æig√d
(
_K_SS_ALIGNSIZE
)));

19 #i‡
deföed
(
__KERNEL__
Ë|| !deföed(
__GLIBC__
) || (__GLIBC__ < 2)

21 
	~<asm/sockë.h
>

22 
	~<löux/sockios.h
>

23 
	~<löux/uio.h
>

24 
	~<löux/ty≥s.h
>

26 
sys˘l_somaxc⁄n
;

27 #ifde‡
CONFIG_PROC_FS


28 
	g£q_fûe
;

29 
sockë_£q_show
(
£q_fûe
 *
£q
);

32 
	tß_Ámûy_t
;

38 
	ssockaddr
 {

39 
ß_Ámûy_t
 
	mß_Ámûy
;

40 
	mß_d©a
[14];

43 
	slögî
 {

44 
	ml_⁄off
;

45 
	ml_lögî
;

48 
	#sockaddr_°‹age
 
__kî√l_sockaddr_°‹age


	)

56 
	smsghdr
 {

57 * 
	mmsg_«me
;

58 
	mmsg_«mñí
;

59 
iovec
 * 
	mmsg_iov
;

60 
__kî√l_size_t
 
	mmsg_iovÀn
;

61 * 
	mmsg_c⁄åﬁ
;

62 
__kî√l_size_t
 
	mmsg_c⁄åﬁÀn
;

63 
	mmsg_Êags
;

67 
	smmsghdr
 {

68 
msghdr
 
	mmsg_hdr
;

69 
	mmsg_Àn
;

78 
	scmsghdr
 {

79 
__kî√l_size_t
 
	mcmsg_Àn
;

80 
	mcmsg_Àvñ
;

81 
	mcmsg_ty≥
;

89 
	#__CMSG_NXTHDR
(
˘l
, 
Àn
, 
cmsg
Ë
	`__cmsg_nxthdr
((˘l),÷í),(cmsg))

	)

90 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`cmsg_nxthdr
((mhdr), (cmsg))

	)

92 
	#CMSG_ALIGN
(
Àn
Ë–(÷í)+()-1Ë& ~(()-1Ë)

	)

94 
	#CMSG_DATA
(
cmsg
Ë((*)((*)(cmsgË+ 
	`CMSG_ALIGN
((
cmsghdr
))))

	)

95 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
((
cmsghdr
)Ë+ CMSG_ALIGN÷í))

	)

96 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
((
cmsghdr
)Ë+ (Àn))

	)

98 
	#__CMSG_FIRSTHDR
(
˘l
,
Àn
Ë(÷íË>(
cmsghdr
) ? \

99 (
cmsghdr
 *)(
˘l
) : \

100 (
cmsghdr
 *)
NULL
)

	)

101 
	#CMSG_FIRSTHDR
(
msg
Ë
	`__CMSG_FIRSTHDR
((msg)->
msg_c⁄åﬁ
, (msg)->
msg_c⁄åﬁÀn
)

	)

102 
	#CMSG_OK
(
mhdr
, 
cmsg
Ë((cmsg)->
cmsg_Àn
 >(
cmsghdr
) && \

103 (
cmsg
)->
cmsg_Àn
 <= () \

104 ((
mhdr
)->
msg_c⁄åﬁÀn
 - \

105 ((*)(
cmsg
Ë- (*)(
mhdr
)->
msg_c⁄åﬁ
)))

	)

111 #i‡ 
deföed
(
__GNUC__
)

112 
	#__KINLINE
 
__ölöe__


	)

113 #ñi‡
deföed
(
__˝lu•lus
)

114 
	#__KINLINE
 
ölöe


	)

116 
	#__KINLINE
 

	)

133 
__KINLINE
 
cmsghdr
 * 
	$__cmsg_nxthdr
(*
__˘l
, 
__kî√l_size_t
 
__size
,

134 
cmsghdr
 *
__cmsg
)

136 
cmsghdr
 * 
__±r
;

138 
__±r
 = (
cmsghdr
*)(((*Ë
__cmsg
Ë+ 
	`CMSG_ALIGN
(__cmsg->
cmsg_Àn
));

139 i‡(()((*)(
__±r
+1Ë- (*Ë
__˘l
Ë> 
__size
)

140  (
cmsghdr
 *)0;

142  
__±r
;

143 
	}
}

145 
__KINLINE
 
cmsghdr
 * 
	$cmsg_nxthdr
 (
msghdr
 *
__msg
, 
cmsghdr
 *
__cmsg
)

147  
	`__cmsg_nxthdr
(
__msg
->
msg_c⁄åﬁ
, __msg->
msg_c⁄åﬁÀn
, 
__cmsg
);

148 
	}
}

152 
	#SCM_RIGHTS
 0x01

	)

153 
	#SCM_CREDENTIALS
 0x02

	)

154 
	#SCM_SECURITY
 0x03

	)

156 
	su¸ed
 {

157 
__u32
 
	mpid
;

158 
__u32
 
	muid
;

159 
__u32
 
	mgid
;

163 
	#AF_UNSPEC
 0

	)

164 
	#AF_UNIX
 1

	)

165 
	#AF_LOCAL
 1

	)

166 
	#AF_INET
 2

	)

167 
	#AF_AX25
 3

	)

168 
	#AF_IPX
 4

	)

169 
	#AF_APPLETALK
 5

	)

170 
	#AF_NETROM
 6

	)

171 
	#AF_BRIDGE
 7

	)

172 
	#AF_ATMPVC
 8

	)

173 
	#AF_X25
 9

	)

174 
	#AF_INET6
 10

	)

175 
	#AF_ROSE
 11

	)

176 
	#AF_DEC√t
 12

	)

177 
	#AF_NETBEUI
 13

	)

178 
	#AF_SECURITY
 14

	)

179 
	#AF_KEY
 15

	)

180 
	#AF_NETLINK
 16

	)

181 
	#AF_ROUTE
 
AF_NETLINK


	)

182 
	#AF_PACKET
 17

	)

183 
	#AF_ASH
 18

	)

184 
	#AF_ECONET
 19

	)

185 
	#AF_ATMSVC
 20

	)

186 
	#AF_SNA
 22

	)

187 
	#AF_IRDA
 23

	)

188 
	#AF_PPPOX
 24

	)

189 
	#AF_WANPIPE
 25

	)

190 
	#AF_LLC
 26

	)

191 
	#AF_TIPC
 30

	)

192 
	#AF_BLUETOOTH
 31

	)

193 
	#AF_IUCV
 32

	)

194 
	#AF_MAX
 33

	)

197 
	#PF_UNSPEC
 
AF_UNSPEC


	)

198 
	#PF_UNIX
 
AF_UNIX


	)

199 
	#PF_LOCAL
 
AF_LOCAL


	)

200 
	#PF_INET
 
AF_INET


	)

201 
	#PF_AX25
 
AF_AX25


	)

202 
	#PF_IPX
 
AF_IPX


	)

203 
	#PF_APPLETALK
 
AF_APPLETALK


	)

204 
	#PF_NETROM
 
AF_NETROM


	)

205 
	#PF_BRIDGE
 
AF_BRIDGE


	)

206 
	#PF_ATMPVC
 
AF_ATMPVC


	)

207 
	#PF_X25
 
AF_X25


	)

208 
	#PF_INET6
 
AF_INET6


	)

209 
	#PF_ROSE
 
AF_ROSE


	)

210 
	#PF_DEC√t
 
AF_DEC√t


	)

211 
	#PF_NETBEUI
 
AF_NETBEUI


	)

212 
	#PF_SECURITY
 
AF_SECURITY


	)

213 
	#PF_KEY
 
AF_KEY


	)

214 
	#PF_NETLINK
 
AF_NETLINK


	)

215 
	#PF_ROUTE
 
AF_ROUTE


	)

216 
	#PF_PACKET
 
AF_PACKET


	)

217 
	#PF_ASH
 
AF_ASH


	)

218 
	#PF_ECONET
 
AF_ECONET


	)

219 
	#PF_ATMSVC
 
AF_ATMSVC


	)

220 
	#PF_SNA
 
AF_SNA


	)

221 
	#PF_IRDA
 
AF_IRDA


	)

222 
	#PF_PPPOX
 
AF_PPPOX


	)

223 
	#PF_WANPIPE
 
AF_WANPIPE


	)

224 
	#PF_LLC
 
AF_LLC


	)

225 
	#PF_TIPC
 
AF_TIPC


	)

226 
	#PF_BLUETOOTH
 
AF_BLUETOOTH


	)

227 
	#PF_IUCV
 
AF_IUCV


	)

228 
	#PF_MAX
 
AF_MAX


	)

231 
	#SOMAXCONN
 128

	)

237 
	#MSG_OOB
 1

	)

238 
	#MSG_PEEK
 2

	)

239 
	#MSG_DONTROUTE
 4

	)

240 
	#MSG_TRYHARD
 4

	)

241 
	#MSG_CTRUNC
 8

	)

242 
	#MSG_PROBE
 0x10

	)

243 
	#MSG_TRUNC
 0x20

	)

244 
	#MSG_DONTWAIT
 0x40

	)

245 
	#MSG_EOR
 0x80

	)

246 
	#MSG_WAITALL
 0x100

	)

247 
	#MSG_FIN
 0x200

	)

248 
	#MSG_SYN
 0x400

	)

249 
	#MSG_CONFIRM
 0x800

	)

250 
	#MSG_RST
 0x1000

	)

251 
	#MSG_ERRQUEUE
 0x2000

	)

252 
	#MSG_NOSIGNAL
 0x4000

	)

253 
	#MSG_MORE
 0x8000

	)

254 
	#MSG_WAITFORONE
 0x10000

	)

256 
	#MSG_EOF
 
MSG_FIN


	)

258 #i‡
deföed
(
CONFIG_COMPAT
)

259 
	#MSG_CMSG_COMPAT
 0x80000000

	)

261 
	#MSG_CMSG_COMPAT
 0

	)

266 
	#SOL_IP
 0

	)

268 
	#SOL_TCP
 6

	)

269 
	#SOL_UDP
 17

	)

270 
	#SOL_IPV6
 41

	)

271 
	#SOL_ICMPV6
 58

	)

272 
	#SOL_SCTP
 132

	)

273 
	#SOL_RAW
 255

	)

274 
	#SOL_IPX
 256

	)

275 
	#SOL_AX25
 257

	)

276 
	#SOL_ATALK
 258

	)

277 
	#SOL_NETROM
 259

	)

278 
	#SOL_ROSE
 260

	)

279 
	#SOL_DECNET
 261

	)

280 
	#SOL_X25
 262

	)

281 
	#SOL_PACKET
 263

	)

282 
	#SOL_ATM
 264

	)

283 
	#SOL_AAL
 265

	)

284 
	#SOL_IRDA
 266

	)

285 
	#SOL_NETBEUI
 267

	)

286 
	#SOL_LLC
 268

	)

287 
	#SOL_DCCP
 269

	)

288 
	#SOL_NETLINK
 270

	)

289 
	#SOL_TIPC
 271

	)

290 
	#SOL_IUCV
 277

	)

293 
	#IPX_TYPE
 1

	)

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

5 
	~<löux/posix_ty≥s.h
>

6 
	~<asm/ty≥s.h
>

8 #i‚de‡
__KERNEL_STRICT_NAMES


10 
__u32
 
	t__kî√l_dev_t
;

12 
__kî√l_fd_£t
 
	tfd_£t
;

13 
__kî√l_dev_t
 
	tdev_t
;

14 
__kî√l_öo_t
 
	töo_t
;

15 
__kî√l_mode_t
 
	tmode_t
;

16 
__kî√l_∆ök_t
 
	t∆ök_t
;

17 
__kî√l_off_t
 
	toff_t
;

18 
__kî√l_pid_t
 
	tpid_t
;

19 
__kî√l_daddr_t
 
	tdaddr_t
;

20 
__kî√l_key_t
 
	tkey_t
;

21 
__kî√l_su£c⁄ds_t
 
	tsu£c⁄ds_t
;

22 
__kî√l_timî_t
 
	ttimî_t
;

23 
__kî√l_˛ockid_t
 
	t˛ockid_t
;

24 
__kî√l_mqd_t
 
	tmqd_t
;

26 
__kî√l_uid_t
 
	tuid_t
;

27 
__kî√l_gid_t
 
	tgid_t
;

29 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__STRICT_ANSI__
)

30 
__kî√l_loff_t
 
	tloff_t
;

37 #i‚de‡
_SIZE_T


38 
	#_SIZE_T


	)

39 
__kî√l_size_t
 
	tsize_t
;

42 #i‚de‡
_SSIZE_T


43 
	#_SSIZE_T


	)

44 
__kî√l_ssize_t
 
	tssize_t
;

47 #i‚de‡
_PTRDIFF_T


48 
	#_PTRDIFF_T


	)

49 
__kî√l_±rdiff_t
 
	t±rdiff_t
;

52 #i‚de‡
_TIME_T


53 
	#_TIME_T


	)

54 
__kî√l_time_t
 
	ttime_t
;

57 #i‚de‡
_CLOCK_T


58 
	#_CLOCK_T


	)

59 
__kî√l_˛ock_t
 
	t˛ock_t
;

62 #i‚de‡
_CADDR_T


63 
	#_CADDR_T


	)

64 
__kî√l_ˇddr_t
 
	tˇddr_t
;

68 
	tu_ch¨
;

69 
	tu_sh‹t
;

70 
	tu_öt
;

71 
	tu_l⁄g
;

74 
	tunch¨
;

75 
	tush‹t
;

76 
	tuöt
;

77 
	tul⁄g
;

79 #i‚de‡
__BIT_TYPES_DEFINED__


80 
	#__BIT_TYPES_DEFINED__


	)

82 
__u8
 
	tu_öt8_t
;

83 
__s8
 
	töt8_t
;

84 
__u16
 
	tu_öt16_t
;

85 
__s16
 
	töt16_t
;

86 
__u32
 
	tu_öt32_t
;

87 
__s32
 
	töt32_t
;

91 
__u8
 
	tuöt8_t
;

92 
__u16
 
	tuöt16_t
;

93 
__u32
 
	tuöt32_t
;

95 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__STRICT_ANSI__
)

96 
__u64
 
	tuöt64_t
;

97 
__u64
 
	tu_öt64_t
;

98 
__s64
 
	töt64_t
;

102 
	#Æig√d_u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

109 #i‚de‡
HAVE_SECTOR_T


110 
	t£˘‹_t
;

113 #i‚de‡
HAVE_BLKCNT_T


114 
	tblk˙t_t
;

121 #i‚de‡
pgoff_t


122 
	#pgoff_t
 

	)

132 #ifde‡
__CHECKER__


133 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

135 
	#__bôwi£__


	)

137 #ifde‡
__CHECK_ENDIAN__


138 
	#__bôwi£
 
__bôwi£__


	)

140 
	#__bôwi£


	)

143 
__u16
 
	t__bôwi£
 
	t__À16
;

144 
__u16
 
	t__bôwi£
 
	t__be16
;

145 
__u32
 
	t__bôwi£
 
	t__À32
;

146 
__u32
 
	t__bôwi£
 
	t__be32
;

147 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__STRICT_ANSI__
)

148 
__u64
 
	t__bôwi£
 
	t__À64
;

149 
__u64
 
	t__bôwi£
 
	t__be64
;

152 
__u16
 
	t__bôwi£
 
	t__sum16
;

153 
__u32
 
	t__bôwi£
 
	t__wsum
;

156 
	su°©
 {

157 
__kî√l_daddr_t
 
	mf_t‰ì
;

158 
__kî√l_öo_t
 
	mf_töode
;

159 
	mf_‚ame
[6];

160 
	mf_Âack
[6];

	@/usr/include/netinet/if_ether.h

19 #i‚de‡
__NETINET_IF_ETHER_H


21 
	#__NETINET_IF_ETHER_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sys/ty≥s.h
>

26 
	~<löux/if_ëhî.h
>

28 #ifde‡
__USE_BSD


61 
	~<√t/ëhî√t.h
>

62 
	~<√t/if_¨p.h
>

64 
__BEGIN_DECLS


72 
	sëhî_¨p
 {

73 
¨phdr
 
	mó_hdr
;

74 
u_öt8_t
 
	m¨p_sha
[
ETH_ALEN
];

75 
u_öt8_t
 
	m¨p_•a
[4];

76 
u_öt8_t
 
	m¨p_tha
[
ETH_ALEN
];

77 
u_öt8_t
 
	m¨p_ça
[4];

79 
	#¨p_hrd
 
ó_hdr
.
¨_hrd


	)

80 
	#¨p_¥o
 
ó_hdr
.
¨_¥o


	)

81 
	#¨p_h 
 
ó_hdr
.
¨_h 


	)

82 
	#¨p_∂n
 
ó_hdr
.
¨_∂n


	)

83 
	#¨p_›
 
ó_hdr
.
¨_›


	)

90 
	#ETHER_MAP_IP_MULTICAST
(
ùaddr
, 
íaddr
) \

94 (
íaddr
)[0] = 0x01; \

95 (
íaddr
)[1] = 0x00; \

96 (
íaddr
)[2] = 0x5e; \

97 (
íaddr
)[3] = ((
u_öt8_t
 *)
ùaddr
)[1] & 0x7f; \

98 (
íaddr
)[4] = ((
u_öt8_t
 *)
ùaddr
)[2]; \

99 (
íaddr
)[5] = ((
u_öt8_t
 *)
ùaddr
)[3]; \

100 }

	)

102 
	g__END_DECLS


	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_time•ec


	)

29 
	~<time.h
>

32 
	~<bôs/sched.h
>

34 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

37 
__BEGIN_DECLS


40 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

41 
__THROW
;

44 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

47 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

48 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

51 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

54 
	$sched_yõld
 (Ë
__THROW
;

57 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

66 #ifde‡
__USE_GNU


68 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

69 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET
 (˝u, cpu£ç)

	)

70 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR
 (˝u, cpu£ç)

	)

71 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET
 (˝u, cpu£ç)

	)

72 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO
 (˝u£ç)

	)

76 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

77 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

80 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

81 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

84 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

134 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

138 #i‡
__GNUC_PREREQ
 (2,97)

140 
	#__Êex¨r
 []

	)

142 #ifde‡
__GNUC__


143 
	#__Êex¨r
 [0]

	)

145 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

146 
	#__Êex¨r
 []

	)

149 
	#__Êex¨r
 [1]

	)

165 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

167 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

168 #ifde‡
__˝lu•lus


169 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

170 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

172 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

173 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

175 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

176 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

189 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

190 
	#__©åibuã__
(
xyz
Ë

	)

196 #i‡
__GNUC_PREREQ
 (2,96)

197 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

199 
	#__©åibuã_mÆloc__


	)

205 #i‡
__GNUC_PREREQ
 (2,96)

206 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

208 
	#__©åibuã_puª__


	)

214 #i‡
__GNUC_PREREQ
 (3,1)

215 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

216 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

218 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

219 
	#__©åibuã_noölöe__


	)

223 #i‡
__GNUC_PREREQ
 (3,2)

224 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

226 
	#__©åibuã_dïªˇãd__


	)

235 #i‡
__GNUC_PREREQ
 (2,8)

236 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

238 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

245 #i‡
__GNUC_PREREQ
 (2,97)

246 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

247 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

249 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

254 #i‡
__GNUC_PREREQ
 (3,3)

255 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

257 
	#__n⁄nuŒ
(
∑øms
)

	)

262 #i‡
__GNUC_PREREQ
 (3,4)

263 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

264 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

265 #i‡
__USE_FORTIFY_LEVEL
 > 0

266 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

269 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

271 #i‚de‡
__wur


272 
	#__wur


	)

276 #i‡
__GNUC_PREREQ
 (3,2)

277 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

279 
	#__Æways_ölöe
 
__ölöe


	)

286 #i‡!
__GNUC_PREREQ
 (2,8)

287 
	#__exãnsi⁄__


	)

291 #i‡!
__GNUC_PREREQ
 (2,92)

292 
	#__ª°ri˘


	)

298 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


299 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

301 #ifde‡
__GNUC__


302 
	#__ª°ri˘_¨r


	)

304 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

305 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

308 
	#__ª°ri˘_¨r


	)

313 
	~<bôs/w‹dsize.h
>

315 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


316 
	#__LDBL_COMPAT
 1

	)

317 #ifde‡
__REDIRECT


318 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

319 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

320 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

321 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

322 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

323 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

324 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

325 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

326 
	#__LDBL_REDIR_DECL
(
«me
) \

327 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

330 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


331 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

332 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

333 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

334 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

335 
	#__LDBL_REDIR_DECL
(
«me
)

	)

	@/usr/include/sys/syslog.h

32 #i‚de‡
_SYS_SYSLOG_H


33 
	#_SYS_SYSLOG_H
 1

	)

35 
	~<„©uªs.h
>

36 
	#__√ed___va_li°


	)

37 
	~<°d¨g.h
>

40 
	~<bôs/sy¶og-∑th.h
>

51 
	#LOG_EMERG
 0

	)

52 
	#LOG_ALERT
 1

	)

53 
	#LOG_CRIT
 2

	)

54 
	#LOG_ERR
 3

	)

55 
	#LOG_WARNING
 4

	)

56 
	#LOG_NOTICE
 5

	)

57 
	#LOG_INFO
 6

	)

58 
	#LOG_DEBUG
 7

	)

60 
	#LOG_PRIMASK
 0x07

	)

62 
	#LOG_PRI
(
p
Ë(’Ë& 
LOG_PRIMASK
)

	)

63 
	#LOG_MAKEPRI
(
Ác
, 
¥i
Ë(((ÁcË<< 3Ë| (¥i))

	)

65 #ifde‡
SYSLOG_NAMES


66 
	#INTERNAL_NOPRI
 0x10

	)

68 
	#INTERNAL_MARK
 
	`LOG_MAKEPRI
(
LOG_NFACILITIES
, 0)

	)

69 
	s_code
 {

70 *
	mc_«me
;

71 
	mc_vÆ
;

72 } 
	tCODE
;

74 
CODE
 
	g¥i‹ôy«mes
[] =

76 { "Æît", 
LOG_ALERT
 },

77 { "¸ô", 
LOG_CRIT
 },

78 { "debug", 
LOG_DEBUG
 },

79 { "emîg", 
LOG_EMERG
 },

80 { "îr", 
LOG_ERR
 },

81 { "îr‹", 
LOG_ERR
 },

82 { "öfo", 
LOG_INFO
 },

83 { "n⁄e", 
INTERNAL_NOPRI
 },

84 { "nŸi˚", 
LOG_NOTICE
 },

85 { "∑nic", 
LOG_EMERG
 },

86 { "w¨n", 
LOG_WARNING
 },

87 { "w¨nög", 
LOG_WARNING
 },

88 { 
NULL
, -1 }

93 
	#LOG_KERN
 (0<<3Ë

	)

94 
	#LOG_USER
 (1<<3Ë

	)

95 
	#LOG_MAIL
 (2<<3Ë

	)

96 
	#LOG_DAEMON
 (3<<3Ë

	)

97 
	#LOG_AUTH
 (4<<3Ë

	)

98 
	#LOG_SYSLOG
 (5<<3Ë

	)

99 
	#LOG_LPR
 (6<<3Ë

	)

100 
	#LOG_NEWS
 (7<<3Ë

	)

101 
	#LOG_UUCP
 (8<<3Ë

	)

102 
	#LOG_CRON
 (9<<3Ë

	)

103 
	#LOG_AUTHPRIV
 (10<<3Ë

	)

104 
	#LOG_FTP
 (11<<3Ë

	)

107 
	#LOG_LOCAL0
 (16<<3Ë

	)

108 
	#LOG_LOCAL1
 (17<<3Ë

	)

109 
	#LOG_LOCAL2
 (18<<3Ë

	)

110 
	#LOG_LOCAL3
 (19<<3Ë

	)

111 
	#LOG_LOCAL4
 (20<<3Ë

	)

112 
	#LOG_LOCAL5
 (21<<3Ë

	)

113 
	#LOG_LOCAL6
 (22<<3Ë

	)

114 
	#LOG_LOCAL7
 (23<<3Ë

	)

116 
	#LOG_NFACILITIES
 24

	)

117 
	#LOG_FACMASK
 0x03f8

	)

119 
	#LOG_FAC
(
p
Ë((’Ë& 
LOG_FACMASK
Ë>> 3)

	)

121 #ifde‡
SYSLOG_NAMES


122 
CODE
 
	gÁcûôy«mes
[] =

124 { "auth", 
LOG_AUTH
 },

125 { "auth¥iv", 
LOG_AUTHPRIV
 },

126 { "¸⁄", 
LOG_CRON
 },

127 { "d´m⁄", 
LOG_DAEMON
 },

128 { "·p", 
LOG_FTP
 },

129 { "kîn", 
LOG_KERN
 },

130 { "Õr", 
LOG_LPR
 },

131 { "maû", 
LOG_MAIL
 },

132 { "m¨k", 
INTERNAL_MARK
 },

133 { "√ws", 
LOG_NEWS
 },

134 { "£curôy", 
LOG_AUTH
 },

135 { "sy¶og", 
LOG_SYSLOG
 },

136 { "u£r", 
LOG_USER
 },

137 { "uu˝", 
LOG_UUCP
 },

138 { "loˇl0", 
LOG_LOCAL0
 },

139 { "loˇl1", 
LOG_LOCAL1
 },

140 { "loˇl2", 
LOG_LOCAL2
 },

141 { "loˇl3", 
LOG_LOCAL3
 },

142 { "loˇl4", 
LOG_LOCAL4
 },

143 { "loˇl5", 
LOG_LOCAL5
 },

144 { "loˇl6", 
LOG_LOCAL6
 },

145 { "loˇl7", 
LOG_LOCAL7
 },

146 { 
NULL
, -1 }

153 
	#LOG_MASK
(
¥i
Ë(1 << (¥i)Ë

	)

154 
	#LOG_UPTO
(
¥i
Ë((1 << (’ri)+1)Ë- 1Ë

	)

162 
	#LOG_PID
 0x01

	)

163 
	#LOG_CONS
 0x02

	)

164 
	#LOG_ODELAY
 0x04

	)

165 
	#LOG_NDELAY
 0x08

	)

166 
	#LOG_NOWAIT
 0x10

	)

167 
	#LOG_PERROR
 0x20

	)

169 
__BEGIN_DECLS


175 
˛o£log
 ();

181 
›ílog
 (
__c⁄°
 *
__idít
, 
__›ti⁄
, 
__Ácûôy
);

184 
	$£éogmask
 (
__mask
Ë
__THROW
;

190 
	$sy¶og
 (
__¥i
, 
__c⁄°
 *
__fmt
, ...)

191 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

193 #ifde‡
__USE_BSD


200 
	$vsy¶og
 (
__¥i
, 
__c⁄°
 *
__fmt
, 
__gnuc_va_li°
 
__≠
)

201 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

206 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


207 
	~<bôs/sy¶og.h
>

209 #ifde‡
__LDBL_COMPAT


210 
	~<bôs/sy¶og-ldbl.h
>

213 
__END_DECLS


	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

27 
	~<bôs/sigc⁄ãxt.h
>

31 
	tgªg_t
;

34 
	#NGREG
 19

	)

37 
gªg_t
 
	tgªg£t_t
[
NGREG
];

39 #ifde‡
__USE_GNU


43 
	mREG_GS
 = 0,

44 
	#REG_GS
 
REG_GS


	)

45 
	mREG_FS
,

46 
	#REG_FS
 
REG_FS


	)

47 
	mREG_ES
,

48 
	#REG_ES
 
REG_ES


	)

49 
	mREG_DS
,

50 
	#REG_DS
 
REG_DS


	)

51 
	mREG_EDI
,

52 
	#REG_EDI
 
REG_EDI


	)

53 
	mREG_ESI
,

54 
	#REG_ESI
 
REG_ESI


	)

55 
	mREG_EBP
,

56 
	#REG_EBP
 
REG_EBP


	)

57 
	mREG_ESP
,

58 
	#REG_ESP
 
REG_ESP


	)

59 
	mREG_EBX
,

60 
	#REG_EBX
 
REG_EBX


	)

61 
	mREG_EDX
,

62 
	#REG_EDX
 
REG_EDX


	)

63 
	mREG_ECX
,

64 
	#REG_ECX
 
REG_ECX


	)

65 
	mREG_EAX
,

66 
	#REG_EAX
 
REG_EAX


	)

67 
	mREG_TRAPNO
,

68 
	#REG_TRAPNO
 
REG_TRAPNO


	)

69 
	mREG_ERR
,

70 
	#REG_ERR
 
REG_ERR


	)

71 
	mREG_EIP
,

72 
	#REG_EIP
 
REG_EIP


	)

73 
	mREG_CS
,

74 
	#REG_CS
 
REG_CS


	)

75 
	mREG_EFL
,

76 
	#REG_EFL
 
REG_EFL


	)

77 
	mREG_UESP
,

78 
	#REG_UESP
 
REG_UESP


	)

79 
	mREG_SS


80 
	#REG_SS
 
REG_SS


	)

85 
	s_libc_Âªg


87 
	msignifiˇnd
[4];

88 
	mexp⁄ít
;

91 
	s_libc_Â°©e


93 
	mcw
;

94 
	msw
;

95 
	mèg
;

96 
	mùoff
;

97 
	mcs£l
;

98 
	md©aoff
;

99 
	md©a£l
;

100 
_libc_Âªg
 
	m_°
[8];

101 
	m°©us
;

105 
_libc_Â°©e
 *
	tÂªg£t_t
;

110 
gªg£t_t
 
	mgªgs
;

113 
Âªg£t_t
 
	mÂªgs
;

114 
	mﬁdmask
;

115 
	m¸2
;

116 } 
	tmc⁄ãxt_t
;

119 
	suc⁄ãxt


121 
	muc_Êags
;

122 
uc⁄ãxt
 *
	muc_lök
;

123 
°ack_t
 
	muc_°ack
;

124 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

125 
__sig£t_t
 
	muc_sigmask
;

126 
_libc_Â°©e
 
	m__Âªgs_mem
;

127 } 
	tuc⁄ãxt_t
;

	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
ªadv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
);

50 
ssize_t
 
wrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
);

52 
	g__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 
	#__√ed_wch¨_t


	)

12 
	#__√ed_wöt_t


	)

13 
	#__√ed_NULL


	)

14 
	~<°ddef.h
>

15 #i‚de‡
_WINT_T


20 
	#_WINT_T


	)

21 
	twöt_t
;

23 
	#__√ed_mb°©e_t


	)

24 
	~<wch¨.h
>

25 
	#_G_size_t
 
size_t


	)

28 
__off_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos_t
;

33 
__off64_t
 
	m__pos
;

34 
__mb°©e_t
 
	m__°©e
;

35 } 
	t_G_Âos64_t
;

36 
	#_G_ssize_t
 
__ssize_t


	)

37 
	#_G_off_t
 
__off_t


	)

38 
	#_G_off64_t
 
__off64_t


	)

39 
	#_G_pid_t
 
__pid_t


	)

40 
	#_G_uid_t
 
__uid_t


	)

41 
	#_G_wch¨_t
 
wch¨_t


	)

42 
	#_G_wöt_t
 
wöt_t


	)

43 
	#_G_°©64
 
°©64


	)

44 
	~<gc⁄v.h
>

47 
__gc⁄v_öfo
 
	m__cd
;

50 
__gc⁄v_öfo
 
	m__cd
;

51 
__gc⁄v_°ï_d©a
 
	m__d©a
;

52 } 
	m__comböed
;

53 } 
	t_G_ic⁄v_t
;

55 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

57 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

58 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

60 
	#_G_HAVE_BOOL
 1

	)

64 
	#_G_HAVE_ATEXIT
 1

	)

65 
	#_G_HAVE_SYS_CDEFS
 1

	)

66 
	#_G_HAVE_SYS_WAIT
 1

	)

67 
	#_G_NEED_STDARG_H
 1

	)

68 
	#_G_va_li°
 
__gnuc_va_li°


	)

70 
	#_G_HAVE_PRINTF_FP
 1

	)

71 
	#_G_HAVE_MMAP
 1

	)

72 
	#_G_HAVE_MREMAP
 1

	)

73 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

74 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

75 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

77 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

79 
	#_G_OPEN64
 
__›í64


	)

80 
	#_G_LSEEK64
 
__l£ek64


	)

81 
	#_G_MMAP64
 
__mm≠64


	)

82 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

85 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

87 
	#_G_BUFSIZ
 8192

	)

90 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

91 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

92 
	#_G_USING_THUNKS
 1

	)

93 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

94 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

97 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


98 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

100 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/ioctls.h

1 #i‚de‡
__ARCH_I386_IOCTLS_H__


2 
	#__ARCH_I386_IOCTLS_H__


	)

4 
	~<asm/io˘l.h
>

8 
	#TCGETS
 0x5401

	)

9 
	#TCSETS
 0x5402

	)

10 
	#TCSETSW
 0x5403

	)

11 
	#TCSETSF
 0x5404

	)

12 
	#TCGETA
 0x5405

	)

13 
	#TCSETA
 0x5406

	)

14 
	#TCSETAW
 0x5407

	)

15 
	#TCSETAF
 0x5408

	)

16 
	#TCSBRK
 0x5409

	)

17 
	#TCXONC
 0x540A

	)

18 
	#TCFLSH
 0x540B

	)

19 
	#TIOCEXCL
 0x540C

	)

20 
	#TIOCNXCL
 0x540D

	)

21 
	#TIOCSCTTY
 0x540E

	)

22 
	#TIOCGPGRP
 0x540F

	)

23 
	#TIOCSPGRP
 0x5410

	)

24 
	#TIOCOUTQ
 0x5411

	)

25 
	#TIOCSTI
 0x5412

	)

26 
	#TIOCGWINSZ
 0x5413

	)

27 
	#TIOCSWINSZ
 0x5414

	)

28 
	#TIOCMGET
 0x5415

	)

29 
	#TIOCMBIS
 0x5416

	)

30 
	#TIOCMBIC
 0x5417

	)

31 
	#TIOCMSET
 0x5418

	)

32 
	#TIOCGSOFTCAR
 0x5419

	)

33 
	#TIOCSSOFTCAR
 0x541A

	)

34 
	#FIONREAD
 0x541B

	)

35 
	#TIOCINQ
 
FIONREAD


	)

36 
	#TIOCLINUX
 0x541C

	)

37 
	#TIOCCONS
 0x541D

	)

38 
	#TIOCGSERIAL
 0x541E

	)

39 
	#TIOCSSERIAL
 0x541F

	)

40 
	#TIOCPKT
 0x5420

	)

41 
	#FIONBIO
 0x5421

	)

42 
	#TIOCNOTTY
 0x5422

	)

43 
	#TIOCSETD
 0x5423

	)

44 
	#TIOCGETD
 0x5424

	)

45 
	#TCSBRKP
 0x5425

	)

47 
	#TIOCSBRK
 0x5427

	)

48 
	#TIOCCBRK
 0x5428

	)

49 
	#TIOCGSID
 0x5429

	)

50 
	#TIOCGPTN
 
	`_IOR
('T',0x30, Ë

	)

51 
	#TIOCSPTLCK
 
	`_IOW
('T',0x31, Ë

	)

53 
	#TCGETX
 0x5432

	)

54 
	#TCSETX
 0x5433

	)

55 
	#TCSETXF
 0x5434

	)

56 
	#TCSETXW
 0x5435

	)

58 
	#FIONCLEX
 0x5450

	)

59 
	#FIOCLEX
 0x5451

	)

60 
	#FIOASYNC
 0x5452

	)

61 
	#TIOCSERCONFIG
 0x5453

	)

62 
	#TIOCSERGWILD
 0x5454

	)

63 
	#TIOCSERSWILD
 0x5455

	)

64 
	#TIOCGLCKTRMIOS
 0x5456

	)

65 
	#TIOCSLCKTRMIOS
 0x5457

	)

66 
	#TIOCSERGSTRUCT
 0x5458

	)

67 
	#TIOCSERGETLSR
 0x5459

	)

68 
	#TIOCSERGETMULTI
 0x545A

	)

69 
	#TIOCSERSETMULTI
 0x545B

	)

71 
	#TIOCMIWAIT
 0x545C

	)

72 
	#TIOCGICOUNT
 0x545D

	)

73 
	#TIOCGHAYESESP
 0x545E

	)

74 
	#TIOCSHAYESESP
 0x545F

	)

75 
	#FIOQSIZE
 0x5460

	)

78 
	#TIOCPKT_DATA
 0

	)

79 
	#TIOCPKT_FLUSHREAD
 1

	)

80 
	#TIOCPKT_FLUSHWRITE
 2

	)

81 
	#TIOCPKT_STOP
 4

	)

82 
	#TIOCPKT_START
 8

	)

83 
	#TIOCPKT_NOSTOP
 16

	)

84 
	#TIOCPKT_DOSTOP
 32

	)

86 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm/sigcontext.h

1 #i‚de‡
_ASMi386_SIGCONTEXT_H


2 
	#_ASMi386_SIGCONTEXT_H


	)

19 
	s_Âªg
 {

20 
	msignifiˇnd
[4];

21 
	mexp⁄ít
;

24 
	s_Âxªg
 {

25 
	msignifiˇnd
[4];

26 
	mexp⁄ít
;

27 
	m∑ddög
[3];

30 
	s_xmmªg
 {

31 
	mñemít
[4];

34 
	s_Â°©e
 {

36 
	mcw
;

37 
	msw
;

38 
	mèg
;

39 
	mùoff
;

40 
	mcs£l
;

41 
	md©aoff
;

42 
	md©a£l
;

43 
_Âªg
 
	m_°
[8];

44 
	m°©us
;

45 
	mmagic
;

48 
	m_fx§_ív
[6];

49 
	mmxc§
;

50 
	mª£rved
;

51 
_Âxªg
 
	m_fx§_°
[8];

52 
_xmmªg
 
	m_xmm
[8];

53 
	m∑ddög
[56];

56 
	#X86_FXSR_MAGIC
 0x0000

	)

58 
	ssigc⁄ãxt
 {

59 
	mgs
, 
	m__gsh
;

60 
	mfs
, 
	m__fsh
;

61 
	mes
, 
	m__esh
;

62 
	mds
, 
	m__dsh
;

63 
	medi
;

64 
	mesi
;

65 
	mebp
;

66 
	me•
;

67 
	mebx
;

68 
	medx
;

69 
	mecx
;

70 
	móx
;

71 
	må≠no
;

72 
	mîr
;

73 
	meù
;

74 
	mcs
, 
	m__csh
;

75 
	meÊags
;

76 
	me•_©_sig«l
;

77 
	mss
, 
	m__ssh
;

78 
_Â°©e
 * 
	mÂ°©e
;

79 
	mﬁdmask
;

80 
	m¸2
;

	@/usr/include/asm/socket.h

1 #i‚de‡
_ASM_SOCKET_H


2 
	#_ASM_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

26 
	#SO_PASSCRED
 16

	)

27 
	#SO_PEERCRED
 17

	)

28 
	#SO_RCVLOWAT
 18

	)

29 
	#SO_SNDLOWAT
 19

	)

30 
	#SO_RCVTIMEO
 20

	)

31 
	#SO_SNDTIMEO
 21

	)

34 
	#SO_SECURITY_AUTHENTICATION
 22

	)

35 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

36 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

38 
	#SO_BINDTODEVICE
 25

	)

41 
	#SO_ATTACH_FILTER
 26

	)

42 
	#SO_DETACH_FILTER
 27

	)

44 
	#SO_PEERNAME
 28

	)

45 
	#SO_TIMESTAMP
 29

	)

46 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

48 
	#SO_ACCEPTCONN
 30

	)

50 
	#SO_PEERSEC
 31

	)

51 
	#SO_PASSSEC
 34

	)

	@/usr/include/asm/types.h

1 #i‚de‡
_I386_TYPES_H


2 
	#_I386_TYPES_H


	)

4 #i‚de‡
__ASSEMBLY__


6 
	tumode_t
;

13 
__sig√d__
 
	t__s8
;

14 
	t__u8
;

16 
__sig√d__
 
	t__s16
;

17 
	t__u16
;

19 
__sig√d__
 
	t__s32
;

20 
	t__u32
;

22 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__STRICT_ANSI__
)

23 
__sig√d__
 
	t__s64
;

24 
	t__u64
;

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

36 
	~<löux/limôs.h
>

39 #ifde‡
__undef_NR_OPEN


40 #unde‡
NR_OPEN


41 #unde‡
__undef_NR_OPEN


44 #ifde‡
__undef_LINK_MAX


45 #unde‡
LINK_MAX


46 #unde‡
__undef_LINK_MAX


49 #ifde‡
__undef_OPEN_MAX


50 #unde‡
OPEN_MAX


51 #unde‡
__undef_OPEN_MAX


55 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

57 
	#PTHREAD_KEYS_MAX
 1024

	)

60 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

62 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

65 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

67 #unde‡
PTHREAD_THREADS_MAX


71 
	#AIO_PRIO_DELTA_MAX
 20

	)

74 
	#PTHREAD_STACK_MIN
 16384

	)

77 
	#DELAYTIMER_MAX
 2147483647

	)

80 
	#TTY_NAME_MAX
 32

	)

83 
	#LOGIN_NAME_MAX
 256

	)

86 
	#HOST_NAME_MAX
 64

	)

89 
	#MQ_PRIO_MAX
 32768

	)

	@/usr/include/bits/sched.h

21 #i‚de‡
__√ed_sched∑øm


23 #i‚de‡
_SCHED_H


29 
	#SCHED_OTHER
 0

	)

30 
	#SCHED_FIFO
 1

	)

31 
	#SCHED_RR
 2

	)

32 #ifde‡
__USE_GNU


33 
	#SCHED_BATCH
 3

	)

36 #ifde‡
__USE_MISC


38 
	#CSIGNAL
 0x000000f‡

	)

39 
	#CLONE_VM
 0x00000100

	)

40 
	#CLONE_FS
 0x00000200

	)

41 
	#CLONE_FILES
 0x00000400

	)

42 
	#CLONE_SIGHAND
 0x00000800

	)

43 
	#CLONE_PTRACE
 0x00002000

	)

44 
	#CLONE_VFORK
 0x00004000

	)

46 
	#CLONE_PARENT
 0x00008000

	)

48 
	#CLONE_THREAD
 0x00010000

	)

49 
	#CLONE_NEWNS
 0x00020000

	)

50 
	#CLONE_SYSVSEM
 0x00040000

	)

51 
	#CLONE_SETTLS
 0x00080000

	)

52 
	#CLONE_PARENT_SETTID
 0x00100000

	)

54 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

56 
	#CLONE_DETACHED
 0x00400000

	)

57 
	#CLONE_UNTRACED
 0x00800000

	)

59 
	#CLONE_CHILD_SETTID
 0x01000000

	)

61 
	#CLONE_STOPPED
 0x02000000

	)

65 
	ssched_∑øm


67 
	m__sched_¥i‹ôy
;

70 
	g__BEGIN_DECLS


72 #ifde‡
__USE_MISC


74 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

75 
__Êags
, *
__¨g
, ...Ë
__THROW
;

78 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

81 
__END_DECLS


85 #i‡!
deföed
 
__deföed_sched∑øm
 \

86 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

87 
	#__deföed_sched∑øm
 1

	)

89 
	s__sched_∑øm


91 
__sched_¥i‹ôy
;

93 #unde‡
__√ed_sched∑øm


97 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


98 
	#__˝u_£t_t_deföed


	)

100 
	#__CPU_SETSIZE
 1024

	)

101 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

104 
	t__˝u_mask
;

107 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

108 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

113 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

114 } 
	t˝u_£t_t
;

117 
	#__CPU_ZERO
(
˝u£ç
) \

119 
__i
; \

120 
˝u_£t_t
 *
__¨r
 = (
˝u£ç
); \

121 
__i
 = 0; __ò<  (
˝u_£t_t
Ë/  (
__˝u_mask
); ++__i) \

122 
__¨r
->
__bôs
[
__i
] = 0; \

123 
	}
} 0)

	)

124 
	#__CPU_SET
(
˝u
, 
˝u£ç
) \

125 ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] |
	`__CPUMASK
 (˝u))

	)

126 
	#__CPU_CLR
(
˝u
, 
˝u£ç
) \

127 ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] &~
	`__CPUMASK
 (˝u))

	)

128 
	#__CPU_ISSET
(
˝u
, 
˝u£ç
) \

129 (((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] & 
	`__CPUMASK
 (˝u)Ë!0)

	)

	@/usr/include/bits/sockaddr.h

24 #i‚de‡
_BITS_SOCKADDR_H


25 
	#_BITS_SOCKADDR_H
 1

	)

29 
	tß_Ámûy_t
;

35 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

36 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

38 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

25 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

28 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


29 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

30 #ñi‡
	t_IO_MTSAFE_IO


31 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


34 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

35 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

36 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

38 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

41 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

42 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

43 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

44 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

45 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

46 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

48 #i‡
	tdeföed
 
	t_LIBC
 && !deföed 
	tNOT_IN_libc


49 
	t_IO_acquúe_lock
(
	t_Â
) \

50 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

51 
	`_IO_Êockfûe
 (
_Â
)

	)

53 
	#_IO_ªÀa£_lock
(
_Â
) \

54 
	`_IO_fu∆ockfûe
 (
_Â
); \

55 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/syslog-ldbl.h

20 #i‚de‡
_SYS_SYSLOG_H


24 
	$__LDBL_REDIR_DECL
 (
sy¶og
)

26 #ifde‡
__USE_BSD


27 
	$__LDBL_REDIR_DECL
 (
vsy¶og
)

30 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


31 
	$__LDBL_REDIR_DECL
 (
__sy¶og_chk
)

33 #ifde‡
__USE_BSD


34 
	$__LDBL_REDIR_DECL
 (
__vsy¶og_chk
)

	@/usr/include/bits/syslog-path.h

20 #i‚de‡
_SYS_SYSLOG_H


24 #i‚de‡
_BITS_SYSLOG_PATH_H


25 
	#_BITS_SYSLOG_PATH_H
 1

	)

27 
	#_PATH_LOG
 "/dev/log"

	)

	@/usr/include/bits/syslog.h

20 #i‚de‡
_SYS_SYSLOG_H


25 
	$__sy¶og_chk
 (
__¥i
, 
__Êag
, 
__c⁄°
 *
__fmt
, ...)

26 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

28 
	#sy¶og
(
¥i
, ...) \

29 
	`__sy¶og_chk
 (
¥i
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

32 #ifde‡
__USE_BSD


33 
	$__vsy¶og_chk
 (
__¥i
, 
__Êag
, 
__c⁄°
 *
__fmt
,

34 
__gnuc_va_li°
 
__≠
)

35 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

37 
	#vsy¶og
(
¥i
, 
fmt
, 
≠
) \

38 
	`__vsy¶og_chk
 (
¥i
, 
__USE_FORTIFY_LEVEL
 - 1, 
fmt
, 
≠
)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647»- 1l)

	)

24 
	#__WCHAR_MAX
 (2147483647l)

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_GNU


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/linux/if_ether.h

21 #i‚de‡
_LINUX_IF_ETHER_H


22 
	#_LINUX_IF_ETHER_H


	)

24 
	~<löux/ty≥s.h
>

31 
	#ETH_ALEN
 6

	)

32 
	#ETH_HLEN
 14

	)

33 
	#ETH_ZLEN
 60

	)

34 
	#ETH_DATA_LEN
 1500

	)

35 
	#ETH_FRAME_LEN
 1514

	)

36 
	#ETH_FCS_LEN
 4

	)

42 
	#ETH_P_LOOP
 0x0060

	)

43 
	#ETH_P_PUP
 0x0200

	)

44 
	#ETH_P_PUPAT
 0x0201

	)

45 
	#ETH_P_IP
 0x0800

	)

46 
	#ETH_P_X25
 0x0805

	)

47 
	#ETH_P_ARP
 0x0806

	)

48 
	#ETH_P_BPQ
 0x08FF

	)

49 
	#ETH_P_IEEEPUP
 0x0a00

	)

50 
	#ETH_P_IEEEPUPAT
 0x0a01

	)

51 
	#ETH_P_DEC
 0x6000

	)

52 
	#ETH_P_DNA_DL
 0x6001

	)

53 
	#ETH_P_DNA_RC
 0x6002

	)

54 
	#ETH_P_DNA_RT
 0x6003

	)

55 
	#ETH_P_LAT
 0x6004

	)

56 
	#ETH_P_DIAG
 0x6005

	)

57 
	#ETH_P_CUST
 0x6006

	)

58 
	#ETH_P_SCA
 0x6007

	)

59 
	#ETH_P_RARP
 0x8035

	)

60 
	#ETH_P_ATALK
 0x809B

	)

61 
	#ETH_P_AARP
 0x80F3

	)

62 
	#ETH_P_8021Q
 0x8100

	)

63 
	#ETH_P_IPX
 0x8137

	)

64 
	#ETH_P_IPV6
 0x86DD

	)

65 
	#ETH_P_SLOW
 0x8809

	)

66 
	#ETH_P_WCCP
 0x883E

	)

68 
	#ETH_P_PPP_DISC
 0x8863

	)

69 
	#ETH_P_PPP_SES
 0x8864

	)

70 
	#ETH_P_MPLS_UC
 0x8847

	)

71 
	#ETH_P_MPLS_MC
 0x8848

	)

72 
	#ETH_P_ATMMPOA
 0x884¯

	)

73 
	#ETH_P_ATMFATE
 0x8884

	)

76 
	#ETH_P_AOE
 0x88A2

	)

77 
	#ETH_P_TIPC
 0x88CA

	)

78 
	#ETH_P_FCOE
 0x8906

	)

79 
	#ETH_P_FIP
 0x8914

	)

85 
	#ETH_P_802_3
 0x0001

	)

86 
	#ETH_P_AX25
 0x0002

	)

87 
	#ETH_P_ALL
 0x0003

	)

88 
	#ETH_P_802_2
 0x0004

	)

89 
	#ETH_P_SNAP
 0x0005

	)

90 
	#ETH_P_DDCMP
 0x0006

	)

91 
	#ETH_P_WAN_PPP
 0x0007

	)

92 
	#ETH_P_PPP_MP
 0x0008

	)

93 
	#ETH_P_LOCALTALK
 0x0009

	)

94 
	#ETH_P_PPPTALK
 0x0010

	)

95 
	#ETH_P_TR_802_2
 0x0011

	)

96 
	#ETH_P_MOBITEX
 0x0015

	)

97 
	#ETH_P_CONTROL
 0x0016

	)

98 
	#ETH_P_IRDA
 0x0017

	)

99 
	#ETH_P_ECONET
 0x0018

	)

100 
	#ETH_P_HDLC
 0x0019

	)

101 
	#ETH_P_ARCNET
 0x001A

	)

107 
	sëhhdr
 {

108 
	mh_de°
[
ETH_ALEN
];

109 
	mh_sour˚
[
ETH_ALEN
];

110 
__be16
 
	mh_¥Ÿo
;

111 } 
__©åibuã__
((
∑cked
));

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__NFDBITS


22 
	#__NFDBITS
 (8 * ())

	)

24 #unde‡
__FD_SETSIZE


25 
	#__FD_SETSIZE
 1024

	)

27 #unde‡
__FDSET_LONGS


28 
	#__FDSET_LONGS
 (
__FD_SETSIZE
/
__NFDBITS
)

	)

30 #unde‡
__FDELT


31 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

33 #unde‡
__FDMASK


34 
	#__FDMASK
(
d
Ë(1UL << ((dË% 
__NFDBITS
))

	)

37 
	mfds_bôs
 [
__FDSET_LONGS
];

38 } 
	t__kî√l_fd_£t
;

41 (*
	t__kî√l_sigh™dÀr_t
)();

44 
	t__kî√l_key_t
;

45 
	t__kî√l_mqd_t
;

47 
	~<asm/posix_ty≥s.h
>

	@/usr/include/linux/sockios.h

18 #i‚de‡
_LINUX_SOCKIOS_H


19 
	#_LINUX_SOCKIOS_H


	)

21 
	~<asm/sockios.h
>

24 
	#SIOCINQ
 
FIONREAD


	)

25 
	#SIOCOUTQ
 
TIOCOUTQ


	)

28 
	#SIOCADDRT
 0x890B

	)

29 
	#SIOCDELRT
 0x890C

	)

30 
	#SIOCRTMSG
 0x890D

	)

33 
	#SIOCGIFNAME
 0x8910

	)

34 
	#SIOCSIFLINK
 0x8911

	)

35 
	#SIOCGIFCONF
 0x8912

	)

36 
	#SIOCGIFFLAGS
 0x8913

	)

37 
	#SIOCSIFFLAGS
 0x8914

	)

38 
	#SIOCGIFADDR
 0x8915

	)

39 
	#SIOCSIFADDR
 0x8916

	)

40 
	#SIOCGIFDSTADDR
 0x8917

	)

41 
	#SIOCSIFDSTADDR
 0x8918

	)

42 
	#SIOCGIFBRDADDR
 0x8919

	)

43 
	#SIOCSIFBRDADDR
 0x891®

	)

44 
	#SIOCGIFNETMASK
 0x891b

	)

45 
	#SIOCSIFNETMASK
 0x891¯

	)

46 
	#SIOCGIFMETRIC
 0x891d

	)

47 
	#SIOCSIFMETRIC
 0x891ê

	)

48 
	#SIOCGIFMEM
 0x891‡

	)

49 
	#SIOCSIFMEM
 0x8920

	)

50 
	#SIOCGIFMTU
 0x8921

	)

51 
	#SIOCSIFMTU
 0x8922

	)

52 
	#SIOCSIFNAME
 0x8923

	)

53 
	#SIOCSIFHWADDR
 0x8924

	)

54 
	#SIOCGIFENCAP
 0x8925

	)

55 
	#SIOCSIFENCAP
 0x8926

	)

56 
	#SIOCGIFHWADDR
 0x8927

	)

57 
	#SIOCGIFSLAVE
 0x8929

	)

58 
	#SIOCSIFSLAVE
 0x8930

	)

59 
	#SIOCADDMULTI
 0x8931

	)

60 
	#SIOCDELMULTI
 0x8932

	)

61 
	#SIOCGIFINDEX
 0x8933

	)

62 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

63 
	#SIOCSIFPFLAGS
 0x8934

	)

64 
	#SIOCGIFPFLAGS
 0x8935

	)

65 
	#SIOCDIFADDR
 0x8936

	)

66 
	#SIOCSIFHWBROADCAST
 0x8937

	)

67 
	#SIOCGIFCOUNT
 0x8938

	)

69 
	#SIOCGIFBR
 0x8940

	)

70 
	#SIOCSIFBR
 0x8941

	)

72 
	#SIOCGIFTXQLEN
 0x8942

	)

73 
	#SIOCSIFTXQLEN
 0x8943

	)

75 
	#SIOCGIFDIVERT
 0x8944

	)

76 
	#SIOCSIFDIVERT
 0x8945

	)

78 
	#SIOCETHTOOL
 0x8946

	)

80 
	#SIOCGMIIPHY
 0x8947

	)

81 
	#SIOCGMIIREG
 0x8948

	)

82 
	#SIOCSMIIREG
 0x8949

	)

84 
	#SIOCWANDEV
 0x894A

	)

88 
	#SIOCDARP
 0x8953

	)

89 
	#SIOCGARP
 0x8954

	)

90 
	#SIOCSARP
 0x8955

	)

93 
	#SIOCDRARP
 0x8960

	)

94 
	#SIOCGRARP
 0x8961

	)

95 
	#SIOCSRARP
 0x8962

	)

99 
	#SIOCGIFMAP
 0x8970

	)

100 
	#SIOCSIFMAP
 0x8971

	)

104 
	#SIOCADDDLCI
 0x8980

	)

105 
	#SIOCDELDLCI
 0x8981

	)

107 
	#SIOCGIFVLAN
 0x8982

	)

108 
	#SIOCSIFVLAN
 0x8983

	)

112 
	#SIOCBONDENSLAVE
 0x8990

	)

113 
	#SIOCBONDRELEASE
 0x8991

	)

114 
	#SIOCBONDSETHWADDR
 0x8992

	)

115 
	#SIOCBONDSLAVEINFOQUERY
 0x8993

	)

116 
	#SIOCBONDINFOQUERY
 0x8994

	)

117 
	#SIOCBONDCHANGEACTIVE
 0x8995

	)

120 
	#SIOCBRADDBR
 0x89a0

	)

121 
	#SIOCBRDELBR
 0x89a1

	)

122 
	#SIOCBRADDIF
 0x89a2

	)

123 
	#SIOCBRDELIF
 0x89a3

	)

136 
	#SIOCDEVPRIVATE
 0x89F0

	)

142 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/linux/uio.h

1 #i‚de‡
__LINUX_UIO_H


2 
	#__LINUX_UIO_H


	)

4 
	~<löux/ty≥s.h
>

19 
	siovec


21 *
	miov_ba£
;

22 
__kî√l_size_t
 
	miov_Àn
;

30 
	#UIO_FASTIOV
 8

	)

31 
	#UIO_MAXIOV
 1024

	)

33 
	#UIO_MAXIOV
 16

	)

45 
__ölöe__
 
size_t
 
	$iov_Àngth
(c⁄° 
iovec
 *
iov
, 
ƒ_£gs
)

47 
£g
;

48 
size_t
 
ªt
 = 0;

50 
£g
 = 0; seg < 
ƒ_£gs
; seg++)

51 
ªt
 +
iov
[
£g
].
iov_Àn
;

52  
ªt
;

53 
	}
}

55 
iov_sh‹ãn
(
iovec
 *
iov
, 
ƒ_£gs
, 
size_t
 
to
);

	@/usr/include/net/ethernet.h

22 #i‚de‡
__NET_ETHERNET_H


23 
	#__NET_ETHERNET_H
 1

	)

25 
	~<sys/cdefs.h
>

26 
	~<sys/ty≥s.h
>

27 
	~<löux/if_ëhî.h
>

29 
__BEGIN_DECLS


33 
	sëhî_addr


35 
u_öt8_t
 
	mëhî_addr_o˘ë
[
ETH_ALEN
];

36 } 
__©åibuã__
 ((
__∑cked__
));

39 
	sëhî_hódî


41 
u_öt8_t
 
	mëhî_dho°
[
ETH_ALEN
];

42 
u_öt8_t
 
	mëhî_sho°
[
ETH_ALEN
];

43 
u_öt16_t
 
	mëhî_ty≥
;

44 } 
__©åibuã__
 ((
__∑cked__
));

47 
	#ETHERTYPE_PUP
 0x0200

	)

48 
	#ETHERTYPE_IP
 0x0800

	)

49 
	#ETHERTYPE_ARP
 0x0806

	)

50 
	#ETHERTYPE_REVARP
 0x8035

	)

52 
	#ETHER_ADDR_LEN
 
ETH_ALEN


	)

53 
	#ETHER_TYPE_LEN
 2

	)

54 
	#ETHER_CRC_LEN
 4

	)

55 
	#ETHER_HDR_LEN
 
ETH_HLEN


	)

56 
	#ETHER_MIN_LEN
 (
ETH_ZLEN
 + 
ETHER_CRC_LEN
Ë

	)

57 
	#ETHER_MAX_LEN
 (
ETH_FRAME_LEN
 + 
ETHER_CRC_LEN
Ë

	)

60 
	#ETHER_IS_VALID_LEN
(
foo
) \

61 ((
foo
Ë>
ETHER_MIN_LEN
 && (fooË<
ETHER_MAX_LEN
)

	)

68 
	#ETHERTYPE_TRAIL
 0x1000

	)

69 
	#ETHERTYPE_NTRAILER
 16

	)

71 
	#ETHERMTU
 
ETH_DATA_LEN


	)

72 
	#ETHERMIN
 (
ETHER_MIN_LEN
 - 
ETHER_HDR_LEN
 - 
ETHER_CRC_LEN
)

	)

74 
	g__END_DECLS


	@/usr/include/net/if_arp.h

23 #i‚de‡
_NET_IF_ARP_H


25 
	#_NET_IF_ARP_H
 1

	)

26 
	~<sys/cdefs.h
>

28 
	~<sys/ty≥s.h
>

29 
	~<sys/sockë.h
>

31 
	g__BEGIN_DECLS


34 
	#MAX_ADDR_LEN
 7

	)

40 
	#ARPOP_REQUEST
 1

	)

41 
	#ARPOP_REPLY
 2

	)

42 
	#ARPOP_RREQUEST
 3

	)

43 
	#ARPOP_RREPLY
 4

	)

44 
	#ARPOP_InREQUEST
 8

	)

45 
	#ARPOP_InREPLY
 9

	)

46 
	#ARPOP_NAK
 10

	)

55 
	s¨phdr


57 
	m¨_hrd
;

58 
	m¨_¥o
;

59 
	m¨_h 
;

60 
	m¨_∂n
;

61 
	m¨_›
;

65 
	m__¨_sha
[
ETH_ALEN
];

66 
	m__¨_sù
[4];

67 
	m__¨_tha
[
ETH_ALEN
];

68 
	m__¨_tù
[4];

74 
	#ARPHRD_NETROM
 0

	)

75 
	#ARPHRD_ETHER
 1

	)

76 
	#ARPHRD_EETHER
 2

	)

77 
	#ARPHRD_AX25
 3

	)

78 
	#ARPHRD_PRONET
 4

	)

79 
	#ARPHRD_CHAOS
 5

	)

80 
	#ARPHRD_IEEE802
 6

	)

81 
	#ARPHRD_ARCNET
 7

	)

82 
	#ARPHRD_APPLETLK
 8

	)

83 
	#ARPHRD_DLCI
 15

	)

84 
	#ARPHRD_ATM
 19

	)

85 
	#ARPHRD_METRICOM
 23

	)

86 
	#ARPHRD_IEEE1394
 24

	)

87 
	#ARPHRD_EUI64
 27

	)

88 
	#ARPHRD_INFINIBAND
 32

	)

91 
	#ARPHRD_SLIP
 256

	)

92 
	#ARPHRD_CSLIP
 257

	)

93 
	#ARPHRD_SLIP6
 258

	)

94 
	#ARPHRD_CSLIP6
 259

	)

95 
	#ARPHRD_RSRVD
 260

	)

96 
	#ARPHRD_ADAPT
 264

	)

97 
	#ARPHRD_ROSE
 270

	)

98 
	#ARPHRD_X25
 271

	)

99 
	#ARPHRD_HWX25
 272

	)

100 
	#ARPHRD_PPP
 512

	)

101 
	#ARPHRD_CISCO
 513

	)

102 
	#ARPHRD_HDLC
 
ARPHRD_CISCO


	)

103 
	#ARPHRD_LAPB
 516

	)

104 
	#ARPHRD_DDCMP
 517

	)

105 
	#ARPHRD_RAWHDLC
 518

	)

107 
	#ARPHRD_TUNNEL
 768

	)

108 
	#ARPHRD_TUNNEL6
 769

	)

109 
	#ARPHRD_FRAD
 770

	)

110 
	#ARPHRD_SKIP
 771

	)

111 
	#ARPHRD_LOOPBACK
 772

	)

112 
	#ARPHRD_LOCALTLK
 773

	)

113 
	#ARPHRD_FDDI
 774

	)

114 
	#ARPHRD_BIF
 775

	)

115 
	#ARPHRD_SIT
 776

	)

116 
	#ARPHRD_IPDDP
 777

	)

117 
	#ARPHRD_IPGRE
 778

	)

118 
	#ARPHRD_PIMREG
 779

	)

119 
	#ARPHRD_HIPPI
 780

	)

120 
	#ARPHRD_ASH
 781

	)

121 
	#ARPHRD_ECONET
 782

	)

122 
	#ARPHRD_IRDA
 783

	)

123 
	#ARPHRD_FCPP
 784

	)

124 
	#ARPHRD_FCAL
 785

	)

125 
	#ARPHRD_FCPL
 786

	)

126 
	#ARPHRD_FCFABRIC
 787

	)

127 
	#ARPHRD_IEEE802_TR
 800

	)

128 
	#ARPHRD_IEEE80211
 801

	)

129 
	#ARPHRD_IEEE80211_PRISM
 802

	)

130 
	#ARPHRD_IEEE80211_RADIOTAP
 803

	)

132 
	#ARPHRD_VOID
 0xFFFF

	)

133 
	#ARPHRD_NONE
 0xFFFE

	)

137 
	s¨¥eq


139 
sockaddr
 
	m¨p_∑
;

140 
sockaddr
 
	m¨p_ha
;

141 
	m¨p_Êags
;

142 
sockaddr
 
	m¨p_√tmask
;

143 
	m¨p_dev
[16];

146 
	s¨¥eq_ﬁd


148 
sockaddr
 
	m¨p_∑
;

149 
sockaddr
 
	m¨p_ha
;

150 
	m¨p_Êags
;

151 
sockaddr
 
	m¨p_√tmask
;

155 
	#ATF_COM
 0x02

	)

156 
	#ATF_PERM
 0x04

	)

157 
	#ATF_PUBL
 0x08

	)

158 
	#ATF_USETRAILERS
 0x10

	)

159 
	#ATF_NETMASK
 0x20

	)

161 
	#ATF_DONTPUB
 0x40

	)

162 
	#ATF_MAGIC
 0x80

	)

166 
	#ARPD_UPDATE
 0x01

	)

167 
	#ARPD_LOOKUP
 0x02

	)

168 
	#ARPD_FLUSH
 0x03

	)

170 
	s¨pd_ªque°


172 
	mªq
;

173 
u_öt32_t
 
	mù
;

174 
	mdev
;

175 
	m°amp
;

176 
	mupd©ed
;

177 
	mha
[
MAX_ADDR_LEN
];

180 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

20 #i‚de‡
_SYS_SYSMACROS_H


21 
	#_SYS_SYSMACROS_H
 1

	)

23 
	~<„©uªs.h
>

28 #ifde‡
__GLIBC_HAVE_LONG_LONG


29 
__exãnsi⁄__


30 
__ölöe
 
	$gnu_dev_maj‹
 (
__dev
)

31 
__THROW
;

32 
__exãnsi⁄__


33 
__ölöe
 
	$gnu_dev_mö‹
 (
__dev
)

34 
__THROW
;

35 
__exãnsi⁄__


36 
__ölöe
 
	$gnu_dev_makedev
 (
__maj‹
,

37 
__mö‹
)

38 
__THROW
;

40 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

41 
__exãnsi⁄__
 
__ölöe
 

42 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

44  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

45 
	}
}

47 
__exãnsi⁄__
 
__ölöe
 

48 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

50  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

51 
	}
}

53 
__exãnsi⁄__
 
__ölöe
 

54 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

56  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

57 | (((Ë(
__mö‹
 & ~0xff)) << 12)

58 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

59 
	}
}

64 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

65 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

66 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/asm/errno.h

1 #i‚de‡
_I386_ERRNO_H


2 
	#_I386_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/asm/posix_types.h

1 #i‚de‡
__ARCH_I386_POSIX_TYPES_H


2 
	#__ARCH_I386_POSIX_TYPES_H


	)

10 
	t__kî√l_öo_t
;

11 
	t__kî√l_mode_t
;

12 
	t__kî√l_∆ök_t
;

13 
	t__kî√l_off_t
;

14 
	t__kî√l_pid_t
;

15 
	t__kî√l_ùc_pid_t
;

16 
	t__kî√l_uid_t
;

17 
	t__kî√l_gid_t
;

18 
	t__kî√l_size_t
;

19 
	t__kî√l_ssize_t
;

20 
	t__kî√l_±rdiff_t
;

21 
	t__kî√l_time_t
;

22 
	t__kî√l_su£c⁄ds_t
;

23 
	t__kî√l_˛ock_t
;

24 
	t__kî√l_timî_t
;

25 
	t__kî√l_˛ockid_t
;

26 
	t__kî√l_daddr_t
;

27 * 
	t__kî√l_ˇddr_t
;

28 
	t__kî√l_uid16_t
;

29 
	t__kî√l_gid16_t
;

30 
	t__kî√l_uid32_t
;

31 
	t__kî√l_gid32_t
;

33 
	t__kî√l_ﬁd_uid_t
;

34 
	t__kî√l_ﬁd_gid_t
;

35 
	t__kî√l_ﬁd_dev_t
;

37 #ifde‡
__GNUC__


38 
	t__kî√l_loff_t
;

42 #i‡
deföed
(
__KERNEL__
Ë|| deföed(
__USE_ALL
)

43 
	mvÆ
[2];

45 
	m__vÆ
[2];

47 } 
	t__kî√l_fsid_t
;

49 #i‡
deföed
(
__KERNEL__
Ë|| !deföed(
__GLIBC__
) || (__GLIBC__ < 2)

51 #unde‡
__FD_SET


52 
	#__FD_SET
(
fd
,
fd£ç
) \

53 
__asm__
 
	`__vﬁ©ûe__
("btsl %1,%0": \

54 "+m" (*(
__kî√l_fd_£t
 *Ë(
fd£ç
)):"r" ((Ë(
fd
)))

	)

56 #unde‡
__FD_CLR


57 
	#__FD_CLR
(
fd
,
fd£ç
) \

58 
__asm__
 
	`__vﬁ©ûe__
("btrl %1,%0": \

59 "+m" (*(
__kî√l_fd_£t
 *Ë(
fd£ç
)):"r" ((Ë(
fd
)))

	)

61 #unde‡
__FD_ISSET


62 
	#__FD_ISSET
(
fd
,
fd£ç
Ë(
	`__exãnsi⁄__
 ({ \

63 
__ªsu…
; \

64 
__asm__
 
	`__vﬁ©ûe__
("btl %1,%2 ; setb %0" \

65 :"=q" (
__ªsu…
Ë:"r" ((Ë(
fd
)), \

66 "m" (*(
__kî√l_fd_£t
 *Ë(
fd£ç
))); \

67 
__ªsu…
; }))

	)

69 #unde‡
__FD_ZERO


70 
	#__FD_ZERO
(
fd£ç
) \

72 
__d0
, 
__d1
; \

73 
__asm__
 
	`__vﬁ©ûe__
("cld ;Ñep ; stosl" \

74 :"=m" (*(
__kî√l_fd_£t
 *Ë(
fd£ç
)), \

75 "=&c" (
__d0
), "=&D" (
__d1
) \

76 :"a" (0), "1" (
__FDSET_LONGS
), \

77 "2" ((
__kî√l_fd_£t
 *Ë(
fd£ç
)) : "memory"); \

78 } 0)

	)

	@/usr/include/asm/sockios.h

1 #i‚de‡
__ARCH_I386_SOCKIOS__


2 
	#__ARCH_I386_SOCKIOS__


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

27 #ifde‡
_IO_MTSAFE_IO


28 
±hªad_muãx_t
 
	t__libc_lock_t
;

29 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

30 #ifde‡
__USE_UNIX98


31 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

33 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

35 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

37 
__libc_lock_›aque__
 
	t__libc_lock_t
;

38 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

39 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

43 
±hªad_key_t
 
	t__libc_key_t
;

52 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

53 
CLASS
 
__libc_lock_t
 
NAME
;

	)

54 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

55 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

56 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

59 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

70 #i‡
__LT_SPINLOCK_INIT
 == 0

71 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

74 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

75 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

83 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

84 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

85 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

86 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

88 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

89 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

90 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

91 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

93 #i‡
deföed
 
__PIC__


94 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

95 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

96 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

99 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

101 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

105 
	#__libc_lock_öô
(
NAME
) \

106 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

107 
	#__libc_rwlock_öô
(
NAME
) \

108 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

111 
	#__libc_lock_öô_ªcursive
(
NAME
) \

113 i‡(
__±hªad_muãx_öô
 !
NULL
) \

115 
±hªad_muãx©å_t
 
__©å
; \

116 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

117 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

118 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

119 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

121 } 0);

	)

122 
	#__πld_lock_öô_ªcursive
(
NAME
) \

123 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

128 
	#__libc_lock_föi
(
NAME
) \

129 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

130 
	#__libc_rwlock_föi
(
NAME
) \

131 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

134 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

135 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

138 
	#__libc_lock_lock
(
NAME
) \

139 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

140 
	#__libc_rwlock_rdlock
(
NAME
) \

141 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

142 
	#__libc_rwlock_wæock
(
NAME
) \

143 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

146 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

149 
	#__libc_lock_åylock
(
NAME
) \

150 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

151 
	#__libc_rwlock_åyrdlock
(
NAME
) \

152 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

153 
	#__libc_rwlock_åywæock
(
NAME
) \

154 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

157 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

158 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

159 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

162 
	#__libc_lock_u∆ock
(
NAME
) \

163 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

164 
	#__libc_rwlock_u∆ock
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

168 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

170 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

171 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

174 #i‡
PTHREAD_ONCE_INIT
 == 0

177 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

178 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

180 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

181 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

185 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

187 i‡(
__±hªad_⁄˚
 !
NULL
) \

188 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

189 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

190 
	`INIT_FUNCTION
 (); \

191 (
ONCE_CONTROL
) = 2; \

193 } 0)

	)

197 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

198 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

199 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

200 i‡(
_avaû
) { \

201 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

202 }

	)

205 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

206 i‡(
_avaû
) { \

207 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

209 }

	)

212 
	#__libc_˛ónup_íd
(
DOIT
) \

213 i‡(
_avaû
) { \

214 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

215 }

	)

217 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

218 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

219 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

221 
	#__libc_˛ónup_p›
(
execuã
) \

222 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

223 }

	)

226 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

227 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

230 
	#__libc_gë•ecific
(
KEY
) \

231 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

234 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

235 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

239 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

240 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

242 
__BEGIN_DECLS


244 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

245 (*
__routöe
) (*),

246 *
__¨g
Ë
__THROW
;

248 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

249 
__execuã
Ë
__THROW
;

255 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

256 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

258 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

260 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

262 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

264 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

266 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

268 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

270 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

271 
__köd
);

273 #ifde‡
__USE_UNIX98


274 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

275 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

277 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

279 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

281 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

283 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

285 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

287 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

290 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

291 (*
__de°r_fun˘i⁄
) (*));

293 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

294 
__c⁄°
 *
__poöãr
);

296 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

298 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

299 (*
__öô_routöe
) ());

301 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

302 (*
__∑ª¡
) (),

303 (*
__chûd
) ());

305 
__END_DECLS


309 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


310 #¥agm®
wók
 
__±hªad_muãx_öô


311 #¥agm®
wók
 
__±hªad_muãx_de°roy


312 #¥agm®
wók
 
__±hªad_muãx_lock


313 #¥agm®
wók
 
__±hªad_muãx_åylock


314 #¥agm®
wók
 
__±hªad_muãx_u∆ock


315 #¥agm®
wók
 
__±hªad_muãx©å_öô


316 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


317 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


318 #¥agm®
wók
 
__±hªad_rwlock_de°roy


319 #¥agm®
wók
 
__±hªad_rwlock_rdlock


320 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


321 #¥agm®
wók
 
__±hªad_rwlock_wæock


322 #¥agm®
wók
 
__±hªad_rwlock_åywæock


323 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


324 #¥agm®
wók
 
__±hªad_key_¸óã


325 #¥agm®
wók
 
__±hªad_£t•ecific


326 #¥agm®
wók
 
__±hªad_gë•ecific


327 #¥agm®
wók
 
__±hªad_⁄˚


328 #¥agm®
wók
 
__±hªad_öôülize


329 #¥agm®
wók
 
__±hªad_©f‹k


330 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


331 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


332 #¥agm®
wók
 
_±hªad_˛ónup_push


333 #¥agm®
wók
 
_±hªad_˛ónup_p›


338 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

63 
	g__gc⁄v_°ï
;

64 
	g__gc⁄v_°ï_d©a
;

65 
	g__gc⁄v_lﬂded_obje˘
;

66 
	g__gc⁄v_å™s_d©a
;

70 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

71 
	t__c⁄°
 **, __const *,

72 **, 
	tsize_t
 *, , );

75 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

78 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

79 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

83 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

84 
	t__gc⁄v_°ï_d©a
 *, *,

85 
	t__c⁄°
 *,

86 
	t__c⁄°
 **,

87 
	t__c⁄°
 *, **,

88 
	tsize_t
 *);

91 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

92 
	t__c⁄°
 *,

96 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

97 
	tsize_t
 *);

100 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

101 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

103 
	s__gc⁄v_å™s_d©a


106 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

107 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

108 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

109 *
__d©a
;

110 
__gc⁄v_å™s_d©a
 *
__√xt
;

115 
	s__gc⁄v_°ï


117 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

118 
__c⁄°
 *
__mod«me
;

120 
__cou¡î
;

122 *
__‰om_«me
;

123 *
__to_«me
;

125 
__gc⁄v_f˘
 
__f˘
;

126 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

127 
__gc⁄v_öô_f˘
 
__öô_f˘
;

128 
__gc⁄v_íd_f˘
 
__íd_f˘
;

132 
__mö_√eded_‰om
;

133 
__max_√eded_‰om
;

134 
__mö_√eded_to
;

135 
__max_√eded_to
;

138 
__°©eful
;

140 *
__d©a
;

145 
	s__gc⁄v_°ï_d©a


147 *
__outbuf
;

148 *
__outbu„nd
;

152 
__Êags
;

156 
__övoˇti⁄_cou¡î
;

160 
__öã∫Æ_u£
;

162 
__mb°©e_t
 *
__°©ï
;

163 
__mb°©e_t
 
__°©e
;

167 
__gc⁄v_å™s_d©a
 *
__å™s
;

172 
	s__gc⁄v_öfo


174 
size_t
 
__n°ïs
;

175 
__gc⁄v_°ï
 *
__°ïs
;

176 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

177 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_lutimes


	)

20 
	#__°ub_ªvoke


	)

21 
	#__°ub_£éogö


	)

22 
	#__°ub_sigªtu∫


	)

23 
	#__°ub_s°k


	)

24 
	#__°ub_°ty


	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#CHILD_MAX
 999

	)

9 
	#OPEN_MAX
 256

	)

10 
	#LINK_MAX
 127

	)

11 
	#MAX_CANON
 255

	)

12 
	#MAX_INPUT
 255

	)

13 
	#NAME_MAX
 255

	)

14 
	#PATH_MAX
 4096

	)

15 
	#PIPE_BUF
 4096

	)

16 
	#XATTR_NAME_MAX
 255

	)

17 
	#XATTR_SIZE_MAX
 65536

	)

18 
	#XATTR_LIST_MAX
 65536

	)

20 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/stddef.h

1 #i‚de‡
_LINUX_STDDEF_H


2 
	#_LINUX_STDDEF_H


	)

5 #unde‡
NULL


6 #i‡
deföed
(
__˝lu•lus
)

7 
	#NULL
 0

	)

9 
	#NULL
 ((*)0)

	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‚de‡
__√ed_mb°©e_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #ifde‡
__USE_UNIX98


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

43 
	#__√ed_size_t


	)

44 
	#__√ed_wch¨_t


	)

45 
	#__√ed_NULL


	)

47 
	#__√ed_wöt_t


	)

48 
	~<°ddef.h
>

50 
	~<bôs/wch¨.h
>

54 #i‚de‡
_WINT_T


59 
	#_WINT_T


	)

60 
	twöt_t
;

64 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

65 && 
deföed
 
__WINT_TYPE__


66 
__BEGIN_NAMESPACE_STD


67 
__WINT_TYPE__
 
	twöt_t
;

68 
	g__END_NAMESPACE_STD


73 #i‚de‡
__mb°©e_t_deföed


74 
	#__mb°©e_t_deföed
 1

	)

78 
	m__cou¡
;

81 
wöt_t
 
	m__wch
;

82 
	m__wchb
[4];

83 } 
	m__vÆue
;

84 } 
	t__mb°©e_t
;

86 #unde‡
__√ed_mb°©e_t


91 #ifde‡
_WCHAR_H


93 
__BEGIN_NAMESPACE_C99


95 
__mb°©e_t
 
	tmb°©e_t
;

96 
	g__END_NAMESPACE_C99


97 #ifde‡
__USE_GNU


98 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

101 #i‚de‡
WCHAR_MIN


103 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

104 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

107 #i‚de‡
WEOF


108 
	#WEOF
 (0xffffffffu)

	)

113 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


114 
	~<w˘y≥.h
>

118 
__BEGIN_DECLS


120 
__BEGIN_NAMESPACE_STD


123 
tm
;

127 
	$__USING_NAMESPACE_STD
(
tm
)

128 
__END_NAMESPACE_STD


131 
__BEGIN_NAMESPACE_C99


133 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

134 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

136 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

137 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

138 
__THROW
;

141 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

142 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

144 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

146 
__THROW
;

149 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

150 
__THROW
 
__©åibuã_puª__
;

152 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

153 
__THROW
 
__©åibuã_puª__
;

154 
__END_NAMESPACE_C99


156 #ifde‡
__USE_GNU


158 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

161 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

162 
size_t
 
__n
Ë
__THROW
;

166 
	~<xloˇÀ.h
>

168 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

169 
__loˇÀ_t
 
__loc
Ë
__THROW
;

171 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

172 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

175 
__BEGIN_NAMESPACE_C99


178 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

182 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

184 
__END_NAMESPACE_C99


186 #ifde‡
__USE_GNU


192 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

193 
__loˇÀ_t
 
__loc
Ë
__THROW
;

198 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

199 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

202 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

205 
__BEGIN_NAMESPACE_C99


207 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

208 
__THROW
 
__©åibuã_puª__
;

210 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

211 
__THROW
 
__©åibuã_puª__
;

212 
__END_NAMESPACE_C99


214 #ifde‡
__USE_GNU


217 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

218 
__THROW
 
__©åibuã_puª__
;

221 
__BEGIN_NAMESPACE_C99


224 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

225 
__THROW
 
__©åibuã_puª__
;

228 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

229 
__THROW
 
__©åibuã_puª__
;

231 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

232 
__THROW
 
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

235 
__THROW
 
__©åibuã_puª__
;

238 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

240 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

243 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

244 
__END_NAMESPACE_C99


246 #ifde‡
__USE_XOPEN


248 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

249 
__THROW
 
__©åibuã_puª__
;

252 #ifde‡
__USE_GNU


254 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

255 
__THROW
 
__©åibuã_puª__
;

259 
__BEGIN_NAMESPACE_C99


261 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

262 
__THROW
 
__©åibuã_puª__
;

265 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

266 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

267 
__THROW
 
__©åibuã_puª__
;

270 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

271 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

275 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

276 
__THROW
;

279 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

280 
__END_NAMESPACE_C99


282 #ifde‡
__USE_GNU


285 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

286 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

287 
__THROW
;

291 
__BEGIN_NAMESPACE_C99


294 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

298 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

302 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

306 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

307 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

308 
mb°©e_t
 *
__p
Ë
__THROW
;

311 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

312 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

315 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

317 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

318 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

319 
__END_NAMESPACE_C99


321 #ifde‡
__USE_EXTERN_INLINES


324 #i‚de‡
__˝lu•lus


328 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

329 
__ölöe
 
wöt_t


330 
	`__NTH
 (
	$btowc
 (
__c
))

331 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

332 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

334 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

335 
__ölöe
 

336 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

337 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

338 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

341 
__ölöe
 
size_t


342 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

343 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

344 {  (
__ps
 !
NULL


345 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

348 
__BEGIN_NAMESPACE_C99


351 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

352 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

353 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

357 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

358 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

359 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

360 
__END_NAMESPACE_C99


363 #ifdef 
__USE_GNU


366 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

367 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

368 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

373 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

374 
size_t
 
__nwc
, size_à
__Àn
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

380 #ifde‡
__USE_XOPEN


382 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

386 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

390 
__BEGIN_NAMESPACE_C99


393 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

394 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

396 #ifde‡
__USE_ISOC99


398 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

399 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

400 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

407 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

408 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

412 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

413 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

414 
__THROW
;

416 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

419 
__exãnsi⁄__


420 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

421 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

422 
__THROW
;

426 
__exãnsi⁄__


427 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

428 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

429 
__ba£
Ë
__THROW
;

431 
__END_NAMESPACE_C99


433 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


436 
__exãnsi⁄__


437 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

438 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

439 
__THROW
;

443 
__exãnsi⁄__


444 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

445 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

446 
__ba£
Ë
__THROW
;

449 #ifde‡
__USE_GNU


463 
	~<xloˇÀ.h
>

467 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

468 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

469 
__loˇÀ_t
 
__loc
Ë
__THROW
;

471 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

473 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

475 
__exãnsi⁄__


476 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

478 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

480 
__exãnsi⁄__


481 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

483 
__ba£
, 
__loˇÀ_t
 
__loc
)

484 
__THROW
;

486 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

488 
__THROW
;

490 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

492 
__THROW
;

494 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

495 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

496 
__loˇÀ_t
 
__loc
Ë
__THROW
;

502 
	$__wc°od_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

503 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__group
)

504 
__THROW
;

505 
	$__wc°of_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__group
)

507 
__THROW
;

508 
	$__wc°ﬁd_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

509 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

510 
__group
Ë
__THROW
;

512 #i‡!
deföed
 
__wc°ﬁ_öã∫Æ_deföed
 \

513 && 
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

514 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

515 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

516 
__ba£
, 
__group
Ë
__THROW
;

517 
	#__wc°ﬁ_öã∫Æ_deföed
 1

	)

519 #i‡!
deföed
 
__wc°oul_öã∫Æ_deföed
 \

520 && 
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

521 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈t
,

522 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

523 
__ba£
, 
__group
Ë
__THROW
;

524 
	#__wc°oul_öã∫Æ_deföed
 1

	)

526 #i‡!
deföed
 
__wc°ﬁl_öã∫Æ_deföed
 \

527 && 
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

528 
__exãnsi⁄__


529 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

530 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

531 
__ba£
, 
__group
Ë
__THROW
;

532 
	#__wc°ﬁl_öã∫Æ_deföed
 1

	)

534 #i‡!
deföed
 
__wc°ouŒ_öã∫Æ_deföed
 \

535 && 
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

536 
__exãnsi⁄__


537 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *

538 
__ª°ri˘
 
__≈å
,

539 
wch¨_t
 **

540 
__ª°ri˘
 
__íd±r
,

541 
__ba£
,

542 
__group
Ë
__THROW
;

543 
	#__wc°ouŒ_öã∫Æ_deföed
 1

	)

547 #i‡
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

549 
__BEGIN_NAMESPACE_C99


551 
__ölöe
 

552 
	`__NTH
 (
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
))

554 {  
	`__wc°od_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

555 
__ölöe
 

556 
__NTH
 (
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

558 {  
	`__wc°ﬁ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

559 
__ölöe
 

560 
__NTH
 (
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

561 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

562 {  
	`__wc°oul_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

563 
__END_NAMESPACE_C99


565 #ifde‡
__USE_GNU


566 
__ölöe
 

567 
__NTH
 (
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

568 
wch¨_t
 **
__ª°ri˘
 
__íd±r
))

569 {  
	`__wc°of_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

570 #i‚de‡
__LDBL_COMPAT


571 
__ölöe
 

572 
__NTH
 (
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

573 
wch¨_t
 **
__ª°ri˘
 
__íd±r
))

574 {  
	`__wc°ﬁd_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

576 
__exãnsi⁄__


577 
__ölöe
 

578 
__NTH
 (
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

579 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

580 {  
	`__wc°ﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

581 
__exãnsi⁄__


582 
__ölöe
 

583 
__NTH
 (
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

584 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

585 {  
	`__wc°ouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

590 #ifdef 
__USE_GNU


593 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

597 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

598 
__THROW
;

604 #ifdef 
__USE_GNU


607 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

610 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


611 
__BEGIN_NAMESPACE_C99


614 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

621 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

622 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

628 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

631 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

632 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

633 
__THROW
 ;

639 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

640 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

641 
__gnuc_va_li°
 
__¨g
)

647 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

648 
__gnuc_va_li°
 
__¨g
)

652 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

653 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

654 
__gnuc_va_li°
 
__¨g
)

655 
__THROW
 ;

662 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

663 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

669 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

672 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

673 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

674 
__THROW
 ;

676 
__END_NAMESPACE_C99


679 #ifde‡
__USE_ISOC99


680 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 
__END_NAMESPACE_C99


707 
__BEGIN_NAMESPACE_C99


712 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

713 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

719 
wöt_t
 
	`gëwch¨
 ();

726 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

727 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

733 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

741 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

742 
__FILE
 *
__ª°ri˘
 
__°ªam
);

748 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

749 
__FILE
 *
__ª°ri˘
 
__°ªam
);

756 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

757 
__END_NAMESPACE_C99


760 #ifde‡
__USE_GNU


768 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

769 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

777 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

785 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

794 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

795 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

804 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

805 
__FILE
 *
__ª°ri˘
 
__°ªam
);

813 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

814 
__FILE
 *
__ª°ri˘
 
__°ªam
);

818 
__BEGIN_NAMESPACE_C99


822 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

823 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

824 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

825 
__END_NAMESPACE_C99


827 #ifde‡
__USE_GNU


828 
	~<xloˇÀ.h
>

832 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

833 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

834 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

835 
__loˇÀ_t
 
__loc
Ë
__THROW
;

844 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


845 
	#__√ed_iswxxx


	)

846 
	~<w˘y≥.h
>

850 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


851 
	~<bôs/wch¨2.h
>

854 #ifde‡
__LDBL_COMPAT


855 
	~<bôs/wch¨-ldbl.h
>

858 
__END_DECLS


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

24 
	#_IOC_SIZEBITS
 14

	)

25 
	#_IOC_DIRBITS
 2

	)

27 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

28 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

29 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

30 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

32 
	#_IOC_NRSHIFT
 0

	)

33 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

34 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

35 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

40 
	#_IOC_NONE
 0U

	)

41 
	#_IOC_WRITE
 1U

	)

42 
	#_IOC_READ
 2U

	)

44 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

45 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

46 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

47 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

48 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

50 #ifde‡
__KERNEL__


52 
__övÆid_size_¨gumít_f‹_IOC
;

53 
	#_IOC_TYPECHECK
(
t
) \

54 (((
t
) == (t[1]) && \

55 (
t
Ë< (1 << 
_IOC_SIZEBITS
)) ? \

56 (
t
Ë: 
__övÆid_size_¨gumít_f‹_IOC
)

	)

58 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

62 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

63 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

64 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

65 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

66 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

67 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

68 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

71 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

72 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

73 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

74 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

78 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

79 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

80 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

81 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

82 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 
__LDBL_REDIR_DECL
 (
fwsˇnf
);

33 
__LDBL_REDIR_DECL
 (
wsˇnf
);

34 
__LDBL_REDIR_DECL
 (
swsˇnf
);

35 
	g__END_NAMESPACE_C99


38 #ifde‡
__USE_ISOC99


39 
__BEGIN_NAMESPACE_C99


40 
__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

41 
__LDBL_REDIR_DECL
 (
vfwsˇnf
);

42 
__LDBL_REDIR_DECL
 (
vwsˇnf
);

43 
__LDBL_REDIR_DECL
 (
vswsˇnf
);

44 
	g__END_NAMESPACE_C99


47 #ifde‡
__USE_GNU


48 
__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

51 
__LDBL_REDIR1_DECL
 (
__wc°ﬁd_öã∫Æ
, 
__wc°od_öã∫Æ
);

53 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


54 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

55 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

56 #i‡
__USE_FORTIFY_LEVEL
 > 1

57 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

58 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

59 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

60 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

33 
__Æways_ölöe
 
wch¨_t
 *

34 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

35 
size_t
 
__n
))

37 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

38  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
, 
	`__bos0
 (__s1Ë/  (
wch¨_t
));

39  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

40 
	}
}

43 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

44 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

45 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

46 
__c⁄°
 
wch¨_t
 *
__s2
,

47 
size_t
 
__n
), 
wmemmove
);

49 
__Æways_ölöe
 
wch¨_t
 *

50 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

51 
size_t
 
__n
))

53 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

54  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
, 
	`__bos0
 (__s1Ë/  (
wch¨_t
));

55  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

56 
	}
}

59 #ifde‡
__USE_GNU


60 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

61 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

62 
size_t
 
__ns1
Ë
__THROW
;

63 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

64 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

65 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

66 
size_t
 
__n
), 
wmemp˝y
);

68 
__Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

70 
size_t
 
__n
))

72 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
, 
	`__bos0
 (__s1Ë/  (
wch¨_t
));

74  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

75 
	}
}

79 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

80 
size_t
 
__ns
Ë
__THROW
;

81 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

82 
size_t
 
__n
), 
wmem£t
);

84 
__Æways_ölöe
 
wch¨_t
 *

85 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

87 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

88  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

89  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

90 
	}
}

93 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

94 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

95 
size_t
 
__n
Ë
__THROW
;

96 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

97 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

98 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

100 
__Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

103 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

104  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

105  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

106 
	}
}

109 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

110 
size_t
 
__de°Àn
Ë
__THROW
;

111 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

112 
__c⁄°
 
wch¨_t
 *
__§c
),

113 
w˝˝y
);

115 
__Æways_ölöe
 
wch¨_t
 *

116 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

118 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

119  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

120  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

121 
	}
}

124 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

125 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

128 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

129 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

130 
size_t
 
__n
), 
wc¢˝y
);

132 
__Æways_ölöe
 
wch¨_t
 *

133 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

135 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

136 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| 
	`__bos
 (
__de°
) >= __n))

137  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

138 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

139  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

140 
	}
}

143 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

144 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

145 
size_t
 
__de°Àn
Ë
__THROW
;

146 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

147 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
), 
w˝n˝y
);

151 
__Æways_ölöe
 
wch¨_t
 *

152 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

155 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| 
	`__bos
 (
__de°
) >= __n))

156  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

157 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

158  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

159 
	}
}

162 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

163 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

166 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

167 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

169 
__Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

180 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢ˇt
);

186 
__Æways_ölöe
 
wch¨_t
 *

187 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

189 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

190  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

191 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

192  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

193 
	}
}

196 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

197 
__Êag
, 
size_t
 
__s_Àn
,

198 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

199 
__THROW
 ;

202 
	#sw¥ötf
(
s
, 
n
, ...) \

203 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

204 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (s), 
__VA_ARGS__
) \

205 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

208 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

209 
__Êag
, 
size_t
 
__s_Àn
,

210 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

211 
__gnuc_va_li°
 
__¨g
)

212 
__THROW
 ;

214 
	#vsw¥ötf
(
s
, 
n
, 
fmt
, 
≠
) \

215 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

216 ? 
	`__vsw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (s), 
fmt
, 
≠
) \

217 : 
	`vsw¥ötf
 (
s
, 
n
, 
fmt
, 
≠
))

	)

220 #i‡
__USE_FORTIFY_LEVEL
 > 1

222 
	`__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

223 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

224 
	`__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

226 
	`__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

227 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

228 
__gnuc_va_li°
 
__≠
);

229 
	`__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

230 
__gnuc_va_li°
 
__≠
);

232 
	#w¥ötf
(...) \

233 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

234 
	#fw¥ötf
(
°ªam
, ...) \

235 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

236 
	#vw¥ötf
(
f‹m©
, 
≠
) \

237 
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

238 
	#vfw¥ötf
(
°ªam
, 
f‹m©
, 
≠
) \

239 
	`__vfw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

243 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

244 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

245 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

246 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

247 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

249 
__Æways_ölöe
 
__wur
 
wch¨_t
 *

250 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

252 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1

253 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| (
size_t
Ë__¿> 
	`__bos
 (
__s
)))

254  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 #ifde‡
__USE_GNU


259 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

260 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

261 
__wur
;

262 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

263 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

264 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

265 
__wur
;

267 
__Æways_ölöe
 
__wur
 
wch¨_t
 *

268 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

270 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1

271 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| (
size_t
Ë__¿> 
	`__bos
 (
__s
)))

272  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

273  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

274 
	}
}

278 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

279 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

280 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

281 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

282 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

284 
__Æways_ölöe
 
__wur
 
size_t


285 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

290 
	#__WCHAR_MB_LEN_MAX
 16

	)

291 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


294 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

295  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

296  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

297 
	}
}

300 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

301 
__c⁄°
 **
__ª°ri˘
 
__§c
,

302 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

303 
size_t
 
__d°Àn
Ë
__THROW
;

304 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

305 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

306 
__c⁄°
 **
__ª°ri˘
 
__§c
,

307 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

308 
mb§towcs
);

310 
__Æways_ölöe
 
size_t


311 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

312 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

314 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

315 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
)

316 || 
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
)))

317  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

318 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

319  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

320 
	}
}

323 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

324 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

325 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

326 
size_t
 
__d°Àn
Ë
__THROW
;

327 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

328 (*
__ª°ri˘
 
__d°
,

329 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

330 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

331 
wc§tombs
);

333 
__Æways_ölöe
 
size_t


334 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

335 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

337 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

338 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__d°
)))

339  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

340  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

341 
	}
}

344 #ifde‡
__USE_GNU


345 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

346 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

347 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

348 
size_t
 
__d°Àn
Ë
__THROW
;

349 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

350 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

351 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

352 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

353 
mb¢πowcs
);

355 
__Æways_ölöe
 
size_t


356 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

357 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

359 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

360 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
)

361 || 
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
)))

362  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

363 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

364  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

365 
	}
}

368 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

369 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

370 
size_t
 
__nwc
, size_à
__Àn
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

372 
__THROW
;

373 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

374 (*
__ª°ri˘
 
__d°
,

375 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

376 
size_t
 
__nwc
, size_à
__Àn
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

379 
__Æways_ölöe
 
size_t


380 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

381 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

383 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

384 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__d°
)))

385  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

386  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

387 
	}
}

	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

34 
	#__√ed_wöt_t


	)

35 
	~<°ddef.h
>

36 #i‚de‡
_WINT_T


41 
	#_WINT_T


	)

42 
	twöt_t
;

44 #ifde‡
__USE_ISOC99


45 
	$__USING_NAMESPACE_C99
(
wöt_t
)

51 #i‚de‡
WEOF


52 
	#WEOF
 (0xffffffffu)

	)

55 #unde‡
__√ed_iswxxx


60 #i‚de‡
__iswxxx_deföed


61 
	#__iswxxx_deföed
 1

	)

63 
__BEGIN_NAMESPACE_C99


66 
	tw˘y≥_t
;

67 
__END_NAMESPACE_C99


69 #i‚de‡
_ISwbô


74 
	~<ídün.h
>

75 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


76 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

78 
	#_ISwbô
(
bô
) \

79 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

80 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

81 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

82 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

87 
__ISwuµî
 = 0,

88 
__ISwlowî
 = 1,

89 
__ISwÆpha
 = 2,

90 
__ISwdigô
 = 3,

91 
__ISwxdigô
 = 4,

92 
__ISw•a˚
 = 5,

93 
__ISw¥öt
 = 6,

94 
__ISwgøph
 = 7,

95 
__ISwbœnk
 = 8,

96 
__ISw˙ål
 = 9,

97 
__ISwpun˘
 = 10,

98 
__ISwÆnum
 = 11,

100 
_ISwuµî
 = 
	`_ISwbô
 (
__ISwuµî
),

101 
_ISwlowî
 = 
	`_ISwbô
 (
__ISwlowî
),

102 
_ISwÆpha
 = 
	`_ISwbô
 (
__ISwÆpha
),

103 
_ISwdigô
 = 
	`_ISwbô
 (
__ISwdigô
),

104 
_ISwxdigô
 = 
	`_ISwbô
 (
__ISwxdigô
),

105 
_ISw•a˚
 = 
	`_ISwbô
 (
__ISw•a˚
),

106 
_ISw¥öt
 = 
	`_ISwbô
 (
__ISw¥öt
),

107 
_ISwgøph
 = 
	`_ISwbô
 (
__ISwgøph
),

108 
_ISwbœnk
 = 
	`_ISwbô
 (
__ISwbœnk
),

109 
_ISw˙ål
 = 
	`_ISwbô
 (
__ISw˙ål
),

110 
_ISwpun˘
 = 
	`_ISwbô
 (
__ISwpun˘
),

111 
_ISwÆnum
 = 
	`_ISwbô
 (
__ISwÆnum
)

116 
__BEGIN_DECLS


118 
__BEGIN_NAMESPACE_C99


125 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

131 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

138 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

150 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

155 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

160 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

165 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

170 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

175 #ifde‡
__USE_ISOC99


176 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

185 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

189 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

190 
__END_NAMESPACE_C99


197 
__BEGIN_NAMESPACE_C99


200 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

201 
__END_NAMESPACE_C99


202 #ifde‡
__USE_GNU


203 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

206 
__BEGIN_NAMESPACE_C99


208 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

211 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

212 
__END_NAMESPACE_C99


214 
__END_DECLS


221 #ifde‡
_WCTYPE_H


227 
__BEGIN_DECLS


229 
__BEGIN_NAMESPACE_C99


232 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

235 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

236 
__END_NAMESPACE_C99


238 #ifde‡
__USE_GNU


240 
	~<xloˇÀ.h
>

244 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

250 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

257 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

269 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

274 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

279 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

289 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

294 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

298 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

299 
__THROW
;

303 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

304 
__THROW
;

312 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

319 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

320 
__THROW
;

323 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

324 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

328 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@
1
.
1
/usr/include
151
3805
np_app.c
np_common.h
np_stats.c
np_stats.h
np_ufe_fr.c
npu_main.c
spp_npu_link.h
spp_wddi_common.h
spp_wddi_server.c
spp_wddi_server.h
tun_dev.c
tun_dev.h
wddi_log.c
wddi_log.h
wti_flexmux_util.c
wti_flexmux_util.h
xml_operation.c
xs_ioctl.h
/usr/include/arpa/inet.h
/usr/include/assert.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/glob.h
/usr/include/libgen.h
/usr/include/limits.h
/usr/include/linux/if.h
/usr/include/linux/if_tun.h
/usr/include/malloc.h
/usr/include/netinet/ether.h
/usr/include/netinet/in.h
/usr/include/pthread.h
/usr/include/search.h
/usr/include/semaphore.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/ioctl.h
/usr/include/sys/select.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/syscall.h
/usr/include/sys/time.h
/usr/include/syslog.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/asm/unistd.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/in.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/select.h
/usr/include/bits/semaphore.h
/usr/include/bits/setjmp.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/syscall.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/linux/hdlc/ioctl.h
/usr/include/linux/socket.h
/usr/include/linux/types.h
/usr/include/netinet/if_ether.h
/usr/include/sched.h
/usr/include/stdint.h
/usr/include/sys/cdefs.h
/usr/include/sys/syslog.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/types.h
/usr/include/sys/ucontext.h
/usr/include/sys/uio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/ioctls.h
/usr/include/asm/sigcontext.h
/usr/include/asm/socket.h
/usr/include/asm/types.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/sched.h
/usr/include/bits/sockaddr.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/syslog-ldbl.h
/usr/include/bits/syslog-path.h
/usr/include/bits/syslog.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/bits/wchar.h
/usr/include/ctype.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/linux/if_ether.h
/usr/include/linux/posix_types.h
/usr/include/linux/sockios.h
/usr/include/linux/uio.h
/usr/include/net/ethernet.h
/usr/include/net/if_arp.h
/usr/include/sys/sysmacros.h
/usr/include/asm/errno.h
/usr/include/asm/ioctl.h
/usr/include/asm/posix_types.h
/usr/include/asm/sockios.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/linux/limits.h
/usr/include/linux/stddef.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/ioctl.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
