/*****************************************************************************
 * (C) Copyright 2000-2006, Wintegra. All rights reserved.
 * WINTEGRA CONFIDENTIAL PROPRIETARY
 * Contains Confidential Proprietary information of Wintegra.
 * Reverse engineering is prohibited.
 * The copyright notice does not imply publication.
 ****************************************************************************/

/*****************************************************************************
 *
 * File: wpx_phy_data.h
 *
 * For:  Board WDS3
 *
 * Purpose: Define board-specific data needed to build the phy utilities.
 *
 * The data in this file is defined in a form which can be used for all targets
 * using the board.
 *
 * This file may be #included only by files in the wddi/phy directory.
 *
 * This file must not be included by any file in wddi/sources, since a build
 * of WDDI should always result in a board-independent object.
 *
 * The addresses defined here must be physical addresses only.  The phy routines
 * cannot use these addresses directly.  They must translate these to virtual
 * addresses using the target-specific macro WPL_PHY_VIRTUAL(wpid, physical_address).
 *
 * The data contained in this file should generally not be needed by an
 * application.
 *
 ****************************************************************************/

#ifndef WPX_PHY_DATA_H
#define WPX_PHY_DATA_H

#ifndef WPX_BOARD_DATA_H
#include "wpx_board_data.h"
#endif

/* Reset from NOR is default option*/
#define WPX_RESET_FROM_NOR
/*#define WPX_RESET_FROM_NAND*/

#if defined(WPX_RESET_FROM_NOR)
#define WPX_ASRAM_BUS_START_ADDRESS   0x1f000000      
#define WPX_RIF_OFFSET                0x1e000000
#elif defined(WPX_RESET_FROM_NAND)
#define WPX_ASRAM_BUS_START_ADDRESS   0x1e000000
#define WPX_RIF_OFFSET                0x1f000000      
#endif
#define WPX_ASRAM_BUS_SIZE             0x1000000      /* 16 M */

#define WPX_WDS3_FLASH_NAND_OFFSET  0
#define WPX_WDS3_FLASH_NOR_OFFSET   0x800000
#define WPX_WDS3_FPGA_OFFSET        0x100000
#define WPX_WDS3_SER_CONN1_OFFSET   0x200000
#define WPX_WDS3_SER_CONN2_OFFSET   0x400000
#define WPX_WDS3_SER_CONN3_OFFSET   0x600000
#define WPX_WDS3_ZBT_OFFSET         0x400000

#define WPI_WDS3_SERIAL1_BASE (WPX_ASRAM_BUS_START_ADDRESS+WPX_WDS3_SER_CONN1_OFFSET)
#define WPI_WDS3_SERIAL2_BASE (WPX_ASRAM_BUS_START_ADDRESS+WPX_WDS3_SER_CONN2_OFFSET)
#define WPI_WDS3_SERIAL3_BASE (WPX_ASRAM_BUS_START_ADDRESS+WPX_WDS3_SER_CONN3_OFFSET)
#define WPI_WDS3_FPGA_BASE    (WPX_ASRAM_BUS_START_ADDRESS+WPX_WDS3_FPGA_OFFSET)

#define APP_TDM1_COMET          WPI_WDS3_SERIAL1_BASE
#define APP_TDM9_COMET          WPI_WDS3_SERIAL2_BASE
#define APP_TDM1_UFE_COMET      WPI_WDS3_SERIAL3_BASE
#define APP_CPLD_TDM1_COMET     (APP_TDM1_COMET+0x1000)
#define APP_CPLD_TDM9_COMET     (APP_TDM9_COMET+0x1000)
#define APP_CPLD_TDM_UFE_COMET  (APP_TDM1_UFE_COMET+0x1000)


/*match register for host chip select 1 */
#define APP_MASK_MATCH_OFFSET WPX_RIF_OFFSET + 0x10800
#define APP_MASK_MATCH_ZBT_OFFSET       0x10 /*Chip select 2*/
#define APP_MASK_MATCH_FPGA_OFFSET      0x18 /*Chip select 3*/
#define APP_MASK_MATCH_SER_CONN1_OFFSET 0x20 /*Chip select 4*/
#define APP_MASK_MATCH_SER_CONN2_OFFSET 0x28 /*Chip select 5*/
#define APP_MASK_MATCH_SER_CONN3_OFFSET 0x30 /*Chip select 6*/

#define APP_ZBT_HOST_IF_1    APP_MASK_MATCH_OFFSET+APP_MASK_MATCH_ZBT_OFFSET
#define APP_FPGA_HOST_IF_1   APP_MASK_MATCH_OFFSET+APP_MASK_MATCH_FPGA_OFFSET
#define APP_GENET_HOST_IF_1  APP_MASK_MATCH_OFFSET+APP_MASK_MATCH_SER_CONN1_OFFSET
#define APP_GENET_HOST_IF_2  APP_MASK_MATCH_OFFSET+APP_MASK_MATCH_SER_CONN2_OFFSET
#define APP_UPI_HOST_IF_1    APP_MASK_MATCH_OFFSET+APP_MASK_MATCH_SER_CONN1_OFFSET 
#define APP_UPI_HOST_IF_2    APP_MASK_MATCH_OFFSET+APP_MASK_MATCH_SER_CONN2_OFFSET 
#define APP_UPI_HOST_IF_3    APP_MASK_MATCH_OFFSET+APP_MASK_MATCH_SER_CONN3_OFFSET
#define APP_TDM_HOST_IF_1    APP_MASK_MATCH_OFFSET+APP_MASK_MATCH_SER_CONN1_OFFSET 
#define APP_TDM_HOST_IF_2    APP_MASK_MATCH_OFFSET+APP_MASK_MATCH_SER_CONN2_OFFSET 
#define APP_TDM_HOST_IF_3    APP_MASK_MATCH_OFFSET+APP_MASK_MATCH_SER_CONN3_OFFSET 
#define APP_UFE_HOST_IF_1    APP_MASK_MATCH_OFFSET+APP_MASK_MATCH_SER_CONN1_OFFSET 
#define APP_UFE_HOST_IF_2    APP_MASK_MATCH_OFFSET+APP_MASK_MATCH_SER_CONN2_OFFSET 
#define APP_UFE_HOST_IF_3    APP_MASK_MATCH_OFFSET+APP_MASK_MATCH_SER_CONN3_OFFSET 
/* Address of Gigabit ethernet. */
#define APP_GENET1_MAC_BASE WPI_WDS3_SERIAL1_BASE
#define APP_GENET2_MAC_BASE WPI_WDS3_SERIAL2_BASE 
#define APP_GENET_REGS      WPI_WDS3_SERIAL1_BASE     

/* Address of Oc12 Pmc5357 Card */
#define APP_UPI1_OC12_PMC5357 WPI_WDS3_SERIAL1_BASE
#define APP_UPI2_OC12_PMC5357 WPI_WDS3_SERIAL2_BASE
#define APP_UPI3_OC12_PMC5357 WPI_WDS3_SERIAL3_BASE

#define APP_OC12_CRSI_POLARITY 0x80

/* Address of Oc3 Pmc5351 Card */
#define APP_UPI1_OC3_PMC5351 WPI_WDS3_SERIAL1_BASE
#define APP_UPI2_OC3_PMC5351 WPI_WDS3_SERIAL2_BASE
#define APP_UPI3_OC3_PMC5351 WPI_WDS3_SERIAL3_BASE

/* Address of FPGA daughter card*/
#define APP_UPI1_FPGA_DC WPI_WDS3_SERIAL1_BASE
#define APP_UPI2_FPGA_DC WPI_WDS3_SERIAL2_BASE
#define APP_UPI3_FPGA_DC WPI_WDS3_SERIAL3_BASE

/* Base addresses of UFE card */
#define APP_UFE_UPI1      WPI_WDS3_SERIAL1_BASE
#define APP_UFE_UPI2      WPI_WDS3_SERIAL2_BASE
#define APP_UFE_UPI3      WPI_WDS3_SERIAL3_BASE

/* Base addresses of FPGA */
#define APP_FPGA WPI_WDS3_FPGA_BASE

/* RGMII, SMII and SS-SMII PHY definitions */
#define WPX_MGMT_WINNET_CLOCK 7
#define WPX_SMII_PHY_AUTONEG_ENABLE 1
#define WPX_SMII_PHY_AUTONEG_DISABLE 0
#define WPX_SMII_PHY_SPEED_10 0
#define WPX_SMII_PHY_SPEED_100 1
#define WPX_SMII_PHY_HALF_DUPLEX 0
#define WPX_SMII_PHY_FULL_DUPLEX 1
#define WPX_RGMII_PHY_SPEED_100_LSB 1
#define WPX_RGMII_PHY_SPEED_100_MSB 0
#define WPX_RGMII_PHY_SPEED_1000_LSB 0
#define WPX_RGMII_PHY_SPEED_1000_MSB 1

#define WPX_SMII_PHY_RESET_S 15
#define WPX_SMII_PHY_RESET_W 1
#define WPX_SMII_PHY_RESET_F(v) WPI_FIELD(v, WPX_SMII_PHY_RESET_S)
#define WPX_SMII_PHY_RESET_V(f) WPI_VALUE(f, WPX_SMII_PHY_RESET_S, WPX_SMII_PHY_RESET_W)
#define WPX_SMII_PHY_RESET_M WPI_MASK(WPX_SMII_PHY_RESET_S, WPX_SMII_PHY_RESET_W)

#define WPX_SMII_PHY_LOOPBACK_S 14
#define WPX_SMII_PHY_LOOPBACK_W 1
#define WPX_SMII_PHY_LOOPBACK_F(v) WPI_FIELD(v, WPX_SMII_PHY_LOOPBACK_S)
#define WPX_SMII_PHY_LOOPBACK_V(f) WPI_VALUE(f, WPX_SMII_PHY_LOOPBACK_S, WPX_SMII_PHY_LOOPBACK_W)
#define WPX_SMII_PHY_LOOPBACK_M WPI_MASK(WPX_SMII_PHY_LOOPBACK_S, WPX_SMII_PHY_LOOPBACK_W)

#define WPX_SMII_PHY_SPEED_S 13
#define WPX_SMII_PHY_SPEED_W 1
#define WPX_SMII_PHY_SPEED_F(v) WPI_FIELD(v, WPX_SMII_PHY_SPEED_S)
#define WPX_SMII_PHY_SPEED_V(f) WPI_VALUE(f, WPX_SMII_PHY_SPEED_S, WPX_SMII_PHY_SPEED_W)
#define WPX_SMII_PHY_SPEED_M WPI_MASK(WPX_SMII_PHY_SPEED_S, WPX_SMII_PHY_SPEED_W)

#define WPX_SMII_PHY_AUTONEG_S 12
#define WPX_SMII_PHY_AUTONEG_W 1
#define WPX_SMII_PHY_AUTONEG_F(v) WPI_FIELD(v, WPX_SMII_PHY_AUTONEG_S)
#define WPX_SMII_PHY_AUTONEG_V(f) WPI_VALUE(f, WPX_SMII_PHY_AUTONEG_S, WPX_SMII_PHY_AUTONEG_W)
#define WPX_SMII_PHY_AUTONEG_M WPI_MASK(WPX_SMII_PHY_AUTONEG_S, WPX_SMII_PHY_AUTONEG_W)

#define WPX_SMII_PHY_HALFDUPLEX_S 8
#define WPX_SMII_PHY_HALFDUPLEX_W 1
#define WPX_SMII_PHY_HALFDUPLEX_F(v) WPI_FIELD(v, WPX_SMII_PHY_HALFDUPLEX_S)
#define WPX_SMII_PHY_HALFDUPLEX_V(f) WPI_VALUE(f, WPX_SMII_PHY_HALFDUPLEX_S, WPX_SMII_PHY_HALFDUPLEX_W)
#define WPX_SMII_PHY_HALFDUPLEX_M WPI_MASK(WPX_SMII_PHY_HALFDUPLEX_S, WPX_SMII_PHY_HALFDUPLEX_W)

#define WPX_SMII_PHY_PHY_ADDR_S 8
#define WPX_SMII_PHY_PHY_ADDR_W 5
#define WPX_SMII_PHY_PHY_ADDR_F(v) WPI_FIELD(v, WPX_SMII_PHY_PHY_ADDR_S)
#define WPX_SMII_PHY_PHY_ADDR_V(f) WPI_VALUE(f, WPX_SMII_PHY_PHY_ADDR_S, WPX_SMII_PHY_PHY_ADDR_W)
#define WPX_SMII_PHY_PHY_ADDR_M WPI_MASK(WPX_SMII_PHY_PHY_ADDR_S, WPX_SMII_PHY_PHY_ADDR_W)

#define WPX_SMII_PHY_MGMT_REG_S 0
#define WPX_SMII_PHY_MGMT_REG_W 5
#define WPX_SMII_PHY_MGMT_REG_F(v) WPI_FIELD(v, WPX_SMII_PHY_MGMT_REG_S)
#define WPX_SMII_PHY_MGMT_REG_V(f) WPI_VALUE(f, WPX_SMII_PHY_MGMT_REG_S, WPX_SMII_PHY_MGMT_REG_W)
#define WPX_SMII_PHY_MGMT_REG_M WPI_MASK(WPX_SMII_PHY_MGMT_REG_S, WPX_SMII_PHY_MGMT_REG_W)

#define WPX_RGMII_PHY_SPEED_LSB_S 13
#define WPX_RGMII_PHY_SPEED_LSB_W 1
#define WPX_RGMII_PHY_SPEED_LSB_F(v) WPI_FIELD(v, WPX_RGMII_PHY_SPEED_LSB_S)
#define WPX_RGMII_PHY_SPEED_LSB_V(f) WPI_VALUE(f, WPX_RGMII_PHY_SPEED_LSB_S, WPX_RGMII_PHY_SPEED_LSB_W)
#define WPX_RGMII_PHY_SPEED_LSB_M WPI_MASK(WPX_RGMII_PHY_SPEED_LSB_S, WPX_RGMII_PHY_SPEED_LSB_W)

#define WPX_RGMII_PHY_SPEED_MSB_S 6
#define WPX_RGMII_PHY_SPEED_MSB_W 1
#define WPX_RGMII_PHY_SPEED_MSB_F(v) WPI_FIELD(v, WPX_RGMII_PHY_SPEED_MSB_S)
#define WPX_RGMII_PHY_SPEED_MSB_V(f) WPI_VALUE(f, WPX_RGMII_PHY_SPEED_MSB_S, WPX_RGMII_PHY_SPEED_MSB_W)
#define WPX_RGMII_PHY_SPEED_MSB_M WPI_MASK(WPX_RGMII_PHY_SPEED_MSB_S, WPX_RGMII_PHY_SPEED_MSB_W)

#define WPX_RGMII_PHY_AUTONEG_S 12
#define WPX_RGMII_PHY_AUTONEG_W 1
#define WPX_RGMII_PHY_AUTONEG_F(v) WPI_FIELD(v, WPX_RGMII_PHY_AUTONEG_S)
#define WPX_RGMII_PHY_AUTONEG_V(f) WPI_VALUE(f, WPX_RGMII_PHY_AUTONEG_S, WPX_RGMII_PHY_AUTONEG_W)
#define WPX_RGMII_PHY_AUTONEG_M WPI_MASK(WPX_RGMII_PHY_AUTONEG_S, WPX_RGMII_PHY_AUTONEG_W)

#define WPX_RGMII_PHY_HALFDUPLEX_S 8
#define WPX_RGMII_PHY_HALFDUPLEX_W 1
#define WPX_RGMII_PHY_HALFDUPLEX_F(v) WPI_FIELD(v, WPX_RGMII_PHY_HALFDUPLEX_S)
#define WPX_RGMII_PHY_HALFDUPLEX_V(f) WPI_VALUE(f, WPX_RGMII_PHY_HALFDUPLEX_S, WPX_RGMII_PHY_HALFDUPLEX_W)
#define WPX_RGMII_PHY_HALFDUPLEX_M WPI_MASK(WPX_RGMII_PHY_HALFDUPLEX_S, WPX_RGMII_PHY_HALFDUPLEX_W)

#define WPX_RGMII_PHY_LOOPBACK_S 14
#define WPX_RGMII_PHY_LOOPBACK_W 1
#define WPX_RGMII_PHY_LOOPBACK_F(v) WPI_FIELD(v, WPX_RGMII_PHY_LOOPBACK_S)
#define WPX_RGMII_PHY_LOOPBACK_V(f) WPI_VALUE(f, WPX_RGMII_PHY_LOOPBACK_S, WPX_RGMII_PHY_LOOPBACK_W)
#define WPX_RGMII_PHY_LOOPBACK_M WPI_MASK(WPX_RGMII_PHY_LOOPBACK_S, WPX_RGMII_PHY_LOOPBACK_W)

/* RMII */
#define WPX_RMII_PHY_AUTONEG_ENABLE 1
#define WPX_RMII_PHY_AUTONEG_DISABLE 0
#define WPX_RMII_PHY_SPEED_10 0
#define WPX_RMII_PHY_SPEED_100 1
#define WPX_RMII_PHY_HALF_DUPLEX 0
#define WPX_RMII_PHY_FULL_DUPLEX 1

#define WPX_RMII_PHY_RESET_S 15
#define WPX_RMII_PHY_RESET_W 1
#define WPX_RMII_PHY_RESET_F(v) WPI_FIELD(v, WPX_RMII_PHY_RESET_S)
#define WPX_RMII_PHY_RESET_V(f) WPI_VALUE(f, WPX_RMII_PHY_RESET_S, WPX_RMII_PHY_RESET_W)
#define WPX_RMII_PHY_RESET_M WPI_MASK(WPX_RMII_PHY_RESET_S, WPX_RMII_PHY_RESET_W)

#define WPX_RMII_PHY_LOOPBACK_S 14
#define WPX_RMII_PHY_LOOPBACK_W 1
#define WPX_RMII_PHY_LOOPBACK_F(v) WPI_FIELD(v, WPX_RMII_PHY_LOOPBACK_S)
#define WPX_RMII_PHY_LOOPBACK_V(f) WPI_VALUE(f, WPX_RMII_PHY_LOOPBACK_S, WPX_RMII_PHY_LOOPBACK_W)
#define WPX_RMII_PHY_LOOPBACK_M WPI_MASK(WPX_RMII_PHY_LOOPBACK_S, WPX_RMII_PHY_LOOPBACK_W)

#define WPX_RMII_PHY_SPEED_S 13
#define WPX_RMII_PHY_SPEED_W 1
#define WPX_RMII_PHY_SPEED_F(v) WPI_FIELD(v, WPX_RMII_PHY_SPEED_S)
#define WPX_RMII_PHY_SPEED_V(f) WPI_VALUE(f, WPX_RMII_PHY_SPEED_S, WPX_RMII_PHY_SPEED_W)
#define WPX_RMII_PHY_SPEED_M WPI_MASK(WPX_RMII_PHY_SPEED_S, WPX_RMII_PHY_SPEED_W)

#define WPX_RMII_PHY_AUTONEG_S 12
#define WPX_RMII_PHY_AUTONEG_W 1
#define WPX_RMII_PHY_AUTONEG_F(v) WPI_FIELD(v, WPX_RMII_PHY_AUTONEG_S)
#define WPX_RMII_PHY_AUTONEG_V(f) WPI_VALUE(f, WPX_RMII_PHY_AUTONEG_S, WPX_RMII_PHY_AUTONEG_W)
#define WPX_RMII_PHY_AUTONEG_M WPI_MASK(WPX_RMII_PHY_AUTONEG_S, WPX_RMII_PHY_AUTONEG_W)

#define WPX_RMII_PHY_HALFDUPLEX_S 8
#define WPX_RMII_PHY_HALFDUPLEX_W 1
#define WPX_RMII_PHY_HALFDUPLEX_F(v) WPI_FIELD(v, WPX_RMII_PHY_HALFDUPLEX_S)
#define WPX_RMII_PHY_HALFDUPLEX_V(f) WPI_VALUE(f, WPX_RMII_PHY_HALFDUPLEX_S, WPX_RMII_PHY_HALFDUPLEX_W)
#define WPX_RMII_PHY_HALFDUPLEX_M WPI_MASK(WPX_RMII_PHY_HALFDUPLEX_S, WPX_RMII_PHY_HALFDUPLEX_W)


#endif
