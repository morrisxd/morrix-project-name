#
# (C) Copyright Wintegra 2001.  All rights reserved.
# WINTEGRA CONFIDENTIAL PROPRIETARY
# Contains Confidential Proprietary information of Wintegra.
# Reverse engineering is prohibited.
# The copyright notice does not imply publication.
# *****************************************************************************/


#
# Module: makefile
# Purpose: makefile
#
#
# Module Originator: Roger Smith  (Login Name: 'rogers')
# Creation Date: July 13, 2001
#
# Change History:
# +------------+--------------------+----------------------------------------
# | Date       | By                 | Description
# +------------+--------------------+----------------------------------------
# |            |                    |
# +------------+--------------------+----------------------------------------
# |            |                    |
# +------------+--------------------+----------------------------------------
#
# ***************************************************************************/

# Builds an example for a particular target.

# For mips_web_winmon, produces <example>(.exe) and <example>.srec
# The value of EXAMPLE is used to get the source list from
# the directory $(EXAMPLE)/make.list

# Each makefile should know its host and how to find wddi
WPI_HOST = $(OSTYPE:solaris%=solaris)
WPI_TARGET = mips_winmon
WPI_BOARD = wds
WPI_HW_DEVICE = winpath3
WPI_TARGET_HW_DEVICE = $(WPI_TARGET)_$(WPI_HW_DEVICE)
WDDS_DIR = ../../..
WDDI_DIR = $(WDDS_DIR)/wddi
WPI_PLATFORM_DIR = $(WDDS_DIR)/platform
WPI_TARGET_HW_DEVICE_DIR = $(WPI_PLATFORM_DIR)/$(WPI_TARGET_HW_DEVICE)
WDDI_BUILD_DIR = $(WDDI_DIR)
WDDI_LIB_DIR = $(WDDS_DIR)/$(WDDI_OBJECTS)/$(WPI_HOST)/$(WPI_TARGET_HW_DEVICE)/lib
WDDI_BOARD_LIB_DIR = $(WDDS_DIR)/$(WDDI_OBJECTS)/$(WPI_HOST)/$(WPI_TARGET_HW_DEVICE)/$(WPI_BOARD)/lib
WDDI_UFE_LIB_DIR=$(WDDS_DIR)/$(WDDI_OBJECTS)/$(WPI_HOST)/$(WPI_TARGET_HW_DEVICE)/$(WPI_BOARD)/ufe3/lib
WDDI_DEVICE_LIB_DIR = $(WDDS_DIR)/$(WDDI_OBJECTS)/$(WPI_HOST)/$(WPI_TARGET_HW_DEVICE)/lib
WDDI_TEST_DIR = .
WDDI_OBJECTS = objects
WDDI_SOURCES = /sources
WDDI_SHARED = /shared
WDDI_SERVICES = /services

# compute the WPI_TARGET_VALUE based on WPI_TARGET
ifeq "$(WPI_TARGET)" "mips_web_vxworks"
WPI_TARGET_VALUE = 1
else ifeq "$(WPI_TARGET)" "mips_web_winmon"
WPI_TARGET_VALUE = 2
else ifeq "$(WPI_TARGET)" "mips_winmon"
WPI_TARGET_VALUE = 2
else ifeq "$(WPI_TARGET)" "mips_web_winmon_gdb"
WPI_TARGET_VALUE = 3
else ifeq "$(WPI_TARGET)" "ppc_web_vxworks"
WPI_TARGET_VALUE = 4
else ifeq "$(WPI_TARGET)" "ppc_web_winmon"
WPI_TARGET_VALUE = 5
else ifeq "$(WPI_TARGET)" "ppc_winmon"
WPI_TARGET_VALUE = 5
else ifeq "$(WPI_TARGET)" "verilog"
WPI_TARGET_VALUE = 6
else ifeq "$(WPI_TARGET)" "winsim"
WPI_TARGET_VALUE = 7
else ifeq "$(WPI_TARGET)" "mips_web_vxworks_dual"
WPI_TARGET_VALUE = 8
else ifeq "$(WPI_TARGET)" "mips_web_winmon_dual"
WPI_TARGET_VALUE = 9
else ifeq "$(WPI_TARGET)" "ppc_web_vxworks_dual"
WPI_TARGET_VALUE = 10
else ifeq "$(WPI_TARGET)" "mips_web_linux"
WPI_TARGET_VALUE = 11
else ifeq "$(WPI_TARGET)" "mips_web_kmodule"
WPI_TARGET_VALUE = 12
else ifeq "$(WPI_TARGET)" "mips_web2_winmon"
WPI_TARGET_VALUE = 13
else ifeq "$(WPI_TARGET)" "mips_web2_vxworks"
WPI_TARGET_VALUE = 14
else ifeq "$(WPI_TARGET)" "mips_linux"
WPI_TARGET_VALUE = 15
else ifeq "$(WPI_TARGET)" "ppc_web2_vxworks"
WPI_TARGET_VALUE = 16
else ifeq "$(WPI_TARGET)" "ppc_linux"
WPI_TARGET_VALUE = 17
else ifeq "$(WPI_TARGET)" "mips_winmon_auto_memmap"
WPI_TARGET_VALUE = 18
else ifeq "$(WPI_TARGET)" "mips_linux_auto_memmap"
WPI_TARGET_VALUE = 19
endif

include $(EXAMPLE)/make.list

# Where the target-specific directory is
WPI_T_DIR = $(WPI_TARGET_HW_DEVICE_DIR)
WPI_HT_DIR = ${WDDS_DIR}/$(WDDI_OBJECTS)/$(WPI_HOST)/$(WPI_TARGET_HW_DEVICE)

# Where to construct the objects and binaries
OBJ_DIR = ${WPI_HT_DIR}/$(WPI_BOARD)/testobj
BIN_DIR = ${WPI_HT_DIR}/$(WPI_BOARD)/bin

# The objects and archive
EXAMPLE_OBJ = $(patsubst %.c, $(OBJ_DIR)/%.o, $(EXAMPLE_SRC))
EXAMPLE_EXE = $(BIN_DIR)/$(EXAMPLE)$(EXE)
EXAMPLE_SREC = $(BIN_DIR)/$(EXAMPLE).srec

# Get the host-target specific defines
include $(WPI_TARGET_HW_DEVICE_DIR)/$(WPI_HOST)_make.inc

# Override the make.inc file to no pass -g or -Werror
CFLAGS_G =
CFLAGS_WERROR =

#Services specific
ifneq "$(SERVICE)" ""
   SERVICES_INC=-I$(WDDI_DIR)$(WDDI_SERVICES)/$(SERVICE)/api
else
   SERVICES_INC=
endif

ifneq "$(WS_LIBRARY)" ""
   SERVICES_LIB=$(WDDI_LIB_DIR)/$(WS_LIBRARY)
else
   SERVICES_LIB=
endif

# The includes
EXAMPLE_DIR = .
API_DIR = $(WDDI_DIR)$(WDDI_SOURCES)/api
SOURCES_DIR = $(WDDI_DIR)$(WDDI_SOURCES)
VENEER_TARGET_DIR = $(WDDI_DIR)/target/$(WPI_TARGET_HW_DEVICE)/include
VENEER_DIR = $(WDDI_DIR)$(WDDI_SOURCES)/veneer
UTILITY_DIR = $(WDDI_DIR)$(WDDI_SOURCES)/utility
BOARD_DIR = $(WDDI_DIR)/board
BOARD_DEVICE_DIR = $(BOARD_DIR)/$(WPI_BOARD)_$(WPI_HW_DEVICE)
PHY_DIR=$(WDDI_DIR)/phy
UFE_DIR=$(PHY_DIR)/wpx_ufe/api
TMX_DIR=$(PHY_DIR)/wpx_ufe/wpx_pmc/tmx336
WIMAX_CRYPTO_DIR=$(WDDI_DIR)/extensions/

INCLUDES = -I$(API_DIR) -I. -I$(VENEER_TARGET_DIR) -I$(VENEER_DIR) -I$(WPI_PLATFORM_DIR)/include \
	-I$(WPI_TARGET_HW_DEVICE_DIR)/include \
	-I$(UTILITY_DIR) $(TARGET_INCLUDE) -I$(BOARD_DIR) -I$(BOARD_DEVICE_DIR) \
	-I$(PHY_DIR) -I$(EXAMPLE_DIR)/include $(OS_INC_DIRS) -I$(SOURCES_DIR) $(SERVICES_INC) \
	-I$(UFE_DIR) -I$(PHY_DIR)/wpx_ufe/fpga/ufe3 -I$(TMX_DIR) -I$(TMX_DIR)/inc -I$(WDDS_DIR)/include -I$(WIMAX_CRYPTO_DIR) \
	-I$(WDDI_DIR)$(WDDI_SOURCES)/winutil/include \
	-I$(WDDI_DIR)$(WDDI_SOURCES)/winutil/include/$(WPI_HW_DEVICE) \
	-I$(WDDI_DIR)$(WDDI_SOURCES)/winutil/api/include \
	-I$(WDDI_DIR)$(WDDI_SOURCES)/winutil/api/include/$(WPI_HW_DEVICE) \
	-I$(WDDI_DIR)$(WDDI_SHARED)/sources/include/pm \
	-I$(WDDI_DIR)$(WDDI_SHARED)/sources/include/sw_log \
	-I$(WDDI_DIR)/board/wds_common


# C flags needed for examples
ifeq "$(WPI_HW_DEVICE)" "winpath1"
   MORE_CFLAGS=-DWP_HW_WINPATH1
else ifeq "$(WPI_HW_DEVICE)" "winpath2"
   MORE_CFLAGS=-DWP_HW_WINPATH2
else ifeq "$(WPI_HW_DEVICE)" "winpath3"
   MORE_CFLAGS=-DWP_HW_WINPATH3
endif

WP_BOARD_NAME=WP_BOARD_UNDEFINED
ifeq "$(WPI_BOARD)" "wds"
ifeq "$(WDDI_HW_DEVICE)" "winpath2"
        WP_BOARD_NAME=WP_BOARD_WDS2
else
        WP_BOARD_NAME=WP_BOARD_WDS3
endif
endif
ifeq "$(WPI_BOARD)" "winhdp"
         WP_BOARD_NAME=WP_BOARD_WINHDP2
endif
ifeq "$(WPI_BOARD)" "winhdp_lte"
        WP_BOARD_NAME=WP_BOARD_WINHDP2_LTE
endif
ifeq "$(WPI_BOARD)" "xs2"
        WP_BOARD_NAME=WP_BOARD_XS2
endif
ifeq "$(WPI_BOARD)" "virtual"
         WP_BOARD_NAME=WP_BOARD_VIRTUAL
endif
ifeq "$(WPI_BOARD)" "wds_sl"
         WP_BOARD_NAME=WP_BOARD_WDS3_SL
endif

EXAMPLE_CFLAGS = -DTEST_OPTIONS=$(WPI_TARGET)/$(WDDI_NAME)/$(QUICK)/$(WORKAROUND) \
        -DTEST_MORE_OPTIONS="$(WDDI_DPS_IMAGE)" $(MORE_CFLAGS) \
        -DWPI_TARGET_VALUE=$(WPI_TARGET_VALUE) \
        -D$(WP_BOARD_NAME) -DWUFE_UFE3 \
  
ifeq "$(WPI_TARGET)" "winsim"
EXAMPLE_CFLAGS += -DWINSIM
endif

ifeq "$(WPI_TARGET)" "mips_linux"
MORE_CFLAGS += -g
LDFLAGS = -g
OTHER_LIB += -lpthread
endif

ifeq "$(WDDI_DPS_IMAGE)" ""
IMAGE_OBJ =
else
IMAGE_OBJ = $(patsubst %, $(WDDI_DEVICE_LIB_DIR)/%, $(WDDI_DPS_IMAGE))
endif

ifeq "$(WDDI_PPS_IMAGE)" ""
PPS_IMAGE_OBJ =
else
PPS_IMAGE_OBJ = $(patsubst %,$(WDDI_DEVICE_LIB_DIR)/%, $(WDDI_PPS_IMAGE))
endif

ifeq "$(WDDI_GPE_LIB)" ""
GPE_PECS_LIB =
else
GPE_PECS_LIB = $(patsubst %,$(WDDI_DEVICE_LIB_DIR)/%, $(WDDI_GPE_LIB))
endif


ifeq "$(UFE)" "yes"
UFE_LIBS = $(WDDI_UFE_LIB_DIR)/wpx_ufe.a $(WDDI_UFE_LIB_DIR)/wpx_phy_pmc.a
else
UFE_LIBS =
endif

WINUTIL_LIB = $(WDDI_BOARD_LIB_DIR)/winutil.a

# This makefile is not intended to be used standalone
all: an_example

an_example: clean $(EXAMPLE_EXE)

clean:
	rm -rf $(EXAMPLE_OBJ) $(EXAMPLE_EXE) $(EXAMPLE_SREC)

$(EXAMPLE_EXE): $(EXAMPLE_OBJ)
	@echo Making $(EXAMPLE_EXE)
# If the linker needs a start file, copy it to the local directory
ifneq "$(START_FILE)" ""
	-cp $(START_FILE_DIR)/$(START_FILE) $(START_FILE)
endif
# Do the link 
	$(WPI_SET_PATH) $(CC) $(LDFLAGS) -o $(EXAMPLE_EXE) $(LINK_FILE) $(EXAMPLE_OBJ) \
	$(IMAGE_OBJ)  $(PPS_IMAGE_OBJ) $(GPE_PECS_LIB) \
	$(WDDI_LIB_DIR)/ws_common.a $(WDDI_LIB_DIR)/wpi_wddi.a $(WINUTIL_LIB) $(WDDI_LIB_DIR)/platform.a $(WDDI_LIB_DIR)/shared.a $(WDDI_LIB_DIR)/wpi_pecs.a \
	$(WDDI_BOARD_LIB_DIR)/wpx_board.a \
	$(OTHER_LIB) $(SERVICES_LIB) $(WDDI_DEVICE_LIB_DIR)/wpi_hw_device.a
	
	
ifeq "$(CP_TFTPBOOT)" "yes"
	cp $(EXAMPLE_EXE) /tftpboot
	cp $(EXAMPLE_EXE) ~/projects
endif
# If the target needs S-records, make them.  tr removes cr's.
ifeq "$(MAKE_SREC)" "yes"
	$(WPI_SET_PATH) $(OBJCOPY) -O srec $(EXAMPLE_EXE) $(EXAMPLE_SREC).tmp
	tr -d '\015' < $(EXAMPLE_SREC).tmp > $(EXAMPLE_SREC)
endif
# Clean up after everything that might have happened
	rm -rf $(EXAMPLE_OBJ) $(EXAMPLE_SREC).tmp $(START_FILE)

$(OBJ_DIR)/%.o: $(EXAMPLE)/%.c
	$(WPI_SET_PATH) $(CC) $(CFLAGS) $(EXAMPLE_CFLAGS) $(WP_USERFLAGS) $(INCLUDES) -o $(OBJ_DIR)/$*.o $(EXAMPLE)/$*.c


